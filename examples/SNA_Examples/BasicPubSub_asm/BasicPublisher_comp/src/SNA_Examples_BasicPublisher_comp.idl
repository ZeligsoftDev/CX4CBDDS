//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
// Copyright (c) Northrop Grumman Corporation 2010 -- ALL RIGHTS RESERVED
//==============================================================================

/**
 * @defgroup  BasicPublisher_comp BasicPublisher_comp Component
 * @ingroup BasicPubSubExample
 * @{
 * The BasicPublisher_comp component is the publisher in this example.
 * It performs the following activities:
 *  - creates a message (sample) according to a predefined structure
 *  - Each time it wakes up to publish, it gives a configurable number of
 *    samples to the data writer who in turn publishes them to a DDS topic.
 *  - Uses a timer associated with it to wake up every five seconds, at which
 *    point, the publication process is repeated.
 *
 * @file    SNA_Examples_BasicPublisher_comp.idl
 * @brief   BasicPublisher_comp component definition IDL file.
 */

//==============================================================================

#ifndef SNA_EXAMPLES_BASICPUBLISHER_COMP_IDL
#define SNA_EXAMPLES_BASICPUBLISHER_COMP_IDL

#include <Components.idl>

#include "SNA_Examples_TestData_conn.idl"

module SNA_Examples
{
   /**
    * This component publishes one type of DDS sample/message
    * (SNA_Examples::TestData_msg).
    */
   component BasicPublisher_comp
   {
      /**
       * A DDS4CCM write port which publishes samples/messages of type
       * SNA_Examples::TestData_msg into a DDS topic. The name and QoS of that
       * topic are defined in the deployment plan.
       */
      port SNA_Examples::TestData_conn::DDS_Write testDataPub;

      /**
       * An optional CCM facet defined as part of the DDS4CCM standard which
       * the DDS4CCM connector can call on status changes (such as errors).
       *
       * This facet is recommended in most cases as it is useful for debugging
       * and integration.
       * 
       * It is recommended to have one of these provides lines for each
       * DDS4CCM extended port and to have them named after the associated port
       * name.
       */
      provides CCM_DDS::ConnectorStatusListener   testDataPubConnStatus;
   };
};

#endif // SNA_EXAMPLES_BASICPUBLISHER_COMP_IDL

/// @}
//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
