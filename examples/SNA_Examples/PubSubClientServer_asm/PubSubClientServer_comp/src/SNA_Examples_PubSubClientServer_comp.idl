//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
// Copyright (c) Northrop Grumman Corporation 2010 -- ALL RIGHTS RESERVED
//==============================================================================

/**
 * @defgroup PubSubClientServer_comp PubSubClientServer_comp Component
 * @ingroup PubSubClientServerExample
 * @{
 *
 * The PubSubClientServer_comp component portrays a publisher, a subscriber, a
 * client, and a server in this example. The component performs the following:
 *  - Starts a continuous loop of data transactions with the Echo_comp component
 *    by publishing a number to a topic.
 *  - Provides the number to the Echo_comp componentâ€™s client for verification
 *    processing.
 *  - Receives a sample from the subscribed topic from the Echo_comp.
 *  - Uses a CORBA call to request the assertion from the Echo_comp server
 *  - If the assertions match then this component will publish the next sample
 *    and restart the loop.
 *
 * @file   SNA_Examples_PubSubClientServer_comp.idl
 * @brief  PubSubClientServer_comp component definition IDL file.
 */

//==============================================================================

#ifndef PUBSUBCLIENTSERVER_COMP_IDL
#define PUBSUBCLIENTSERVER_COMP_IDL

// EXAMPLE:
// "Components.idl" is required for idl3 types
#include <Components.idl>


#include "SNA_Examples_CurrentNum_conn.idl"
#include "SNA_Examples_NumAssert_conn.idl"


// EXAMPLE:
// we need to include the definition of the EchoNumber_obj and EchoAssert_obj
// interfaces here.
#include "SNA_Examples_EchoNumber_obj.idl"
#include "SNA_Examples_EchoAssert_obj.idl"

// EXAMPLE:
// the module keyword specifies a namespace for the Echo component
module SNA_Examples
{
   /**
    * This component uses (calls) an interface, provides (implements) an 
    * interface, publishes a DDS message, and subscribes to a DDS message.
    */
   component PubSubClientServer_comp
   {
      /**
       * Provides and implements the SNA_Examples::EchoNumber_obj interface
       */
      provides EchoNumber_obj                        echoNumberFacet;
      
      /**
       * Uses/calls methods on the SNA_Examples::EchoAssert_obj interface
       */
      uses EchoAssert_obj                            echoAssertRecept;
      
      /**
       * Publishes (DDS_Write) type SNA_Examples::CurrentNum_msg
       */
      port SNA_Examples::CurrentNum_conn::DDS_Write  currentNumPub;

      /**
       * Subscribes (DDS_Listen) to type SNA_Examples::NumAssert_msg
       */
      port  SNA_Examples::NumAssert_conn::DDS_Listen numAssertSub;
      
      /**
       * An optional CCM facet defined as part of the DDS4CCM standard which
       * the DDS4CCM connector can call on status changes (such as errors).
       *
       * This facet is recommended in most cases as it is useful for debugging
       * and integration.
       * XAMPLE:XAMPLE:
       * It is recommended to have one of these provides lines for each
       * DDS4CCM extended port and to have them named after the associated port
       * name.
       */
      provides CCM_DDS::ConnectorStatusListener      currentNumPubConnStatus;
      
      /**
       * An optional CCM facet defined as part of the DDS4CCM standard which
       * the DDS4CCM connector can call on status changes (such as errors).
       *
       * This facet is recommended in most cases as it is useful for debugging
       * and integration.
       * 
       * It is recommended to have one of these provides lines for each
       * DDS4CCM extended port and to have them named after the associated port
       * name.XAMPLE:
       */
      provides CCM_DDS::ConnectorStatusListener      numAssertSubConnStatus;
   };
};

#endif // PUBSUBCLIENTSERVER_COMP_IDL

/// @}
//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
