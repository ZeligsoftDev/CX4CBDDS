//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
// Copyright (c) Northrop Grumman Corporation 2010 -- ALL RIGHTS RESERVED
//==============================================================================

/**
 * @defgroup DataCollector_comp DataCollector_comp Component
 * @ingroup SPDM_Example
 * @{
 *
 * In this example, the DataCollector_comp plays the role of aggregating sub-
 * samples into a complete sample for a data map. Using PSAT directly would
 * require a custom scoreboard and code added to the "on_metadata_interceptor"
 * method. You will notice in the implementation of this component, the SPDM
 * connector does the score boarding for you. The implementation of this 
 * component will simply assert that all sub-samples have been received, and
 * assert that the data was received as expected.
 *
 * @file   SNA_Examples_DataCollector_comp.idl
 * @brief  DataCollector_comp component definition IDL file.
 */

//==============================================================================

#ifndef SNA_EXAMPLES_DATACOLLECTOR_COMP_IDL
#define SNA_EXAMPLES_DATACOLLECTOR_COMP_IDL

#include <Components.idl>

#include "SNA_Examples_DataMap_UDM_conn.idl"

// EXAMPLE:
// the module keyword specifies a namespace for the DataCollector_comp component
module SNA_Examples
{
   /**
    * This component collects (aggregates) sub-samples into a complete sample.
    */
   component DataCollector_comp
   {
      // PSAT_Listen (subscribing) port which uses a custom UDM (metadata
      // structure).
      port SNA_Examples::DataMap_UDM_conn::PSAT_Base::PSAT_Listen dataMapSub;
      
      /**
       * An optional CCM facet defined as part of the DDS4CCM standard which
       * the PSAT connector can call on status changes (such as errors).
       *
       * This facet is recommended in most cases as it is useful for debugging
       * and integration.
       * 
       * It is recommended to have one of these provides lines for each
       * DDS4CCM extended port and to have them named after the associated port
       * name.
       */
      provides CCM_DDS::ConnectorStatusListener dataMapSubConnStatus;
   };
};

#endif // SNA_EXAMPLES_ECHOSERVER_COMP_IDL

/// @}
//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
