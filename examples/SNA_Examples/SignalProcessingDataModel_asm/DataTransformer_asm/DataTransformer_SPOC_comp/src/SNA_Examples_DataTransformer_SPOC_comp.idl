//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
// Copyright (c) Northrop Grumman Corporation 2010 -- ALL RIGHTS RESERVED
//==============================================================================

/**
 * @defgroup DataTransformer_SPOC_comp DataTransformer_SPOC_comp Component
 * @ingroup SPDM_Example
 * @{
 *
 * The data transformer component will subscribe and operate on specific pieces 
 * of child data associated with each instance of this component. In this
 * example we instantiate 4 transfer components for 4 pieces of a data map.
 * The components will simply forward this data to the data collector to 
 * recreate the map created by the data distributor.
 *
 * @file   SNA_Examples_DataTransformer_SPOC_comp.idl
 * @brief  DataTransformer_SPOC_comp component definition IDL file.
 */

//==============================================================================

#ifndef SNA_EXAMPLES_DATA_TRANSFORMER_SPOC_COMP_IDL
#define SNA_EXAMPLES_DATA_TRANSFORMER_SPOC_COMP_IDL

#include <Components.idl>

#include "SNA_Examples_DataMap_UDM_conn.idl"
#include "SNA_Examples_DataTransformerMath_obj.idl"

module SNA_Examples
{
   /**
    * This component publishes and subscribes using signal processing data model 
    * (SPDM) connector.
    */
   component DataTransformer_SPOC_comp
   {
      /**
       * PSAT_Write (publishing) port which uses a custom UDM (metadata struct)
       */
      port SNA_Examples::DataMap_UDM_conn::PSAT_Base::PSAT_Write dataMapPub;
      
      /**
       * PSAT_Listen (subscribing) port which uses a custom UDM 
       * (metadata struct)
       */
      port SNA_Examples::DataMap_UDM_conn::PSAT_Base::PSAT_Listen dataMapSub;
      
      /**
       * An optional CCM facet defined as part of the DDS4CCM standard which
       * the SPDM connector can call on status changes (such as errors).
       *
       * This facet is recommended in most cases as it is useful for debugging
       * and integration.
       * 
       * It is recommended to have one of these provides lines for each
       * DDS4CCM extended port and to have them named after the associated port
       * name.
       */
      provides CCM_DDS::ConnectorStatusListener dataMapPubConnStatus;

      /**
       * An optional CCM facet defined as part of the DDS4CCM standard which
       * the SPDM connector can call on status changes (such as errors).
       *
       * This facet is recommended in most cases as it is useful for debugging
       * and integration.
       * 
       * It is recommended to have one of these provides lines for each
       * DDS4CCM extended port and to have them named after the associated port
       * name.
       */
      provides CCM_DDS::ConnectorStatusListener dataMapSubConnStatus;
      
      /**
       * Receptacle that can use the facet provided by the MKC to perform
       * mathematical operations on the data.
       */      
      uses       SNA_Examples::DataTransformerMath_obj  mathRecept;
      
      /**
       * Message number to use for content filtering purposes
       */
      attribute long messageNumber;
   };
};

#endif // SNA_EXAMPLES_DATA_TRANSFORMER_SPOC_COMP_IDL

/// @}
//==============================================================================
//                         U N C L A S S I F I E D
//==============================================================================
