
import langc;

extension langc::element;
extension langc::expr;
extension langc::stmt;

SwitchStatement testAddBreakToClause() :
    let s = switchStmt( 0.literal() ) :
        s.addCase(
            let c = labeledClause( 0.literal() ) :
                c.statements.add( stmt( 1.literal() ) )
             -> c )
     -> s
;

SwitchStatement testAddBreakToEmptyClause() :
    let s = switchStmt( 0.literal() ) :
        s.addCase( labeledClause( 1.literal() ) )
     -> s
;

SwitchStatement testNoBreakForFallthroughClause() :
    let s = switchStmt( 0.literal() ) :
        s.addCase(
		    let c = labeledClause( 1.literal() ) :
		        c.setFallthrough( true )
		     -> c )
     -> s
;

SwitchStatement testNoBreakAfterReturn() :
    let s = switchStmt( 0.literal() ) :
        s.addCase(
            let c = labeledClause( 1.literal() ) :
                c.statements.add( returnStmt() )
             -> c )
     -> s
;

SwitchStatement testListOfClauses() :
    let s = switchStmt( 0.literal() ) :
        s.addCase( createCaseForListOfClauses( 1 ) )
     -> s.addCase( { 2, 3 }.createCaseForListOfClauses() )
     -> s
;

cached SwitchClause createCaseForListOfClauses( int i ) :
    let c = labeledClause( i.literal() ) :
        c.addStatement( returnStmt( i.literal() ) )
     -> c
;
