/**
 * Copyright 2018 ADLINK Technology Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

import CCM::CCM_Component;
import CCM::CCM_Core;
import CXDomain::IDL;

extension com::zeligsoft::domain::ngc::ccm::idltouml::transforms::visitor_attribute;
extension com::zeligsoft::domain::ngc::ccm::idltouml::transforms::visitor_operation;

cached Void visit_inheritance_graph(CCMComponent node, CXInterface intf, uml::Class container) :
	intf.ownedAttribute.visit_attribute(container) ->
	intf.ownedOperation.visit_operation(container) ->
	intf.zdlAsInterface().general.typeSelect(CXInterface).forAll(g|visit_inheritance_graph(node, g, container));
	
cached Void visit_inheritance_graph(CXInterface node, CXInterface intf, uml::Class container) :
	intf.ownedAttribute.visit_attribute(container) ->
	intf.ownedOperation.visit_operation(container) ->
	intf.zdlAsInterface().general.typeSelect(CXInterface).forAll(g|visit_inheritance_graph(node, g, container));
	
cached Void visit_inheritance_graph(ZMLMM::ZML_Component::MessagePort node, CXInterface intf, uml::Class container) :
	intf.ownedAttribute.visit_attribute(container) ->
	intf.ownedOperation.visit_operation(container) ->
	intf.zdlAsInterface().general.typeSelect(CXInterface).forAll(g|visit_inheritance_graph(node, g, container));