/**
 * Copyright 2018 ADLINK Technology Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

import CCM::CCM_Component;
import CXDomain::IDL;

extension com::zeligsoft::domain::ngc::ccm::idltouml::transforms::utils::tao_idl_utils;

extension com::zeligsoft::domain::ngc::ccm::idltouml::transforms::component_names;

/****************************************************************************
 **
 **
 **	Calculate and potentially create the package for a namespace
 **
 **
 ***************************************************************************/
 cached uml::Package namespace(CXInterface node, uml::Package root) :
 	namespace(node.eContainer, root);
 	
 cached uml::Package namespace(CCMComponent node, uml::Package root) :
 	namespace(node.eContainer, root);
 	
 cached uml::Package namespace(CXModule node, uml::Package root) :
 	let modulePkg = new uml::Package :
 	let containerPkg = namespace(node.eContainer, root) :
 		modulePkg.setName(node.name) ->
 		modulePkg.createTrace(node, "namespace") ->
 		containerPkg.packagedElement.add(modulePkg) ->
 		modulePkg;
 	
 cached uml::Package namespace(emf::EObject node, uml::Package root) :
 	root;
 
 cached uml::Package namespace(Void node, uml::Package root) :
 	root;
 	
String component_implementation_namespace(CCMComponent node) :
	"CIAO_" + node.flat_name() + "_Impl";
	
	
create uml::Package visit_namespace(String namespace, uml::Package container, uml::NamedElement source) :
	this.setName(namespace) ->
	this.createTrace(source, "namespace") ->
	container.packagedElement.add(this) ->
	this;