/**
 * Copyright 2018 ADLINK Technology Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

import ZMLMM::ZML_Core;
import idl;

extension org::eclipse::xtend::util::stdlib::issues;
extension com::zeligsoft::domain::dds4ccm::utils::codeGenUtils;
extension com::zeligsoft::domain::ngc::ccm::generator::xtend::mainTransformAxcioma;
extension com::zeligsoft::domain::ngc::ccm::generator::xtend::mainTransformAtcd;

List[Specification] mainTransformDispatcher(NamedElement ne) :	
	let modelType = ne.getModelType():
	let listSpec = {}:
		{if(modelType == "ATCD") then{
			listSpec.addAll(mainTransform(ne))
		}else if(modelType == "AXCIOMA") then{
			listSpec.addAll(mainTransformAxcioma(ne))
		}else{	// this should not be entered if everything works normally
			reportError("Unsupported model type! CDP generation failed.")
		}}->		
		listSpec;
	/*
		(modelType == "ATCD")? mainTransform(ne):
			((modelType == "AXCIOMA")? mainTransformAxcioma(ne):
					reportError("Unsupported model type! CDP generation failed."));
	*/						