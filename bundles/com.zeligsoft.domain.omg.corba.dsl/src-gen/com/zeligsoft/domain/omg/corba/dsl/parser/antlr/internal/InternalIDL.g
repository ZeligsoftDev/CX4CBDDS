/*
* generated by Xtext
*/
grammar InternalIDL;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	 memoize=true;
	
}

@lexer::header {
package com.zeligsoft.domain.omg.corba.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.zeligsoft.domain.omg.corba.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.zeligsoft.domain.omg.corba.dsl.services.IDLGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private IDLGrammarAccess grammarAccess;
 	
    public InternalIDLParser(TokenStream input, IDLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Specification";	
   	}
   	
   	@Override
   	protected IDLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleSpecification
entryRuleSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecificationRule()); }
	 iv_ruleSpecification=ruleSpecification 
	 { $current=$iv_ruleSpecification.current; } 
	 EOF 
;

// Rule Specification
ruleSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecificationAccess().getSpecificationAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getImportsImport_declParserRuleCall_1_0()); 
	    }
		lv_imports_1_0=ruleImport_decl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"imports",
        		lv_imports_1_0, 
        		"Import_decl");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecificationAccess().getDefinitionsDefinitionParserRuleCall_2_0()); 
	    }
		lv_definitions_2_0=ruleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecificationRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_2_0, 
        		"Definition");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulePreproc
entryRulePreproc returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreprocRule()); }
	 iv_rulePreproc=rulePreproc 
	 { $current=$iv_rulePreproc.current; } 
	 EOF 
;

// Rule Preproc
rulePreproc returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IncludeParserRuleCall_0()); 
    }
    this_Preproc_Include_0=rulePreproc_Include
    { 
        $current = $this_Preproc_Include_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IfdefParserRuleCall_1()); 
    }
    this_Preproc_Ifdef_1=rulePreproc_Ifdef
    { 
        $current = $this_Preproc_Ifdef_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IfndefParserRuleCall_2()); 
    }
    this_Preproc_Ifndef_2=rulePreproc_Ifndef
    { 
        $current = $this_Preproc_Ifndef_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_UndefParserRuleCall_3()); 
    }
    this_Preproc_Undef_3=rulePreproc_Undef
    { 
        $current = $this_Preproc_Undef_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IfParserRuleCall_4()); 
    }
    this_Preproc_If_4=rulePreproc_If
    { 
        $current = $this_Preproc_If_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_ElseParserRuleCall_5()); 
    }
    this_Preproc_Else_5=rulePreproc_Else
    { 
        $current = $this_Preproc_Else_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_ErrorParserRuleCall_6()); 
    }
    this_Preproc_Error_6=rulePreproc_Error
    { 
        $current = $this_Preproc_Error_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_DefineParserRuleCall_7()); 
    }
    this_Preproc_Define_7=rulePreproc_Define
    { 
        $current = $this_Preproc_Define_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_EndifParserRuleCall_8()); 
    }
    this_Preproc_Endif_8=rulePreproc_Endif
    { 
        $current = $this_Preproc_Endif_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_PragmaParserRuleCall_9()); 
    }
    this_Preproc_Pragma_9=rulePreproc_Pragma
    { 
        $current = $this_Preproc_Pragma_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getFile_MarkerParserRuleCall_10()); 
    }
    this_File_Marker_10=ruleFile_Marker
    { 
        $current = $this_File_Marker_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreprocAccess().getExcluded_File_MarkerParserRuleCall_11()); 
    }
    this_Excluded_File_Marker_11=ruleExcluded_File_Marker
    { 
        $current = $this_Excluded_File_Marker_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePreproc_Include
entryRulePreproc_Include returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_IncludeRule()); }
	 iv_rulePreproc_Include=rulePreproc_Include 
	 { $current=$iv_rulePreproc_Include.current; } 
	 EOF 
;

// Rule Preproc_Include
rulePreproc_Include returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='#include' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_IncludeAccess().getIncludeKeyword_0_0());
    }
	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_IncludeAccess().getLessThanSignKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPreproc_IncludeAccess().getValueFileNameParserRuleCall_0_2_0()); 
	    }
		lv_value_2_0=ruleFileName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreproc_IncludeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"FileName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPreproc_IncludeAccess().getGreaterThanSignKeyword_0_3());
    }
)
    |(	otherlv_4='#include' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPreproc_IncludeAccess().getIncludeKeyword_1_0());
    }
(
(
		lv_strValue_5_0=RULE_STRING
		{
			newLeafNode(lv_strValue_5_0, grammarAccess.getPreproc_IncludeAccess().getStrValueSTRINGTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_IncludeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"strValue",
        		lv_strValue_5_0, 
        		"STRING");
	    }

)
)))
;





// Entry rule entryRuleFileName
entryRuleFileName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFileNameRule()); }
	 iv_ruleFileName=ruleFileName 
	 { $current=$iv_ruleFileName.current; } 
	 EOF 
;

// Rule FileName
ruleFileName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getFileNameAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFileNameAccess().getFullStopKeyword_1_0());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFileNameAccess().getNameIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFileNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRulePreproc_Ifdef
entryRulePreproc_Ifdef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_IfdefRule()); }
	 iv_rulePreproc_Ifdef=rulePreproc_Ifdef 
	 { $current=$iv_rulePreproc_Ifdef.current; } 
	 EOF 
;

// Rule Preproc_Ifdef
rulePreproc_Ifdef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#ifdef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_IfdefAccess().getIfdefKeyword_0());
    }
(
(
		lv_value_1_0=RULE_ID
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_IfdefAccess().getValueIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_IfdefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePreproc_Ifndef
entryRulePreproc_Ifndef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_IfndefRule()); }
	 iv_rulePreproc_Ifndef=rulePreproc_Ifndef 
	 { $current=$iv_rulePreproc_Ifndef.current; } 
	 EOF 
;

// Rule Preproc_Ifndef
rulePreproc_Ifndef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#ifndef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_IfndefAccess().getIfndefKeyword_0());
    }
(
(
		lv_value_1_0=RULE_ID
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_IfndefAccess().getValueIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_IfndefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePreproc_Undef
entryRulePreproc_Undef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_UndefRule()); }
	 iv_rulePreproc_Undef=rulePreproc_Undef 
	 { $current=$iv_rulePreproc_Undef.current; } 
	 EOF 
;

// Rule Preproc_Undef
rulePreproc_Undef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#undef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_UndefAccess().getUndefKeyword_0());
    }
(
(
		lv_value_1_0=RULE_ID
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_UndefAccess().getValueIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_UndefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePreproc_If
entryRulePreproc_If returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_IfRule()); }
	 iv_rulePreproc_If=rulePreproc_If 
	 { $current=$iv_rulePreproc_If.current; } 
	 EOF 
;

// Rule Preproc_If
rulePreproc_If returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='#if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_IfAccess().getIfKeyword_0_0());
    }

    |	otherlv_1='#elif' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_IfAccess().getElifKeyword_0_1());
    }
)(
(
		lv_negation_2_0=	'!' 
    {
        newLeafNode(lv_negation_2_0, grammarAccess.getPreproc_IfAccess().getNegationExclamationMarkKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_IfRule());
	        }
       		setWithLastConsumed($current, "negation", true, "!");
	    }

)
)?(	otherlv_3='defined' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPreproc_IfAccess().getDefinedKeyword_2());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPreproc_IfAccess().getValuePreproc_If_CompareParserRuleCall_3_0()); 
	    }
		lv_value_4_0=rulePreproc_If_Compare		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreproc_IfRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"Preproc_If_Compare");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRulePreproc_If_Compare
entryRulePreproc_If_Compare returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_If_CompareRule()); }
	 iv_rulePreproc_If_Compare=rulePreproc_If_Compare 
	 { $current=$iv_rulePreproc_If_Compare.current; } 
	 EOF 
;

// Rule Preproc_If_Compare
rulePreproc_If_Compare returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPreproc_If_CompareAccess().getLhsPreproc_If_ValParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=rulePreproc_If_Val		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreproc_If_CompareRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"Preproc_If_Val");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_op_1_0=	'==' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getPreproc_If_CompareAccess().getOpEqualsSignEqualsSignKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "==");
	    }

)
)
    |(
(
		lv_op_2_0=	'!=' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getPreproc_If_CompareAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "!=");
	    }

)
)
    |(
(
		lv_op_3_0=	'>' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getPreproc_If_CompareAccess().getOpGreaterThanSignKeyword_1_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, ">");
	    }

)
)
    |(
(
		lv_op_4_0=	'<' 
    {
        newLeafNode(lv_op_4_0, grammarAccess.getPreproc_If_CompareAccess().getOpLessThanSignKeyword_1_0_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_4_0, "<");
	    }

)
)
    |(
(
		lv_op_5_0=	'>=' 
    {
        newLeafNode(lv_op_5_0, grammarAccess.getPreproc_If_CompareAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_0, ">=");
	    }

)
)
    |(
(
		lv_op_6_0=	'<=' 
    {
        newLeafNode(lv_op_6_0, grammarAccess.getPreproc_If_CompareAccess().getOpLessThanSignEqualsSignKeyword_1_0_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_0, "<=");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getPreproc_If_CompareAccess().getRhsPreproc_If_ValParserRuleCall_1_1_0()); 
	    }
		lv_rhs_7_0=rulePreproc_If_Val		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreproc_If_CompareRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_7_0, 
        		"Preproc_If_Val");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePreproc_If_Val
entryRulePreproc_If_Val returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_If_ValRule()); }
	 iv_rulePreproc_If_Val=rulePreproc_If_Val 
	 { $current=$iv_rulePreproc_If_Val.current; } 
	 EOF 
;

// Rule Preproc_If_Val
rulePreproc_If_Val returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPreproc_If_ValAccess().getValueConstExpParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleConstExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreproc_If_ValRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ConstExp");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePreproc_Else
entryRulePreproc_Else returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_ElseRule()); }
	 iv_rulePreproc_Else=rulePreproc_Else 
	 { $current=$iv_rulePreproc_Else.current; } 
	 EOF 
;

// Rule Preproc_Else
rulePreproc_Else returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPreproc_ElseAccess().getPreproc_ElseAction_0(),
            $current);
    }
)	otherlv_1='#else' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_ElseAccess().getElseKeyword_1());
    }
)
;





// Entry rule entryRulePreproc_Error
entryRulePreproc_Error returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_ErrorRule()); }
	 iv_rulePreproc_Error=rulePreproc_Error 
	 { $current=$iv_rulePreproc_Error.current; } 
	 EOF 
;

// Rule Preproc_Error
rulePreproc_Error returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#error' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_ErrorAccess().getErrorKeyword_0());
    }
(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_ErrorAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_ErrorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Define
entryRulePreproc_Define returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_DefineRule()); }
	 iv_rulePreproc_Define=rulePreproc_Define 
	 { $current=$iv_rulePreproc_Define.current; } 
	 EOF 
;

// Rule Preproc_Define
rulePreproc_Define returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#define ' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_DefineAccess().getDefineKeyword_0());
    }
(
(
		lv_value_1_0=RULE_ID
		{
			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_DefineAccess().getValueIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_DefineRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPreproc_DefineAccess().getExpConstExpParserRuleCall_2_0()); 
	    }
		lv_exp_2_0=ruleConstExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPreproc_DefineRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_2_0, 
        		"ConstExp");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRulePreproc_Endif
entryRulePreproc_Endif returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_EndifRule()); }
	 iv_rulePreproc_Endif=rulePreproc_Endif 
	 { $current=$iv_rulePreproc_Endif.current; } 
	 EOF 
;

// Rule Preproc_Endif
rulePreproc_Endif returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPreproc_EndifAccess().getPreproc_EndifAction_0(),
            $current);
    }
)	otherlv_1='#endif' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_EndifAccess().getEndifKeyword_1());
    }
)
;





// Entry rule entryRulePreproc_Pragma
entryRulePreproc_Pragma returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_PragmaRule()); }
	 iv_rulePreproc_Pragma=rulePreproc_Pragma 
	 { $current=$iv_rulePreproc_Pragma.current; } 
	 EOF 
;

// Rule Preproc_Pragma
rulePreproc_Pragma returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_PrefixParserRuleCall_0()); 
    }
    this_Preproc_Pragma_Prefix_0=rulePreproc_Pragma_Prefix
    { 
        $current = $this_Preproc_Pragma_Prefix_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Conn_TypeParserRuleCall_1()); 
    }
    this_Preproc_Pragma_Conn_Type_1=rulePreproc_Pragma_Conn_Type
    { 
        $current = $this_Preproc_Pragma_Conn_Type_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_LemParserRuleCall_2()); 
    }
    this_Preproc_Pragma_Ciao_Lem_2=rulePreproc_Pragma_Ciao_Lem
    { 
        $current = $this_Preproc_Pragma_Ciao_Lem_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_Ami4ccm_InterfaceParserRuleCall_3()); 
    }
    this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3=rulePreproc_Pragma_Ciao_Ami4ccm_Interface
    { 
        $current = $this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleParserRuleCall_4()); 
    }
    this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4=rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle
    { 
        $current = $this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_Ami4ccm_IdlParserRuleCall_5()); 
    }
    this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5=rulePreproc_Pragma_Ciao_Ami4ccm_Idl
    { 
        $current = $this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_NddsParserRuleCall_6()); 
    }
    this_Preproc_Pragma_Ndds_6=rulePreproc_Pragma_Ndds
    { 
        $current = $this_Preproc_Pragma_Ndds_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_ComponentParserRuleCall_7()); 
    }
    this_Preproc_Pragma_Component_7=rulePreproc_Pragma_Component
    { 
        $current = $this_Preproc_Pragma_Component_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_HomeParserRuleCall_8()); 
    }
    this_Preproc_Pragma_Home_8=rulePreproc_Pragma_Home
    { 
        $current = $this_Preproc_Pragma_Home_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_DDS4CCM_ImplParserRuleCall_9()); 
    }
    this_Preproc_Pragma_DDS4CCM_Impl_9=rulePreproc_Pragma_DDS4CCM_Impl
    { 
        $current = $this_Preproc_Pragma_DDS4CCM_Impl_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_MiscParserRuleCall_10()); 
    }
    this_Preproc_Pragma_Misc_10=rulePreproc_Pragma_Misc
    { 
        $current = $this_Preproc_Pragma_Misc_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePreproc_Pragma_Prefix
entryRulePreproc_Pragma_Prefix returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_PrefixRule()); }
	 iv_rulePreproc_Pragma_Prefix=rulePreproc_Pragma_Prefix 
	 { $current=$iv_rulePreproc_Pragma_Prefix.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Prefix
rulePreproc_Pragma_Prefix returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_PrefixAccess().getPragmaKeyword_0());
    }
	otherlv_1='prefix' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_PrefixAccess().getPrefixKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPreproc_Pragma_PrefixAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_PrefixRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Conn_Type
entryRulePreproc_Pragma_Conn_Type returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_Conn_TypeRule()); }
	 iv_rulePreproc_Pragma_Conn_Type=rulePreproc_Pragma_Conn_Type 
	 { $current=$iv_rulePreproc_Pragma_Conn_Type.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Conn_Type
rulePreproc_Pragma_Conn_Type returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getPragmaKeyword_0());
    }
	otherlv_1='conntype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getConntypeKeyword_1());
    }
(
(
		lv_valuePort_2_0=RULE_ID
		{
			newLeafNode(lv_valuePort_2_0, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getValuePortIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_Conn_TypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valuePort",
        		lv_valuePort_2_0, 
        		"ID");
	    }

)
)(	otherlv_3='::' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getColonColonKeyword_3_0());
    }
this_ID_4=RULE_ID
    { 
    newLeafNode(this_ID_4, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getIDTerminalRuleCall_3_1()); 
    }
)*(
(
		lv_valueConnType_5_0=RULE_ID
		{
			newLeafNode(lv_valueConnType_5_0, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getValueConnTypeIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_Conn_TypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"valueConnType",
        		lv_valueConnType_5_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Ciao_Lem
entryRulePreproc_Pragma_Ciao_Lem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_LemRule()); }
	 iv_rulePreproc_Pragma_Ciao_Lem=rulePreproc_Pragma_Ciao_Lem 
	 { $current=$iv_rulePreproc_Pragma_Ciao_Lem.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Ciao_Lem
rulePreproc_Pragma_Ciao_Lem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getPragmaKeyword_0());
    }
	otherlv_1='ciao' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getCiaoKeyword_1());
    }
	otherlv_2='lem' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getLemKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_LemRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface
entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceRule()); }
	 iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface=rulePreproc_Pragma_Ciao_Ami4ccm_Interface 
	 { $current=$iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Ciao_Ami4ccm_Interface
rulePreproc_Pragma_Ciao_Ami4ccm_Interface returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getPragmaKeyword_0());
    }
	otherlv_1='ciao' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getCiaoKeyword_1());
    }
	otherlv_2='ami4ccm interface' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getAmi4ccmInterfaceKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle
entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleRule()); }
	 iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle=rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle 
	 { $current=$iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Ciao_Ami4ccm_Receptacle
rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getPragmaKeyword_0());
    }
	otherlv_1='ciao' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getCiaoKeyword_1());
    }
	otherlv_2='ami4ccm receptacle' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getAmi4ccmReceptacleKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl
entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlRule()); }
	 iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl=rulePreproc_Pragma_Ciao_Ami4ccm_Idl 
	 { $current=$iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Ciao_Ami4ccm_Idl
rulePreproc_Pragma_Ciao_Ami4ccm_Idl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getPragmaKeyword_0());
    }
	otherlv_1='ciao' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getCiaoKeyword_1());
    }
	otherlv_2='ami4ccm idl' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getAmi4ccmIdlKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Ndds
entryRulePreproc_Pragma_Ndds returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_NddsRule()); }
	 iv_rulePreproc_Pragma_Ndds=rulePreproc_Pragma_Ndds 
	 { $current=$iv_rulePreproc_Pragma_Ndds.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Ndds
rulePreproc_Pragma_Ndds returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_NddsAccess().getPragmaKeyword_0());
    }
	otherlv_1='ndds' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_NddsAccess().getNddsKeyword_1());
    }
	otherlv_2='typesupport' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_NddsAccess().getTypesupportKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_NddsAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_NddsRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Component
entryRulePreproc_Pragma_Component returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_ComponentRule()); }
	 iv_rulePreproc_Pragma_Component=rulePreproc_Pragma_Component 
	 { $current=$iv_rulePreproc_Pragma_Component.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Component
rulePreproc_Pragma_Component returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_ComponentAccess().getPragmaKeyword_0());
    }
	otherlv_1='componentInterface' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_ComponentAccess().getComponentInterfaceKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPreproc_Pragma_ComponentAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_ComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Home
entryRulePreproc_Pragma_Home returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_HomeRule()); }
	 iv_rulePreproc_Pragma_Home=rulePreproc_Pragma_Home 
	 { $current=$iv_rulePreproc_Pragma_Home.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Home
rulePreproc_Pragma_Home returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_HomeAccess().getPragmaKeyword_0());
    }
	otherlv_1='componentHome' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_HomeAccess().getComponentHomeKeyword_1());
    }
(
(
		lv_value_2_0=RULE_STRING
		{
			newLeafNode(lv_value_2_0, grammarAccess.getPreproc_Pragma_HomeAccess().getValueSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_HomeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_DDS4CCM_Impl
entryRulePreproc_Pragma_DDS4CCM_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_DDS4CCM_ImplRule()); }
	 iv_rulePreproc_Pragma_DDS4CCM_Impl=rulePreproc_Pragma_DDS4CCM_Impl 
	 { $current=$iv_rulePreproc_Pragma_DDS4CCM_Impl.current; } 
	 EOF 
;

// Rule Preproc_Pragma_DDS4CCM_Impl
rulePreproc_Pragma_DDS4CCM_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#pragma' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getPragmaKeyword_0());
    }
	otherlv_1='dds4ccm' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getDds4ccmKeyword_1());
    }
	otherlv_2='impl' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getImplKeyword_2());
    }
(
(
		lv_value_3_0=RULE_STRING
		{
			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getValueSTRINGTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPreproc_Pragma_DDS4CCM_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRulePreproc_Pragma_Misc
entryRulePreproc_Pragma_Misc returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPreproc_Pragma_MiscRule()); }
	 iv_rulePreproc_Pragma_Misc=rulePreproc_Pragma_Misc 
	 { $current=$iv_rulePreproc_Pragma_Misc.current; } 
	 EOF 
;

// Rule Preproc_Pragma_Misc
rulePreproc_Pragma_Misc returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPreproc_Pragma_MiscAccess().getPreproc_Pragma_MiscAction_0(),
            $current);
    }
)	otherlv_1='#pragma' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_MiscAccess().getPragmaKeyword_1());
    }
(	otherlv_2='typesupport' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_MiscAccess().getTypesupportKeyword_2_0());
    }

    |this_STRING_3=RULE_STRING
    { 
    newLeafNode(this_STRING_3, grammarAccess.getPreproc_Pragma_MiscAccess().getSTRINGTerminalRuleCall_2_1()); 
    }

    |this_ID_4=RULE_ID
    { 
    newLeafNode(this_ID_4, grammarAccess.getPreproc_Pragma_MiscAccess().getIDTerminalRuleCall_2_2()); 
    }
)*)
;





// Entry rule entryRuleFile_Marker
entryRuleFile_Marker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFile_MarkerRule()); }
	 iv_ruleFile_Marker=ruleFile_Marker 
	 { $current=$iv_ruleFile_Marker.current; } 
	 EOF 
;

// Rule File_Marker
ruleFile_Marker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#file' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFile_MarkerAccess().getFileKeyword_0());
    }
(
(
		lv_file_1_0=RULE_STRING
		{
			newLeafNode(lv_file_1_0, grammarAccess.getFile_MarkerAccess().getFileSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFile_MarkerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"file",
        		lv_file_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleExcluded_File_Marker
entryRuleExcluded_File_Marker returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExcluded_File_MarkerRule()); }
	 iv_ruleExcluded_File_Marker=ruleExcluded_File_Marker 
	 { $current=$iv_ruleExcluded_File_Marker.current; } 
	 EOF 
;

// Rule Excluded_File_Marker
ruleExcluded_File_Marker returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='#excluded_file' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExcluded_File_MarkerAccess().getExcluded_fileKeyword_0());
    }
(
(
		lv_file_1_0=RULE_STRING
		{
			newLeafNode(lv_file_1_0, grammarAccess.getExcluded_File_MarkerAccess().getFileSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExcluded_File_MarkerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"file",
        		lv_file_1_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleImport_decl
entryRuleImport_decl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImport_declRule()); }
	 iv_ruleImport_decl=ruleImport_decl 
	 { $current=$iv_ruleImport_decl.current; } 
	 EOF 
;

// Rule Import_decl
ruleImport_decl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getImport_declAccess().getImportKeyword_0());
    }
(
(
		lv_imported_scope_1_0=RULE_STRING
		{
			newLeafNode(lv_imported_scope_1_0, grammarAccess.getImport_declAccess().getImported_scopeSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getImport_declRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"imported_scope",
        		lv_imported_scope_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImport_declAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	 iv_ruleDefinition=ruleDefinition 
	 { $current=$iv_ruleDefinition.current; } 
	 EOF 
;

// Rule Definition
ruleDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getInterface_or_Forward_DeclParserRuleCall_0_0()); 
    }
    this_Interface_or_Forward_Decl_0=ruleInterface_or_Forward_Decl
    { 
        $current = $this_Interface_or_Forward_Decl_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefinitionAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getComponentForwardDeclParserRuleCall_1_0()); 
    }
    this_ComponentForwardDecl_2=ruleComponentForwardDecl
    { 
        $current = $this_ComponentForwardDecl_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDefinitionAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getConstDeclParserRuleCall_2_0()); 
    }
    this_ConstDecl_4=ruleConstDecl
    { 
        $current = $this_ConstDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getSemicolonKeyword_2_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getModuleParserRuleCall_3_0()); 
    }
    this_Module_6=ruleModule
    { 
        $current = $this_Module_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDefinitionAccess().getSemicolonKeyword_3_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getExceptDeclParserRuleCall_4_0()); 
    }
    this_ExceptDecl_8=ruleExceptDecl
    { 
        $current = $this_ExceptDecl_8.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDefinitionAccess().getSemicolonKeyword_4_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getStructTypeParserRuleCall_5_0()); 
    }
    this_StructType_10=ruleStructType
    { 
        $current = $this_StructType_10.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDefinitionAccess().getSemicolonKeyword_5_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getTypeDeclParserRuleCall_6_0()); 
    }
    this_TypeDecl_12=ruleTypeDecl
    { 
        $current = $this_TypeDecl_12.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDefinitionAccess().getSemicolonKeyword_6_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getNativeTypeParserRuleCall_7_0()); 
    }
    this_NativeType_14=ruleNativeType
    { 
        $current = $this_NativeType_14.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDefinitionAccess().getSemicolonKeyword_7_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getPreprocParserRuleCall_8()); 
    }
    this_Preproc_16=rulePreproc
    { 
        $current = $this_Preproc_16.current; 
        afterParserOrEnumRuleCall();
    }

    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getEventParserRuleCall_9_0()); 
    }
    this_Event_17=ruleEvent
    { 
        $current = $this_Event_17.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_18=';' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDefinitionAccess().getSemicolonKeyword_9_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getComponentDeclParserRuleCall_10_0()); 
    }
    this_ComponentDecl_19=ruleComponentDecl
    { 
        $current = $this_ComponentDecl_19.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_20=';' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDefinitionAccess().getSemicolonKeyword_10_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getHomeDeclParserRuleCall_11_0()); 
    }
    this_HomeDecl_21=ruleHomeDecl
    { 
        $current = $this_HomeDecl_21.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_22=';' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDefinitionAccess().getSemicolonKeyword_11_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getPortTypeDeclParserRuleCall_12_0()); 
    }
    this_PortTypeDecl_23=rulePortTypeDecl
    { 
        $current = $this_PortTypeDecl_23.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_24=';' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getDefinitionAccess().getSemicolonKeyword_12_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getConnectorParserRuleCall_13_0()); 
    }
    this_Connector_25=ruleConnector
    { 
        $current = $this_Connector_25.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_26=';' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getDefinitionAccess().getSemicolonKeyword_13_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getTemplateModuleParserRuleCall_14_0()); 
    }
    this_TemplateModule_27=ruleTemplateModule
    { 
        $current = $this_TemplateModule_27.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_28=';' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getDefinitionAccess().getSemicolonKeyword_14_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getTemplateModuleInstParserRuleCall_15_0()); 
    }
    this_TemplateModuleInst_29=ruleTemplateModuleInst
    { 
        $current = $this_TemplateModuleInst_29.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_30=';' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getDefinitionAccess().getSemicolonKeyword_15_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDefinitionAccess().getIDLCommentParserRuleCall_16()); 
    }
    this_IDLComment_31=ruleIDLComment
    { 
        $current = $this_IDLComment_31.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	 iv_ruleModule=ruleModule 
	 { $current=$iv_ruleModule.current; } 
	 EOF 
;

// Rule Module
ruleModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getModuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
	    }
		lv_comments_2_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_2_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getModuleAccess().getDefinitionsDefinitionParserRuleCall_4_0()); 
	    }
		lv_definitions_4_0=ruleDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModuleRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_4_0, 
        		"Definition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleInterface_or_Forward_Decl
entryRuleInterface_or_Forward_Decl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterface_or_Forward_DeclRule()); }
	 iv_ruleInterface_or_Forward_Decl=ruleInterface_or_Forward_Decl 
	 { $current=$iv_ruleInterface_or_Forward_Decl.current; } 
	 EOF 
;

// Rule Interface_or_Forward_Decl
ruleInterface_or_Forward_Decl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterface_or_Forward_DeclAccess().getInterface_declParserRuleCall_0()); 
    }
    this_Interface_decl_0=ruleInterface_decl
    { 
        $current = $this_Interface_decl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInterface_or_Forward_DeclAccess().getForward_declParserRuleCall_1()); 
    }
    this_Forward_decl_1=ruleForward_decl
    { 
        $current = $this_Forward_decl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInterface_decl
entryRuleInterface_decl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterface_declRule()); }
	 iv_ruleInterface_decl=ruleInterface_decl 
	 { $current=$iv_ruleInterface_decl.current; } 
	 EOF 
;

// Rule Interface_decl
ruleInterface_decl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_declAccess().getHeaderInterface_headerParserRuleCall_0_0()); 
	    }
		lv_header_0_0=ruleInterface_header		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_declRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_0_0, 
        		"Interface_header");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterface_declAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_declAccess().getInterfaceBodyInterfaceBodyParserRuleCall_2_0()); 
	    }
		lv_interfaceBody_2_0=ruleInterfaceBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_declRule());
	        }
       		set(
       			$current, 
       			"interfaceBody",
        		lv_interfaceBody_2_0, 
        		"InterfaceBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getInterface_declAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleForward_decl
entryRuleForward_decl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForward_declRule()); }
	 iv_ruleForward_decl=ruleForward_decl 
	 { $current=$iv_ruleForward_decl.current; } 
	 EOF 
;

// Rule Forward_decl
ruleForward_decl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='abstract' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForward_declAccess().getAbstractKeyword_0_0());
    }

    |	otherlv_1='local' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForward_declAccess().getLocalKeyword_0_1());
    }
)?	otherlv_2='interface' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getForward_declAccess().getInterfaceKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getForward_declAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getForward_declRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleInterface_header
entryRuleInterface_header returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterface_headerRule()); }
	 iv_ruleInterface_header=ruleInterface_header 
	 { $current=$iv_ruleInterface_header.current; } 
	 EOF 
;

// Rule Interface_header
ruleInterface_header returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getInterface_headerAccess().getIsAbstractAbstractKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterface_headerRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)
    |(
(
		lv_isLocal_1_0=	'local' 
    {
        newLeafNode(lv_isLocal_1_0, grammarAccess.getInterface_headerAccess().getIsLocalLocalKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterface_headerRule());
	        }
       		setWithLastConsumed($current, "isLocal", true, "local");
	    }

)
))?	otherlv_2='interface' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInterface_headerAccess().getInterfaceKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getInterface_headerAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInterface_headerRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInterface_headerAccess().getColonKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_headerAccess().getSpecializesScopedNameParserRuleCall_3_1_0()); 
	    }
		lv_specializes_5_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_headerRule());
	        }
       		add(
       			$current, 
       			"specializes",
        		lv_specializes_5_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInterface_headerAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_headerAccess().getCommentsIDLCommentParserRuleCall_3_2_1_0()); 
	    }
		lv_comments_7_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_headerRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_7_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_headerAccess().getSpecializesScopedNameParserRuleCall_3_2_2_0()); 
	    }
		lv_specializes_8_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_headerRule());
	        }
       		add(
       			$current, 
       			"specializes",
        		lv_specializes_8_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInterface_headerAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
	    }
		lv_comments_9_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterface_headerRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_9_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleInterfaceBody
entryRuleInterfaceBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceBodyRule()); }
	 iv_ruleInterfaceBody=ruleInterfaceBody 
	 { $current=$iv_ruleInterfaceBody.current; } 
	 EOF 
;

// Rule InterfaceBody
ruleInterfaceBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfaceBodyAccess().getInterfaceBodyAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInterfaceBodyAccess().getExportExportParserRuleCall_1_0()); 
	    }
		lv_export_1_0=ruleExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInterfaceBodyRule());
	        }
       		add(
       			$current, 
       			"export",
        		lv_export_1_0, 
        		"Export");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleExport
entryRuleExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExportRule()); }
	 iv_ruleExport=ruleExport 
	 { $current=$iv_ruleExport.current; } 
	 EOF 
;

// Rule Export
ruleExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExportAccess().getAttrDeclParserRuleCall_0_0()); 
    }
    this_AttrDecl_0=ruleAttrDecl
    { 
        $current = $this_AttrDecl_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExportAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExportAccess().getOpDeclParserRuleCall_1_0()); 
    }
    this_OpDecl_2=ruleOpDecl
    { 
        $current = $this_OpDecl_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExportAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExportAccess().getTypeDeclParserRuleCall_2_0()); 
    }
    this_TypeDecl_4=ruleTypeDecl
    { 
        $current = $this_TypeDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExportAccess().getSemicolonKeyword_2_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExportAccess().getConstDeclParserRuleCall_3_0()); 
    }
    this_ConstDecl_6=ruleConstDecl
    { 
        $current = $this_ConstDecl_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExportAccess().getSemicolonKeyword_3_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExportAccess().getExceptDeclParserRuleCall_4_0()); 
    }
    this_ExceptDecl_8=ruleExceptDecl
    { 
        $current = $this_ExceptDecl_8.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExportAccess().getSemicolonKeyword_4_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExportAccess().getPreprocParserRuleCall_5()); 
    }
    this_Preproc_10=rulePreproc
    { 
        $current = $this_Preproc_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExportAccess().getIDLCommentParserRuleCall_6()); 
    }
    this_IDLComment_11=ruleIDLComment
    { 
        $current = $this_IDLComment_11.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttrDecl
entryRuleAttrDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrDeclRule()); }
	 iv_ruleAttrDecl=ruleAttrDecl 
	 { $current=$iv_ruleAttrDecl.current; } 
	 EOF 
;

// Rule AttrDecl
ruleAttrDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttrDeclAccess().getAttrSpecParserRuleCall_0()); 
    }
    this_AttrSpec_0=ruleAttrSpec
    { 
        $current = $this_AttrSpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttrDeclAccess().getReadOnlyAttrSpecParserRuleCall_1()); 
    }
    this_ReadOnlyAttrSpec_1=ruleReadOnlyAttrSpec
    { 
        $current = $this_ReadOnlyAttrSpec_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttrSpec
entryRuleAttrSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrSpecRule()); }
	 iv_ruleAttrSpec=ruleAttrSpec 
	 { $current=$iv_ruleAttrSpec.current; } 
	 EOF 
;

// Rule AttrSpec
ruleAttrSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAttrSpecAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrSpecRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='attribute' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAttrSpecAccess().getAttributeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrSpecAccess().getTypeParamTypeSpecParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleParamTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrSpecRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ParamTypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_names_3_0=RULE_ID
		{
			newLeafNode(lv_names_3_0, grammarAccess.getAttrSpecAccess().getNamesIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"ID");
	    }

)
)(((	otherlv_4='getraises' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAttrSpecAccess().getGetraisesKeyword_4_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrSpecAccess().getGetRaisesAttrRaisesExprParserRuleCall_4_0_0_1_0()); 
	    }
		lv_getRaises_5_0=ruleAttrRaisesExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrSpecRule());
	        }
       		set(
       			$current, 
       			"getRaises",
        		lv_getRaises_5_0, 
        		"AttrRaisesExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_6='setraises' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttrSpecAccess().getSetraisesKeyword_4_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrSpecAccess().getSetRaisesAttrRaisesExprParserRuleCall_4_0_1_1_0()); 
	    }
		lv_setRaises_7_0=ruleAttrRaisesExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrSpecRule());
	        }
       		set(
       			$current, 
       			"setRaises",
        		lv_setRaises_7_0, 
        		"AttrRaisesExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAttrSpecAccess().getCommaKeyword_4_1_0());
    }
(
(
		lv_names_9_0=RULE_ID
		{
			newLeafNode(lv_names_9_0, grammarAccess.getAttrSpecAccess().getNamesIDTerminalRuleCall_4_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_9_0, 
        		"ID");
	    }

)
))*)?(((	otherlv_10='getraises' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAttrSpecAccess().getGetraisesKeyword_5_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrSpecAccess().getGetRaisesAttrRaisesExprParserRuleCall_5_0_0_1_0()); 
	    }
		lv_getRaises_11_0=ruleAttrRaisesExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrSpecRule());
	        }
       		set(
       			$current, 
       			"getRaises",
        		lv_getRaises_11_0, 
        		"AttrRaisesExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_12='setraises' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAttrSpecAccess().getSetraisesKeyword_5_0_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrSpecAccess().getSetRaisesAttrRaisesExprParserRuleCall_5_0_1_1_0()); 
	    }
		lv_setRaises_13_0=ruleAttrRaisesExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrSpecRule());
	        }
       		set(
       			$current, 
       			"setRaises",
        		lv_setRaises_13_0, 
        		"AttrRaisesExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)))
    |(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getAttrSpecAccess().getCommaKeyword_5_1_0());
    }
(
(
		lv_names_15_0=RULE_ID
		{
			newLeafNode(lv_names_15_0, grammarAccess.getAttrSpecAccess().getNamesIDTerminalRuleCall_5_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAttrSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_15_0, 
        		"ID");
	    }

)
))*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrSpecAccess().getCommentsIDLCommentParserRuleCall_6_0()); 
	    }
		lv_comments_16_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrSpecRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_16_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleReadOnlyAttrSpec
entryRuleReadOnlyAttrSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReadOnlyAttrSpecRule()); }
	 iv_ruleReadOnlyAttrSpec=ruleReadOnlyAttrSpec 
	 { $current=$iv_ruleReadOnlyAttrSpec.current; } 
	 EOF 
;

// Rule ReadOnlyAttrSpec
ruleReadOnlyAttrSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='readonly' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReadOnlyAttrSpecAccess().getReadonlyKeyword_1());
    }
	otherlv_2='attribute' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReadOnlyAttrSpecAccess().getAttributeKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getTypeParamTypeSpecParserRuleCall_3_0()); 
	    }
		lv_type_3_0=ruleParamTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_3_0, 
        		"ParamTypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_names_4_0=RULE_ID
		{
			newLeafNode(lv_names_4_0, grammarAccess.getReadOnlyAttrSpecAccess().getNamesIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_4_0, 
        		"ID");
	    }

)
)((	otherlv_5='raises' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getReadOnlyAttrSpecAccess().getRaisesKeyword_5_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getRaisesAttrRaisesExprParserRuleCall_5_0_1_0()); 
	    }
		lv_raises_6_0=ruleAttrRaisesExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		set(
       			$current, 
       			"raises",
        		lv_raises_6_0, 
        		"AttrRaisesExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getReadOnlyAttrSpecAccess().getCommaKeyword_5_1_0());
    }
(
(
		lv_names_8_0=RULE_ID
		{
			newLeafNode(lv_names_8_0, grammarAccess.getReadOnlyAttrSpecAccess().getNamesIDTerminalRuleCall_5_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_8_0, 
        		"ID");
	    }

)
))*)?((	otherlv_9='raises' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getReadOnlyAttrSpecAccess().getRaisesKeyword_6_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getRaisesAttrRaisesExprParserRuleCall_6_0_1_0()); 
	    }
		lv_raises_10_0=ruleAttrRaisesExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		set(
       			$current, 
       			"raises",
        		lv_raises_10_0, 
        		"AttrRaisesExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getReadOnlyAttrSpecAccess().getCommaKeyword_6_1_0());
    }
(
(
		lv_names_12_0=RULE_ID
		{
			newLeafNode(lv_names_12_0, grammarAccess.getReadOnlyAttrSpecAccess().getNamesIDTerminalRuleCall_6_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_12_0, 
        		"ID");
	    }

)
))*)?(
(
		{ 
	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getCommentsIDLCommentParserRuleCall_7_0()); 
	    }
		lv_comments_13_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_13_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleAttrRaisesExpr
entryRuleAttrRaisesExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttrRaisesExprRule()); }
	 iv_ruleAttrRaisesExpr=ruleAttrRaisesExpr 
	 { $current=$iv_ruleAttrRaisesExpr.current; } 
	 EOF 
;

// Rule AttrRaisesExpr
ruleAttrRaisesExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttrRaisesExprAccess().getExceptionsExceptionListParserRuleCall_0()); 
	    }
		lv_exceptions_0_0=ruleExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttrRaisesExprRule());
	        }
       		set(
       			$current, 
       			"exceptions",
        		lv_exceptions_0_0, 
        		"ExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleExceptionList
entryRuleExceptionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptionListRule()); }
	 iv_ruleExceptionList=ruleExceptionList 
	 { $current=$iv_ruleExceptionList.current; } 
	 EOF 
;

// Rule ExceptionList
ruleExceptionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExceptionListAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionListAccess().getExceptionScopedNameParserRuleCall_1_0()); 
	    }
		lv_exception_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionListRule());
	        }
       		add(
       			$current, 
       			"exception",
        		lv_exception_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExceptionListAccess().getCommaKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptionListAccess().getExceptionScopedNameParserRuleCall_2_1_0()); 
	    }
		lv_exception_3_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptionListRule());
	        }
       		add(
       			$current, 
       			"exception",
        		lv_exception_3_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExceptionListAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleOpDecl
entryRuleOpDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpDeclRule()); }
	 iv_ruleOpDecl=ruleOpDecl 
	 { $current=$iv_ruleOpDecl.current; } 
	 EOF 
;

// Rule OpDecl
ruleOpDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOpDeclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_isOneway_1_0=	'oneway' 
    {
        newLeafNode(lv_isOneway_1_0, grammarAccess.getOpDeclAccess().getIsOnewayOnewayKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpDeclRule());
	        }
       		setWithLastConsumed($current, "isOneway", true, "oneway");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpDeclAccess().getTypeOpTypeDeclParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleOpTypeDecl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpDeclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"OpTypeDecl");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getOpDeclAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOpDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOpDeclAccess().getParamsParameterDeclsParserRuleCall_4_0()); 
	    }
		lv_params_4_0=ruleParameterDecls		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpDeclRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"ParameterDecls");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='raises' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getOpDeclAccess().getRaisesKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOpDeclAccess().getRaisesExceptionListParserRuleCall_5_1_0()); 
	    }
		lv_raises_6_0=ruleExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpDeclRule());
	        }
       		set(
       			$current, 
       			"raises",
        		lv_raises_6_0, 
        		"ExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getOpDeclAccess().getContextContextExprParserRuleCall_6_0()); 
	    }
		lv_context_7_0=ruleContextExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOpDeclRule());
	        }
       		set(
       			$current, 
       			"context",
        		lv_context_7_0, 
        		"ContextExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleOpTypeDecl
entryRuleOpTypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOpTypeDeclRule()); }
	 iv_ruleOpTypeDecl=ruleOpTypeDecl 
	 { $current=$iv_ruleOpTypeDecl.current; } 
	 EOF 
;

// Rule OpTypeDecl
ruleOpTypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOpTypeDeclAccess().getParamTypeSpecParserRuleCall_0()); 
    }
    this_ParamTypeSpec_0=ruleParamTypeSpec
    { 
        $current = $this_ParamTypeSpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_1='void' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOpTypeDeclAccess().getVoidKeyword_1());
    }
)
;





// Entry rule entryRuleParameterDecls
entryRuleParameterDecls returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterDeclsRule()); }
	 iv_ruleParameterDecls=ruleParameterDecls 
	 { $current=$iv_ruleParameterDecls.current; } 
	 EOF 
;

// Rule ParameterDecls
ruleParameterDecls returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getParameterDeclsAccess().getParameterDeclsAction_0(),
            $current);
    }
)	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getParameterDeclsAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
	    }
		lv_comments_2_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_2_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getDeclsParamDclParserRuleCall_3_0_0()); 
	    }
		lv_decls_3_0=ruleParamDcl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
	        }
       		add(
       			$current, 
       			"decls",
        		lv_decls_3_0, 
        		"ParamDcl");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getParameterDeclsAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getCommentsIDLCommentParserRuleCall_3_1_1_0()); 
	    }
		lv_comments_5_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_5_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getDeclsParamDclParserRuleCall_3_1_2_0()); 
	    }
		lv_decls_6_0=ruleParamDcl		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
	        }
       		add(
       			$current, 
       			"decls",
        		lv_decls_6_0, 
        		"ParamDcl");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getParameterDeclsAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleParamDcl
entryRuleParamDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamDclRule()); }
	 iv_ruleParamDcl=ruleParamDcl 
	 { $current=$iv_ruleParamDcl.current; } 
	 EOF 
;

// Rule ParamDcl
ruleParamDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getParamDclAccess().getDirectionParamDirectionEnumRuleCall_0_0()); 
	    }
		lv_direction_0_0=ruleParamDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamDclRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_0_0, 
        		"ParamDirection");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getParamDclAccess().getTypeParamTypeSpecParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleParamTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getParamDclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ParamTypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getParamDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParamDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleContextExpr
entryRuleContextExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextExprRule()); }
	 iv_ruleContextExpr=ruleContextExpr 
	 { $current=$iv_ruleContextExpr.current; } 
	 EOF 
;

// Rule ContextExpr
ruleContextExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='context' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContextExprAccess().getContextKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContextExprAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_literal_2_0=RULE_STRING
		{
			newLeafNode(lv_literal_2_0, grammarAccess.getContextExprAccess().getLiteralSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContextExprRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"literal",
        		lv_literal_2_0, 
        		"STRING");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getContextExprAccess().getCommaKeyword_3_0());
    }
(
(
		lv_literal_4_0=RULE_STRING
		{
			newLeafNode(lv_literal_4_0, grammarAccess.getContextExprAccess().getLiteralSTRINGTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContextExprRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"literal",
        		lv_literal_4_0, 
        		"STRING");
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getContextExprAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleParamTypeSpec
entryRuleParamTypeSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamTypeSpecRule()); }
	 iv_ruleParamTypeSpec=ruleParamTypeSpec 
	 { $current=$iv_ruleParamTypeSpec.current; } 
	 EOF 
;

// Rule ParamTypeSpec
ruleParamTypeSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParamTypeSpecAccess().getBaseTypeSpecParserRuleCall_0()); 
    }
    this_BaseTypeSpec_0=ruleBaseTypeSpec
    { 
        $current = $this_BaseTypeSpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParamTypeSpecAccess().getStringTypeParserRuleCall_1()); 
    }
    this_StringType_1=ruleStringType
    { 
        $current = $this_StringType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParamTypeSpecAccess().getWideStringTypeParserRuleCall_2()); 
    }
    this_WideStringType_2=ruleWideStringType
    { 
        $current = $this_WideStringType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParamTypeSpecAccess().getScopedNameParserRuleCall_3()); 
    }
    this_ScopedName_3=ruleScopedName
    { 
        $current = $this_ScopedName_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleScopedName
entryRuleScopedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getScopedNameRule()); }
	 iv_ruleScopedName=ruleScopedName 
	 { $current=$iv_ruleScopedName.current; } 
	 EOF 
;

// Rule ScopedName
ruleScopedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='::' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getScopedNameAccess().getColonColonKeyword_0());
    }
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getScopedNameAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScopedNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2='::' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getScopedNameAccess().getColonColonKeyword_2_0());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getScopedNameAccess().getNameIDTerminalRuleCall_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getScopedNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRuleBaseTypeSpec
entryRuleBaseTypeSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseTypeSpecRule()); }
	 iv_ruleBaseTypeSpec=ruleBaseTypeSpec 
	 { $current=$iv_ruleBaseTypeSpec.current; } 
	 EOF 
;

// Rule BaseTypeSpec
ruleBaseTypeSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getFloatingPtTypeParserRuleCall_0()); 
    }
    this_FloatingPtType_0=ruleFloatingPtType
    { 
        $current = $this_FloatingPtType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getIntegerTypeParserRuleCall_1()); 
    }
    this_IntegerType_1=ruleIntegerType
    { 
        $current = $this_IntegerType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getCharTypeParserRuleCall_2()); 
    }
    this_CharType_2=ruleCharType
    { 
        $current = $this_CharType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getWideCharTypeParserRuleCall_3()); 
    }
    this_WideCharType_3=ruleWideCharType
    { 
        $current = $this_WideCharType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getBooleanTypeParserRuleCall_4()); 
    }
    this_BooleanType_4=ruleBooleanType
    { 
        $current = $this_BooleanType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getOctetTypeParserRuleCall_5()); 
    }
    this_OctetType_5=ruleOctetType
    { 
        $current = $this_OctetType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getAnyTypeParserRuleCall_6()); 
    }
    this_AnyType_6=ruleAnyType
    { 
        $current = $this_AnyType_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getObjectTypeParserRuleCall_7()); 
    }
    this_ObjectType_7=ruleObjectType
    { 
        $current = $this_ObjectType_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getValueBaseTypeParserRuleCall_8()); 
    }
    this_ValueBaseType_8=ruleValueBaseType
    { 
        $current = $this_ValueBaseType_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFloatingPtType
entryRuleFloatingPtType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatingPtTypeRule()); }
	 iv_ruleFloatingPtType=ruleFloatingPtType 
	 { $current=$iv_ruleFloatingPtType.current; } 
	 EOF 
;

// Rule FloatingPtType
ruleFloatingPtType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFloatingPtTypeAccess().getFloatTypeParserRuleCall_0()); 
    }
    this_FloatType_0=ruleFloatType
    { 
        $current = $this_FloatType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFloatingPtTypeAccess().getDoubleTypeParserRuleCall_1()); 
    }
    this_DoubleType_1=ruleDoubleType
    { 
        $current = $this_DoubleType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFloatingPtTypeAccess().getLongDoubleTypeParserRuleCall_2()); 
    }
    this_LongDoubleType_2=ruleLongDoubleType
    { 
        $current = $this_LongDoubleType_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFloatType
entryRuleFloatType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFloatTypeRule()); }
	 iv_ruleFloatType=ruleFloatType 
	 { $current=$iv_ruleFloatType.current; } 
	 EOF 
;

// Rule FloatType
ruleFloatType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFloatTypeAccess().getFloatTypeAction_0(),
            $current);
    }
)	otherlv_1='float' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFloatTypeAccess().getFloatKeyword_1());
    }
)
;





// Entry rule entryRuleDoubleType
entryRuleDoubleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleTypeRule()); }
	 iv_ruleDoubleType=ruleDoubleType 
	 { $current=$iv_ruleDoubleType.current; } 
	 EOF 
;

// Rule DoubleType
ruleDoubleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getDoubleTypeAccess().getDoubleTypeAction_0(),
            $current);
    }
)	otherlv_1='double' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoubleTypeAccess().getDoubleKeyword_1());
    }
)
;





// Entry rule entryRuleLongDoubleType
entryRuleLongDoubleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLongDoubleTypeRule()); }
	 iv_ruleLongDoubleType=ruleLongDoubleType 
	 { $current=$iv_ruleLongDoubleType.current; } 
	 EOF 
;

// Rule LongDoubleType
ruleLongDoubleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getLongDoubleTypeAccess().getLongDoubleTypeAction_0(),
            $current);
    }
)	otherlv_1='long' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLongDoubleTypeAccess().getLongKeyword_1());
    }
	otherlv_2='double' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLongDoubleTypeAccess().getDoubleKeyword_2());
    }
)
;





// Entry rule entryRuleIntegerType
entryRuleIntegerType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntegerTypeRule()); }
	 iv_ruleIntegerType=ruleIntegerType 
	 { $current=$iv_ruleIntegerType.current; } 
	 EOF 
;

// Rule IntegerType
ruleIntegerType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerTypeAccess().getUnsignedIntParserRuleCall_0()); 
    }
    this_UnsignedInt_0=ruleUnsignedInt
    { 
        $current = $this_UnsignedInt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIntegerTypeAccess().getSignedIntParserRuleCall_1()); 
    }
    this_SignedInt_1=ruleSignedInt
    { 
        $current = $this_SignedInt_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSignedInt
entryRuleSignedInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedIntRule()); }
	 iv_ruleSignedInt=ruleSignedInt 
	 { $current=$iv_ruleSignedInt.current; } 
	 EOF 
;

// Rule SignedInt
ruleSignedInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSignedIntAccess().getSignedShortIntParserRuleCall_0()); 
    }
    this_SignedShortInt_0=ruleSignedShortInt
    { 
        $current = $this_SignedShortInt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSignedIntAccess().getSignedLongLongIntParserRuleCall_1()); 
    }
    this_SignedLongLongInt_1=ruleSignedLongLongInt
    { 
        $current = $this_SignedLongLongInt_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSignedIntAccess().getSignedLongIntParserRuleCall_2()); 
    }
    this_SignedLongInt_2=ruleSignedLongInt
    { 
        $current = $this_SignedLongInt_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSignedShortInt
entryRuleSignedShortInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedShortIntRule()); }
	 iv_ruleSignedShortInt=ruleSignedShortInt 
	 { $current=$iv_ruleSignedShortInt.current; } 
	 EOF 
;

// Rule SignedShortInt
ruleSignedShortInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSignedShortIntAccess().getSignedShortIntAction_0(),
            $current);
    }
)	otherlv_1='short' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSignedShortIntAccess().getShortKeyword_1());
    }
)
;





// Entry rule entryRuleSignedLongInt
entryRuleSignedLongInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedLongIntRule()); }
	 iv_ruleSignedLongInt=ruleSignedLongInt 
	 { $current=$iv_ruleSignedLongInt.current; } 
	 EOF 
;

// Rule SignedLongInt
ruleSignedLongInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSignedLongIntAccess().getSignedLongIntAction_0(),
            $current);
    }
)	otherlv_1='long' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSignedLongIntAccess().getLongKeyword_1());
    }
)
;





// Entry rule entryRuleSignedLongLongInt
entryRuleSignedLongLongInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignedLongLongIntRule()); }
	 iv_ruleSignedLongLongInt=ruleSignedLongLongInt 
	 { $current=$iv_ruleSignedLongLongInt.current; } 
	 EOF 
;

// Rule SignedLongLongInt
ruleSignedLongLongInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSignedLongLongIntAccess().getSignedLongLongIntAction_0(),
            $current);
    }
)	otherlv_1='long' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSignedLongLongIntAccess().getLongKeyword_1());
    }
	otherlv_2='long' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSignedLongLongIntAccess().getLongKeyword_2());
    }
)
;





// Entry rule entryRuleUnsignedInt
entryRuleUnsignedInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnsignedIntRule()); }
	 iv_ruleUnsignedInt=ruleUnsignedInt 
	 { $current=$iv_ruleUnsignedInt.current; } 
	 EOF 
;

// Rule UnsignedInt
ruleUnsignedInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnsignedIntAccess().getUnsignedShortIntParserRuleCall_0()); 
    }
    this_UnsignedShortInt_0=ruleUnsignedShortInt
    { 
        $current = $this_UnsignedShortInt_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnsignedIntAccess().getUnsignedLongIntParserRuleCall_1()); 
    }
    this_UnsignedLongInt_1=ruleUnsignedLongInt
    { 
        $current = $this_UnsignedLongInt_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnsignedIntAccess().getUnsignedLongLongIntParserRuleCall_2()); 
    }
    this_UnsignedLongLongInt_2=ruleUnsignedLongLongInt
    { 
        $current = $this_UnsignedLongLongInt_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUnsignedShortInt
entryRuleUnsignedShortInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnsignedShortIntRule()); }
	 iv_ruleUnsignedShortInt=ruleUnsignedShortInt 
	 { $current=$iv_ruleUnsignedShortInt.current; } 
	 EOF 
;

// Rule UnsignedShortInt
ruleUnsignedShortInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnsignedShortIntAccess().getUnsignedShortIntAction_0(),
            $current);
    }
)	otherlv_1='unsigned' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnsignedShortIntAccess().getUnsignedKeyword_1());
    }
	otherlv_2='short' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnsignedShortIntAccess().getShortKeyword_2());
    }
)
;





// Entry rule entryRuleUnsignedLongInt
entryRuleUnsignedLongInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnsignedLongIntRule()); }
	 iv_ruleUnsignedLongInt=ruleUnsignedLongInt 
	 { $current=$iv_ruleUnsignedLongInt.current; } 
	 EOF 
;

// Rule UnsignedLongInt
ruleUnsignedLongInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnsignedLongIntAccess().getUnsignedLongIntAction_0(),
            $current);
    }
)	otherlv_1='unsigned' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnsignedLongIntAccess().getUnsignedKeyword_1());
    }
	otherlv_2='long' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnsignedLongIntAccess().getLongKeyword_2());
    }
)
;





// Entry rule entryRuleUnsignedLongLongInt
entryRuleUnsignedLongLongInt returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnsignedLongLongIntRule()); }
	 iv_ruleUnsignedLongLongInt=ruleUnsignedLongLongInt 
	 { $current=$iv_ruleUnsignedLongLongInt.current; } 
	 EOF 
;

// Rule UnsignedLongLongInt
ruleUnsignedLongLongInt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnsignedLongLongIntAccess().getUnsignedLongLongIntAction_0(),
            $current);
    }
)	otherlv_1='unsigned' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnsignedLongLongIntAccess().getUnsignedKeyword_1());
    }
	otherlv_2='long' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUnsignedLongLongIntAccess().getLongKeyword_2());
    }
	otherlv_3='long' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnsignedLongLongIntAccess().getLongKeyword_3());
    }
)
;





// Entry rule entryRuleCharType
entryRuleCharType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCharTypeRule()); }
	 iv_ruleCharType=ruleCharType 
	 { $current=$iv_ruleCharType.current; } 
	 EOF 
;

// Rule CharType
ruleCharType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getCharTypeAccess().getCharTypeAction_0(),
            $current);
    }
)	otherlv_1='char' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCharTypeAccess().getCharKeyword_1());
    }
)
;





// Entry rule entryRuleWideCharType
entryRuleWideCharType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWideCharTypeRule()); }
	 iv_ruleWideCharType=ruleWideCharType 
	 { $current=$iv_ruleWideCharType.current; } 
	 EOF 
;

// Rule WideCharType
ruleWideCharType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getWideCharTypeAccess().getWideCharTypeAction_0(),
            $current);
    }
)	otherlv_1='wchar' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWideCharTypeAccess().getWcharKeyword_1());
    }
)
;





// Entry rule entryRuleBooleanType
entryRuleBooleanType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanTypeRule()); }
	 iv_ruleBooleanType=ruleBooleanType 
	 { $current=$iv_ruleBooleanType.current; } 
	 EOF 
;

// Rule BooleanType
ruleBooleanType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0(),
            $current);
    }
)	otherlv_1='boolean' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1());
    }
)
;





// Entry rule entryRuleOctetType
entryRuleOctetType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOctetTypeRule()); }
	 iv_ruleOctetType=ruleOctetType 
	 { $current=$iv_ruleOctetType.current; } 
	 EOF 
;

// Rule OctetType
ruleOctetType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getOctetTypeAccess().getOctetTypeAction_0(),
            $current);
    }
)	otherlv_1='octet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getOctetTypeAccess().getOctetKeyword_1());
    }
)
;





// Entry rule entryRuleAnyType
entryRuleAnyType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnyTypeRule()); }
	 iv_ruleAnyType=ruleAnyType 
	 { $current=$iv_ruleAnyType.current; } 
	 EOF 
;

// Rule AnyType
ruleAnyType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnyTypeAccess().getAnyTypeAction_0(),
            $current);
    }
)	otherlv_1='any' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnyTypeAccess().getAnyKeyword_1());
    }
)
;





// Entry rule entryRuleObjectType
entryRuleObjectType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getObjectTypeRule()); }
	 iv_ruleObjectType=ruleObjectType 
	 { $current=$iv_ruleObjectType.current; } 
	 EOF 
;

// Rule ObjectType
ruleObjectType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getObjectTypeAccess().getObjectTypeAction_0(),
            $current);
    }
)	otherlv_1='Object' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getObjectTypeAccess().getObjectKeyword_1());
    }
)
;





// Entry rule entryRuleValueBaseType
entryRuleValueBaseType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValueBaseTypeRule()); }
	 iv_ruleValueBaseType=ruleValueBaseType 
	 { $current=$iv_ruleValueBaseType.current; } 
	 EOF 
;

// Rule ValueBaseType
ruleValueBaseType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getValueBaseTypeAccess().getValueBaseTypeAction_0(),
            $current);
    }
)	otherlv_1='ValueBase' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValueBaseTypeAccess().getValueBaseKeyword_1());
    }
)
;





// Entry rule entryRuleStringType
entryRuleStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringTypeRule()); }
	 iv_ruleStringType=ruleStringType 
	 { $current=$iv_ruleStringType.current; } 
	 EOF 
;

// Rule StringType
ruleStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringTypeAccess().getStringTypeAction_0(),
            $current);
    }
)	otherlv_1='string' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStringTypeAccess().getStringKeyword_1());
    }
(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStringTypeAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringTypeAccess().getSizePositiveIntConstParserRuleCall_2_1_0()); 
	    }
		lv_size_3_0=rulePositiveIntConst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringTypeRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"PositiveIntConst");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStringTypeAccess().getGreaterThanSignKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleWideStringType
entryRuleWideStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWideStringTypeRule()); }
	 iv_ruleWideStringType=ruleWideStringType 
	 { $current=$iv_ruleWideStringType.current; } 
	 EOF 
;

// Rule WideStringType
ruleWideStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getWideStringTypeAccess().getWideStringTypeAction_0(),
            $current);
    }
)	otherlv_1='wstring' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWideStringTypeAccess().getWstringKeyword_1());
    }
(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getWideStringTypeAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWideStringTypeAccess().getSizePositiveIntConstParserRuleCall_2_1_0()); 
	    }
		lv_size_3_0=rulePositiveIntConst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWideStringTypeRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_3_0, 
        		"PositiveIntConst");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='>' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getWideStringTypeAccess().getGreaterThanSignKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleExceptDecl
entryRuleExceptDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptDeclRule()); }
	 iv_ruleExceptDecl=ruleExceptDecl 
	 { $current=$iv_ruleExceptDecl.current; } 
	 EOF 
;

// Rule ExceptDecl
ruleExceptDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='exception' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExceptDeclAccess().getExceptionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getExceptDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExceptDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptDeclAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
	    }
		lv_comments_2_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_2_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExceptDeclAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptDeclAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
	    }
		lv_comments_4_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_4_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getExceptDeclAccess().getMembersMemberParserRuleCall_5_0()); 
	    }
		lv_members_5_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExceptDeclRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_5_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getExceptDeclAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	 iv_ruleMember=ruleMember 
	 { $current=$iv_ruleMember.current; } 
	 EOF 
;

// Rule Member
ruleMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getTypeTypeSpecParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"TypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getDeclDeclaratorParserRuleCall_1_0()); 
	    }
		lv_decl_1_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		set(
       			$current, 
       			"decl",
        		lv_decl_1_0, 
        		"Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMemberAccess().getSemicolonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMemberAccess().getCommentIDLCommentParserRuleCall_3_0()); 
	    }
		lv_comment_3_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMemberRule());
	        }
       		add(
       			$current, 
       			"comment",
        		lv_comment_3_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleDeclarator
entryRuleDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDeclaratorRule()); }
	 iv_ruleDeclarator=ruleDeclarator 
	 { $current=$iv_ruleDeclarator.current; } 
	 EOF 
;

// Rule Declarator
ruleDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDeclaratorAccess().getSimpleDeclaratorParserRuleCall_0()); 
    }
    this_SimpleDeclarator_0=ruleSimpleDeclarator
    { 
        $current = $this_SimpleDeclarator_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDeclaratorAccess().getArrayDeclaratorParserRuleCall_1()); 
    }
    this_ArrayDeclarator_1=ruleArrayDeclarator
    { 
        $current = $this_ArrayDeclarator_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleDeclarator
entryRuleSimpleDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleDeclaratorRule()); }
	 iv_ruleSimpleDeclarator=ruleSimpleDeclarator 
	 { $current=$iv_ruleSimpleDeclarator.current; } 
	 EOF 
;

// Rule SimpleDeclarator
ruleSimpleDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_id_0_0=RULE_ID
		{
			newLeafNode(lv_id_0_0, grammarAccess.getSimpleDeclaratorAccess().getIdIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleDeclaratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"ID");
	    }

)
)
;







// Entry rule entryRuleArrayDeclarator
entryRuleArrayDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArrayDeclaratorRule()); }
	 iv_ruleArrayDeclarator=ruleArrayDeclarator 
	 { $current=$iv_ruleArrayDeclarator.current; } 
	 EOF 
;

// Rule ArrayDeclarator
ruleArrayDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_id_0_0=RULE_ID
		{
			newLeafNode(lv_id_0_0, grammarAccess.getArrayDeclaratorAccess().getIdIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArrayDeclaratorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_0_0, 
        		"ID");
	    }

)
)(	otherlv_1='[' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayDeclaratorAccess().getLeftSquareBracketKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayDeclaratorAccess().getSizeConstExpParserRuleCall_1_1_0()); 
	    }
		lv_size_2_0=ruleConstExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayDeclaratorRule());
	        }
       		add(
       			$current, 
       			"size",
        		lv_size_2_0, 
        		"ConstExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=']' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayDeclaratorAccess().getRightSquareBracketKeyword_1_2());
    }
)+)
;





// Entry rule entryRuleStructType
entryRuleStructType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructTypeRule()); }
	 iv_ruleStructType=ruleStructType 
	 { $current=$iv_ruleStructType.current; } 
	 EOF 
;

// Rule StructType
ruleStructType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructTypeAccess().getStructKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStructTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
	    }
		lv_comments_2_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_2_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
	    }
		lv_comments_4_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_4_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getStructTypeAccess().getMembersMemberParserRuleCall_5_0()); 
	    }
		lv_members_5_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructTypeRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_5_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleTypeDecl
entryRuleTypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDeclRule()); }
	 iv_ruleTypeDecl=ruleTypeDecl 
	 { $current=$iv_ruleTypeDecl.current; } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='typedef' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTypeDeclAccess().getTypedefKeyword_0_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeDeclaratorParserRuleCall_0_1()); 
    }
    this_TypeDeclarator_1=ruleTypeDeclarator
    { 
        $current = $this_TypeDeclarator_1.current; 
        afterParserOrEnumRuleCall();
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeDeclAccess().getStructTypeParserRuleCall_1()); 
    }
    this_StructType_2=ruleStructType
    { 
        $current = $this_StructType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeDeclAccess().getUnionTypeParserRuleCall_2()); 
    }
    this_UnionType_3=ruleUnionType
    { 
        $current = $this_UnionType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeDeclAccess().getEnumTypeParserRuleCall_3()); 
    }
    this_EnumType_4=ruleEnumType
    { 
        $current = $this_EnumType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeDeclAccess().getConstrForwardDeclParserRuleCall_4()); 
    }
    this_ConstrForwardDecl_5=ruleConstrForwardDecl
    { 
        $current = $this_ConstrForwardDecl_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTypeDeclarator
entryRuleTypeDeclarator returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeDeclaratorRule()); }
	 iv_ruleTypeDeclarator=ruleTypeDeclarator 
	 { $current=$iv_ruleTypeDeclarator.current; } 
	 EOF 
;

// Rule TypeDeclarator
ruleTypeDeclarator returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclaratorAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclaratorRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclaratorAccess().getTypeTypeSpecParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclaratorRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"TypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeDeclaratorAccess().getDeclaratorsDeclaratorParserRuleCall_2_0()); 
	    }
		lv_declarators_2_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeDeclaratorRule());
	        }
       		add(
       			$current, 
       			"declarators",
        		lv_declarators_2_0, 
        		"Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleTypeSpec
entryRuleTypeSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeSpecRule()); }
	 iv_ruleTypeSpec=ruleTypeSpec 
	 { $current=$iv_ruleTypeSpec.current; } 
	 EOF 
;

// Rule TypeSpec
ruleTypeSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeSpecAccess().getSimpleTypeSpecParserRuleCall_0()); 
    }
    this_SimpleTypeSpec_0=ruleSimpleTypeSpec
    { 
        $current = $this_SimpleTypeSpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTypeSpecAccess().getConstrTypeSpecParserRuleCall_1()); 
    }
    this_ConstrTypeSpec_1=ruleConstrTypeSpec
    { 
        $current = $this_ConstrTypeSpec_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleTypeSpec
entryRuleSimpleTypeSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleTypeSpecRule()); }
	 iv_ruleSimpleTypeSpec=ruleSimpleTypeSpec 
	 { $current=$iv_ruleSimpleTypeSpec.current; } 
	 EOF 
;

// Rule SimpleTypeSpec
ruleSimpleTypeSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSimpleTypeSpecAccess().getBaseTypeSpecParserRuleCall_0()); 
    }
    this_BaseTypeSpec_0=ruleBaseTypeSpec
    { 
        $current = $this_BaseTypeSpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSimpleTypeSpecAccess().getTemplateTypeSpecParserRuleCall_1()); 
    }
    this_TemplateTypeSpec_1=ruleTemplateTypeSpec
    { 
        $current = $this_TemplateTypeSpec_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSimpleTypeSpecAccess().getScopedNameParserRuleCall_2()); 
    }
    this_ScopedName_2=ruleScopedName
    { 
        $current = $this_ScopedName_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTemplateTypeSpec
entryRuleTemplateTypeSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateTypeSpecRule()); }
	 iv_ruleTemplateTypeSpec=ruleTemplateTypeSpec 
	 { $current=$iv_ruleTemplateTypeSpec.current; } 
	 EOF 
;

// Rule TemplateTypeSpec
ruleTemplateTypeSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getSequenceTypeParserRuleCall_0()); 
    }
    this_SequenceType_0=ruleSequenceType
    { 
        $current = $this_SequenceType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getStringTypeParserRuleCall_1()); 
    }
    this_StringType_1=ruleStringType
    { 
        $current = $this_StringType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getWideStringTypeParserRuleCall_2()); 
    }
    this_WideStringType_2=ruleWideStringType
    { 
        $current = $this_WideStringType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getFixedPtTypeParserRuleCall_3()); 
    }
    this_FixedPtType_3=ruleFixedPtType
    { 
        $current = $this_FixedPtType_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleConstrTypeSpec
entryRuleConstrTypeSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstrTypeSpecRule()); }
	 iv_ruleConstrTypeSpec=ruleConstrTypeSpec 
	 { $current=$iv_ruleConstrTypeSpec.current; } 
	 EOF 
;

// Rule ConstrTypeSpec
ruleConstrTypeSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstrTypeSpecAccess().getStructTypeParserRuleCall_0()); 
    }
    this_StructType_0=ruleStructType
    { 
        $current = $this_StructType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstrTypeSpecAccess().getUnionTypeParserRuleCall_1()); 
    }
    this_UnionType_1=ruleUnionType
    { 
        $current = $this_UnionType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstrTypeSpecAccess().getEnumTypeParserRuleCall_2()); 
    }
    this_EnumType_2=ruleEnumType
    { 
        $current = $this_EnumType_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUnionType
entryRuleUnionType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnionTypeRule()); }
	 iv_ruleUnionType=ruleUnionType 
	 { $current=$iv_ruleUnionType.current; } 
	 EOF 
;

// Rule UnionType
ruleUnionType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='union' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnionTypeAccess().getUnionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUnionTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnionTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionTypeAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
	    }
		lv_comments_2_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionTypeRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_2_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='switch' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUnionTypeAccess().getSwitchKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUnionTypeAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionTypeAccess().getSwitchSwitchTypeSpecParserRuleCall_5_0()); 
	    }
		lv_switch_5_0=ruleSwitchTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionTypeRule());
	        }
       		set(
       			$current, 
       			"switch",
        		lv_switch_5_0, 
        		"SwitchTypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUnionTypeAccess().getRightParenthesisKeyword_6());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getUnionTypeAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnionTypeAccess().getBodySwitchBodyParserRuleCall_8_0()); 
	    }
		lv_body_8_0=ruleSwitchBody		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnionTypeRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_8_0, 
        		"SwitchBody");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUnionTypeAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleSwitchTypeSpec
entryRuleSwitchTypeSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchTypeSpecRule()); }
	 iv_ruleSwitchTypeSpec=ruleSwitchTypeSpec 
	 { $current=$iv_ruleSwitchTypeSpec.current; } 
	 EOF 
;

// Rule SwitchTypeSpec
ruleSwitchTypeSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getIntegerTypeParserRuleCall_0()); 
    }
    this_IntegerType_0=ruleIntegerType
    { 
        $current = $this_IntegerType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getCharTypeParserRuleCall_1()); 
    }
    this_CharType_1=ruleCharType
    { 
        $current = $this_CharType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getBooleanTypeParserRuleCall_2()); 
    }
    this_BooleanType_2=ruleBooleanType
    { 
        $current = $this_BooleanType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getEnumTypeParserRuleCall_3()); 
    }
    this_EnumType_3=ruleEnumType
    { 
        $current = $this_EnumType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getScopedNameParserRuleCall_4()); 
    }
    this_ScopedName_4=ruleScopedName
    { 
        $current = $this_ScopedName_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSwitchBody
entryRuleSwitchBody returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchBodyRule()); }
	 iv_ruleSwitchBody=ruleSwitchBody 
	 { $current=$iv_ruleSwitchBody.current; } 
	 EOF 
;

// Rule SwitchBody
ruleSwitchBody returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchBodyAccess().getCaseCaseParserRuleCall_0()); 
	    }
		lv_case_0_0=ruleCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchBodyRule());
	        }
       		add(
       			$current, 
       			"case",
        		lv_case_0_0, 
        		"Case");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleCase
entryRuleCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseRule()); }
	 iv_ruleCase=ruleCase 
	 { $current=$iv_ruleCase.current; } 
	 EOF 
;

// Rule Case
ruleCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*((
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getLabelCaseLabelParserRuleCall_1_0_0()); 
	    }
		lv_label_1_0=ruleCaseLabel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"label",
        		lv_label_1_0, 
        		"CaseLabel");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_1_1_0()); 
	    }
		lv_comments_2_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_2_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)+(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
	    }
		lv_comments_3_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_3_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getSpecElementSpecParserRuleCall_3_0()); 
	    }
		lv_spec_4_0=ruleElementSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		set(
       			$current, 
       			"spec",
        		lv_spec_4_0, 
        		"ElementSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getCaseAccess().getSemicolonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_5_0()); 
	    }
		lv_comments_6_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_6_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleCaseLabel
entryRuleCaseLabel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCaseLabelRule()); }
	 iv_ruleCaseLabel=ruleCaseLabel 
	 { $current=$iv_ruleCaseLabel.current; } 
	 EOF 
;

// Rule CaseLabel
ruleCaseLabel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_isCase_0_0=	'case' 
    {
        newLeafNode(lv_isCase_0_0, grammarAccess.getCaseLabelAccess().getIsCaseCaseKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseLabelRule());
	        }
       		setWithLastConsumed($current, "isCase", true, "case");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCaseLabelAccess().getConstExpConstExpParserRuleCall_0_1_0()); 
	    }
		lv_constExp_1_0=ruleConstExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCaseLabelRule());
	        }
       		set(
       			$current, 
       			"constExp",
        		lv_constExp_1_0, 
        		"ConstExp");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCaseLabelAccess().getColonKeyword_0_2());
    }
)
    |((
(
		lv_isDefault_3_0=	'default' 
    {
        newLeafNode(lv_isDefault_3_0, grammarAccess.getCaseLabelAccess().getIsDefaultDefaultKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCaseLabelRule());
	        }
       		setWithLastConsumed($current, "isDefault", true, "default");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCaseLabelAccess().getColonKeyword_1_1());
    }
))
;





// Entry rule entryRuleElementSpec
entryRuleElementSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementSpecRule()); }
	 iv_ruleElementSpec=ruleElementSpec 
	 { $current=$iv_ruleElementSpec.current; } 
	 EOF 
;

// Rule ElementSpec
ruleElementSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getElementSpecAccess().getTypeTypeSpecParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementSpecRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"TypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getElementSpecAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); 
	    }
		lv_declarator_1_0=ruleDeclarator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementSpecRule());
	        }
       		set(
       			$current, 
       			"declarator",
        		lv_declarator_1_0, 
        		"Declarator");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumType
entryRuleEnumType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumTypeRule()); }
	 iv_ruleEnumType=ruleEnumType 
	 { $current=$iv_ruleEnumType.current; } 
	 EOF 
;

// Rule EnumType
ruleEnumType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumTypeAccess().getEnumKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getEnumTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
	    }
		lv_comments_2_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_2_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
	    }
		lv_comments_4_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_4_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_literal_5_0=RULE_ID
		{
			newLeafNode(lv_literal_5_0, grammarAccess.getEnumTypeAccess().getLiteralIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"literal",
        		lv_literal_5_0, 
        		"ID");
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumTypeAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_6_1_0()); 
	    }
		lv_comments_7_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_7_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_literal_8_0=RULE_ID
		{
			newLeafNode(lv_literal_8_0, grammarAccess.getEnumTypeAccess().getLiteralIDTerminalRuleCall_6_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumTypeRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"literal",
        		lv_literal_8_0, 
        		"ID");
	    }

)
))*(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_7_0()); 
	    }
		lv_comments_9_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumTypeRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_9_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleSequenceType
entryRuleSequenceType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceTypeRule()); }
	 iv_ruleSequenceType=ruleSequenceType 
	 { $current=$iv_ruleSequenceType.current; } 
	 EOF 
;

// Rule SequenceType
ruleSequenceType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='sequence' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0());
    }
	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceTypeAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getTypeSimpleTypeSpecParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleSimpleTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"SimpleTypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceTypeAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getSizePositiveIntConstParserRuleCall_3_1_0()); 
	    }
		lv_size_4_0=rulePositiveIntConst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
	        }
       		set(
       			$current, 
       			"size",
        		lv_size_4_0, 
        		"PositiveIntConst");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSequenceTypeAccess().getGreaterThanSignKeyword_4());
    }
)
;





// Entry rule entryRuleNativeType
entryRuleNativeType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNativeTypeRule()); }
	 iv_ruleNativeType=ruleNativeType 
	 { $current=$iv_ruleNativeType.current; } 
	 EOF 
;

// Rule NativeType
ruleNativeType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='native' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNativeTypeAccess().getNativeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getNativeTypeAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNativeTypeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleFixedPtType
entryRuleFixedPtType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedPtTypeRule()); }
	 iv_ruleFixedPtType=ruleFixedPtType 
	 { $current=$iv_ruleFixedPtType.current; } 
	 EOF 
;

// Rule FixedPtType
ruleFixedPtType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='fixed' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFixedPtTypeAccess().getFixedKeyword_0());
    }
	otherlv_1='<' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFixedPtTypeAccess().getLessThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFixedPtTypeAccess().getLowerPositiveIntConstParserRuleCall_2_0()); 
	    }
		lv_lower_2_0=rulePositiveIntConst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedPtTypeRule());
	        }
       		set(
       			$current, 
       			"lower",
        		lv_lower_2_0, 
        		"PositiveIntConst");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFixedPtTypeAccess().getCommaKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFixedPtTypeAccess().getUpperPositiveIntConstParserRuleCall_4_0()); 
	    }
		lv_upper_4_0=rulePositiveIntConst		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedPtTypeRule());
	        }
       		set(
       			$current, 
       			"upper",
        		lv_upper_4_0, 
        		"PositiveIntConst");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='>' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFixedPtTypeAccess().getGreaterThanSignKeyword_5());
    }
)
;





// Entry rule entryRuleConstrForwardDecl
entryRuleConstrForwardDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstrForwardDeclRule()); }
	 iv_ruleConstrForwardDecl=ruleConstrForwardDecl 
	 { $current=$iv_ruleConstrForwardDecl.current; } 
	 EOF 
;

// Rule ConstrForwardDecl
ruleConstrForwardDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstrForwardDeclAccess().getStructForwardDeclParserRuleCall_0()); 
    }
    this_StructForwardDecl_0=ruleStructForwardDecl
    { 
        $current = $this_StructForwardDecl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstrForwardDeclAccess().getUnionForwardDeclParserRuleCall_1()); 
    }
    this_UnionForwardDecl_1=ruleUnionForwardDecl
    { 
        $current = $this_UnionForwardDecl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStructForwardDecl
entryRuleStructForwardDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructForwardDeclRule()); }
	 iv_ruleStructForwardDecl=ruleStructForwardDecl 
	 { $current=$iv_ruleStructForwardDecl.current; } 
	 EOF 
;

// Rule StructForwardDecl
ruleStructForwardDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='struct' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStructForwardDeclAccess().getStructKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getStructForwardDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructForwardDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleUnionForwardDecl
entryRuleUnionForwardDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnionForwardDeclRule()); }
	 iv_ruleUnionForwardDecl=ruleUnionForwardDecl 
	 { $current=$iv_ruleUnionForwardDecl.current; } 
	 EOF 
;

// Rule UnionForwardDecl
ruleUnionForwardDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='union' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUnionForwardDeclAccess().getUnionKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getUnionForwardDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnionForwardDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePositiveIntConst
entryRulePositiveIntConst returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPositiveIntConstRule()); }
	 iv_rulePositiveIntConst=rulePositiveIntConst 
	 { $current=$iv_rulePositiveIntConst.current; } 
	 EOF 
;

// Rule PositiveIntConst
rulePositiveIntConst returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPositiveIntConstAccess().getExpConstExpParserRuleCall_0()); 
	    }
		lv_exp_0_0=ruleConstExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPositiveIntConstRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_0_0, 
        		"ConstExp");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleConstDecl
entryRuleConstDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstDeclRule()); }
	 iv_ruleConstDecl=ruleConstDecl 
	 { $current=$iv_ruleConstDecl.current; } 
	 EOF 
;

// Rule ConstDecl
ruleConstDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstDeclAccess().getConstKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstDeclAccess().getTypeConstTypeParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleConstType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstDeclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ConstType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getConstDeclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getEqualsSignKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstDeclAccess().getValueConstExpParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleConstExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstDeclRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"ConstExp");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConstDeclAccess().getCommentsIDLCommentParserRuleCall_5_0()); 
	    }
		lv_comments_5_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_5_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleConstType
entryRuleConstType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstTypeRule()); }
	 iv_ruleConstType=ruleConstType 
	 { $current=$iv_ruleConstType.current; } 
	 EOF 
;

// Rule ConstType
ruleConstType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getIntegerTypeParserRuleCall_0()); 
    }
    this_IntegerType_0=ruleIntegerType
    { 
        $current = $this_IntegerType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getCharTypeParserRuleCall_1()); 
    }
    this_CharType_1=ruleCharType
    { 
        $current = $this_CharType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getWideCharTypeParserRuleCall_2()); 
    }
    this_WideCharType_2=ruleWideCharType
    { 
        $current = $this_WideCharType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getBooleanTypeParserRuleCall_3()); 
    }
    this_BooleanType_3=ruleBooleanType
    { 
        $current = $this_BooleanType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getFloatingPtTypeParserRuleCall_4()); 
    }
    this_FloatingPtType_4=ruleFloatingPtType
    { 
        $current = $this_FloatingPtType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getStringTypeParserRuleCall_5()); 
    }
    this_StringType_5=ruleStringType
    { 
        $current = $this_StringType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getWideStringTypeParserRuleCall_6()); 
    }
    this_WideStringType_6=ruleWideStringType
    { 
        $current = $this_WideStringType_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getFixedPtConstTypeParserRuleCall_7()); 
    }
    this_FixedPtConstType_7=ruleFixedPtConstType
    { 
        $current = $this_FixedPtConstType_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getScopedNameParserRuleCall_8()); 
    }
    this_ScopedName_8=ruleScopedName
    { 
        $current = $this_ScopedName_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstTypeAccess().getOctetTypeParserRuleCall_9()); 
    }
    this_OctetType_9=ruleOctetType
    { 
        $current = $this_OctetType_9.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFixedPtConstType
entryRuleFixedPtConstType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedPtConstTypeRule()); }
	 iv_ruleFixedPtConstType=ruleFixedPtConstType 
	 { $current=$iv_ruleFixedPtConstType.current; } 
	 EOF 
;

// Rule FixedPtConstType
ruleFixedPtConstType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFixedPtConstTypeAccess().getFixedPtConstTypeAction_0(),
            $current);
    }
)	otherlv_1='fixed' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFixedPtConstTypeAccess().getFixedKeyword_1());
    }
)
;





// Entry rule entryRuleConstExp
entryRuleConstExp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstExpRule()); }
	 iv_ruleConstExp=ruleConstExp 
	 { $current=$iv_ruleConstExp.current; } 
	 EOF 
;

// Rule ConstExp
ruleConstExp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstExpAccess().getOrExprParserRuleCall()); 
    }
    this_OrExpr_0=ruleOrExpr
    { 
        $current = $this_OrExpr_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleOrExpr
entryRuleOrExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOrExprRule()); }
	 iv_ruleOrExpr=ruleOrExpr 
	 { $current=$iv_ruleOrExpr.current; } 
	 EOF 
;

// Rule OrExpr
ruleOrExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOrExprAccess().getLhsXOrExprParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleXOrExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExprRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"XOrExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_op_1_0=	'|' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getOrExprAccess().getOpVerticalLineKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOrExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "|");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getOrExprAccess().getRhsOrExprParserRuleCall_1_1_0()); 
	    }
		lv_rhs_2_0=ruleOrExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOrExprRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_2_0, 
        		"OrExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleXOrExpr
entryRuleXOrExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getXOrExprRule()); }
	 iv_ruleXOrExpr=ruleXOrExpr 
	 { $current=$iv_ruleXOrExpr.current; } 
	 EOF 
;

// Rule XOrExpr
ruleXOrExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExprAccess().getLhsAndExprParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleAndExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExprRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"AndExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_op_1_0=	'^' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getXOrExprAccess().getOpCircumflexAccentKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getXOrExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "^");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getXOrExprAccess().getRhsXOrExprParserRuleCall_1_1_0()); 
	    }
		lv_rhs_2_0=ruleXOrExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getXOrExprRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_2_0, 
        		"XOrExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAndExpr
entryRuleAndExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExprRule()); }
	 iv_ruleAndExpr=ruleAndExpr 
	 { $current=$iv_ruleAndExpr.current; } 
	 EOF 
;

// Rule AndExpr
ruleAndExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAndExprAccess().getLhsShiftExprParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleShiftExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExprRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"ShiftExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_op_1_0=	'&' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getAndExprAccess().getOpAmpersandKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "&");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExprAccess().getRhsAndExprParserRuleCall_1_1_0()); 
	    }
		lv_rhs_2_0=ruleAndExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExprRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_2_0, 
        		"AndExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleShiftExpr
entryRuleShiftExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShiftExprRule()); }
	 iv_ruleShiftExpr=ruleShiftExpr 
	 { $current=$iv_ruleShiftExpr.current; } 
	 EOF 
;

// Rule ShiftExpr
ruleShiftExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getShiftExprAccess().getLhsAddExprParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleAddExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftExprRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"AddExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_op_1_0=	'<<' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getShiftExprAccess().getOpLessThanSignLessThanSignKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShiftExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "<<");
	    }

)
)
    |(
(
		lv_op_2_0=	'>>' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getShiftExprAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getShiftExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, ">>");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getShiftExprAccess().getRhsShiftExprParserRuleCall_1_1_0()); 
	    }
		lv_rhs_3_0=ruleShiftExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftExprRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"ShiftExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAddExpr
entryRuleAddExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddExprRule()); }
	 iv_ruleAddExpr=ruleAddExpr 
	 { $current=$iv_ruleAddExpr.current; } 
	 EOF 
;

// Rule AddExpr
ruleAddExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAddExprAccess().getLhsMultExprParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleMultExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddExprRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"MultExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_op_1_0=	'+' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getAddExprAccess().getOpPlusSignKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "+");
	    }

)
)
    |(
(
		lv_op_2_0=	'-' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getAddExprAccess().getOpHyphenMinusKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "-");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getAddExprAccess().getRhsAddExprParserRuleCall_1_1_0()); 
	    }
		lv_rhs_3_0=ruleAddExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddExprRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"AddExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultExpr
entryRuleMultExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultExprRule()); }
	 iv_ruleMultExpr=ruleMultExpr 
	 { $current=$iv_ruleMultExpr.current; } 
	 EOF 
;

// Rule MultExpr
ruleMultExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getMultExprAccess().getLhsUnaryExprParserRuleCall_0_0()); 
	    }
		lv_lhs_0_0=ruleUnaryExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultExprRule());
	        }
       		set(
       			$current, 
       			"lhs",
        		lv_lhs_0_0, 
        		"UnaryExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		lv_op_1_0=	'*' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getMultExprAccess().getOpAsteriskKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "*");
	    }

)
)
    |(
(
		lv_op_2_0=	'/' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getMultExprAccess().getOpSolidusKeyword_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "/");
	    }

)
)
    |(
(
		lv_op_3_0=	'%' 
    {
        newLeafNode(lv_op_3_0, grammarAccess.getMultExprAccess().getOpPercentSignKeyword_1_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_3_0, "\%");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getMultExprAccess().getRhsMultExprParserRuleCall_1_1_0()); 
	    }
		lv_rhs_4_0=ruleMultExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultExprRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_4_0, 
        		"MultExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleUnaryExpr
entryRuleUnaryExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExprRule()); }
	 iv_ruleUnaryExpr=ruleUnaryExpr 
	 { $current=$iv_ruleUnaryExpr.current; } 
	 EOF 
;

// Rule UnaryExpr
ruleUnaryExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_op_0_0=	'-' 
    {
        newLeafNode(lv_op_0_0, grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_0_0, "-");
	    }

)
)
    |(
(
		lv_op_1_0=	'+' 
    {
        newLeafNode(lv_op_1_0, grammarAccess.getUnaryExprAccess().getOpPlusSignKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_1_0, "+");
	    }

)
)
    |(
(
		lv_op_2_0=	'~' 
    {
        newLeafNode(lv_op_2_0, grammarAccess.getUnaryExprAccess().getOpTildeKeyword_0_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnaryExprRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_0, "~");
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getUnaryExprAccess().getExprPrimaryExprParserRuleCall_1_0()); 
	    }
		lv_expr_3_0=rulePrimaryExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnaryExprRule());
	        }
       		set(
       			$current, 
       			"expr",
        		lv_expr_3_0, 
        		"PrimaryExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePrimaryExpr
entryRulePrimaryExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExprRule()); }
	 iv_rulePrimaryExpr=rulePrimaryExpr 
	 { $current=$iv_rulePrimaryExpr.current; } 
	 EOF 
;

// Rule PrimaryExpr
rulePrimaryExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryExprAccess().getScopedNameParserRuleCall_0()); 
    }
    this_ScopedName_0=ruleScopedName
    { 
        $current = $this_ScopedName_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryExprAccess().getLiteralParserRuleCall_1()); 
    }
    this_Literal_1=ruleLiteral
    { 
        $current = $this_Literal_1.current; 
        afterParserOrEnumRuleCall();
    }

    |(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_2_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryExprAccess().getConstExpParserRuleCall_2_1()); 
    }
    this_ConstExp_3=ruleConstExp
    { 
        $current = $this_ConstExp_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_2_2());
    }
))
;





// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	 iv_ruleLiteral=ruleLiteral 
	 { $current=$iv_ruleLiteral.current; } 
	 EOF 
;

// Rule Literal
ruleLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_value_0_0=RULE_HEX_LITERAL
		{
			newLeafNode(lv_value_0_0, grammarAccess.getLiteralAccess().getValueHEX_LITERALTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"HEX_LITERAL");
	    }

)
)
    |(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
)
    |(
(
		lv_value_2_0=RULE_CHARACTER_LITERAL
		{
			newLeafNode(lv_value_2_0, grammarAccess.getLiteralAccess().getValueCHARACTER_LITERALTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"CHARACTER_LITERAL");
	    }

)
)
    |(
(
		lv_value_3_0=RULE_FLOATING_PT_LITERAL
		{
			newLeafNode(lv_value_3_0, grammarAccess.getLiteralAccess().getValueFLOATING_PT_LITERALTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"FLOATING_PT_LITERAL");
	    }

)
)
    |(
(
		lv_value_4_0=RULE_INTEGER_LITERAL
		{
			newLeafNode(lv_value_4_0, grammarAccess.getLiteralAccess().getValueINTEGER_LITERALTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"INTEGER_LITERAL");
	    }

)
)
    |(
(
		lv_value_5_0=RULE_BOOLEAN_LITERAL
		{
			newLeafNode(lv_value_5_0, grammarAccess.getLiteralAccess().getValueBOOLEAN_LITERALTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"BOOLEAN_LITERAL");
	    }

)
))
;





// Entry rule entryRuleComponentDecl
entryRuleComponentDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentDeclRule()); }
	 iv_ruleComponentDecl=ruleComponentDecl 
	 { $current=$iv_ruleComponentDecl.current; } 
	 EOF 
;

// Rule ComponentDecl
ruleComponentDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getComponentDeclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='component' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentDeclAccess().getComponentKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getComponentDeclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getComponentDeclAccess().getColonKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentDeclAccess().getBaseScopedNameParserRuleCall_3_1_0()); 
	    }
		lv_base_4_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentDeclRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_4_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='supports' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getComponentDeclAccess().getSupportsKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentDeclAccess().getSupportsScopedNameParserRuleCall_4_1_0()); 
	    }
		lv_supports_6_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentDeclRule());
	        }
       		add(
       			$current, 
       			"supports",
        		lv_supports_6_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getComponentDeclAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentDeclAccess().getSupportsScopedNameParserRuleCall_4_2_1_0()); 
	    }
		lv_supports_8_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentDeclRule());
	        }
       		add(
       			$current, 
       			"supports",
        		lv_supports_8_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getComponentDeclAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComponentDeclAccess().getExportComponentExportParserRuleCall_6_0()); 
	    }
		lv_export_10_0=ruleComponentExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComponentDeclRule());
	        }
       		add(
       			$current, 
       			"export",
        		lv_export_10_0, 
        		"ComponentExport");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getComponentDeclAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleComponentExport
entryRuleComponentExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentExportRule()); }
	 iv_ruleComponentExport=ruleComponentExport 
	 { $current=$iv_ruleComponentExport.current; } 
	 EOF 
;

// Rule ComponentExport
ruleComponentExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getProvidesDclParserRuleCall_0_0()); 
    }
    this_ProvidesDcl_0=ruleProvidesDcl
    { 
        $current = $this_ProvidesDcl_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentExportAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getUsesDclParserRuleCall_1_0()); 
    }
    this_UsesDcl_2=ruleUsesDcl
    { 
        $current = $this_UsesDcl_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getComponentExportAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getEmitDclParserRuleCall_2_0()); 
    }
    this_EmitDcl_4=ruleEmitDcl
    { 
        $current = $this_EmitDcl_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getComponentExportAccess().getSemicolonKeyword_2_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getPublishesDclParserRuleCall_3_0()); 
    }
    this_PublishesDcl_6=rulePublishesDcl
    { 
        $current = $this_PublishesDcl_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getComponentExportAccess().getSemicolonKeyword_3_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getConsumesDclParserRuleCall_4_0()); 
    }
    this_ConsumesDcl_8=ruleConsumesDcl
    { 
        $current = $this_ConsumesDcl_8.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getComponentExportAccess().getSemicolonKeyword_4_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getAttrDeclParserRuleCall_5_0()); 
    }
    this_AttrDecl_10=ruleAttrDecl
    { 
        $current = $this_AttrDecl_10.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getComponentExportAccess().getSemicolonKeyword_5_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getPortDeclParserRuleCall_6_0()); 
    }
    this_PortDecl_12=rulePortDecl
    { 
        $current = $this_PortDecl_12.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getComponentExportAccess().getSemicolonKeyword_6_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getPreprocParserRuleCall_7()); 
    }
    this_Preproc_14=rulePreproc
    { 
        $current = $this_Preproc_14.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getComponentExportAccess().getIDLCommentParserRuleCall_8()); 
    }
    this_IDLComment_15=ruleIDLComment
    { 
        $current = $this_IDLComment_15.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleProvidesDcl
entryRuleProvidesDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProvidesDclRule()); }
	 iv_ruleProvidesDcl=ruleProvidesDcl 
	 { $current=$iv_ruleProvidesDcl.current; } 
	 EOF 
;

// Rule ProvidesDcl
ruleProvidesDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='provides' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProvidesDclAccess().getProvidesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProvidesDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProvidesDclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getProvidesDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProvidesDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getProvidesDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
	    }
		lv_comments_3_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProvidesDclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_3_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleUsesDcl
entryRuleUsesDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUsesDclRule()); }
	 iv_ruleUsesDcl=ruleUsesDcl 
	 { $current=$iv_ruleUsesDcl.current; } 
	 EOF 
;

// Rule UsesDcl
ruleUsesDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='uses' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUsesDclAccess().getUsesKeyword_0());
    }
(
(
		lv_isMultiple_1_0=	'multiple' 
    {
        newLeafNode(lv_isMultiple_1_0, grammarAccess.getUsesDclAccess().getIsMultipleMultipleKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUsesDclRule());
	        }
       		setWithLastConsumed($current, "isMultiple", true, "multiple");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getUsesDclAccess().getTypeScopedNameParserRuleCall_2_0()); 
	    }
		lv_type_2_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUsesDclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getUsesDclAccess().getNameIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getUsesDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getUsesDclAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
	    }
		lv_comments_4_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUsesDclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_4_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePublishesDcl
entryRulePublishesDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPublishesDclRule()); }
	 iv_rulePublishesDcl=rulePublishesDcl 
	 { $current=$iv_rulePublishesDcl.current; } 
	 EOF 
;

// Rule PublishesDcl
rulePublishesDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='publishes' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPublishesDclAccess().getPublishesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPublishesDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPublishesDclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPublishesDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPublishesDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPublishesDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
	    }
		lv_comments_3_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPublishesDclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_3_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleEmitDcl
entryRuleEmitDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmitDclRule()); }
	 iv_ruleEmitDcl=ruleEmitDcl 
	 { $current=$iv_ruleEmitDcl.current; } 
	 EOF 
;

// Rule EmitDcl
ruleEmitDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='emits' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEmitDclAccess().getEmitsKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEmitDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmitDclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getEmitDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEmitDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEmitDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
	    }
		lv_comments_3_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEmitDclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_3_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleConsumesDcl
entryRuleConsumesDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConsumesDclRule()); }
	 iv_ruleConsumesDcl=ruleConsumesDcl 
	 { $current=$iv_ruleConsumesDcl.current; } 
	 EOF 
;

// Rule ConsumesDcl
ruleConsumesDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='consumes' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConsumesDclAccess().getConsumesKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConsumesDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConsumesDclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getConsumesDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConsumesDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConsumesDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
	    }
		lv_comments_3_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConsumesDclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_3_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleComponentForwardDecl
entryRuleComponentForwardDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentForwardDeclRule()); }
	 iv_ruleComponentForwardDecl=ruleComponentForwardDecl 
	 { $current=$iv_ruleComponentForwardDecl.current; } 
	 EOF 
;

// Rule ComponentForwardDecl
ruleComponentForwardDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='component' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComponentForwardDeclAccess().getComponentKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getComponentForwardDeclAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentForwardDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleHomeDecl
entryRuleHomeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHomeDeclRule()); }
	 iv_ruleHomeDecl=ruleHomeDecl 
	 { $current=$iv_ruleHomeDecl.current; } 
	 EOF 
;

// Rule HomeDecl
ruleHomeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='home' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getHomeDeclAccess().getHomeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHomeDeclAccess().getCommentsIDLCommentParserRuleCall_1_0()); 
	    }
		lv_comments_1_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHomeDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_1_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getHomeDeclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getHomeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getHomeDeclAccess().getColonKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHomeDeclAccess().getBaseScopedNameParserRuleCall_3_1_0()); 
	    }
		lv_base_4_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHomeDeclRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_4_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_5='supports' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getHomeDeclAccess().getSupportsKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHomeDeclAccess().getSupportsScopedNameParserRuleCall_4_1_0()); 
	    }
		lv_supports_6_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHomeDeclRule());
	        }
       		add(
       			$current, 
       			"supports",
        		lv_supports_6_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getHomeDeclAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHomeDeclAccess().getSupportsScopedNameParserRuleCall_4_2_1_0()); 
	    }
		lv_supports_8_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHomeDeclRule());
	        }
       		add(
       			$current, 
       			"supports",
        		lv_supports_8_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_9='manages' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getHomeDeclAccess().getManagesKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHomeDeclAccess().getManagesScopedNameParserRuleCall_6_0()); 
	    }
		lv_manages_10_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHomeDeclRule());
	        }
       		set(
       			$current, 
       			"manages",
        		lv_manages_10_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getHomeDeclAccess().getPrimary_keyPrimaryKeySpecParserRuleCall_7_0()); 
	    }
		lv_primary_key_11_0=rulePrimaryKeySpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHomeDeclRule());
	        }
       		set(
       			$current, 
       			"primary_key",
        		lv_primary_key_11_0, 
        		"PrimaryKeySpec");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getHomeDeclAccess().getLeftCurlyBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getHomeDeclAccess().getExportHomeExportParserRuleCall_9_0()); 
	    }
		lv_export_13_0=ruleHomeExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHomeDeclRule());
	        }
       		add(
       			$current, 
       			"export",
        		lv_export_13_0, 
        		"HomeExport");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getHomeDeclAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRulePrimaryKeySpec
entryRulePrimaryKeySpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryKeySpecRule()); }
	 iv_rulePrimaryKeySpec=rulePrimaryKeySpec 
	 { $current=$iv_rulePrimaryKeySpec.current; } 
	 EOF 
;

// Rule PrimaryKeySpec
rulePrimaryKeySpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='primarykey' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPrimaryKeySpecAccess().getPrimarykeyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryKeySpecAccess().getKeyScopedNameParserRuleCall_1_0()); 
	    }
		lv_key_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryKeySpecRule());
	        }
       		set(
       			$current, 
       			"key",
        		lv_key_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleHomeExport
entryRuleHomeExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHomeExportRule()); }
	 iv_ruleHomeExport=ruleHomeExport 
	 { $current=$iv_ruleHomeExport.current; } 
	 EOF 
;

// Rule HomeExport
ruleHomeExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHomeExportAccess().getExportParserRuleCall_0()); 
    }
    this_Export_0=ruleExport
    { 
        $current = $this_Export_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHomeExportAccess().getFactoryDclParserRuleCall_1_0()); 
    }
    this_FactoryDcl_1=ruleFactoryDcl
    { 
        $current = $this_FactoryDcl_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getHomeExportAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHomeExportAccess().getFinderDclParserRuleCall_2_0()); 
    }
    this_FinderDcl_3=ruleFinderDcl
    { 
        $current = $this_FinderDcl_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getHomeExportAccess().getSemicolonKeyword_2_1());
    }
))
;





// Entry rule entryRuleFactoryDcl
entryRuleFactoryDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFactoryDclRule()); }
	 iv_ruleFactoryDcl=ruleFactoryDcl 
	 { $current=$iv_ruleFactoryDcl.current; } 
	 EOF 
;

// Rule FactoryDcl
ruleFactoryDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFactoryDclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFactoryDclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='factory' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFactoryDclAccess().getFactoryKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFactoryDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFactoryDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFactoryDclAccess().getParamsParameterDeclsParserRuleCall_3_0()); 
	    }
		lv_params_3_0=ruleParameterDecls		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFactoryDclRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"ParameterDecls");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='raises' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFactoryDclAccess().getRaisesKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFactoryDclAccess().getRaisesExceptionListParserRuleCall_4_1_0()); 
	    }
		lv_raises_5_0=ruleExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFactoryDclRule());
	        }
       		set(
       			$current, 
       			"raises",
        		lv_raises_5_0, 
        		"ExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleFinderDcl
entryRuleFinderDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFinderDclRule()); }
	 iv_ruleFinderDcl=ruleFinderDcl 
	 { $current=$iv_ruleFinderDcl.current; } 
	 EOF 
;

// Rule FinderDcl
ruleFinderDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFinderDclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
	    }
		lv_comments_0_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFinderDclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_0_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_1='finder' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFinderDclAccess().getFinderKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getFinderDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFinderDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFinderDclAccess().getParamsParameterDeclsParserRuleCall_3_0()); 
	    }
		lv_params_3_0=ruleParameterDecls		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFinderDclRule());
	        }
       		set(
       			$current, 
       			"params",
        		lv_params_3_0, 
        		"ParameterDecls");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='raises' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFinderDclAccess().getRaisesKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFinderDclAccess().getRaisesExceptionListParserRuleCall_4_1_0()); 
	    }
		lv_raises_5_0=ruleExceptionList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFinderDclRule());
	        }
       		set(
       			$current, 
       			"raises",
        		lv_raises_5_0, 
        		"ExceptionList");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	 iv_ruleEvent=ruleEvent 
	 { $current=$iv_ruleEvent.current; } 
	 EOF 
;

// Rule Event
ruleEvent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEventAccess().getEventDclParserRuleCall_0()); 
    }
    this_EventDcl_0=ruleEventDcl
    { 
        $current = $this_EventDcl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEventAccess().getEventForwardDclParserRuleCall_1()); 
    }
    this_EventForwardDcl_1=ruleEventForwardDcl
    { 
        $current = $this_EventForwardDcl_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleEventDcl
entryRuleEventDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventDclRule()); }
	 iv_ruleEventDcl=ruleEventDcl 
	 { $current=$iv_ruleEventDcl.current; } 
	 EOF 
;

// Rule EventDcl
ruleEventDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_isCustom_0_0=	'custom' 
    {
        newLeafNode(lv_isCustom_0_0, grammarAccess.getEventDclAccess().getIsCustomCustomKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventDclRule());
	        }
       		setWithLastConsumed($current, "isCustom", true, "custom");
	    }

)
)
    |(
(
		lv_isAbstract_1_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_1_0, grammarAccess.getEventDclAccess().getIsAbstractAbstractKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventDclRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
))?	otherlv_2='eventtype' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEventDclAccess().getEventtypeKeyword_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getEventDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEventDclAccess().getColonKeyword_3_0());
    }
(
(
		lv_isTruncatable_5_0=	'truncatable' 
    {
        newLeafNode(lv_isTruncatable_5_0, grammarAccess.getEventDclAccess().getIsTruncatableTruncatableKeyword_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventDclRule());
	        }
       		setWithLastConsumed($current, "isTruncatable", true, "truncatable");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEventDclAccess().getBaseScopedNameParserRuleCall_3_2_0()); 
	    }
		lv_base_6_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDclRule());
	        }
       		add(
       			$current, 
       			"base",
        		lv_base_6_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getEventDclAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventDclAccess().getBaseScopedNameParserRuleCall_3_3_1_0()); 
	    }
		lv_base_8_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDclRule());
	        }
       		add(
       			$current, 
       			"base",
        		lv_base_8_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(	otherlv_9='supports' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getEventDclAccess().getSupportsKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventDclAccess().getSupportsScopedNameParserRuleCall_4_1_0()); 
	    }
		lv_supports_10_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDclRule());
	        }
       		add(
       			$current, 
       			"supports",
        		lv_supports_10_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_11=',' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getEventDclAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventDclAccess().getSupportsScopedNameParserRuleCall_4_2_1_0()); 
	    }
		lv_supports_12_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDclRule());
	        }
       		add(
       			$current, 
       			"supports",
        		lv_supports_12_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_13='{' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getEventDclAccess().getLeftCurlyBracketKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEventDclAccess().getExportExportParserRuleCall_6_0_0()); 
	    }
		lv_export_14_0=ruleExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDclRule());
	        }
       		add(
       			$current, 
       			"export",
        		lv_export_14_0, 
        		"Export");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getEventDclAccess().getMemberStateMemberParserRuleCall_6_1_0()); 
	    }
		lv_member_15_0=ruleStateMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventDclRule());
	        }
       		add(
       			$current, 
       			"member",
        		lv_member_15_0, 
        		"StateMember");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getEventDclAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleStateMember
entryRuleStateMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMemberRule()); }
	 iv_ruleStateMember=ruleStateMember 
	 { $current=$iv_ruleStateMember.current; } 
	 EOF 
;

// Rule StateMember
ruleStateMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_isPublic_0_0=	'public' 
    {
        newLeafNode(lv_isPublic_0_0, grammarAccess.getStateMemberAccess().getIsPublicPublicKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMemberRule());
	        }
       		setWithLastConsumed($current, "isPublic", true, "public");
	    }

)
)
    |	otherlv_1='private' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateMemberAccess().getPrivateKeyword_0_1());
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMemberAccess().getTypeParamTypeSpecParserRuleCall_1_0()); 
	    }
		lv_type_2_0=ruleParamTypeSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMemberRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ParamTypeSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_names_3_0=RULE_ID
		{
			newLeafNode(lv_names_3_0, grammarAccess.getStateMemberAccess().getNamesIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMemberRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"ID");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateMemberAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleEventForwardDcl
entryRuleEventForwardDcl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventForwardDclRule()); }
	 iv_ruleEventForwardDcl=ruleEventForwardDcl 
	 { $current=$iv_ruleEventForwardDcl.current; } 
	 EOF 
;

// Rule EventForwardDcl
ruleEventForwardDcl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getEventForwardDclAccess().getIsAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventForwardDclRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?	otherlv_1='eventtype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventForwardDclAccess().getEventtypeKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getEventForwardDclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventForwardDclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRulePortTypeDecl
entryRulePortTypeDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortTypeDeclRule()); }
	 iv_rulePortTypeDecl=rulePortTypeDecl 
	 { $current=$iv_rulePortTypeDecl.current; } 
	 EOF 
;

// Rule PortTypeDecl
rulePortTypeDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='porttype' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPortTypeDeclAccess().getPorttypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortTypeDeclAccess().getCommentsIDLCommentParserRuleCall_1_0()); 
	    }
		lv_comments_1_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortTypeDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_1_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPortTypeDeclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortTypeDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPortTypeDeclAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPortTypeDeclAccess().getExportsPortExportParserRuleCall_4_0()); 
	    }
		lv_exports_4_0=rulePortExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortTypeDeclRule());
	        }
       		add(
       			$current, 
       			"exports",
        		lv_exports_4_0, 
        		"PortExport");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPortTypeDeclAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRulePortExport
entryRulePortExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortExportRule()); }
	 iv_rulePortExport=rulePortExport 
	 { $current=$iv_rulePortExport.current; } 
	 EOF 
;

// Rule PortExport
rulePortExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPortExportAccess().getProvidesDclParserRuleCall_0_0()); 
    }
    this_ProvidesDcl_0=ruleProvidesDcl
    { 
        $current = $this_ProvidesDcl_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPortExportAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPortExportAccess().getUsesDclParserRuleCall_1_0()); 
    }
    this_UsesDcl_2=ruleUsesDcl
    { 
        $current = $this_UsesDcl_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPortExportAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPortExportAccess().getAttrDeclParserRuleCall_2_0()); 
    }
    this_AttrDecl_4=ruleAttrDecl
    { 
        $current = $this_AttrDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPortExportAccess().getSemicolonKeyword_2_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPortExportAccess().getIDLCommentParserRuleCall_3()); 
    }
    this_IDLComment_6=ruleIDLComment
    { 
        $current = $this_IDLComment_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePortDecl
entryRulePortDecl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPortDeclRule()); }
	 iv_rulePortDecl=rulePortDecl 
	 { $current=$iv_rulePortDecl.current; } 
	 EOF 
;

// Rule PortDecl
rulePortDecl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='port' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPortDeclAccess().getPortKeyword_0_0());
    }

    |(
(
		lv_isMirror_1_0=	'mirrorport' 
    {
        newLeafNode(lv_isMirror_1_0, grammarAccess.getPortDeclAccess().getIsMirrorMirrorportKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortDeclRule());
	        }
       		setWithLastConsumed($current, "isMirror", true, "mirrorport");
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getPortDeclAccess().getTypeScopedNameParserRuleCall_1_0()); 
	    }
		lv_type_2_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortDeclRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_2_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getPortDeclAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPortDeclRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPortDeclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
	    }
		lv_comments_4_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPortDeclRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_4_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleConnector
entryRuleConnector returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectorRule()); }
	 iv_ruleConnector=ruleConnector 
	 { $current=$iv_ruleConnector.current; } 
	 EOF 
;

// Rule Connector
ruleConnector returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConnectorAccess().getHeaderConnectorHeaderParserRuleCall_0_0()); 
	    }
		lv_header_0_0=ruleConnectorHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectorRule());
	        }
       		set(
       			$current, 
       			"header",
        		lv_header_0_0, 
        		"ConnectorHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConnectorAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectorAccess().getExportsConnectorExportParserRuleCall_2_0()); 
	    }
		lv_exports_2_0=ruleConnectorExport		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectorRule());
	        }
       		add(
       			$current, 
       			"exports",
        		lv_exports_2_0, 
        		"ConnectorExport");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConnectorAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleConnectorHeader
entryRuleConnectorHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectorHeaderRule()); }
	 iv_ruleConnectorHeader=ruleConnectorHeader 
	 { $current=$iv_ruleConnectorHeader.current; } 
	 EOF 
;

// Rule ConnectorHeader
ruleConnectorHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='connector' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConnectorHeaderAccess().getConnectorKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConnectorHeaderAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConnectorHeaderRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConnectorHeaderAccess().getColonKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConnectorHeaderAccess().getBaseScopedNameParserRuleCall_2_1_0()); 
	    }
		lv_base_3_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConnectorHeaderRule());
	        }
       		set(
       			$current, 
       			"base",
        		lv_base_3_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleConnectorExport
entryRuleConnectorExport returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConnectorExportRule()); }
	 iv_ruleConnectorExport=ruleConnectorExport 
	 { $current=$iv_ruleConnectorExport.current; } 
	 EOF 
;

// Rule ConnectorExport
ruleConnectorExport returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConnectorExportAccess().getProvidesDclParserRuleCall_0_0()); 
    }
    this_ProvidesDcl_0=ruleProvidesDcl
    { 
        $current = $this_ProvidesDcl_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConnectorExportAccess().getUsesDclParserRuleCall_1_0()); 
    }
    this_UsesDcl_2=ruleUsesDcl
    { 
        $current = $this_UsesDcl_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConnectorExportAccess().getPortDeclParserRuleCall_2_0()); 
    }
    this_PortDecl_4=rulePortDecl
    { 
        $current = $this_PortDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_2_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConnectorExportAccess().getAttrDeclParserRuleCall_3_0()); 
    }
    this_AttrDecl_6=ruleAttrDecl
    { 
        $current = $this_AttrDecl_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_3_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConnectorExportAccess().getIDLCommentParserRuleCall_4()); 
    }
    this_IDLComment_8=ruleIDLComment
    { 
        $current = $this_IDLComment_8.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTemplateModule
entryRuleTemplateModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateModuleRule()); }
	 iv_ruleTemplateModule=ruleTemplateModule 
	 { $current=$iv_ruleTemplateModule.current; } 
	 EOF 
;

// Rule TemplateModule
ruleTemplateModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateModuleAccess().getModuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getTemplateModuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateModuleAccess().getLessThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleAccess().getParametersFormalParameterParserRuleCall_3_0()); 
	    }
		lv_parameters_3_0=ruleFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"FormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateModuleAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleAccess().getParametersFormalParameterParserRuleCall_4_1_0()); 
	    }
		lv_parameters_5_0=ruleFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleRule());
	        }
       		add(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"FormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTemplateModuleAccess().getGreaterThanSignKeyword_5());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTemplateModuleAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleAccess().getDefinitionsTemplateDefinitionParserRuleCall_7_0()); 
	    }
		lv_definitions_8_0=ruleTemplateDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_8_0, 
        		"TemplateDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTemplateModuleAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleFormalParameter
entryRuleFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalParameterRule()); }
	 iv_ruleFormalParameter=ruleFormalParameter 
	 { $current=$iv_ruleFormalParameter.current; } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterAccess().getTypeFormalParameterTypeParserRuleCall_0_0()); 
	    }
		lv_type_0_0=ruleFormalParameterType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_0_0, 
        		"FormalParameterType");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFormalParameterAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormalParameterRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleFormalParameterType
entryRuleFormalParameterType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalParameterTypeRule()); }
	 iv_ruleFormalParameterType=ruleFormalParameterType 
	 { $current=$iv_ruleFormalParameterType.current; } 
	 EOF 
;

// Rule FormalParameterType
ruleFormalParameterType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getTypenameParamTypeParserRuleCall_0()); 
    }
    this_TypenameParamType_0=ruleTypenameParamType
    { 
        $current = $this_TypenameParamType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getInterfaceParamTypeParserRuleCall_1()); 
    }
    this_InterfaceParamType_1=ruleInterfaceParamType
    { 
        $current = $this_InterfaceParamType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getValuetypeParamTypeParserRuleCall_2()); 
    }
    this_ValuetypeParamType_2=ruleValuetypeParamType
    { 
        $current = $this_ValuetypeParamType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getEventParamTypeParserRuleCall_3()); 
    }
    this_EventParamType_3=ruleEventParamType
    { 
        $current = $this_EventParamType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getStructParamTypeParserRuleCall_4()); 
    }
    this_StructParamType_4=ruleStructParamType
    { 
        $current = $this_StructParamType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getUnionParamTypeParserRuleCall_5()); 
    }
    this_UnionParamType_5=ruleUnionParamType
    { 
        $current = $this_UnionParamType_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getExceptionParamTypeParserRuleCall_6()); 
    }
    this_ExceptionParamType_6=ruleExceptionParamType
    { 
        $current = $this_ExceptionParamType_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getEnumParamTypeParserRuleCall_7()); 
    }
    this_EnumParamType_7=ruleEnumParamType
    { 
        $current = $this_EnumParamType_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getSequenceParamTypeParserRuleCall_8()); 
    }
    this_SequenceParamType_8=ruleSequenceParamType
    { 
        $current = $this_SequenceParamType_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getConstParamTypeParserRuleCall_9()); 
    }
    this_ConstParamType_9=ruleConstParamType
    { 
        $current = $this_ConstParamType_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getSequenceTypeParserRuleCall_10()); 
    }
    this_SequenceType_10=ruleSequenceType
    { 
        $current = $this_SequenceType_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTypenameParamType
entryRuleTypenameParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypenameParamTypeRule()); }
	 iv_ruleTypenameParamType=ruleTypenameParamType 
	 { $current=$iv_ruleTypenameParamType.current; } 
	 EOF 
;

// Rule TypenameParamType
ruleTypenameParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypenameParamTypeAccess().getTypenameParamTypeAction_0(),
            $current);
    }
)	otherlv_1='typename' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypenameParamTypeAccess().getTypenameKeyword_1());
    }
)
;





// Entry rule entryRuleInterfaceParamType
entryRuleInterfaceParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInterfaceParamTypeRule()); }
	 iv_ruleInterfaceParamType=ruleInterfaceParamType 
	 { $current=$iv_ruleInterfaceParamType.current; } 
	 EOF 
;

// Rule InterfaceParamType
ruleInterfaceParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInterfaceParamTypeAccess().getInterfaceParamTypeAction_0(),
            $current);
    }
)	otherlv_1='interface' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInterfaceParamTypeAccess().getInterfaceKeyword_1());
    }
)
;





// Entry rule entryRuleValuetypeParamType
entryRuleValuetypeParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValuetypeParamTypeRule()); }
	 iv_ruleValuetypeParamType=ruleValuetypeParamType 
	 { $current=$iv_ruleValuetypeParamType.current; } 
	 EOF 
;

// Rule ValuetypeParamType
ruleValuetypeParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getValuetypeParamTypeAccess().getValuetypeParamTypeAction_0(),
            $current);
    }
)	otherlv_1='valuetype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValuetypeParamTypeAccess().getValuetypeKeyword_1());
    }
)
;





// Entry rule entryRuleEventParamType
entryRuleEventParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventParamTypeRule()); }
	 iv_ruleEventParamType=ruleEventParamType 
	 { $current=$iv_ruleEventParamType.current; } 
	 EOF 
;

// Rule EventParamType
ruleEventParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEventParamTypeAccess().getEventParamTypeAction_0(),
            $current);
    }
)	otherlv_1='eventtype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEventParamTypeAccess().getEventtypeKeyword_1());
    }
)
;





// Entry rule entryRuleStructParamType
entryRuleStructParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructParamTypeRule()); }
	 iv_ruleStructParamType=ruleStructParamType 
	 { $current=$iv_ruleStructParamType.current; } 
	 EOF 
;

// Rule StructParamType
ruleStructParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getStructParamTypeAccess().getStructParamTypeAction_0(),
            $current);
    }
)	otherlv_1='struct' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStructParamTypeAccess().getStructKeyword_1());
    }
)
;





// Entry rule entryRuleUnionParamType
entryRuleUnionParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnionParamTypeRule()); }
	 iv_ruleUnionParamType=ruleUnionParamType 
	 { $current=$iv_ruleUnionParamType.current; } 
	 EOF 
;

// Rule UnionParamType
ruleUnionParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnionParamTypeAccess().getUnionParamTypeAction_0(),
            $current);
    }
)	otherlv_1='union' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnionParamTypeAccess().getUnionKeyword_1());
    }
)
;





// Entry rule entryRuleExceptionParamType
entryRuleExceptionParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExceptionParamTypeRule()); }
	 iv_ruleExceptionParamType=ruleExceptionParamType 
	 { $current=$iv_ruleExceptionParamType.current; } 
	 EOF 
;

// Rule ExceptionParamType
ruleExceptionParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getExceptionParamTypeAccess().getExceptionParamTypeAction_0(),
            $current);
    }
)	otherlv_1='exception' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExceptionParamTypeAccess().getExceptionKeyword_1());
    }
)
;





// Entry rule entryRuleEnumParamType
entryRuleEnumParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumParamTypeRule()); }
	 iv_ruleEnumParamType=ruleEnumParamType 
	 { $current=$iv_ruleEnumParamType.current; } 
	 EOF 
;

// Rule EnumParamType
ruleEnumParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEnumParamTypeAccess().getEnumParamTypeAction_0(),
            $current);
    }
)	otherlv_1='enum' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumParamTypeAccess().getEnumKeyword_1());
    }
)
;





// Entry rule entryRuleSequenceParamType
entryRuleSequenceParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceParamTypeRule()); }
	 iv_ruleSequenceParamType=ruleSequenceParamType 
	 { $current=$iv_ruleSequenceParamType.current; } 
	 EOF 
;

// Rule SequenceParamType
ruleSequenceParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSequenceParamTypeAccess().getSequenceParamTypeAction_0(),
            $current);
    }
)	otherlv_1='sequence' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceParamTypeAccess().getSequenceKeyword_1());
    }
)
;





// Entry rule entryRuleConstParamType
entryRuleConstParamType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstParamTypeRule()); }
	 iv_ruleConstParamType=ruleConstParamType 
	 { $current=$iv_ruleConstParamType.current; } 
	 EOF 
;

// Rule ConstParamType
ruleConstParamType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='const' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getConstParamTypeAccess().getConstKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConstParamTypeAccess().getConstTypeParserRuleCall_1()); 
    }
    this_ConstType_1=ruleConstType
    { 
        $current = $this_ConstType_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTemplateDefinition
entryRuleTemplateDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateDefinitionRule()); }
	 iv_ruleTemplateDefinition=ruleTemplateDefinition 
	 { $current=$iv_ruleTemplateDefinition.current; } 
	 EOF 
;

// Rule TemplateDefinition
ruleTemplateDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getTypeDeclParserRuleCall_0_0()); 
    }
    this_TypeDecl_0=ruleTypeDecl
    { 
        $current = $this_TypeDecl_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getConstDeclParserRuleCall_1_0()); 
    }
    this_ConstDecl_2=ruleConstDecl
    { 
        $current = $this_ConstDecl_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getExceptDeclParserRuleCall_2_0()); 
    }
    this_ExceptDecl_4=ruleExceptDecl
    { 
        $current = $this_ExceptDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_2_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getInterface_declParserRuleCall_3_0()); 
    }
    this_Interface_decl_6=ruleInterface_decl
    { 
        $current = $this_Interface_decl_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_3_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getFixedModuleParserRuleCall_4_0()); 
    }
    this_FixedModule_8=ruleFixedModule
    { 
        $current = $this_FixedModule_8.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_4_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getStructTypeParserRuleCall_5_0()); 
    }
    this_StructType_10=ruleStructType
    { 
        $current = $this_StructType_10.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_5_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getNativeTypeParserRuleCall_6_0()); 
    }
    this_NativeType_12=ruleNativeType
    { 
        $current = $this_NativeType_12.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_6_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getEventParserRuleCall_7_0()); 
    }
    this_Event_14=ruleEvent
    { 
        $current = $this_Event_14.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_7_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getComponentDeclParserRuleCall_8_0()); 
    }
    this_ComponentDecl_16=ruleComponentDecl
    { 
        $current = $this_ComponentDecl_16.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_8_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getHomeDeclParserRuleCall_9_0()); 
    }
    this_HomeDecl_18=ruleHomeDecl
    { 
        $current = $this_HomeDecl_18.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_9_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getPortTypeDeclParserRuleCall_10_0()); 
    }
    this_PortTypeDecl_20=rulePortTypeDecl
    { 
        $current = $this_PortTypeDecl_20.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_10_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getConnectorParserRuleCall_11_0()); 
    }
    this_Connector_22=ruleConnector
    { 
        $current = $this_Connector_22.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_11_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getTemplateModuleRefParserRuleCall_12_0()); 
    }
    this_TemplateModuleRef_24=ruleTemplateModuleRef
    { 
        $current = $this_TemplateModuleRef_24.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_25=';' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_12_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getIDLCommentParserRuleCall_13()); 
    }
    this_IDLComment_26=ruleIDLComment
    { 
        $current = $this_IDLComment_26.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFixedModule
entryRuleFixedModule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedModuleRule()); }
	 iv_ruleFixedModule=ruleFixedModule 
	 { $current=$iv_ruleFixedModule.current; } 
	 EOF 
;

// Rule FixedModule
ruleFixedModule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFixedModuleAccess().getModuleKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFixedModuleAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFixedModuleRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFixedModuleAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFixedModuleAccess().getDefinitionsFixedDefinitionParserRuleCall_3_0()); 
	    }
		lv_definitions_3_0=ruleFixedDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFixedModuleRule());
	        }
       		add(
       			$current, 
       			"definitions",
        		lv_definitions_3_0, 
        		"FixedDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFixedModuleAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleFixedDefinition
entryRuleFixedDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFixedDefinitionRule()); }
	 iv_ruleFixedDefinition=ruleFixedDefinition 
	 { $current=$iv_ruleFixedDefinition.current; } 
	 EOF 
;

// Rule FixedDefinition
ruleFixedDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getTypeDeclParserRuleCall_0_0()); 
    }
    this_TypeDecl_0=ruleTypeDecl
    { 
        $current = $this_TypeDecl_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_0_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getConstDeclParserRuleCall_1_0()); 
    }
    this_ConstDecl_2=ruleConstDecl
    { 
        $current = $this_ConstDecl_2.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_1_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getExceptDeclParserRuleCall_2_0()); 
    }
    this_ExceptDecl_4=ruleExceptDecl
    { 
        $current = $this_ExceptDecl_4.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_5=';' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_2_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getInterface_declParserRuleCall_3_0()); 
    }
    this_Interface_decl_6=ruleInterface_decl
    { 
        $current = $this_Interface_decl_6.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_7=';' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_3_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getFixedModuleParserRuleCall_4_0()); 
    }
    this_FixedModule_8=ruleFixedModule
    { 
        $current = $this_FixedModule_8.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_4_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getStructTypeParserRuleCall_5_0()); 
    }
    this_StructType_10=ruleStructType
    { 
        $current = $this_StructType_10.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_5_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getNativeTypeParserRuleCall_6_0()); 
    }
    this_NativeType_12=ruleNativeType
    { 
        $current = $this_NativeType_12.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_13=';' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_6_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getEventParserRuleCall_7_0()); 
    }
    this_Event_14=ruleEvent
    { 
        $current = $this_Event_14.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_15=';' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_7_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getComponentDeclParserRuleCall_8_0()); 
    }
    this_ComponentDecl_16=ruleComponentDecl
    { 
        $current = $this_ComponentDecl_16.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_17=';' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_8_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getHomeDeclParserRuleCall_9_0()); 
    }
    this_HomeDecl_18=ruleHomeDecl
    { 
        $current = $this_HomeDecl_18.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_19=';' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_9_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getPortTypeDeclParserRuleCall_10_0()); 
    }
    this_PortTypeDecl_20=rulePortTypeDecl
    { 
        $current = $this_PortTypeDecl_20.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_21=';' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_10_1());
    }
)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getConnectorParserRuleCall_11_0()); 
    }
    this_Connector_22=ruleConnector
    { 
        $current = $this_Connector_22.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_23=';' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_11_1());
    }
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFixedDefinitionAccess().getIDLCommentParserRuleCall_12()); 
    }
    this_IDLComment_24=ruleIDLComment
    { 
        $current = $this_IDLComment_24.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTemplateModuleInst
entryRuleTemplateModuleInst returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateModuleInstRule()); }
	 iv_ruleTemplateModuleInst=ruleTemplateModuleInst 
	 { $current=$iv_ruleTemplateModuleInst.current; } 
	 EOF 
;

// Rule TemplateModuleInst
ruleTemplateModuleInst returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='module' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateModuleInstAccess().getModuleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getTypeScopedNameParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateModuleInstAccess().getLessThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getParameterActualParameterParserRuleCall_3_0()); 
	    }
		lv_parameter_3_0=ruleActualParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_3_0, 
        		"ActualParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateModuleInstAccess().getCommaKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getParameterActualParameterParserRuleCall_4_1_0()); 
	    }
		lv_parameter_5_0=ruleActualParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
	        }
       		add(
       			$current, 
       			"parameter",
        		lv_parameter_5_0, 
        		"ActualParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTemplateModuleInstAccess().getGreaterThanSignKeyword_5());
    }
(
(
		lv_name_7_0=RULE_ID
		{
			newLeafNode(lv_name_7_0, grammarAccess.getTemplateModuleInstAccess().getNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateModuleInstRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getCommentsIDLCommentParserRuleCall_7_0()); 
	    }
		lv_comments_8_0=ruleIDLComment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
	        }
       		add(
       			$current, 
       			"comments",
        		lv_comments_8_0, 
        		"IDLComment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleActualParameter
entryRuleActualParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActualParameterRule()); }
	 iv_ruleActualParameter=ruleActualParameter 
	 { $current=$iv_ruleActualParameter.current; } 
	 EOF 
;

// Rule ActualParameter
ruleActualParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActualParameterAccess().getConstExpParserRuleCall_0()); 
    }
    this_ConstExp_0=ruleConstExp
    { 
        $current = $this_ConstExp_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActualParameterAccess().getTypeSpecParserRuleCall_1()); 
    }
    this_TypeSpec_1=ruleTypeSpec
    { 
        $current = $this_TypeSpec_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTemplateModuleRef
entryRuleTemplateModuleRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateModuleRefRule()); }
	 iv_ruleTemplateModuleRef=ruleTemplateModuleRef 
	 { $current=$iv_ruleTemplateModuleRef.current; } 
	 EOF 
;

// Rule TemplateModuleRef
ruleTemplateModuleRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='alias' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateModuleRefAccess().getAliasKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateModuleRefAccess().getTypeScopedNameParserRuleCall_1_0()); 
	    }
		lv_type_1_0=ruleScopedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateModuleRefRule());
	        }
       		set(
       			$current, 
       			"type",
        		lv_type_1_0, 
        		"ScopedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTemplateModuleRefAccess().getLessThanSignKeyword_2());
    }
(
(
		lv_id_3_0=RULE_ID
		{
			newLeafNode(lv_id_3_0, grammarAccess.getTemplateModuleRefAccess().getIdIDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateModuleRefRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"ID");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTemplateModuleRefAccess().getCommaKeyword_4_0());
    }
(
(
		lv_id_5_0=RULE_ID
		{
			newLeafNode(lv_id_5_0, grammarAccess.getTemplateModuleRefAccess().getIdIDTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateModuleRefRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_5_0, 
        		"ID");
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTemplateModuleRefAccess().getGreaterThanSignKeyword_5());
    }
(
(
		lv_name_7_0=RULE_ID
		{
			newLeafNode(lv_name_7_0, grammarAccess.getTemplateModuleRefAccess().getNameIDTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTemplateModuleRefRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleIDLComment
entryRuleIDLComment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIDLCommentRule()); }
	 iv_ruleIDLComment=ruleIDLComment 
	 { $current=$iv_ruleIDLComment.current; } 
	 EOF 
;

// Rule IDLComment
ruleIDLComment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_body_0_0=RULE_SL_COMMENT
		{
			newLeafNode(lv_body_0_0, grammarAccess.getIDLCommentAccess().getBodySL_COMMENTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIDLCommentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"body",
        		lv_body_0_0, 
        		"SL_COMMENT");
	    }

)
)
;





// Rule ParamDirection
ruleParamDirection returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='in' 
	{
        $current = grammarAccess.getParamDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getParamDirectionAccess().getInEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='out' 
	{
        $current = grammarAccess.getParamDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getParamDirectionAccess().getOutEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='inout' 
	{
        $current = grammarAccess.getParamDirectionAccess().getInOutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getParamDirectionAccess().getInOutEnumLiteralDeclaration_2()); 
    }
));



RULE_UNUSED_LITERAL : '(\'?\')';

RULE_INTEGER_LITERAL : ('0'..'9')+ ('l'|'L')?;

RULE_HEX_LITERAL : '0' ('x'|'X') ('0'..'9'|'a'..'f'|'A'..'F')+ ('l'|'L')?;

RULE_FLOATING_PT_LITERAL : (('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)? ('f'|'F'|'d'|'D')?|'.' ('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)? ('f'|'F'|'d'|'D')?|('0'..'9')+ ('e'|'E') ('+'|'-')? ('0'..'9')+ ('f'|'F'|'d'|'D')?|('0'..'9')+ (('e'|'E') ('+'|'-')? ('0'..'9')+)? ('f'|'F'|'d'|'D'));

RULE_CHARACTER_LITERAL : '\'' (RULE_ESCAPE_SEQUENCE|~(('\''|'\\'))) '\'';

RULE_BOOLEAN_LITERAL : ('TRUE'|'FALSE');

RULE_ESCAPE_SEQUENCE : '\'\\\' (\'b\'|\'t\'|\'n\'|\'f\'|\'r\'|\'v\'|\'a\'|\'?\'|\'"\'|\'\'\'|\'\\\') | RULE_UNICODE_ESCAPE | RULE_OCTAL_ESCAPE | RULE_HEX_ESCAPE';

RULE_HEX_ESCAPE : '\'\\\' (\'x\'|\'X\') ( \'0\'..\'9\' | \'a\'..\'f\' | \'A\'..\'F\' )+ (\'l\'|\'L\')?';

RULE_OCTAL_ESCAPE : '\'\\\' (\'0\'..\'3\') (\'0\'..\'7\') (\'0\'..\'7\')\r\n\t|\t\'\\\' (\'0\'..\'7\') (\'0\'..\'7\')\r\n\t|\t\'\\\' (\'0\'..\'7\')';

RULE_UNICODE_ESCAPE : '\'\\\' \'u\' ( \'0\'..\'9\' | \'a\'..\'f\' | \'A\'..\'F\' ) ( \'0\'..\'9\' | \'a\'..\'f\' | \'A\'..\'F\' ) ( \'0\'..\'9\' | \'a\'..\'f\' | \'A\'..\'F\' ) ( \'0\'..\'9\' | \'a\'..\'f\' | \'A\'..\'F\' )';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


