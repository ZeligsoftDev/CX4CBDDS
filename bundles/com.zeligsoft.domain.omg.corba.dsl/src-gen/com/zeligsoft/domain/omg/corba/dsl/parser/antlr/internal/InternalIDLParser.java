package com.zeligsoft.domain.omg.corba.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.zeligsoft.domain.omg.corba.dsl.services.IDLGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalIDLParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_ID", "RULE_HEX_LITERAL", "RULE_CHARACTER_LITERAL", "RULE_FLOATING_PT_LITERAL", "RULE_INTEGER_LITERAL", "RULE_BOOLEAN_LITERAL", "RULE_SL_COMMENT", "RULE_UNUSED_LITERAL", "RULE_ESCAPE_SEQUENCE", "RULE_HEX_ESCAPE", "RULE_OCTAL_ESCAPE", "RULE_UNICODE_ESCAPE", "RULE_ML_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'#include'", "'<'", "'>'", "'.'", "'#ifdef'", "'#ifndef'", "'#undef'", "'#if'", "'#elif'", "'!'", "'defined'", "'=='", "'!='", "'>='", "'<='", "'#else'", "'#error'", "'#define '", "'#endif'", "'#pragma'", "'prefix'", "'conntype'", "'::'", "'ciao'", "'lem'", "'ami4ccm interface'", "'ami4ccm receptacle'", "'ami4ccm idl'", "'ndds'", "'typesupport'", "'componentInterface'", "'componentHome'", "'dds4ccm'", "'impl'", "'#file'", "'#excluded_file'", "'import'", "';'", "'module'", "'{'", "'}'", "'abstract'", "'local'", "'interface'", "':'", "','", "'attribute'", "'getraises'", "'setraises'", "'readonly'", "'raises'", "'('", "')'", "'oneway'", "'void'", "'context'", "'float'", "'double'", "'long'", "'short'", "'unsigned'", "'char'", "'wchar'", "'boolean'", "'octet'", "'any'", "'Object'", "'ValueBase'", "'string'", "'wstring'", "'exception'", "'['", "']'", "'@appendable'", "'@final'", "'struct'", "'typedef'", "'union'", "'switch'", "'case'", "'default'", "'enum'", "'sequence'", "'native'", "'fixed'", "'const'", "'='", "'|'", "'^'", "'&'", "'<<'", "'>>'", "'+'", "'-'", "'*'", "'/'", "'%'", "'~'", "'component'", "'supports'", "'provides'", "'uses'", "'multiple'", "'publishes'", "'emits'", "'consumes'", "'home'", "'manages'", "'primarykey'", "'factory'", "'finder'", "'custom'", "'eventtype'", "'truncatable'", "'public'", "'private'", "'porttype'", "'port'", "'mirrorport'", "'connector'", "'typename'", "'valuetype'", "'alias'", "'in'", "'out'", "'inout'", "'return'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int RULE_HEX_LITERAL=6;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=5;
    public static final int RULE_BOOLEAN_LITERAL=10;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INTEGER_LITERAL=9;
    public static final int T__66=66;
    public static final int RULE_OCTAL_ESCAPE=15;
    public static final int RULE_ML_COMMENT=17;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int RULE_UNICODE_ESCAPE=16;
    public static final int T__37=37;
    public static final int RULE_FLOATING_PT_LITERAL=8;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_CHARACTER_LITERAL=7;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int T__99=99;
    public static final int RULE_HEX_ESCAPE=14;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int RULE_ESCAPE_SEQUENCE=13;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=11;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int RULE_UNUSED_LITERAL=12;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=18;
    public static final int RULE_ANY_OTHER=19;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalIDLParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalIDLParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[612+1];
             
             
        }
        

    public String[] getTokenNames() { return InternalIDLParser.tokenNames; }
    public String getGrammarFileName() { return "InternalIDL.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */
     
     	private IDLGrammarAccess grammarAccess;
     	
        public InternalIDLParser(TokenStream input, IDLGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }
        
        @Override
        protected String getFirstRuleName() {
        	return "Specification";	
       	}
       	
       	@Override
       	protected IDLGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}



    // $ANTLR start "entryRuleSpecification"
    // InternalIDL.g:75:1: entryRuleSpecification returns [EObject current=null] : iv_ruleSpecification= ruleSpecification EOF ;
    public final EObject entryRuleSpecification() throws RecognitionException {
        EObject current = null;
        int entryRuleSpecification_StartIndex = input.index();
        EObject iv_ruleSpecification = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return current; }
            // InternalIDL.g:76:2: (iv_ruleSpecification= ruleSpecification EOF )
            // InternalIDL.g:77:2: iv_ruleSpecification= ruleSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecification=ruleSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, entryRuleSpecification_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecification"


    // $ANTLR start "ruleSpecification"
    // InternalIDL.g:84:1: ruleSpecification returns [EObject current=null] : ( () ( (lv_imports_1_0= ruleImport_decl ) )* ( (lv_definitions_2_0= ruleDefinition ) )+ ) ;
    public final EObject ruleSpecification() throws RecognitionException {
        EObject current = null;
        int ruleSpecification_StartIndex = input.index();
        EObject lv_imports_1_0 = null;

        EObject lv_definitions_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return current; }
            // InternalIDL.g:87:28: ( ( () ( (lv_imports_1_0= ruleImport_decl ) )* ( (lv_definitions_2_0= ruleDefinition ) )+ ) )
            // InternalIDL.g:88:1: ( () ( (lv_imports_1_0= ruleImport_decl ) )* ( (lv_definitions_2_0= ruleDefinition ) )+ )
            {
            // InternalIDL.g:88:1: ( () ( (lv_imports_1_0= ruleImport_decl ) )* ( (lv_definitions_2_0= ruleDefinition ) )+ )
            // InternalIDL.g:88:2: () ( (lv_imports_1_0= ruleImport_decl ) )* ( (lv_definitions_2_0= ruleDefinition ) )+
            {
            // InternalIDL.g:88:2: ()
            // InternalIDL.g:89:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSpecificationAccess().getSpecificationAction_0(),
                          current);
                  
            }

            }

            // InternalIDL.g:97:2: ( (lv_imports_1_0= ruleImport_decl ) )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==56) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalIDL.g:98:1: (lv_imports_1_0= ruleImport_decl )
            	    {
            	    // InternalIDL.g:98:1: (lv_imports_1_0= ruleImport_decl )
            	    // InternalIDL.g:99:3: lv_imports_1_0= ruleImport_decl
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSpecificationAccess().getImportsImport_declParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_3);
            	    lv_imports_1_0=ruleImport_decl();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSpecificationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"imports",
            	              		lv_imports_1_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Import_decl");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            // InternalIDL.g:115:3: ( (lv_definitions_2_0= ruleDefinition ) )+
            int cnt2=0;
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==RULE_SL_COMMENT||LA2_0==20||(LA2_0>=24 && LA2_0<=28)||(LA2_0>=35 && LA2_0<=39)||(LA2_0>=54 && LA2_0<=55)||LA2_0==58||(LA2_0>=61 && LA2_0<=63)||LA2_0==90||(LA2_0>=93 && LA2_0<=97)||LA2_0==101||LA2_0==103||LA2_0==105||LA2_0==118||LA2_0==126||(LA2_0>=131 && LA2_0<=132)||LA2_0==136||LA2_0==139) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalIDL.g:116:1: (lv_definitions_2_0= ruleDefinition )
            	    {
            	    // InternalIDL.g:116:1: (lv_definitions_2_0= ruleDefinition )
            	    // InternalIDL.g:117:3: lv_definitions_2_0= ruleDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSpecificationAccess().getDefinitionsDefinitionParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_4);
            	    lv_definitions_2_0=ruleDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSpecificationRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"definitions",
            	              		lv_definitions_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Definition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt2 >= 1 ) break loop2;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(2, input);
                        throw eee;
                }
                cnt2++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, ruleSpecification_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSpecification"


    // $ANTLR start "entryRulePreproc"
    // InternalIDL.g:141:1: entryRulePreproc returns [EObject current=null] : iv_rulePreproc= rulePreproc EOF ;
    public final EObject entryRulePreproc() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_StartIndex = input.index();
        EObject iv_rulePreproc = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return current; }
            // InternalIDL.g:142:2: (iv_rulePreproc= rulePreproc EOF )
            // InternalIDL.g:143:2: iv_rulePreproc= rulePreproc EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreprocRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc=rulePreproc();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, entryRulePreproc_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc"


    // $ANTLR start "rulePreproc"
    // InternalIDL.g:150:1: rulePreproc returns [EObject current=null] : (this_Preproc_Include_0= rulePreproc_Include | this_Preproc_Ifdef_1= rulePreproc_Ifdef | this_Preproc_Ifndef_2= rulePreproc_Ifndef | this_Preproc_Undef_3= rulePreproc_Undef | this_Preproc_If_4= rulePreproc_If | this_Preproc_Else_5= rulePreproc_Else | this_Preproc_Error_6= rulePreproc_Error | this_Preproc_Define_7= rulePreproc_Define | this_Preproc_Endif_8= rulePreproc_Endif | this_Preproc_Pragma_9= rulePreproc_Pragma | this_File_Marker_10= ruleFile_Marker | this_Excluded_File_Marker_11= ruleExcluded_File_Marker ) ;
    public final EObject rulePreproc() throws RecognitionException {
        EObject current = null;
        int rulePreproc_StartIndex = input.index();
        EObject this_Preproc_Include_0 = null;

        EObject this_Preproc_Ifdef_1 = null;

        EObject this_Preproc_Ifndef_2 = null;

        EObject this_Preproc_Undef_3 = null;

        EObject this_Preproc_If_4 = null;

        EObject this_Preproc_Else_5 = null;

        EObject this_Preproc_Error_6 = null;

        EObject this_Preproc_Define_7 = null;

        EObject this_Preproc_Endif_8 = null;

        EObject this_Preproc_Pragma_9 = null;

        EObject this_File_Marker_10 = null;

        EObject this_Excluded_File_Marker_11 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return current; }
            // InternalIDL.g:153:28: ( (this_Preproc_Include_0= rulePreproc_Include | this_Preproc_Ifdef_1= rulePreproc_Ifdef | this_Preproc_Ifndef_2= rulePreproc_Ifndef | this_Preproc_Undef_3= rulePreproc_Undef | this_Preproc_If_4= rulePreproc_If | this_Preproc_Else_5= rulePreproc_Else | this_Preproc_Error_6= rulePreproc_Error | this_Preproc_Define_7= rulePreproc_Define | this_Preproc_Endif_8= rulePreproc_Endif | this_Preproc_Pragma_9= rulePreproc_Pragma | this_File_Marker_10= ruleFile_Marker | this_Excluded_File_Marker_11= ruleExcluded_File_Marker ) )
            // InternalIDL.g:154:1: (this_Preproc_Include_0= rulePreproc_Include | this_Preproc_Ifdef_1= rulePreproc_Ifdef | this_Preproc_Ifndef_2= rulePreproc_Ifndef | this_Preproc_Undef_3= rulePreproc_Undef | this_Preproc_If_4= rulePreproc_If | this_Preproc_Else_5= rulePreproc_Else | this_Preproc_Error_6= rulePreproc_Error | this_Preproc_Define_7= rulePreproc_Define | this_Preproc_Endif_8= rulePreproc_Endif | this_Preproc_Pragma_9= rulePreproc_Pragma | this_File_Marker_10= ruleFile_Marker | this_Excluded_File_Marker_11= ruleExcluded_File_Marker )
            {
            // InternalIDL.g:154:1: (this_Preproc_Include_0= rulePreproc_Include | this_Preproc_Ifdef_1= rulePreproc_Ifdef | this_Preproc_Ifndef_2= rulePreproc_Ifndef | this_Preproc_Undef_3= rulePreproc_Undef | this_Preproc_If_4= rulePreproc_If | this_Preproc_Else_5= rulePreproc_Else | this_Preproc_Error_6= rulePreproc_Error | this_Preproc_Define_7= rulePreproc_Define | this_Preproc_Endif_8= rulePreproc_Endif | this_Preproc_Pragma_9= rulePreproc_Pragma | this_File_Marker_10= ruleFile_Marker | this_Excluded_File_Marker_11= ruleExcluded_File_Marker )
            int alt3=12;
            switch ( input.LA(1) ) {
            case 20:
                {
                alt3=1;
                }
                break;
            case 24:
                {
                alt3=2;
                }
                break;
            case 25:
                {
                alt3=3;
                }
                break;
            case 26:
                {
                alt3=4;
                }
                break;
            case 27:
            case 28:
                {
                alt3=5;
                }
                break;
            case 35:
                {
                alt3=6;
                }
                break;
            case 36:
                {
                alt3=7;
                }
                break;
            case 37:
                {
                alt3=8;
                }
                break;
            case 38:
                {
                alt3=9;
                }
                break;
            case 39:
                {
                alt3=10;
                }
                break;
            case 54:
                {
                alt3=11;
                }
                break;
            case 55:
                {
                alt3=12;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalIDL.g:155:2: this_Preproc_Include_0= rulePreproc_Include
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IncludeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Include_0=rulePreproc_Include();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Include_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:168:2: this_Preproc_Ifdef_1= rulePreproc_Ifdef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IfdefParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Ifdef_1=rulePreproc_Ifdef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Ifdef_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:181:2: this_Preproc_Ifndef_2= rulePreproc_Ifndef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IfndefParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Ifndef_2=rulePreproc_Ifndef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Ifndef_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:194:2: this_Preproc_Undef_3= rulePreproc_Undef
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_UndefParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Undef_3=rulePreproc_Undef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Undef_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIDL.g:207:2: this_Preproc_If_4= rulePreproc_If
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_IfParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_If_4=rulePreproc_If();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_If_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalIDL.g:220:2: this_Preproc_Else_5= rulePreproc_Else
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_ElseParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Else_5=rulePreproc_Else();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Else_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalIDL.g:233:2: this_Preproc_Error_6= rulePreproc_Error
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_ErrorParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Error_6=rulePreproc_Error();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Error_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalIDL.g:246:2: this_Preproc_Define_7= rulePreproc_Define
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_DefineParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Define_7=rulePreproc_Define();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Define_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalIDL.g:259:2: this_Preproc_Endif_8= rulePreproc_Endif
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_EndifParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Endif_8=rulePreproc_Endif();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Endif_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalIDL.g:272:2: this_Preproc_Pragma_9= rulePreproc_Pragma
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getPreproc_PragmaParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_9=rulePreproc_Pragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalIDL.g:285:2: this_File_Marker_10= ruleFile_Marker
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getFile_MarkerParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_File_Marker_10=ruleFile_Marker();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_File_Marker_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 12 :
                    // InternalIDL.g:298:2: this_Excluded_File_Marker_11= ruleExcluded_File_Marker
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreprocAccess().getExcluded_File_MarkerParserRuleCall_11()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Excluded_File_Marker_11=ruleExcluded_File_Marker();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Excluded_File_Marker_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, rulePreproc_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc"


    // $ANTLR start "entryRulePreproc_Include"
    // InternalIDL.g:317:1: entryRulePreproc_Include returns [EObject current=null] : iv_rulePreproc_Include= rulePreproc_Include EOF ;
    public final EObject entryRulePreproc_Include() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Include_StartIndex = input.index();
        EObject iv_rulePreproc_Include = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return current; }
            // InternalIDL.g:318:2: (iv_rulePreproc_Include= rulePreproc_Include EOF )
            // InternalIDL.g:319:2: iv_rulePreproc_Include= rulePreproc_Include EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_IncludeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Include=rulePreproc_Include();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Include; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, entryRulePreproc_Include_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Include"


    // $ANTLR start "rulePreproc_Include"
    // InternalIDL.g:326:1: rulePreproc_Include returns [EObject current=null] : ( (otherlv_0= '#include' otherlv_1= '<' ( (lv_value_2_0= ruleFileName ) ) otherlv_3= '>' ) | (otherlv_4= '#include' ( (lv_strValue_5_0= RULE_STRING ) ) ) ) ;
    public final EObject rulePreproc_Include() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Include_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_strValue_5_0=null;
        EObject lv_value_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return current; }
            // InternalIDL.g:329:28: ( ( (otherlv_0= '#include' otherlv_1= '<' ( (lv_value_2_0= ruleFileName ) ) otherlv_3= '>' ) | (otherlv_4= '#include' ( (lv_strValue_5_0= RULE_STRING ) ) ) ) )
            // InternalIDL.g:330:1: ( (otherlv_0= '#include' otherlv_1= '<' ( (lv_value_2_0= ruleFileName ) ) otherlv_3= '>' ) | (otherlv_4= '#include' ( (lv_strValue_5_0= RULE_STRING ) ) ) )
            {
            // InternalIDL.g:330:1: ( (otherlv_0= '#include' otherlv_1= '<' ( (lv_value_2_0= ruleFileName ) ) otherlv_3= '>' ) | (otherlv_4= '#include' ( (lv_strValue_5_0= RULE_STRING ) ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==20) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==RULE_STRING) ) {
                    alt4=2;
                }
                else if ( (LA4_1==21) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalIDL.g:330:2: (otherlv_0= '#include' otherlv_1= '<' ( (lv_value_2_0= ruleFileName ) ) otherlv_3= '>' )
                    {
                    // InternalIDL.g:330:2: (otherlv_0= '#include' otherlv_1= '<' ( (lv_value_2_0= ruleFileName ) ) otherlv_3= '>' )
                    // InternalIDL.g:330:4: otherlv_0= '#include' otherlv_1= '<' ( (lv_value_2_0= ruleFileName ) ) otherlv_3= '>'
                    {
                    otherlv_0=(Token)match(input,20,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getPreproc_IncludeAccess().getIncludeKeyword_0_0());
                          
                    }
                    otherlv_1=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPreproc_IncludeAccess().getLessThanSignKeyword_0_1());
                          
                    }
                    // InternalIDL.g:338:1: ( (lv_value_2_0= ruleFileName ) )
                    // InternalIDL.g:339:1: (lv_value_2_0= ruleFileName )
                    {
                    // InternalIDL.g:339:1: (lv_value_2_0= ruleFileName )
                    // InternalIDL.g:340:3: lv_value_2_0= ruleFileName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPreproc_IncludeAccess().getValueFileNameParserRuleCall_0_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_7);
                    lv_value_2_0=ruleFileName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPreproc_IncludeRule());
                      	        }
                             		set(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.FileName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPreproc_IncludeAccess().getGreaterThanSignKeyword_0_3());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:361:6: (otherlv_4= '#include' ( (lv_strValue_5_0= RULE_STRING ) ) )
                    {
                    // InternalIDL.g:361:6: (otherlv_4= '#include' ( (lv_strValue_5_0= RULE_STRING ) ) )
                    // InternalIDL.g:361:8: otherlv_4= '#include' ( (lv_strValue_5_0= RULE_STRING ) )
                    {
                    otherlv_4=(Token)match(input,20,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPreproc_IncludeAccess().getIncludeKeyword_1_0());
                          
                    }
                    // InternalIDL.g:365:1: ( (lv_strValue_5_0= RULE_STRING ) )
                    // InternalIDL.g:366:1: (lv_strValue_5_0= RULE_STRING )
                    {
                    // InternalIDL.g:366:1: (lv_strValue_5_0= RULE_STRING )
                    // InternalIDL.g:367:3: lv_strValue_5_0= RULE_STRING
                    {
                    lv_strValue_5_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_strValue_5_0, grammarAccess.getPreproc_IncludeAccess().getStrValueSTRINGTerminalRuleCall_1_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPreproc_IncludeRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"strValue",
                              		lv_strValue_5_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, rulePreproc_Include_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Include"


    // $ANTLR start "entryRuleFileName"
    // InternalIDL.g:391:1: entryRuleFileName returns [EObject current=null] : iv_ruleFileName= ruleFileName EOF ;
    public final EObject entryRuleFileName() throws RecognitionException {
        EObject current = null;
        int entryRuleFileName_StartIndex = input.index();
        EObject iv_ruleFileName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return current; }
            // InternalIDL.g:392:2: (iv_ruleFileName= ruleFileName EOF )
            // InternalIDL.g:393:2: iv_ruleFileName= ruleFileName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFileNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFileName=ruleFileName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFileName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, entryRuleFileName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFileName"


    // $ANTLR start "ruleFileName"
    // InternalIDL.g:400:1: ruleFileName returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_name_2_0= RULE_ID ) ) )* ) ;
    public final EObject ruleFileName() throws RecognitionException {
        EObject current = null;
        int ruleFileName_StartIndex = input.index();
        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return current; }
            // InternalIDL.g:403:28: ( ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_name_2_0= RULE_ID ) ) )* ) )
            // InternalIDL.g:404:1: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_name_2_0= RULE_ID ) ) )* )
            {
            // InternalIDL.g:404:1: ( ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_name_2_0= RULE_ID ) ) )* )
            // InternalIDL.g:404:2: ( (lv_name_0_0= RULE_ID ) ) (otherlv_1= '.' ( (lv_name_2_0= RULE_ID ) ) )*
            {
            // InternalIDL.g:404:2: ( (lv_name_0_0= RULE_ID ) )
            // InternalIDL.g:405:1: (lv_name_0_0= RULE_ID )
            {
            // InternalIDL.g:405:1: (lv_name_0_0= RULE_ID )
            // InternalIDL.g:406:3: lv_name_0_0= RULE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_0_0, grammarAccess.getFileNameAccess().getNameIDTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFileNameRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:422:2: (otherlv_1= '.' ( (lv_name_2_0= RULE_ID ) ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==23) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalIDL.g:422:4: otherlv_1= '.' ( (lv_name_2_0= RULE_ID ) )
            	    {
            	    otherlv_1=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getFileNameAccess().getFullStopKeyword_1_0());
            	          
            	    }
            	    // InternalIDL.g:426:1: ( (lv_name_2_0= RULE_ID ) )
            	    // InternalIDL.g:427:1: (lv_name_2_0= RULE_ID )
            	    {
            	    // InternalIDL.g:427:1: (lv_name_2_0= RULE_ID )
            	    // InternalIDL.g:428:3: lv_name_2_0= RULE_ID
            	    {
            	    lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_name_2_0, grammarAccess.getFileNameAccess().getNameIDTerminalRuleCall_1_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getFileNameRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"name",
            	              		lv_name_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, ruleFileName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFileName"


    // $ANTLR start "entryRulePreproc_Ifdef"
    // InternalIDL.g:452:1: entryRulePreproc_Ifdef returns [EObject current=null] : iv_rulePreproc_Ifdef= rulePreproc_Ifdef EOF ;
    public final EObject entryRulePreproc_Ifdef() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Ifdef_StartIndex = input.index();
        EObject iv_rulePreproc_Ifdef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return current; }
            // InternalIDL.g:453:2: (iv_rulePreproc_Ifdef= rulePreproc_Ifdef EOF )
            // InternalIDL.g:454:2: iv_rulePreproc_Ifdef= rulePreproc_Ifdef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_IfdefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Ifdef=rulePreproc_Ifdef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Ifdef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, entryRulePreproc_Ifdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Ifdef"


    // $ANTLR start "rulePreproc_Ifdef"
    // InternalIDL.g:461:1: rulePreproc_Ifdef returns [EObject current=null] : (otherlv_0= '#ifdef' ( (lv_value_1_0= RULE_ID ) ) ) ;
    public final EObject rulePreproc_Ifdef() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Ifdef_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return current; }
            // InternalIDL.g:464:28: ( (otherlv_0= '#ifdef' ( (lv_value_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:465:1: (otherlv_0= '#ifdef' ( (lv_value_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:465:1: (otherlv_0= '#ifdef' ( (lv_value_1_0= RULE_ID ) ) )
            // InternalIDL.g:465:3: otherlv_0= '#ifdef' ( (lv_value_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,24,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_IfdefAccess().getIfdefKeyword_0());
                  
            }
            // InternalIDL.g:469:1: ( (lv_value_1_0= RULE_ID ) )
            // InternalIDL.g:470:1: (lv_value_1_0= RULE_ID )
            {
            // InternalIDL.g:470:1: (lv_value_1_0= RULE_ID )
            // InternalIDL.g:471:3: lv_value_1_0= RULE_ID
            {
            lv_value_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_IfdefAccess().getValueIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_IfdefRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, rulePreproc_Ifdef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Ifdef"


    // $ANTLR start "entryRulePreproc_Ifndef"
    // InternalIDL.g:495:1: entryRulePreproc_Ifndef returns [EObject current=null] : iv_rulePreproc_Ifndef= rulePreproc_Ifndef EOF ;
    public final EObject entryRulePreproc_Ifndef() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Ifndef_StartIndex = input.index();
        EObject iv_rulePreproc_Ifndef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return current; }
            // InternalIDL.g:496:2: (iv_rulePreproc_Ifndef= rulePreproc_Ifndef EOF )
            // InternalIDL.g:497:2: iv_rulePreproc_Ifndef= rulePreproc_Ifndef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_IfndefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Ifndef=rulePreproc_Ifndef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Ifndef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, entryRulePreproc_Ifndef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Ifndef"


    // $ANTLR start "rulePreproc_Ifndef"
    // InternalIDL.g:504:1: rulePreproc_Ifndef returns [EObject current=null] : (otherlv_0= '#ifndef' ( (lv_value_1_0= RULE_ID ) ) ) ;
    public final EObject rulePreproc_Ifndef() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Ifndef_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return current; }
            // InternalIDL.g:507:28: ( (otherlv_0= '#ifndef' ( (lv_value_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:508:1: (otherlv_0= '#ifndef' ( (lv_value_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:508:1: (otherlv_0= '#ifndef' ( (lv_value_1_0= RULE_ID ) ) )
            // InternalIDL.g:508:3: otherlv_0= '#ifndef' ( (lv_value_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_IfndefAccess().getIfndefKeyword_0());
                  
            }
            // InternalIDL.g:512:1: ( (lv_value_1_0= RULE_ID ) )
            // InternalIDL.g:513:1: (lv_value_1_0= RULE_ID )
            {
            // InternalIDL.g:513:1: (lv_value_1_0= RULE_ID )
            // InternalIDL.g:514:3: lv_value_1_0= RULE_ID
            {
            lv_value_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_IfndefAccess().getValueIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_IfndefRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, rulePreproc_Ifndef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Ifndef"


    // $ANTLR start "entryRulePreproc_Undef"
    // InternalIDL.g:538:1: entryRulePreproc_Undef returns [EObject current=null] : iv_rulePreproc_Undef= rulePreproc_Undef EOF ;
    public final EObject entryRulePreproc_Undef() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Undef_StartIndex = input.index();
        EObject iv_rulePreproc_Undef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return current; }
            // InternalIDL.g:539:2: (iv_rulePreproc_Undef= rulePreproc_Undef EOF )
            // InternalIDL.g:540:2: iv_rulePreproc_Undef= rulePreproc_Undef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_UndefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Undef=rulePreproc_Undef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Undef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, entryRulePreproc_Undef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Undef"


    // $ANTLR start "rulePreproc_Undef"
    // InternalIDL.g:547:1: rulePreproc_Undef returns [EObject current=null] : (otherlv_0= '#undef' ( (lv_value_1_0= RULE_ID ) ) ) ;
    public final EObject rulePreproc_Undef() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Undef_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return current; }
            // InternalIDL.g:550:28: ( (otherlv_0= '#undef' ( (lv_value_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:551:1: (otherlv_0= '#undef' ( (lv_value_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:551:1: (otherlv_0= '#undef' ( (lv_value_1_0= RULE_ID ) ) )
            // InternalIDL.g:551:3: otherlv_0= '#undef' ( (lv_value_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,26,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_UndefAccess().getUndefKeyword_0());
                  
            }
            // InternalIDL.g:555:1: ( (lv_value_1_0= RULE_ID ) )
            // InternalIDL.g:556:1: (lv_value_1_0= RULE_ID )
            {
            // InternalIDL.g:556:1: (lv_value_1_0= RULE_ID )
            // InternalIDL.g:557:3: lv_value_1_0= RULE_ID
            {
            lv_value_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_UndefAccess().getValueIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_UndefRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, rulePreproc_Undef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Undef"


    // $ANTLR start "entryRulePreproc_If"
    // InternalIDL.g:581:1: entryRulePreproc_If returns [EObject current=null] : iv_rulePreproc_If= rulePreproc_If EOF ;
    public final EObject entryRulePreproc_If() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_If_StartIndex = input.index();
        EObject iv_rulePreproc_If = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return current; }
            // InternalIDL.g:582:2: (iv_rulePreproc_If= rulePreproc_If EOF )
            // InternalIDL.g:583:2: iv_rulePreproc_If= rulePreproc_If EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_IfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_If=rulePreproc_If();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_If; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, entryRulePreproc_If_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_If"


    // $ANTLR start "rulePreproc_If"
    // InternalIDL.g:590:1: rulePreproc_If returns [EObject current=null] : ( (otherlv_0= '#if' | otherlv_1= '#elif' ) ( (lv_negation_2_0= '!' ) )? (otherlv_3= 'defined' )? ( (lv_value_4_0= rulePreproc_If_Compare ) )+ ) ;
    public final EObject rulePreproc_If() throws RecognitionException {
        EObject current = null;
        int rulePreproc_If_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_negation_2_0=null;
        Token otherlv_3=null;
        EObject lv_value_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return current; }
            // InternalIDL.g:593:28: ( ( (otherlv_0= '#if' | otherlv_1= '#elif' ) ( (lv_negation_2_0= '!' ) )? (otherlv_3= 'defined' )? ( (lv_value_4_0= rulePreproc_If_Compare ) )+ ) )
            // InternalIDL.g:594:1: ( (otherlv_0= '#if' | otherlv_1= '#elif' ) ( (lv_negation_2_0= '!' ) )? (otherlv_3= 'defined' )? ( (lv_value_4_0= rulePreproc_If_Compare ) )+ )
            {
            // InternalIDL.g:594:1: ( (otherlv_0= '#if' | otherlv_1= '#elif' ) ( (lv_negation_2_0= '!' ) )? (otherlv_3= 'defined' )? ( (lv_value_4_0= rulePreproc_If_Compare ) )+ )
            // InternalIDL.g:594:2: (otherlv_0= '#if' | otherlv_1= '#elif' ) ( (lv_negation_2_0= '!' ) )? (otherlv_3= 'defined' )? ( (lv_value_4_0= rulePreproc_If_Compare ) )+
            {
            // InternalIDL.g:594:2: (otherlv_0= '#if' | otherlv_1= '#elif' )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==27) ) {
                alt6=1;
            }
            else if ( (LA6_0==28) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalIDL.g:594:4: otherlv_0= '#if'
                    {
                    otherlv_0=(Token)match(input,27,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getPreproc_IfAccess().getIfKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:599:7: otherlv_1= '#elif'
                    {
                    otherlv_1=(Token)match(input,28,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPreproc_IfAccess().getElifKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIDL.g:603:2: ( (lv_negation_2_0= '!' ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==29) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalIDL.g:604:1: (lv_negation_2_0= '!' )
                    {
                    // InternalIDL.g:604:1: (lv_negation_2_0= '!' )
                    // InternalIDL.g:605:3: lv_negation_2_0= '!'
                    {
                    lv_negation_2_0=(Token)match(input,29,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_negation_2_0, grammarAccess.getPreproc_IfAccess().getNegationExclamationMarkKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPreproc_IfRule());
                      	        }
                             		setWithLastConsumed(current, "negation", true, "!");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIDL.g:618:3: (otherlv_3= 'defined' )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==30) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalIDL.g:618:5: otherlv_3= 'defined'
                    {
                    otherlv_3=(Token)match(input,30,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPreproc_IfAccess().getDefinedKeyword_2());
                          
                    }

                    }
                    break;

            }

            // InternalIDL.g:622:3: ( (lv_value_4_0= rulePreproc_If_Compare ) )+
            int cnt9=0;
            loop9:
            do {
                int alt9=2;
                switch ( input.LA(1) ) {
                case 42:
                    {
                    int LA9_2 = input.LA(2);

                    if ( (LA9_2==RULE_ID) ) {
                        switch ( input.LA(3) ) {
                        case 42:
                            {
                            int LA9_5 = input.LA(4);

                            if ( (LA9_5==RULE_ID) ) {
                                int LA9_7 = input.LA(5);

                                if ( (synpred19_InternalIDL()) ) {
                                    alt9=1;
                                }


                            }


                            }
                            break;
                        case RULE_ID:
                            {
                            int LA9_6 = input.LA(4);

                            if ( (LA9_6==71) ) {
                                int LA9_8 = input.LA(5);

                                if ( ((LA9_8>=RULE_STRING && LA9_8<=RULE_BOOLEAN_LITERAL)||LA9_8==42||LA9_8==71||(LA9_8>=112 && LA9_8<=113)||LA9_8==117) ) {
                                    alt9=1;
                                }


                            }
                            else if ( (LA9_6==EOF||(LA9_6>=RULE_STRING && LA9_6<=RULE_SL_COMMENT)||(LA9_6>=20 && LA9_6<=22)||(LA9_6>=24 && LA9_6<=28)||(LA9_6>=31 && LA9_6<=39)||LA9_6==42||(LA9_6>=54 && LA9_6<=55)||LA9_6==58||(LA9_6>=60 && LA9_6<=63)||LA9_6==66||LA9_6==69||(LA9_6>=73 && LA9_6<=74)||(LA9_6>=76 && LA9_6<=90)||(LA9_6>=93 && LA9_6<=97)||LA9_6==101||LA9_6==103||LA9_6==105||(LA9_6>=107 && LA9_6<=118)||(LA9_6>=120 && LA9_6<=121)||(LA9_6>=123 && LA9_6<=126)||(LA9_6>=129 && LA9_6<=132)||(LA9_6>=134 && LA9_6<=139)) ) {
                                alt9=1;
                            }


                            }
                            break;
                        case EOF:
                        case RULE_STRING:
                        case RULE_HEX_LITERAL:
                        case RULE_CHARACTER_LITERAL:
                        case RULE_FLOATING_PT_LITERAL:
                        case RULE_INTEGER_LITERAL:
                        case RULE_BOOLEAN_LITERAL:
                        case RULE_SL_COMMENT:
                        case 20:
                        case 21:
                        case 22:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 54:
                        case 55:
                        case 58:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 66:
                        case 69:
                        case 71:
                        case 73:
                        case 74:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                        case 85:
                        case 86:
                        case 87:
                        case 88:
                        case 89:
                        case 90:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 97:
                        case 101:
                        case 103:
                        case 105:
                        case 107:
                        case 108:
                        case 109:
                        case 110:
                        case 111:
                        case 112:
                        case 113:
                        case 114:
                        case 115:
                        case 116:
                        case 117:
                        case 118:
                        case 120:
                        case 121:
                        case 123:
                        case 124:
                        case 125:
                        case 126:
                        case 129:
                        case 130:
                        case 131:
                        case 132:
                        case 134:
                        case 135:
                        case 136:
                        case 137:
                        case 138:
                        case 139:
                            {
                            alt9=1;
                            }
                            break;

                        }

                    }


                    }
                    break;
                case RULE_ID:
                    {
                    switch ( input.LA(2) ) {
                    case 42:
                        {
                        int LA9_5 = input.LA(3);

                        if ( (LA9_5==RULE_ID) ) {
                            int LA9_7 = input.LA(4);

                            if ( (synpred19_InternalIDL()) ) {
                                alt9=1;
                            }


                        }


                        }
                        break;
                    case RULE_ID:
                        {
                        int LA9_6 = input.LA(3);

                        if ( (LA9_6==71) ) {
                            int LA9_8 = input.LA(4);

                            if ( ((LA9_8>=RULE_STRING && LA9_8<=RULE_BOOLEAN_LITERAL)||LA9_8==42||LA9_8==71||(LA9_8>=112 && LA9_8<=113)||LA9_8==117) ) {
                                alt9=1;
                            }


                        }
                        else if ( (LA9_6==EOF||(LA9_6>=RULE_STRING && LA9_6<=RULE_SL_COMMENT)||(LA9_6>=20 && LA9_6<=22)||(LA9_6>=24 && LA9_6<=28)||(LA9_6>=31 && LA9_6<=39)||LA9_6==42||(LA9_6>=54 && LA9_6<=55)||LA9_6==58||(LA9_6>=60 && LA9_6<=63)||LA9_6==66||LA9_6==69||(LA9_6>=73 && LA9_6<=74)||(LA9_6>=76 && LA9_6<=90)||(LA9_6>=93 && LA9_6<=97)||LA9_6==101||LA9_6==103||LA9_6==105||(LA9_6>=107 && LA9_6<=118)||(LA9_6>=120 && LA9_6<=121)||(LA9_6>=123 && LA9_6<=126)||(LA9_6>=129 && LA9_6<=132)||(LA9_6>=134 && LA9_6<=139)) ) {
                            alt9=1;
                        }


                        }
                        break;
                    case EOF:
                    case RULE_STRING:
                    case RULE_HEX_LITERAL:
                    case RULE_CHARACTER_LITERAL:
                    case RULE_FLOATING_PT_LITERAL:
                    case RULE_INTEGER_LITERAL:
                    case RULE_BOOLEAN_LITERAL:
                    case RULE_SL_COMMENT:
                    case 20:
                    case 21:
                    case 22:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 54:
                    case 55:
                    case 58:
                    case 60:
                    case 61:
                    case 62:
                    case 63:
                    case 66:
                    case 69:
                    case 71:
                    case 73:
                    case 74:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 93:
                    case 94:
                    case 95:
                    case 96:
                    case 97:
                    case 101:
                    case 103:
                    case 105:
                    case 107:
                    case 108:
                    case 109:
                    case 110:
                    case 111:
                    case 112:
                    case 113:
                    case 114:
                    case 115:
                    case 116:
                    case 117:
                    case 118:
                    case 120:
                    case 121:
                    case 123:
                    case 124:
                    case 125:
                    case 126:
                    case 129:
                    case 130:
                    case 131:
                    case 132:
                    case 134:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                    case 139:
                        {
                        alt9=1;
                        }
                        break;

                    }

                    }
                    break;
                case RULE_STRING:
                case RULE_HEX_LITERAL:
                case RULE_CHARACTER_LITERAL:
                case RULE_FLOATING_PT_LITERAL:
                case RULE_INTEGER_LITERAL:
                case RULE_BOOLEAN_LITERAL:
                case 71:
                case 112:
                case 113:
                case 117:
                    {
                    alt9=1;
                    }
                    break;

                }

                switch (alt9) {
            	case 1 :
            	    // InternalIDL.g:623:1: (lv_value_4_0= rulePreproc_If_Compare )
            	    {
            	    // InternalIDL.g:623:1: (lv_value_4_0= rulePreproc_If_Compare )
            	    // InternalIDL.g:624:3: lv_value_4_0= rulePreproc_If_Compare
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPreproc_IfAccess().getValuePreproc_If_CompareParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_11);
            	    lv_value_4_0=rulePreproc_If_Compare();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPreproc_IfRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"value",
            	              		lv_value_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Preproc_If_Compare");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt9 >= 1 ) break loop9;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(9, input);
                        throw eee;
                }
                cnt9++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, rulePreproc_If_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_If"


    // $ANTLR start "entryRulePreproc_If_Compare"
    // InternalIDL.g:648:1: entryRulePreproc_If_Compare returns [EObject current=null] : iv_rulePreproc_If_Compare= rulePreproc_If_Compare EOF ;
    public final EObject entryRulePreproc_If_Compare() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_If_Compare_StartIndex = input.index();
        EObject iv_rulePreproc_If_Compare = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return current; }
            // InternalIDL.g:649:2: (iv_rulePreproc_If_Compare= rulePreproc_If_Compare EOF )
            // InternalIDL.g:650:2: iv_rulePreproc_If_Compare= rulePreproc_If_Compare EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_If_CompareRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_If_Compare=rulePreproc_If_Compare();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_If_Compare; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, entryRulePreproc_If_Compare_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_If_Compare"


    // $ANTLR start "rulePreproc_If_Compare"
    // InternalIDL.g:657:1: rulePreproc_If_Compare returns [EObject current=null] : ( ( (lv_lhs_0_0= rulePreproc_If_Val ) ) ( ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) ) ( (lv_rhs_7_0= rulePreproc_If_Val ) ) )* ) ;
    public final EObject rulePreproc_If_Compare() throws RecognitionException {
        EObject current = null;
        int rulePreproc_If_Compare_StartIndex = input.index();
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        Token lv_op_3_0=null;
        Token lv_op_4_0=null;
        Token lv_op_5_0=null;
        Token lv_op_6_0=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_7_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return current; }
            // InternalIDL.g:660:28: ( ( ( (lv_lhs_0_0= rulePreproc_If_Val ) ) ( ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) ) ( (lv_rhs_7_0= rulePreproc_If_Val ) ) )* ) )
            // InternalIDL.g:661:1: ( ( (lv_lhs_0_0= rulePreproc_If_Val ) ) ( ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) ) ( (lv_rhs_7_0= rulePreproc_If_Val ) ) )* )
            {
            // InternalIDL.g:661:1: ( ( (lv_lhs_0_0= rulePreproc_If_Val ) ) ( ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) ) ( (lv_rhs_7_0= rulePreproc_If_Val ) ) )* )
            // InternalIDL.g:661:2: ( (lv_lhs_0_0= rulePreproc_If_Val ) ) ( ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) ) ( (lv_rhs_7_0= rulePreproc_If_Val ) ) )*
            {
            // InternalIDL.g:661:2: ( (lv_lhs_0_0= rulePreproc_If_Val ) )
            // InternalIDL.g:662:1: (lv_lhs_0_0= rulePreproc_If_Val )
            {
            // InternalIDL.g:662:1: (lv_lhs_0_0= rulePreproc_If_Val )
            // InternalIDL.g:663:3: lv_lhs_0_0= rulePreproc_If_Val
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPreproc_If_CompareAccess().getLhsPreproc_If_ValParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_12);
            lv_lhs_0_0=rulePreproc_If_Val();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPreproc_If_CompareRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.Preproc_If_Val");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:679:2: ( ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) ) ( (lv_rhs_7_0= rulePreproc_If_Val ) ) )*
            loop11:
            do {
                int alt11=2;
                int LA11_0 = input.LA(1);

                if ( ((LA11_0>=21 && LA11_0<=22)||(LA11_0>=31 && LA11_0<=34)) ) {
                    alt11=1;
                }


                switch (alt11) {
            	case 1 :
            	    // InternalIDL.g:679:3: ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) ) ( (lv_rhs_7_0= rulePreproc_If_Val ) )
            	    {
            	    // InternalIDL.g:679:3: ( ( (lv_op_1_0= '==' ) ) | ( (lv_op_2_0= '!=' ) ) | ( (lv_op_3_0= '>' ) ) | ( (lv_op_4_0= '<' ) ) | ( (lv_op_5_0= '>=' ) ) | ( (lv_op_6_0= '<=' ) ) )
            	    int alt10=6;
            	    switch ( input.LA(1) ) {
            	    case 31:
            	        {
            	        alt10=1;
            	        }
            	        break;
            	    case 32:
            	        {
            	        alt10=2;
            	        }
            	        break;
            	    case 22:
            	        {
            	        alt10=3;
            	        }
            	        break;
            	    case 21:
            	        {
            	        alt10=4;
            	        }
            	        break;
            	    case 33:
            	        {
            	        alt10=5;
            	        }
            	        break;
            	    case 34:
            	        {
            	        alt10=6;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 10, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt10) {
            	        case 1 :
            	            // InternalIDL.g:679:4: ( (lv_op_1_0= '==' ) )
            	            {
            	            // InternalIDL.g:679:4: ( (lv_op_1_0= '==' ) )
            	            // InternalIDL.g:680:1: (lv_op_1_0= '==' )
            	            {
            	            // InternalIDL.g:680:1: (lv_op_1_0= '==' )
            	            // InternalIDL.g:681:3: lv_op_1_0= '=='
            	            {
            	            lv_op_1_0=(Token)match(input,31,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_1_0, grammarAccess.getPreproc_If_CompareAccess().getOpEqualsSignEqualsSignKeyword_1_0_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_1_0, "==");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalIDL.g:695:6: ( (lv_op_2_0= '!=' ) )
            	            {
            	            // InternalIDL.g:695:6: ( (lv_op_2_0= '!=' ) )
            	            // InternalIDL.g:696:1: (lv_op_2_0= '!=' )
            	            {
            	            // InternalIDL.g:696:1: (lv_op_2_0= '!=' )
            	            // InternalIDL.g:697:3: lv_op_2_0= '!='
            	            {
            	            lv_op_2_0=(Token)match(input,32,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_2_0, grammarAccess.getPreproc_If_CompareAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_2_0, "!=");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalIDL.g:711:6: ( (lv_op_3_0= '>' ) )
            	            {
            	            // InternalIDL.g:711:6: ( (lv_op_3_0= '>' ) )
            	            // InternalIDL.g:712:1: (lv_op_3_0= '>' )
            	            {
            	            // InternalIDL.g:712:1: (lv_op_3_0= '>' )
            	            // InternalIDL.g:713:3: lv_op_3_0= '>'
            	            {
            	            lv_op_3_0=(Token)match(input,22,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_3_0, grammarAccess.getPreproc_If_CompareAccess().getOpGreaterThanSignKeyword_1_0_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_3_0, ">");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 4 :
            	            // InternalIDL.g:727:6: ( (lv_op_4_0= '<' ) )
            	            {
            	            // InternalIDL.g:727:6: ( (lv_op_4_0= '<' ) )
            	            // InternalIDL.g:728:1: (lv_op_4_0= '<' )
            	            {
            	            // InternalIDL.g:728:1: (lv_op_4_0= '<' )
            	            // InternalIDL.g:729:3: lv_op_4_0= '<'
            	            {
            	            lv_op_4_0=(Token)match(input,21,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_4_0, grammarAccess.getPreproc_If_CompareAccess().getOpLessThanSignKeyword_1_0_3_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_4_0, "<");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 5 :
            	            // InternalIDL.g:743:6: ( (lv_op_5_0= '>=' ) )
            	            {
            	            // InternalIDL.g:743:6: ( (lv_op_5_0= '>=' ) )
            	            // InternalIDL.g:744:1: (lv_op_5_0= '>=' )
            	            {
            	            // InternalIDL.g:744:1: (lv_op_5_0= '>=' )
            	            // InternalIDL.g:745:3: lv_op_5_0= '>='
            	            {
            	            lv_op_5_0=(Token)match(input,33,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_5_0, grammarAccess.getPreproc_If_CompareAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_4_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_5_0, ">=");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 6 :
            	            // InternalIDL.g:759:6: ( (lv_op_6_0= '<=' ) )
            	            {
            	            // InternalIDL.g:759:6: ( (lv_op_6_0= '<=' ) )
            	            // InternalIDL.g:760:1: (lv_op_6_0= '<=' )
            	            {
            	            // InternalIDL.g:760:1: (lv_op_6_0= '<=' )
            	            // InternalIDL.g:761:3: lv_op_6_0= '<='
            	            {
            	            lv_op_6_0=(Token)match(input,34,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_6_0, grammarAccess.getPreproc_If_CompareAccess().getOpLessThanSignEqualsSignKeyword_1_0_5_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getPreproc_If_CompareRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_6_0, "<=");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalIDL.g:774:3: ( (lv_rhs_7_0= rulePreproc_If_Val ) )
            	    // InternalIDL.g:775:1: (lv_rhs_7_0= rulePreproc_If_Val )
            	    {
            	    // InternalIDL.g:775:1: (lv_rhs_7_0= rulePreproc_If_Val )
            	    // InternalIDL.g:776:3: lv_rhs_7_0= rulePreproc_If_Val
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPreproc_If_CompareAccess().getRhsPreproc_If_ValParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_12);
            	    lv_rhs_7_0=rulePreproc_If_Val();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPreproc_If_CompareRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_7_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Preproc_If_Val");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop11;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, rulePreproc_If_Compare_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_If_Compare"


    // $ANTLR start "entryRulePreproc_If_Val"
    // InternalIDL.g:800:1: entryRulePreproc_If_Val returns [EObject current=null] : iv_rulePreproc_If_Val= rulePreproc_If_Val EOF ;
    public final EObject entryRulePreproc_If_Val() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_If_Val_StartIndex = input.index();
        EObject iv_rulePreproc_If_Val = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return current; }
            // InternalIDL.g:801:2: (iv_rulePreproc_If_Val= rulePreproc_If_Val EOF )
            // InternalIDL.g:802:2: iv_rulePreproc_If_Val= rulePreproc_If_Val EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_If_ValRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_If_Val=rulePreproc_If_Val();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_If_Val; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, entryRulePreproc_If_Val_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_If_Val"


    // $ANTLR start "rulePreproc_If_Val"
    // InternalIDL.g:809:1: rulePreproc_If_Val returns [EObject current=null] : ( (lv_value_0_0= ruleConstExp ) ) ;
    public final EObject rulePreproc_If_Val() throws RecognitionException {
        EObject current = null;
        int rulePreproc_If_Val_StartIndex = input.index();
        EObject lv_value_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return current; }
            // InternalIDL.g:812:28: ( ( (lv_value_0_0= ruleConstExp ) ) )
            // InternalIDL.g:813:1: ( (lv_value_0_0= ruleConstExp ) )
            {
            // InternalIDL.g:813:1: ( (lv_value_0_0= ruleConstExp ) )
            // InternalIDL.g:814:1: (lv_value_0_0= ruleConstExp )
            {
            // InternalIDL.g:814:1: (lv_value_0_0= ruleConstExp )
            // InternalIDL.g:815:3: lv_value_0_0= ruleConstExp
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPreproc_If_ValAccess().getValueConstExpParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_value_0_0=ruleConstExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPreproc_If_ValRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConstExp");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, rulePreproc_If_Val_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_If_Val"


    // $ANTLR start "entryRulePreproc_Else"
    // InternalIDL.g:839:1: entryRulePreproc_Else returns [EObject current=null] : iv_rulePreproc_Else= rulePreproc_Else EOF ;
    public final EObject entryRulePreproc_Else() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Else_StartIndex = input.index();
        EObject iv_rulePreproc_Else = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return current; }
            // InternalIDL.g:840:2: (iv_rulePreproc_Else= rulePreproc_Else EOF )
            // InternalIDL.g:841:2: iv_rulePreproc_Else= rulePreproc_Else EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_ElseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Else=rulePreproc_Else();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Else; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, entryRulePreproc_Else_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Else"


    // $ANTLR start "rulePreproc_Else"
    // InternalIDL.g:848:1: rulePreproc_Else returns [EObject current=null] : ( () otherlv_1= '#else' ) ;
    public final EObject rulePreproc_Else() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Else_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return current; }
            // InternalIDL.g:851:28: ( ( () otherlv_1= '#else' ) )
            // InternalIDL.g:852:1: ( () otherlv_1= '#else' )
            {
            // InternalIDL.g:852:1: ( () otherlv_1= '#else' )
            // InternalIDL.g:852:2: () otherlv_1= '#else'
            {
            // InternalIDL.g:852:2: ()
            // InternalIDL.g:853:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPreproc_ElseAccess().getPreproc_ElseAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,35,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_ElseAccess().getElseKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, rulePreproc_Else_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Else"


    // $ANTLR start "entryRulePreproc_Error"
    // InternalIDL.g:873:1: entryRulePreproc_Error returns [EObject current=null] : iv_rulePreproc_Error= rulePreproc_Error EOF ;
    public final EObject entryRulePreproc_Error() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Error_StartIndex = input.index();
        EObject iv_rulePreproc_Error = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return current; }
            // InternalIDL.g:874:2: (iv_rulePreproc_Error= rulePreproc_Error EOF )
            // InternalIDL.g:875:2: iv_rulePreproc_Error= rulePreproc_Error EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_ErrorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Error=rulePreproc_Error();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Error; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, entryRulePreproc_Error_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Error"


    // $ANTLR start "rulePreproc_Error"
    // InternalIDL.g:882:1: rulePreproc_Error returns [EObject current=null] : (otherlv_0= '#error' ( (lv_value_1_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Error() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Error_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_value_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return current; }
            // InternalIDL.g:885:28: ( (otherlv_0= '#error' ( (lv_value_1_0= RULE_STRING ) ) ) )
            // InternalIDL.g:886:1: (otherlv_0= '#error' ( (lv_value_1_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:886:1: (otherlv_0= '#error' ( (lv_value_1_0= RULE_STRING ) ) )
            // InternalIDL.g:886:3: otherlv_0= '#error' ( (lv_value_1_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,36,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_ErrorAccess().getErrorKeyword_0());
                  
            }
            // InternalIDL.g:890:1: ( (lv_value_1_0= RULE_STRING ) )
            // InternalIDL.g:891:1: (lv_value_1_0= RULE_STRING )
            {
            // InternalIDL.g:891:1: (lv_value_1_0= RULE_STRING )
            // InternalIDL.g:892:3: lv_value_1_0= RULE_STRING
            {
            lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_ErrorAccess().getValueSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_ErrorRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, rulePreproc_Error_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Error"


    // $ANTLR start "entryRulePreproc_Define"
    // InternalIDL.g:916:1: entryRulePreproc_Define returns [EObject current=null] : iv_rulePreproc_Define= rulePreproc_Define EOF ;
    public final EObject entryRulePreproc_Define() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Define_StartIndex = input.index();
        EObject iv_rulePreproc_Define = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return current; }
            // InternalIDL.g:917:2: (iv_rulePreproc_Define= rulePreproc_Define EOF )
            // InternalIDL.g:918:2: iv_rulePreproc_Define= rulePreproc_Define EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_DefineRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Define=rulePreproc_Define();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Define; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, entryRulePreproc_Define_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Define"


    // $ANTLR start "rulePreproc_Define"
    // InternalIDL.g:925:1: rulePreproc_Define returns [EObject current=null] : (otherlv_0= '#define ' ( (lv_value_1_0= RULE_ID ) ) ( (lv_exp_2_0= ruleConstExp ) )? ) ;
    public final EObject rulePreproc_Define() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Define_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_value_1_0=null;
        EObject lv_exp_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return current; }
            // InternalIDL.g:928:28: ( (otherlv_0= '#define ' ( (lv_value_1_0= RULE_ID ) ) ( (lv_exp_2_0= ruleConstExp ) )? ) )
            // InternalIDL.g:929:1: (otherlv_0= '#define ' ( (lv_value_1_0= RULE_ID ) ) ( (lv_exp_2_0= ruleConstExp ) )? )
            {
            // InternalIDL.g:929:1: (otherlv_0= '#define ' ( (lv_value_1_0= RULE_ID ) ) ( (lv_exp_2_0= ruleConstExp ) )? )
            // InternalIDL.g:929:3: otherlv_0= '#define ' ( (lv_value_1_0= RULE_ID ) ) ( (lv_exp_2_0= ruleConstExp ) )?
            {
            otherlv_0=(Token)match(input,37,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_DefineAccess().getDefineKeyword_0());
                  
            }
            // InternalIDL.g:933:1: ( (lv_value_1_0= RULE_ID ) )
            // InternalIDL.g:934:1: (lv_value_1_0= RULE_ID )
            {
            // InternalIDL.g:934:1: (lv_value_1_0= RULE_ID )
            // InternalIDL.g:935:3: lv_value_1_0= RULE_ID
            {
            lv_value_1_0=(Token)match(input,RULE_ID,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_1_0, grammarAccess.getPreproc_DefineAccess().getValueIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_DefineRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:951:2: ( (lv_exp_2_0= ruleConstExp ) )?
            int alt12=2;
            switch ( input.LA(1) ) {
                case RULE_STRING:
                case RULE_HEX_LITERAL:
                case RULE_CHARACTER_LITERAL:
                case RULE_FLOATING_PT_LITERAL:
                case RULE_INTEGER_LITERAL:
                case RULE_BOOLEAN_LITERAL:
                case 71:
                case 112:
                case 113:
                case 117:
                    {
                    alt12=1;
                    }
                    break;
                case 42:
                    {
                    int LA12_2 = input.LA(2);

                    if ( (LA12_2==RULE_ID) ) {
                        switch ( input.LA(3) ) {
                            case 42:
                                {
                                int LA12_5 = input.LA(4);

                                if ( (LA12_5==RULE_ID) ) {
                                    int LA12_7 = input.LA(5);

                                    if ( (synpred26_InternalIDL()) ) {
                                        alt12=1;
                                    }
                                }
                                }
                                break;
                            case RULE_ID:
                                {
                                int LA12_6 = input.LA(4);

                                if ( (LA12_6==RULE_ID||LA12_6==42) ) {
                                    alt12=1;
                                }
                                }
                                break;
                            case EOF:
                            case RULE_SL_COMMENT:
                            case 20:
                            case 24:
                            case 25:
                            case 26:
                            case 27:
                            case 28:
                            case 35:
                            case 36:
                            case 37:
                            case 38:
                            case 39:
                            case 54:
                            case 55:
                            case 58:
                            case 60:
                            case 61:
                            case 62:
                            case 63:
                            case 66:
                            case 69:
                            case 73:
                            case 74:
                            case 76:
                            case 77:
                            case 78:
                            case 79:
                            case 80:
                            case 81:
                            case 82:
                            case 83:
                            case 84:
                            case 85:
                            case 86:
                            case 87:
                            case 88:
                            case 89:
                            case 90:
                            case 93:
                            case 94:
                            case 95:
                            case 96:
                            case 97:
                            case 101:
                            case 103:
                            case 105:
                            case 107:
                            case 108:
                            case 109:
                            case 110:
                            case 111:
                            case 112:
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 118:
                            case 120:
                            case 121:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 129:
                            case 130:
                            case 131:
                            case 132:
                            case 134:
                            case 135:
                            case 136:
                            case 137:
                            case 138:
                            case 139:
                                {
                                alt12=1;
                                }
                                break;
                        }

                    }
                    }
                    break;
                case RULE_ID:
                    {
                    switch ( input.LA(2) ) {
                        case 42:
                            {
                            int LA12_5 = input.LA(3);

                            if ( (LA12_5==RULE_ID) ) {
                                int LA12_7 = input.LA(4);

                                if ( (synpred26_InternalIDL()) ) {
                                    alt12=1;
                                }
                            }
                            }
                            break;
                        case RULE_ID:
                            {
                            int LA12_6 = input.LA(3);

                            if ( (LA12_6==RULE_ID||LA12_6==42) ) {
                                alt12=1;
                            }
                            }
                            break;
                        case EOF:
                        case RULE_SL_COMMENT:
                        case 20:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 54:
                        case 55:
                        case 58:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 66:
                        case 69:
                        case 73:
                        case 74:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 80:
                        case 81:
                        case 82:
                        case 83:
                        case 84:
                        case 85:
                        case 86:
                        case 87:
                        case 88:
                        case 89:
                        case 90:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 97:
                        case 101:
                        case 103:
                        case 105:
                        case 107:
                        case 108:
                        case 109:
                        case 110:
                        case 111:
                        case 112:
                        case 113:
                        case 114:
                        case 115:
                        case 116:
                        case 118:
                        case 120:
                        case 121:
                        case 123:
                        case 124:
                        case 125:
                        case 126:
                        case 129:
                        case 130:
                        case 131:
                        case 132:
                        case 134:
                        case 135:
                        case 136:
                        case 137:
                        case 138:
                        case 139:
                            {
                            alt12=1;
                            }
                            break;
                    }

                    }
                    break;
            }

            switch (alt12) {
                case 1 :
                    // InternalIDL.g:952:1: (lv_exp_2_0= ruleConstExp )
                    {
                    // InternalIDL.g:952:1: (lv_exp_2_0= ruleConstExp )
                    // InternalIDL.g:953:3: lv_exp_2_0= ruleConstExp
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getPreproc_DefineAccess().getExpConstExpParserRuleCall_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_exp_2_0=ruleConstExp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getPreproc_DefineRule());
                      	        }
                             		set(
                             			current, 
                             			"exp",
                              		lv_exp_2_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConstExp");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, rulePreproc_Define_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Define"


    // $ANTLR start "entryRulePreproc_Endif"
    // InternalIDL.g:977:1: entryRulePreproc_Endif returns [EObject current=null] : iv_rulePreproc_Endif= rulePreproc_Endif EOF ;
    public final EObject entryRulePreproc_Endif() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Endif_StartIndex = input.index();
        EObject iv_rulePreproc_Endif = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return current; }
            // InternalIDL.g:978:2: (iv_rulePreproc_Endif= rulePreproc_Endif EOF )
            // InternalIDL.g:979:2: iv_rulePreproc_Endif= rulePreproc_Endif EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_EndifRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Endif=rulePreproc_Endif();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Endif; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, entryRulePreproc_Endif_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Endif"


    // $ANTLR start "rulePreproc_Endif"
    // InternalIDL.g:986:1: rulePreproc_Endif returns [EObject current=null] : ( () otherlv_1= '#endif' ) ;
    public final EObject rulePreproc_Endif() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Endif_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return current; }
            // InternalIDL.g:989:28: ( ( () otherlv_1= '#endif' ) )
            // InternalIDL.g:990:1: ( () otherlv_1= '#endif' )
            {
            // InternalIDL.g:990:1: ( () otherlv_1= '#endif' )
            // InternalIDL.g:990:2: () otherlv_1= '#endif'
            {
            // InternalIDL.g:990:2: ()
            // InternalIDL.g:991:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPreproc_EndifAccess().getPreproc_EndifAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_EndifAccess().getEndifKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, rulePreproc_Endif_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Endif"


    // $ANTLR start "entryRulePreproc_Pragma"
    // InternalIDL.g:1011:1: entryRulePreproc_Pragma returns [EObject current=null] : iv_rulePreproc_Pragma= rulePreproc_Pragma EOF ;
    public final EObject entryRulePreproc_Pragma() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return current; }
            // InternalIDL.g:1012:2: (iv_rulePreproc_Pragma= rulePreproc_Pragma EOF )
            // InternalIDL.g:1013:2: iv_rulePreproc_Pragma= rulePreproc_Pragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_PragmaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma=rulePreproc_Pragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, entryRulePreproc_Pragma_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma"


    // $ANTLR start "rulePreproc_Pragma"
    // InternalIDL.g:1020:1: rulePreproc_Pragma returns [EObject current=null] : (this_Preproc_Pragma_Prefix_0= rulePreproc_Pragma_Prefix | this_Preproc_Pragma_Conn_Type_1= rulePreproc_Pragma_Conn_Type | this_Preproc_Pragma_Ciao_Lem_2= rulePreproc_Pragma_Ciao_Lem | this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3= rulePreproc_Pragma_Ciao_Ami4ccm_Interface | this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle | this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5= rulePreproc_Pragma_Ciao_Ami4ccm_Idl | this_Preproc_Pragma_Ndds_6= rulePreproc_Pragma_Ndds | this_Preproc_Pragma_Component_7= rulePreproc_Pragma_Component | this_Preproc_Pragma_Home_8= rulePreproc_Pragma_Home | this_Preproc_Pragma_DDS4CCM_Impl_9= rulePreproc_Pragma_DDS4CCM_Impl | this_Preproc_Pragma_Misc_10= rulePreproc_Pragma_Misc ) ;
    public final EObject rulePreproc_Pragma() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_StartIndex = input.index();
        EObject this_Preproc_Pragma_Prefix_0 = null;

        EObject this_Preproc_Pragma_Conn_Type_1 = null;

        EObject this_Preproc_Pragma_Ciao_Lem_2 = null;

        EObject this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3 = null;

        EObject this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4 = null;

        EObject this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5 = null;

        EObject this_Preproc_Pragma_Ndds_6 = null;

        EObject this_Preproc_Pragma_Component_7 = null;

        EObject this_Preproc_Pragma_Home_8 = null;

        EObject this_Preproc_Pragma_DDS4CCM_Impl_9 = null;

        EObject this_Preproc_Pragma_Misc_10 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return current; }
            // InternalIDL.g:1023:28: ( (this_Preproc_Pragma_Prefix_0= rulePreproc_Pragma_Prefix | this_Preproc_Pragma_Conn_Type_1= rulePreproc_Pragma_Conn_Type | this_Preproc_Pragma_Ciao_Lem_2= rulePreproc_Pragma_Ciao_Lem | this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3= rulePreproc_Pragma_Ciao_Ami4ccm_Interface | this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle | this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5= rulePreproc_Pragma_Ciao_Ami4ccm_Idl | this_Preproc_Pragma_Ndds_6= rulePreproc_Pragma_Ndds | this_Preproc_Pragma_Component_7= rulePreproc_Pragma_Component | this_Preproc_Pragma_Home_8= rulePreproc_Pragma_Home | this_Preproc_Pragma_DDS4CCM_Impl_9= rulePreproc_Pragma_DDS4CCM_Impl | this_Preproc_Pragma_Misc_10= rulePreproc_Pragma_Misc ) )
            // InternalIDL.g:1024:1: (this_Preproc_Pragma_Prefix_0= rulePreproc_Pragma_Prefix | this_Preproc_Pragma_Conn_Type_1= rulePreproc_Pragma_Conn_Type | this_Preproc_Pragma_Ciao_Lem_2= rulePreproc_Pragma_Ciao_Lem | this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3= rulePreproc_Pragma_Ciao_Ami4ccm_Interface | this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle | this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5= rulePreproc_Pragma_Ciao_Ami4ccm_Idl | this_Preproc_Pragma_Ndds_6= rulePreproc_Pragma_Ndds | this_Preproc_Pragma_Component_7= rulePreproc_Pragma_Component | this_Preproc_Pragma_Home_8= rulePreproc_Pragma_Home | this_Preproc_Pragma_DDS4CCM_Impl_9= rulePreproc_Pragma_DDS4CCM_Impl | this_Preproc_Pragma_Misc_10= rulePreproc_Pragma_Misc )
            {
            // InternalIDL.g:1024:1: (this_Preproc_Pragma_Prefix_0= rulePreproc_Pragma_Prefix | this_Preproc_Pragma_Conn_Type_1= rulePreproc_Pragma_Conn_Type | this_Preproc_Pragma_Ciao_Lem_2= rulePreproc_Pragma_Ciao_Lem | this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3= rulePreproc_Pragma_Ciao_Ami4ccm_Interface | this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle | this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5= rulePreproc_Pragma_Ciao_Ami4ccm_Idl | this_Preproc_Pragma_Ndds_6= rulePreproc_Pragma_Ndds | this_Preproc_Pragma_Component_7= rulePreproc_Pragma_Component | this_Preproc_Pragma_Home_8= rulePreproc_Pragma_Home | this_Preproc_Pragma_DDS4CCM_Impl_9= rulePreproc_Pragma_DDS4CCM_Impl | this_Preproc_Pragma_Misc_10= rulePreproc_Pragma_Misc )
            int alt13=11;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalIDL.g:1025:2: this_Preproc_Pragma_Prefix_0= rulePreproc_Pragma_Prefix
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_PrefixParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Prefix_0=rulePreproc_Pragma_Prefix();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Prefix_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:1038:2: this_Preproc_Pragma_Conn_Type_1= rulePreproc_Pragma_Conn_Type
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Conn_TypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Conn_Type_1=rulePreproc_Pragma_Conn_Type();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Conn_Type_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:1051:2: this_Preproc_Pragma_Ciao_Lem_2= rulePreproc_Pragma_Ciao_Lem
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_LemParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Ciao_Lem_2=rulePreproc_Pragma_Ciao_Lem();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Ciao_Lem_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:1064:2: this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3= rulePreproc_Pragma_Ciao_Ami4ccm_Interface
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_Ami4ccm_InterfaceParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3=rulePreproc_Pragma_Ciao_Ami4ccm_Interface();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIDL.g:1077:2: this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4=rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalIDL.g:1090:2: this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5= rulePreproc_Pragma_Ciao_Ami4ccm_Idl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_Ciao_Ami4ccm_IdlParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5=rulePreproc_Pragma_Ciao_Ami4ccm_Idl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalIDL.g:1103:2: this_Preproc_Pragma_Ndds_6= rulePreproc_Pragma_Ndds
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_NddsParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Ndds_6=rulePreproc_Pragma_Ndds();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Ndds_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalIDL.g:1116:2: this_Preproc_Pragma_Component_7= rulePreproc_Pragma_Component
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_ComponentParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Component_7=rulePreproc_Pragma_Component();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Component_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalIDL.g:1129:2: this_Preproc_Pragma_Home_8= rulePreproc_Pragma_Home
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_HomeParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Home_8=rulePreproc_Pragma_Home();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Home_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalIDL.g:1142:2: this_Preproc_Pragma_DDS4CCM_Impl_9= rulePreproc_Pragma_DDS4CCM_Impl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_DDS4CCM_ImplParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_DDS4CCM_Impl_9=rulePreproc_Pragma_DDS4CCM_Impl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_DDS4CCM_Impl_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalIDL.g:1155:2: this_Preproc_Pragma_Misc_10= rulePreproc_Pragma_Misc
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPreproc_PragmaAccess().getPreproc_Pragma_MiscParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_Pragma_Misc_10=rulePreproc_Pragma_Misc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_Pragma_Misc_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, rulePreproc_Pragma_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma"


    // $ANTLR start "entryRulePreproc_Pragma_Prefix"
    // InternalIDL.g:1174:1: entryRulePreproc_Pragma_Prefix returns [EObject current=null] : iv_rulePreproc_Pragma_Prefix= rulePreproc_Pragma_Prefix EOF ;
    public final EObject entryRulePreproc_Pragma_Prefix() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Prefix_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Prefix = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return current; }
            // InternalIDL.g:1175:2: (iv_rulePreproc_Pragma_Prefix= rulePreproc_Pragma_Prefix EOF )
            // InternalIDL.g:1176:2: iv_rulePreproc_Pragma_Prefix= rulePreproc_Pragma_Prefix EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_PrefixRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Prefix=rulePreproc_Pragma_Prefix();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Prefix; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, entryRulePreproc_Pragma_Prefix_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Prefix"


    // $ANTLR start "rulePreproc_Pragma_Prefix"
    // InternalIDL.g:1183:1: rulePreproc_Pragma_Prefix returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'prefix' ( (lv_value_2_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Prefix() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Prefix_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_value_2_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return current; }
            // InternalIDL.g:1186:28: ( (otherlv_0= '#pragma' otherlv_1= 'prefix' ( (lv_value_2_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1187:1: (otherlv_0= '#pragma' otherlv_1= 'prefix' ( (lv_value_2_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1187:1: (otherlv_0= '#pragma' otherlv_1= 'prefix' ( (lv_value_2_0= RULE_STRING ) ) )
            // InternalIDL.g:1187:3: otherlv_0= '#pragma' otherlv_1= 'prefix' ( (lv_value_2_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_PrefixAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,40,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_PrefixAccess().getPrefixKeyword_1());
                  
            }
            // InternalIDL.g:1195:1: ( (lv_value_2_0= RULE_STRING ) )
            // InternalIDL.g:1196:1: (lv_value_2_0= RULE_STRING )
            {
            // InternalIDL.g:1196:1: (lv_value_2_0= RULE_STRING )
            // InternalIDL.g:1197:3: lv_value_2_0= RULE_STRING
            {
            lv_value_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_2_0, grammarAccess.getPreproc_Pragma_PrefixAccess().getValueSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_PrefixRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, rulePreproc_Pragma_Prefix_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Prefix"


    // $ANTLR start "entryRulePreproc_Pragma_Conn_Type"
    // InternalIDL.g:1221:1: entryRulePreproc_Pragma_Conn_Type returns [EObject current=null] : iv_rulePreproc_Pragma_Conn_Type= rulePreproc_Pragma_Conn_Type EOF ;
    public final EObject entryRulePreproc_Pragma_Conn_Type() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Conn_Type_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Conn_Type = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return current; }
            // InternalIDL.g:1222:2: (iv_rulePreproc_Pragma_Conn_Type= rulePreproc_Pragma_Conn_Type EOF )
            // InternalIDL.g:1223:2: iv_rulePreproc_Pragma_Conn_Type= rulePreproc_Pragma_Conn_Type EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_Conn_TypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Conn_Type=rulePreproc_Pragma_Conn_Type();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Conn_Type; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, entryRulePreproc_Pragma_Conn_Type_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Conn_Type"


    // $ANTLR start "rulePreproc_Pragma_Conn_Type"
    // InternalIDL.g:1230:1: rulePreproc_Pragma_Conn_Type returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'conntype' ( (lv_valuePort_2_0= RULE_ID ) ) (otherlv_3= '::' this_ID_4= RULE_ID )* ( (lv_valueConnType_5_0= RULE_ID ) ) ) ;
    public final EObject rulePreproc_Pragma_Conn_Type() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Conn_Type_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_valuePort_2_0=null;
        Token otherlv_3=null;
        Token this_ID_4=null;
        Token lv_valueConnType_5_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return current; }
            // InternalIDL.g:1233:28: ( (otherlv_0= '#pragma' otherlv_1= 'conntype' ( (lv_valuePort_2_0= RULE_ID ) ) (otherlv_3= '::' this_ID_4= RULE_ID )* ( (lv_valueConnType_5_0= RULE_ID ) ) ) )
            // InternalIDL.g:1234:1: (otherlv_0= '#pragma' otherlv_1= 'conntype' ( (lv_valuePort_2_0= RULE_ID ) ) (otherlv_3= '::' this_ID_4= RULE_ID )* ( (lv_valueConnType_5_0= RULE_ID ) ) )
            {
            // InternalIDL.g:1234:1: (otherlv_0= '#pragma' otherlv_1= 'conntype' ( (lv_valuePort_2_0= RULE_ID ) ) (otherlv_3= '::' this_ID_4= RULE_ID )* ( (lv_valueConnType_5_0= RULE_ID ) ) )
            // InternalIDL.g:1234:3: otherlv_0= '#pragma' otherlv_1= 'conntype' ( (lv_valuePort_2_0= RULE_ID ) ) (otherlv_3= '::' this_ID_4= RULE_ID )* ( (lv_valueConnType_5_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,41,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getConntypeKeyword_1());
                  
            }
            // InternalIDL.g:1242:1: ( (lv_valuePort_2_0= RULE_ID ) )
            // InternalIDL.g:1243:1: (lv_valuePort_2_0= RULE_ID )
            {
            // InternalIDL.g:1243:1: (lv_valuePort_2_0= RULE_ID )
            // InternalIDL.g:1244:3: lv_valuePort_2_0= RULE_ID
            {
            lv_valuePort_2_0=(Token)match(input,RULE_ID,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_valuePort_2_0, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getValuePortIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_Conn_TypeRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"valuePort",
                      		lv_valuePort_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:1260:2: (otherlv_3= '::' this_ID_4= RULE_ID )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( (LA14_0==42) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalIDL.g:1260:4: otherlv_3= '::' this_ID_4= RULE_ID
            	    {
            	    otherlv_3=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getColonColonKeyword_3_0());
            	          
            	    }
            	    this_ID_4=(Token)match(input,RULE_ID,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_4, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getIDTerminalRuleCall_3_1()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            // InternalIDL.g:1268:3: ( (lv_valueConnType_5_0= RULE_ID ) )
            // InternalIDL.g:1269:1: (lv_valueConnType_5_0= RULE_ID )
            {
            // InternalIDL.g:1269:1: (lv_valueConnType_5_0= RULE_ID )
            // InternalIDL.g:1270:3: lv_valueConnType_5_0= RULE_ID
            {
            lv_valueConnType_5_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_valueConnType_5_0, grammarAccess.getPreproc_Pragma_Conn_TypeAccess().getValueConnTypeIDTerminalRuleCall_4_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_Conn_TypeRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"valueConnType",
                      		lv_valueConnType_5_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, rulePreproc_Pragma_Conn_Type_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Conn_Type"


    // $ANTLR start "entryRulePreproc_Pragma_Ciao_Lem"
    // InternalIDL.g:1294:1: entryRulePreproc_Pragma_Ciao_Lem returns [EObject current=null] : iv_rulePreproc_Pragma_Ciao_Lem= rulePreproc_Pragma_Ciao_Lem EOF ;
    public final EObject entryRulePreproc_Pragma_Ciao_Lem() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Ciao_Lem_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Ciao_Lem = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return current; }
            // InternalIDL.g:1295:2: (iv_rulePreproc_Pragma_Ciao_Lem= rulePreproc_Pragma_Ciao_Lem EOF )
            // InternalIDL.g:1296:2: iv_rulePreproc_Pragma_Ciao_Lem= rulePreproc_Pragma_Ciao_Lem EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_LemRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Ciao_Lem=rulePreproc_Pragma_Ciao_Lem();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Ciao_Lem; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, entryRulePreproc_Pragma_Ciao_Lem_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Ciao_Lem"


    // $ANTLR start "rulePreproc_Pragma_Ciao_Lem"
    // InternalIDL.g:1303:1: rulePreproc_Pragma_Ciao_Lem returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'lem' ( (lv_value_3_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Ciao_Lem() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Ciao_Lem_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_value_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return current; }
            // InternalIDL.g:1306:28: ( (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'lem' ( (lv_value_3_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1307:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'lem' ( (lv_value_3_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1307:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'lem' ( (lv_value_3_0= RULE_STRING ) ) )
            // InternalIDL.g:1307:3: otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'lem' ( (lv_value_3_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,43,FOLLOW_17); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getCiaoKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,44,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getLemKeyword_2());
                  
            }
            // InternalIDL.g:1319:1: ( (lv_value_3_0= RULE_STRING ) )
            // InternalIDL.g:1320:1: (lv_value_3_0= RULE_STRING )
            {
            // InternalIDL.g:1320:1: (lv_value_3_0= RULE_STRING )
            // InternalIDL.g:1321:3: lv_value_3_0= RULE_STRING
            {
            lv_value_3_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_LemAccess().getValueSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_LemRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, rulePreproc_Pragma_Ciao_Lem_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Ciao_Lem"


    // $ANTLR start "entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface"
    // InternalIDL.g:1345:1: entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface returns [EObject current=null] : iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface= rulePreproc_Pragma_Ciao_Ami4ccm_Interface EOF ;
    public final EObject entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return current; }
            // InternalIDL.g:1346:2: (iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface= rulePreproc_Pragma_Ciao_Ami4ccm_Interface EOF )
            // InternalIDL.g:1347:2: iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface= rulePreproc_Pragma_Ciao_Ami4ccm_Interface EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface=rulePreproc_Pragma_Ciao_Ami4ccm_Interface();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Ciao_Ami4ccm_Interface; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Ciao_Ami4ccm_Interface"


    // $ANTLR start "rulePreproc_Pragma_Ciao_Ami4ccm_Interface"
    // InternalIDL.g:1354:1: rulePreproc_Pragma_Ciao_Ami4ccm_Interface returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm interface' ( (lv_value_3_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Ciao_Ami4ccm_Interface() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Ciao_Ami4ccm_Interface_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_value_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return current; }
            // InternalIDL.g:1357:28: ( (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm interface' ( (lv_value_3_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1358:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm interface' ( (lv_value_3_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1358:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm interface' ( (lv_value_3_0= RULE_STRING ) ) )
            // InternalIDL.g:1358:3: otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm interface' ( (lv_value_3_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,43,FOLLOW_18); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getCiaoKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,45,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getAmi4ccmInterfaceKeyword_2());
                  
            }
            // InternalIDL.g:1370:1: ( (lv_value_3_0= RULE_STRING ) )
            // InternalIDL.g:1371:1: (lv_value_3_0= RULE_STRING )
            {
            // InternalIDL.g:1371:1: (lv_value_3_0= RULE_STRING )
            // InternalIDL.g:1372:3: lv_value_3_0= RULE_STRING
            {
            lv_value_3_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceAccess().getValueSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_InterfaceRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, rulePreproc_Pragma_Ciao_Ami4ccm_Interface_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Ciao_Ami4ccm_Interface"


    // $ANTLR start "entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle"
    // InternalIDL.g:1396:1: entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle returns [EObject current=null] : iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle EOF ;
    public final EObject entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return current; }
            // InternalIDL.g:1397:2: (iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle EOF )
            // InternalIDL.g:1398:2: iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle=rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Ciao_Ami4ccm_Receptacle"


    // $ANTLR start "rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle"
    // InternalIDL.g:1405:1: rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm receptacle' ( (lv_value_3_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_value_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return current; }
            // InternalIDL.g:1408:28: ( (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm receptacle' ( (lv_value_3_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1409:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm receptacle' ( (lv_value_3_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1409:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm receptacle' ( (lv_value_3_0= RULE_STRING ) ) )
            // InternalIDL.g:1409:3: otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm receptacle' ( (lv_value_3_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,43,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getCiaoKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,46,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getAmi4ccmReceptacleKeyword_2());
                  
            }
            // InternalIDL.g:1421:1: ( (lv_value_3_0= RULE_STRING ) )
            // InternalIDL.g:1422:1: (lv_value_3_0= RULE_STRING )
            {
            // InternalIDL.g:1422:1: (lv_value_3_0= RULE_STRING )
            // InternalIDL.g:1423:3: lv_value_3_0= RULE_STRING
            {
            lv_value_3_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleAccess().getValueSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_ReceptacleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle"


    // $ANTLR start "entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl"
    // InternalIDL.g:1447:1: entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl returns [EObject current=null] : iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl= rulePreproc_Pragma_Ciao_Ami4ccm_Idl EOF ;
    public final EObject entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return current; }
            // InternalIDL.g:1448:2: (iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl= rulePreproc_Pragma_Ciao_Ami4ccm_Idl EOF )
            // InternalIDL.g:1449:2: iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl= rulePreproc_Pragma_Ciao_Ami4ccm_Idl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl=rulePreproc_Pragma_Ciao_Ami4ccm_Idl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Ciao_Ami4ccm_Idl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Ciao_Ami4ccm_Idl"


    // $ANTLR start "rulePreproc_Pragma_Ciao_Ami4ccm_Idl"
    // InternalIDL.g:1456:1: rulePreproc_Pragma_Ciao_Ami4ccm_Idl returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm idl' ( (lv_value_3_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Ciao_Ami4ccm_Idl() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Ciao_Ami4ccm_Idl_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_value_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return current; }
            // InternalIDL.g:1459:28: ( (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm idl' ( (lv_value_3_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1460:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm idl' ( (lv_value_3_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1460:1: (otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm idl' ( (lv_value_3_0= RULE_STRING ) ) )
            // InternalIDL.g:1460:3: otherlv_0= '#pragma' otherlv_1= 'ciao' otherlv_2= 'ami4ccm idl' ( (lv_value_3_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,43,FOLLOW_20); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getCiaoKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,47,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getAmi4ccmIdlKeyword_2());
                  
            }
            // InternalIDL.g:1472:1: ( (lv_value_3_0= RULE_STRING ) )
            // InternalIDL.g:1473:1: (lv_value_3_0= RULE_STRING )
            {
            // InternalIDL.g:1473:1: (lv_value_3_0= RULE_STRING )
            // InternalIDL.g:1474:3: lv_value_3_0= RULE_STRING
            {
            lv_value_3_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlAccess().getValueSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_Ciao_Ami4ccm_IdlRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, rulePreproc_Pragma_Ciao_Ami4ccm_Idl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Ciao_Ami4ccm_Idl"


    // $ANTLR start "entryRulePreproc_Pragma_Ndds"
    // InternalIDL.g:1498:1: entryRulePreproc_Pragma_Ndds returns [EObject current=null] : iv_rulePreproc_Pragma_Ndds= rulePreproc_Pragma_Ndds EOF ;
    public final EObject entryRulePreproc_Pragma_Ndds() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Ndds_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Ndds = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return current; }
            // InternalIDL.g:1499:2: (iv_rulePreproc_Pragma_Ndds= rulePreproc_Pragma_Ndds EOF )
            // InternalIDL.g:1500:2: iv_rulePreproc_Pragma_Ndds= rulePreproc_Pragma_Ndds EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_NddsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Ndds=rulePreproc_Pragma_Ndds();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Ndds; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, entryRulePreproc_Pragma_Ndds_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Ndds"


    // $ANTLR start "rulePreproc_Pragma_Ndds"
    // InternalIDL.g:1507:1: rulePreproc_Pragma_Ndds returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'ndds' otherlv_2= 'typesupport' ( (lv_value_3_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Ndds() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Ndds_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_value_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return current; }
            // InternalIDL.g:1510:28: ( (otherlv_0= '#pragma' otherlv_1= 'ndds' otherlv_2= 'typesupport' ( (lv_value_3_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1511:1: (otherlv_0= '#pragma' otherlv_1= 'ndds' otherlv_2= 'typesupport' ( (lv_value_3_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1511:1: (otherlv_0= '#pragma' otherlv_1= 'ndds' otherlv_2= 'typesupport' ( (lv_value_3_0= RULE_STRING ) ) )
            // InternalIDL.g:1511:3: otherlv_0= '#pragma' otherlv_1= 'ndds' otherlv_2= 'typesupport' ( (lv_value_3_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_NddsAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,48,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_NddsAccess().getNddsKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,49,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_NddsAccess().getTypesupportKeyword_2());
                  
            }
            // InternalIDL.g:1523:1: ( (lv_value_3_0= RULE_STRING ) )
            // InternalIDL.g:1524:1: (lv_value_3_0= RULE_STRING )
            {
            // InternalIDL.g:1524:1: (lv_value_3_0= RULE_STRING )
            // InternalIDL.g:1525:3: lv_value_3_0= RULE_STRING
            {
            lv_value_3_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_NddsAccess().getValueSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_NddsRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, rulePreproc_Pragma_Ndds_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Ndds"


    // $ANTLR start "entryRulePreproc_Pragma_Component"
    // InternalIDL.g:1549:1: entryRulePreproc_Pragma_Component returns [EObject current=null] : iv_rulePreproc_Pragma_Component= rulePreproc_Pragma_Component EOF ;
    public final EObject entryRulePreproc_Pragma_Component() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Component_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Component = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return current; }
            // InternalIDL.g:1550:2: (iv_rulePreproc_Pragma_Component= rulePreproc_Pragma_Component EOF )
            // InternalIDL.g:1551:2: iv_rulePreproc_Pragma_Component= rulePreproc_Pragma_Component EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_ComponentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Component=rulePreproc_Pragma_Component();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Component; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, entryRulePreproc_Pragma_Component_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Component"


    // $ANTLR start "rulePreproc_Pragma_Component"
    // InternalIDL.g:1558:1: rulePreproc_Pragma_Component returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'componentInterface' ( (lv_value_2_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Component() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Component_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_value_2_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return current; }
            // InternalIDL.g:1561:28: ( (otherlv_0= '#pragma' otherlv_1= 'componentInterface' ( (lv_value_2_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1562:1: (otherlv_0= '#pragma' otherlv_1= 'componentInterface' ( (lv_value_2_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1562:1: (otherlv_0= '#pragma' otherlv_1= 'componentInterface' ( (lv_value_2_0= RULE_STRING ) ) )
            // InternalIDL.g:1562:3: otherlv_0= '#pragma' otherlv_1= 'componentInterface' ( (lv_value_2_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_ComponentAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,50,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_ComponentAccess().getComponentInterfaceKeyword_1());
                  
            }
            // InternalIDL.g:1570:1: ( (lv_value_2_0= RULE_STRING ) )
            // InternalIDL.g:1571:1: (lv_value_2_0= RULE_STRING )
            {
            // InternalIDL.g:1571:1: (lv_value_2_0= RULE_STRING )
            // InternalIDL.g:1572:3: lv_value_2_0= RULE_STRING
            {
            lv_value_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_2_0, grammarAccess.getPreproc_Pragma_ComponentAccess().getValueSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_ComponentRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, rulePreproc_Pragma_Component_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Component"


    // $ANTLR start "entryRulePreproc_Pragma_Home"
    // InternalIDL.g:1596:1: entryRulePreproc_Pragma_Home returns [EObject current=null] : iv_rulePreproc_Pragma_Home= rulePreproc_Pragma_Home EOF ;
    public final EObject entryRulePreproc_Pragma_Home() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Home_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Home = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return current; }
            // InternalIDL.g:1597:2: (iv_rulePreproc_Pragma_Home= rulePreproc_Pragma_Home EOF )
            // InternalIDL.g:1598:2: iv_rulePreproc_Pragma_Home= rulePreproc_Pragma_Home EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_HomeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Home=rulePreproc_Pragma_Home();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Home; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, entryRulePreproc_Pragma_Home_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Home"


    // $ANTLR start "rulePreproc_Pragma_Home"
    // InternalIDL.g:1605:1: rulePreproc_Pragma_Home returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'componentHome' ( (lv_value_2_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_Home() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Home_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_value_2_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return current; }
            // InternalIDL.g:1608:28: ( (otherlv_0= '#pragma' otherlv_1= 'componentHome' ( (lv_value_2_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1609:1: (otherlv_0= '#pragma' otherlv_1= 'componentHome' ( (lv_value_2_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1609:1: (otherlv_0= '#pragma' otherlv_1= 'componentHome' ( (lv_value_2_0= RULE_STRING ) ) )
            // InternalIDL.g:1609:3: otherlv_0= '#pragma' otherlv_1= 'componentHome' ( (lv_value_2_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_24); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_HomeAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,51,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_HomeAccess().getComponentHomeKeyword_1());
                  
            }
            // InternalIDL.g:1617:1: ( (lv_value_2_0= RULE_STRING ) )
            // InternalIDL.g:1618:1: (lv_value_2_0= RULE_STRING )
            {
            // InternalIDL.g:1618:1: (lv_value_2_0= RULE_STRING )
            // InternalIDL.g:1619:3: lv_value_2_0= RULE_STRING
            {
            lv_value_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_2_0, grammarAccess.getPreproc_Pragma_HomeAccess().getValueSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_HomeRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, rulePreproc_Pragma_Home_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Home"


    // $ANTLR start "entryRulePreproc_Pragma_DDS4CCM_Impl"
    // InternalIDL.g:1643:1: entryRulePreproc_Pragma_DDS4CCM_Impl returns [EObject current=null] : iv_rulePreproc_Pragma_DDS4CCM_Impl= rulePreproc_Pragma_DDS4CCM_Impl EOF ;
    public final EObject entryRulePreproc_Pragma_DDS4CCM_Impl() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_DDS4CCM_Impl_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_DDS4CCM_Impl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return current; }
            // InternalIDL.g:1644:2: (iv_rulePreproc_Pragma_DDS4CCM_Impl= rulePreproc_Pragma_DDS4CCM_Impl EOF )
            // InternalIDL.g:1645:2: iv_rulePreproc_Pragma_DDS4CCM_Impl= rulePreproc_Pragma_DDS4CCM_Impl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_DDS4CCM_ImplRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_DDS4CCM_Impl=rulePreproc_Pragma_DDS4CCM_Impl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_DDS4CCM_Impl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, entryRulePreproc_Pragma_DDS4CCM_Impl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_DDS4CCM_Impl"


    // $ANTLR start "rulePreproc_Pragma_DDS4CCM_Impl"
    // InternalIDL.g:1652:1: rulePreproc_Pragma_DDS4CCM_Impl returns [EObject current=null] : (otherlv_0= '#pragma' otherlv_1= 'dds4ccm' otherlv_2= 'impl' ( (lv_value_3_0= RULE_STRING ) ) ) ;
    public final EObject rulePreproc_Pragma_DDS4CCM_Impl() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_DDS4CCM_Impl_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_value_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return current; }
            // InternalIDL.g:1655:28: ( (otherlv_0= '#pragma' otherlv_1= 'dds4ccm' otherlv_2= 'impl' ( (lv_value_3_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1656:1: (otherlv_0= '#pragma' otherlv_1= 'dds4ccm' otherlv_2= 'impl' ( (lv_value_3_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1656:1: (otherlv_0= '#pragma' otherlv_1= 'dds4ccm' otherlv_2= 'impl' ( (lv_value_3_0= RULE_STRING ) ) )
            // InternalIDL.g:1656:3: otherlv_0= '#pragma' otherlv_1= 'dds4ccm' otherlv_2= 'impl' ( (lv_value_3_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,39,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getPragmaKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,52,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getDds4ccmKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,53,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getImplKeyword_2());
                  
            }
            // InternalIDL.g:1668:1: ( (lv_value_3_0= RULE_STRING ) )
            // InternalIDL.g:1669:1: (lv_value_3_0= RULE_STRING )
            {
            // InternalIDL.g:1669:1: (lv_value_3_0= RULE_STRING )
            // InternalIDL.g:1670:3: lv_value_3_0= RULE_STRING
            {
            lv_value_3_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_value_3_0, grammarAccess.getPreproc_Pragma_DDS4CCM_ImplAccess().getValueSTRINGTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPreproc_Pragma_DDS4CCM_ImplRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"value",
                      		lv_value_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, rulePreproc_Pragma_DDS4CCM_Impl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_DDS4CCM_Impl"


    // $ANTLR start "entryRulePreproc_Pragma_Misc"
    // InternalIDL.g:1694:1: entryRulePreproc_Pragma_Misc returns [EObject current=null] : iv_rulePreproc_Pragma_Misc= rulePreproc_Pragma_Misc EOF ;
    public final EObject entryRulePreproc_Pragma_Misc() throws RecognitionException {
        EObject current = null;
        int entryRulePreproc_Pragma_Misc_StartIndex = input.index();
        EObject iv_rulePreproc_Pragma_Misc = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return current; }
            // InternalIDL.g:1695:2: (iv_rulePreproc_Pragma_Misc= rulePreproc_Pragma_Misc EOF )
            // InternalIDL.g:1696:2: iv_rulePreproc_Pragma_Misc= rulePreproc_Pragma_Misc EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreproc_Pragma_MiscRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePreproc_Pragma_Misc=rulePreproc_Pragma_Misc();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreproc_Pragma_Misc; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, entryRulePreproc_Pragma_Misc_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePreproc_Pragma_Misc"


    // $ANTLR start "rulePreproc_Pragma_Misc"
    // InternalIDL.g:1703:1: rulePreproc_Pragma_Misc returns [EObject current=null] : ( () otherlv_1= '#pragma' (otherlv_2= 'typesupport' | this_STRING_3= RULE_STRING | this_ID_4= RULE_ID )* ) ;
    public final EObject rulePreproc_Pragma_Misc() throws RecognitionException {
        EObject current = null;
        int rulePreproc_Pragma_Misc_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token this_STRING_3=null;
        Token this_ID_4=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return current; }
            // InternalIDL.g:1706:28: ( ( () otherlv_1= '#pragma' (otherlv_2= 'typesupport' | this_STRING_3= RULE_STRING | this_ID_4= RULE_ID )* ) )
            // InternalIDL.g:1707:1: ( () otherlv_1= '#pragma' (otherlv_2= 'typesupport' | this_STRING_3= RULE_STRING | this_ID_4= RULE_ID )* )
            {
            // InternalIDL.g:1707:1: ( () otherlv_1= '#pragma' (otherlv_2= 'typesupport' | this_STRING_3= RULE_STRING | this_ID_4= RULE_ID )* )
            // InternalIDL.g:1707:2: () otherlv_1= '#pragma' (otherlv_2= 'typesupport' | this_STRING_3= RULE_STRING | this_ID_4= RULE_ID )*
            {
            // InternalIDL.g:1707:2: ()
            // InternalIDL.g:1708:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getPreproc_Pragma_MiscAccess().getPreproc_Pragma_MiscAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getPreproc_Pragma_MiscAccess().getPragmaKeyword_1());
                  
            }
            // InternalIDL.g:1720:1: (otherlv_2= 'typesupport' | this_STRING_3= RULE_STRING | this_ID_4= RULE_ID )*
            loop15:
            do {
                int alt15=4;
                switch ( input.LA(1) ) {
                case RULE_ID:
                    {
                    switch ( input.LA(2) ) {
                    case 42:
                        {
                        int LA15_5 = input.LA(3);

                        if ( (LA15_5==RULE_ID) ) {
                            int LA15_8 = input.LA(4);

                            if ( (synpred40_InternalIDL()) ) {
                                alt15=3;
                            }


                        }


                        }
                        break;
                    case RULE_ID:
                        {
                        int LA15_6 = input.LA(3);

                        if ( (LA15_6==EOF||(LA15_6>=RULE_STRING && LA15_6<=RULE_ID)||LA15_6==RULE_SL_COMMENT||LA15_6==20||(LA15_6>=24 && LA15_6<=28)||(LA15_6>=35 && LA15_6<=39)||LA15_6==42||LA15_6==49||(LA15_6>=54 && LA15_6<=55)||LA15_6==58||(LA15_6>=60 && LA15_6<=63)||LA15_6==66||LA15_6==69||(LA15_6>=73 && LA15_6<=74)||(LA15_6>=76 && LA15_6<=90)||(LA15_6>=93 && LA15_6<=97)||LA15_6==101||LA15_6==103||LA15_6==105||LA15_6==118||(LA15_6>=120 && LA15_6<=121)||(LA15_6>=123 && LA15_6<=126)||(LA15_6>=129 && LA15_6<=132)||(LA15_6>=134 && LA15_6<=139)) ) {
                            alt15=3;
                        }


                        }
                        break;
                    case EOF:
                    case RULE_STRING:
                    case RULE_SL_COMMENT:
                    case 20:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 49:
                    case 54:
                    case 55:
                    case 58:
                    case 60:
                    case 61:
                    case 62:
                    case 63:
                    case 66:
                    case 69:
                    case 73:
                    case 74:
                    case 76:
                    case 77:
                    case 78:
                    case 79:
                    case 80:
                    case 81:
                    case 82:
                    case 83:
                    case 84:
                    case 85:
                    case 86:
                    case 87:
                    case 88:
                    case 89:
                    case 90:
                    case 93:
                    case 94:
                    case 95:
                    case 96:
                    case 97:
                    case 101:
                    case 103:
                    case 105:
                    case 118:
                    case 120:
                    case 121:
                    case 123:
                    case 124:
                    case 125:
                    case 126:
                    case 129:
                    case 130:
                    case 131:
                    case 132:
                    case 134:
                    case 135:
                    case 136:
                    case 137:
                    case 138:
                    case 139:
                        {
                        alt15=3;
                        }
                        break;

                    }

                    }
                    break;
                case 49:
                    {
                    alt15=1;
                    }
                    break;
                case RULE_STRING:
                    {
                    alt15=2;
                    }
                    break;

                }

                switch (alt15) {
            	case 1 :
            	    // InternalIDL.g:1720:3: otherlv_2= 'typesupport'
            	    {
            	    otherlv_2=(Token)match(input,49,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getPreproc_Pragma_MiscAccess().getTypesupportKeyword_2_0());
            	          
            	    }

            	    }
            	    break;
            	case 2 :
            	    // InternalIDL.g:1725:6: this_STRING_3= RULE_STRING
            	    {
            	    this_STRING_3=(Token)match(input,RULE_STRING,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_STRING_3, grammarAccess.getPreproc_Pragma_MiscAccess().getSTRINGTerminalRuleCall_2_1()); 
            	          
            	    }

            	    }
            	    break;
            	case 3 :
            	    // InternalIDL.g:1730:6: this_ID_4= RULE_ID
            	    {
            	    this_ID_4=(Token)match(input,RULE_ID,FOLLOW_27); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {
            	       
            	          newLeafNode(this_ID_4, grammarAccess.getPreproc_Pragma_MiscAccess().getIDTerminalRuleCall_2_2()); 
            	          
            	    }

            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, rulePreproc_Pragma_Misc_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePreproc_Pragma_Misc"


    // $ANTLR start "entryRuleFile_Marker"
    // InternalIDL.g:1742:1: entryRuleFile_Marker returns [EObject current=null] : iv_ruleFile_Marker= ruleFile_Marker EOF ;
    public final EObject entryRuleFile_Marker() throws RecognitionException {
        EObject current = null;
        int entryRuleFile_Marker_StartIndex = input.index();
        EObject iv_ruleFile_Marker = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return current; }
            // InternalIDL.g:1743:2: (iv_ruleFile_Marker= ruleFile_Marker EOF )
            // InternalIDL.g:1744:2: iv_ruleFile_Marker= ruleFile_Marker EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFile_MarkerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFile_Marker=ruleFile_Marker();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFile_Marker; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, entryRuleFile_Marker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFile_Marker"


    // $ANTLR start "ruleFile_Marker"
    // InternalIDL.g:1751:1: ruleFile_Marker returns [EObject current=null] : (otherlv_0= '#file' ( (lv_file_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleFile_Marker() throws RecognitionException {
        EObject current = null;
        int ruleFile_Marker_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_file_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return current; }
            // InternalIDL.g:1754:28: ( (otherlv_0= '#file' ( (lv_file_1_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1755:1: (otherlv_0= '#file' ( (lv_file_1_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1755:1: (otherlv_0= '#file' ( (lv_file_1_0= RULE_STRING ) ) )
            // InternalIDL.g:1755:3: otherlv_0= '#file' ( (lv_file_1_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,54,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFile_MarkerAccess().getFileKeyword_0());
                  
            }
            // InternalIDL.g:1759:1: ( (lv_file_1_0= RULE_STRING ) )
            // InternalIDL.g:1760:1: (lv_file_1_0= RULE_STRING )
            {
            // InternalIDL.g:1760:1: (lv_file_1_0= RULE_STRING )
            // InternalIDL.g:1761:3: lv_file_1_0= RULE_STRING
            {
            lv_file_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_file_1_0, grammarAccess.getFile_MarkerAccess().getFileSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFile_MarkerRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"file",
                      		lv_file_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, ruleFile_Marker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFile_Marker"


    // $ANTLR start "entryRuleExcluded_File_Marker"
    // InternalIDL.g:1785:1: entryRuleExcluded_File_Marker returns [EObject current=null] : iv_ruleExcluded_File_Marker= ruleExcluded_File_Marker EOF ;
    public final EObject entryRuleExcluded_File_Marker() throws RecognitionException {
        EObject current = null;
        int entryRuleExcluded_File_Marker_StartIndex = input.index();
        EObject iv_ruleExcluded_File_Marker = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return current; }
            // InternalIDL.g:1786:2: (iv_ruleExcluded_File_Marker= ruleExcluded_File_Marker EOF )
            // InternalIDL.g:1787:2: iv_ruleExcluded_File_Marker= ruleExcluded_File_Marker EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExcluded_File_MarkerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExcluded_File_Marker=ruleExcluded_File_Marker();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExcluded_File_Marker; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, entryRuleExcluded_File_Marker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExcluded_File_Marker"


    // $ANTLR start "ruleExcluded_File_Marker"
    // InternalIDL.g:1794:1: ruleExcluded_File_Marker returns [EObject current=null] : (otherlv_0= '#excluded_file' ( (lv_file_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExcluded_File_Marker() throws RecognitionException {
        EObject current = null;
        int ruleExcluded_File_Marker_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_file_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return current; }
            // InternalIDL.g:1797:28: ( (otherlv_0= '#excluded_file' ( (lv_file_1_0= RULE_STRING ) ) ) )
            // InternalIDL.g:1798:1: (otherlv_0= '#excluded_file' ( (lv_file_1_0= RULE_STRING ) ) )
            {
            // InternalIDL.g:1798:1: (otherlv_0= '#excluded_file' ( (lv_file_1_0= RULE_STRING ) ) )
            // InternalIDL.g:1798:3: otherlv_0= '#excluded_file' ( (lv_file_1_0= RULE_STRING ) )
            {
            otherlv_0=(Token)match(input,55,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExcluded_File_MarkerAccess().getExcluded_fileKeyword_0());
                  
            }
            // InternalIDL.g:1802:1: ( (lv_file_1_0= RULE_STRING ) )
            // InternalIDL.g:1803:1: (lv_file_1_0= RULE_STRING )
            {
            // InternalIDL.g:1803:1: (lv_file_1_0= RULE_STRING )
            // InternalIDL.g:1804:3: lv_file_1_0= RULE_STRING
            {
            lv_file_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_file_1_0, grammarAccess.getExcluded_File_MarkerAccess().getFileSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getExcluded_File_MarkerRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"file",
                      		lv_file_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, ruleExcluded_File_Marker_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExcluded_File_Marker"


    // $ANTLR start "entryRuleImport_decl"
    // InternalIDL.g:1828:1: entryRuleImport_decl returns [EObject current=null] : iv_ruleImport_decl= ruleImport_decl EOF ;
    public final EObject entryRuleImport_decl() throws RecognitionException {
        EObject current = null;
        int entryRuleImport_decl_StartIndex = input.index();
        EObject iv_ruleImport_decl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return current; }
            // InternalIDL.g:1829:2: (iv_ruleImport_decl= ruleImport_decl EOF )
            // InternalIDL.g:1830:2: iv_ruleImport_decl= ruleImport_decl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImport_declRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport_decl=ruleImport_decl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport_decl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, entryRuleImport_decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleImport_decl"


    // $ANTLR start "ruleImport_decl"
    // InternalIDL.g:1837:1: ruleImport_decl returns [EObject current=null] : (otherlv_0= 'import' ( (lv_imported_scope_1_0= RULE_STRING ) ) otherlv_2= ';' ) ;
    public final EObject ruleImport_decl() throws RecognitionException {
        EObject current = null;
        int ruleImport_decl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_imported_scope_1_0=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return current; }
            // InternalIDL.g:1840:28: ( (otherlv_0= 'import' ( (lv_imported_scope_1_0= RULE_STRING ) ) otherlv_2= ';' ) )
            // InternalIDL.g:1841:1: (otherlv_0= 'import' ( (lv_imported_scope_1_0= RULE_STRING ) ) otherlv_2= ';' )
            {
            // InternalIDL.g:1841:1: (otherlv_0= 'import' ( (lv_imported_scope_1_0= RULE_STRING ) ) otherlv_2= ';' )
            // InternalIDL.g:1841:3: otherlv_0= 'import' ( (lv_imported_scope_1_0= RULE_STRING ) ) otherlv_2= ';'
            {
            otherlv_0=(Token)match(input,56,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getImport_declAccess().getImportKeyword_0());
                  
            }
            // InternalIDL.g:1845:1: ( (lv_imported_scope_1_0= RULE_STRING ) )
            // InternalIDL.g:1846:1: (lv_imported_scope_1_0= RULE_STRING )
            {
            // InternalIDL.g:1846:1: (lv_imported_scope_1_0= RULE_STRING )
            // InternalIDL.g:1847:3: lv_imported_scope_1_0= RULE_STRING
            {
            lv_imported_scope_1_0=(Token)match(input,RULE_STRING,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_imported_scope_1_0, grammarAccess.getImport_declAccess().getImported_scopeSTRINGTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getImport_declRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"imported_scope",
                      		lv_imported_scope_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getImport_declAccess().getSemicolonKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, ruleImport_decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleImport_decl"


    // $ANTLR start "entryRuleDefinition"
    // InternalIDL.g:1875:1: entryRuleDefinition returns [EObject current=null] : iv_ruleDefinition= ruleDefinition EOF ;
    public final EObject entryRuleDefinition() throws RecognitionException {
        EObject current = null;
        int entryRuleDefinition_StartIndex = input.index();
        EObject iv_ruleDefinition = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return current; }
            // InternalIDL.g:1876:2: (iv_ruleDefinition= ruleDefinition EOF )
            // InternalIDL.g:1877:2: iv_ruleDefinition= ruleDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinition=ruleDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, entryRuleDefinition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinition"


    // $ANTLR start "ruleDefinition"
    // InternalIDL.g:1884:1: ruleDefinition returns [EObject current=null] : ( (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' ) | (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' ) | (this_ConstDecl_4= ruleConstDecl otherlv_5= ';' ) | (this_Module_6= ruleModule otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' ) | (this_NativeType_14= ruleNativeType otherlv_15= ';' ) | this_Preproc_16= rulePreproc | (this_Event_17= ruleEvent otherlv_18= ';' ) | (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' ) | (this_HomeDecl_21= ruleHomeDecl otherlv_22= ';' ) | (this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';' ) | (this_Connector_25= ruleConnector otherlv_26= ';' ) | (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' ) | (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' ) | this_IDLComment_31= ruleIDLComment ) ;
    public final EObject ruleDefinition() throws RecognitionException {
        EObject current = null;
        int ruleDefinition_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_30=null;
        EObject this_Interface_or_Forward_Decl_0 = null;

        EObject this_ComponentForwardDecl_2 = null;

        EObject this_ConstDecl_4 = null;

        EObject this_Module_6 = null;

        EObject this_ExceptDecl_8 = null;

        EObject this_StructType_10 = null;

        EObject this_TypeDecl_12 = null;

        EObject this_NativeType_14 = null;

        EObject this_Preproc_16 = null;

        EObject this_Event_17 = null;

        EObject this_ComponentDecl_19 = null;

        EObject this_HomeDecl_21 = null;

        EObject this_PortTypeDecl_23 = null;

        EObject this_Connector_25 = null;

        EObject this_TemplateModule_27 = null;

        EObject this_TemplateModuleInst_29 = null;

        EObject this_IDLComment_31 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return current; }
            // InternalIDL.g:1887:28: ( ( (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' ) | (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' ) | (this_ConstDecl_4= ruleConstDecl otherlv_5= ';' ) | (this_Module_6= ruleModule otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' ) | (this_NativeType_14= ruleNativeType otherlv_15= ';' ) | this_Preproc_16= rulePreproc | (this_Event_17= ruleEvent otherlv_18= ';' ) | (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' ) | (this_HomeDecl_21= ruleHomeDecl otherlv_22= ';' ) | (this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';' ) | (this_Connector_25= ruleConnector otherlv_26= ';' ) | (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' ) | (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' ) | this_IDLComment_31= ruleIDLComment ) )
            // InternalIDL.g:1888:1: ( (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' ) | (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' ) | (this_ConstDecl_4= ruleConstDecl otherlv_5= ';' ) | (this_Module_6= ruleModule otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' ) | (this_NativeType_14= ruleNativeType otherlv_15= ';' ) | this_Preproc_16= rulePreproc | (this_Event_17= ruleEvent otherlv_18= ';' ) | (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' ) | (this_HomeDecl_21= ruleHomeDecl otherlv_22= ';' ) | (this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';' ) | (this_Connector_25= ruleConnector otherlv_26= ';' ) | (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' ) | (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' ) | this_IDLComment_31= ruleIDLComment )
            {
            // InternalIDL.g:1888:1: ( (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' ) | (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' ) | (this_ConstDecl_4= ruleConstDecl otherlv_5= ';' ) | (this_Module_6= ruleModule otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' ) | (this_NativeType_14= ruleNativeType otherlv_15= ';' ) | this_Preproc_16= rulePreproc | (this_Event_17= ruleEvent otherlv_18= ';' ) | (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' ) | (this_HomeDecl_21= ruleHomeDecl otherlv_22= ';' ) | (this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';' ) | (this_Connector_25= ruleConnector otherlv_26= ';' ) | (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' ) | (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' ) | this_IDLComment_31= ruleIDLComment )
            int alt16=17;
            alt16 = dfa16.predict(input);
            switch (alt16) {
                case 1 :
                    // InternalIDL.g:1888:2: (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' )
                    {
                    // InternalIDL.g:1888:2: (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' )
                    // InternalIDL.g:1889:2: this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getInterface_or_Forward_DeclParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Interface_or_Forward_Decl_0=ruleInterface_or_Forward_Decl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Interface_or_Forward_Decl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getDefinitionAccess().getSemicolonKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:1905:6: (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' )
                    {
                    // InternalIDL.g:1905:6: (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' )
                    // InternalIDL.g:1906:2: this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getComponentForwardDeclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ComponentForwardDecl_2=ruleComponentForwardDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentForwardDecl_2; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getDefinitionAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:1922:6: (this_ConstDecl_4= ruleConstDecl otherlv_5= ';' )
                    {
                    // InternalIDL.g:1922:6: (this_ConstDecl_4= ruleConstDecl otherlv_5= ';' )
                    // InternalIDL.g:1923:2: this_ConstDecl_4= ruleConstDecl otherlv_5= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getConstDeclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ConstDecl_4=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstDecl_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getDefinitionAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:1939:6: (this_Module_6= ruleModule otherlv_7= ';' )
                    {
                    // InternalIDL.g:1939:6: (this_Module_6= ruleModule otherlv_7= ';' )
                    // InternalIDL.g:1940:2: this_Module_6= ruleModule otherlv_7= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getModuleParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Module_6=ruleModule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Module_6; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getDefinitionAccess().getSemicolonKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalIDL.g:1956:6: (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' )
                    {
                    // InternalIDL.g:1956:6: (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' )
                    // InternalIDL.g:1957:2: this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getExceptDeclParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ExceptDecl_8=ruleExceptDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExceptDecl_8; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getDefinitionAccess().getSemicolonKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalIDL.g:1973:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
                    {
                    // InternalIDL.g:1973:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
                    // InternalIDL.g:1974:2: this_StructType_10= ruleStructType otherlv_11= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getStructTypeParserRuleCall_5_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_StructType_10=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructType_10; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getDefinitionAccess().getSemicolonKeyword_5_1());
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalIDL.g:1990:6: (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' )
                    {
                    // InternalIDL.g:1990:6: (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' )
                    // InternalIDL.g:1991:2: this_TypeDecl_12= ruleTypeDecl otherlv_13= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getTypeDeclParserRuleCall_6_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_TypeDecl_12=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypeDecl_12; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_13=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getDefinitionAccess().getSemicolonKeyword_6_1());
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalIDL.g:2007:6: (this_NativeType_14= ruleNativeType otherlv_15= ';' )
                    {
                    // InternalIDL.g:2007:6: (this_NativeType_14= ruleNativeType otherlv_15= ';' )
                    // InternalIDL.g:2008:2: this_NativeType_14= ruleNativeType otherlv_15= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getNativeTypeParserRuleCall_7_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_NativeType_14=ruleNativeType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NativeType_14; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_15=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getDefinitionAccess().getSemicolonKeyword_7_1());
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalIDL.g:2025:2: this_Preproc_16= rulePreproc
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getPreprocParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_16=rulePreproc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_16; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalIDL.g:2037:6: (this_Event_17= ruleEvent otherlv_18= ';' )
                    {
                    // InternalIDL.g:2037:6: (this_Event_17= ruleEvent otherlv_18= ';' )
                    // InternalIDL.g:2038:2: this_Event_17= ruleEvent otherlv_18= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getEventParserRuleCall_9_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Event_17=ruleEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Event_17; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_18=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_18, grammarAccess.getDefinitionAccess().getSemicolonKeyword_9_1());
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalIDL.g:2054:6: (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' )
                    {
                    // InternalIDL.g:2054:6: (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' )
                    // InternalIDL.g:2055:2: this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getComponentDeclParserRuleCall_10_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ComponentDecl_19=ruleComponentDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentDecl_19; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_20=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_20, grammarAccess.getDefinitionAccess().getSemicolonKeyword_10_1());
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalIDL.g:2071:6: (this_HomeDecl_21= ruleHomeDecl otherlv_22= ';' )
                    {
                    // InternalIDL.g:2071:6: (this_HomeDecl_21= ruleHomeDecl otherlv_22= ';' )
                    // InternalIDL.g:2072:2: this_HomeDecl_21= ruleHomeDecl otherlv_22= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getHomeDeclParserRuleCall_11_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_HomeDecl_21=ruleHomeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_HomeDecl_21; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_22=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_22, grammarAccess.getDefinitionAccess().getSemicolonKeyword_11_1());
                          
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalIDL.g:2088:6: (this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';' )
                    {
                    // InternalIDL.g:2088:6: (this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';' )
                    // InternalIDL.g:2089:2: this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getPortTypeDeclParserRuleCall_12_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_PortTypeDecl_23=rulePortTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PortTypeDecl_23; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_24=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_24, grammarAccess.getDefinitionAccess().getSemicolonKeyword_12_1());
                          
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalIDL.g:2105:6: (this_Connector_25= ruleConnector otherlv_26= ';' )
                    {
                    // InternalIDL.g:2105:6: (this_Connector_25= ruleConnector otherlv_26= ';' )
                    // InternalIDL.g:2106:2: this_Connector_25= ruleConnector otherlv_26= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getConnectorParserRuleCall_13_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Connector_25=ruleConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Connector_25; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_26=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_26, grammarAccess.getDefinitionAccess().getSemicolonKeyword_13_1());
                          
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalIDL.g:2122:6: (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' )
                    {
                    // InternalIDL.g:2122:6: (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' )
                    // InternalIDL.g:2123:2: this_TemplateModule_27= ruleTemplateModule otherlv_28= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getTemplateModuleParserRuleCall_14_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_TemplateModule_27=ruleTemplateModule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TemplateModule_27; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_28=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_28, grammarAccess.getDefinitionAccess().getSemicolonKeyword_14_1());
                          
                    }

                    }


                    }
                    break;
                case 16 :
                    // InternalIDL.g:2139:6: (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' )
                    {
                    // InternalIDL.g:2139:6: (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' )
                    // InternalIDL.g:2140:2: this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getTemplateModuleInstParserRuleCall_15_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_TemplateModuleInst_29=ruleTemplateModuleInst();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TemplateModuleInst_29; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_30=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_30, grammarAccess.getDefinitionAccess().getSemicolonKeyword_15_1());
                          
                    }

                    }


                    }
                    break;
                case 17 :
                    // InternalIDL.g:2157:2: this_IDLComment_31= ruleIDLComment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDefinitionAccess().getIDLCommentParserRuleCall_16()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IDLComment_31=ruleIDLComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IDLComment_31; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, ruleDefinition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDefinition"


    // $ANTLR start "entryRuleModule"
    // InternalIDL.g:2176:1: entryRuleModule returns [EObject current=null] : iv_ruleModule= ruleModule EOF ;
    public final EObject entryRuleModule() throws RecognitionException {
        EObject current = null;
        int entryRuleModule_StartIndex = input.index();
        EObject iv_ruleModule = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return current; }
            // InternalIDL.g:2177:2: (iv_ruleModule= ruleModule EOF )
            // InternalIDL.g:2178:2: iv_ruleModule= ruleModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModule=ruleModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, entryRuleModule_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleModule"


    // $ANTLR start "ruleModule"
    // InternalIDL.g:2185:1: ruleModule returns [EObject current=null] : (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_definitions_4_0= ruleDefinition ) )* otherlv_5= '}' ) ;
    public final EObject ruleModule() throws RecognitionException {
        EObject current = null;
        int ruleModule_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_comments_2_0 = null;

        EObject lv_definitions_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return current; }
            // InternalIDL.g:2188:28: ( (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_definitions_4_0= ruleDefinition ) )* otherlv_5= '}' ) )
            // InternalIDL.g:2189:1: (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_definitions_4_0= ruleDefinition ) )* otherlv_5= '}' )
            {
            // InternalIDL.g:2189:1: (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_definitions_4_0= ruleDefinition ) )* otherlv_5= '}' )
            // InternalIDL.g:2189:3: otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_definitions_4_0= ruleDefinition ) )* otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,58,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getModuleKeyword_0());
                  
            }
            // InternalIDL.g:2193:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:2194:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:2194:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:2195:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getModuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:2211:2: ( (lv_comments_2_0= ruleIDLComment ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==RULE_SL_COMMENT) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalIDL.g:2212:1: (lv_comments_2_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:2212:1: (lv_comments_2_0= ruleIDLComment )
            	    // InternalIDL.g:2213:3: lv_comments_2_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getModuleAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_comments_2_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getModuleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            otherlv_3=(Token)match(input,59,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getModuleAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalIDL.g:2233:1: ( (lv_definitions_4_0= ruleDefinition ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==RULE_SL_COMMENT||LA18_0==20||(LA18_0>=24 && LA18_0<=28)||(LA18_0>=35 && LA18_0<=39)||(LA18_0>=54 && LA18_0<=55)||LA18_0==58||(LA18_0>=61 && LA18_0<=63)||LA18_0==90||(LA18_0>=93 && LA18_0<=97)||LA18_0==101||LA18_0==103||LA18_0==105||LA18_0==118||LA18_0==126||(LA18_0>=131 && LA18_0<=132)||LA18_0==136||LA18_0==139) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // InternalIDL.g:2234:1: (lv_definitions_4_0= ruleDefinition )
            	    {
            	    // InternalIDL.g:2234:1: (lv_definitions_4_0= ruleDefinition )
            	    // InternalIDL.g:2235:3: lv_definitions_4_0= ruleDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getModuleAccess().getDefinitionsDefinitionParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_30);
            	    lv_definitions_4_0=ruleDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getModuleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"definitions",
            	              		lv_definitions_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Definition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            otherlv_5=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getModuleAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, ruleModule_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleModule"


    // $ANTLR start "entryRuleInterface_or_Forward_Decl"
    // InternalIDL.g:2263:1: entryRuleInterface_or_Forward_Decl returns [EObject current=null] : iv_ruleInterface_or_Forward_Decl= ruleInterface_or_Forward_Decl EOF ;
    public final EObject entryRuleInterface_or_Forward_Decl() throws RecognitionException {
        EObject current = null;
        int entryRuleInterface_or_Forward_Decl_StartIndex = input.index();
        EObject iv_ruleInterface_or_Forward_Decl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return current; }
            // InternalIDL.g:2264:2: (iv_ruleInterface_or_Forward_Decl= ruleInterface_or_Forward_Decl EOF )
            // InternalIDL.g:2265:2: iv_ruleInterface_or_Forward_Decl= ruleInterface_or_Forward_Decl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterface_or_Forward_DeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterface_or_Forward_Decl=ruleInterface_or_Forward_Decl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterface_or_Forward_Decl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, entryRuleInterface_or_Forward_Decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleInterface_or_Forward_Decl"


    // $ANTLR start "ruleInterface_or_Forward_Decl"
    // InternalIDL.g:2272:1: ruleInterface_or_Forward_Decl returns [EObject current=null] : (this_Interface_decl_0= ruleInterface_decl | this_Forward_decl_1= ruleForward_decl ) ;
    public final EObject ruleInterface_or_Forward_Decl() throws RecognitionException {
        EObject current = null;
        int ruleInterface_or_Forward_Decl_StartIndex = input.index();
        EObject this_Interface_decl_0 = null;

        EObject this_Forward_decl_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return current; }
            // InternalIDL.g:2275:28: ( (this_Interface_decl_0= ruleInterface_decl | this_Forward_decl_1= ruleForward_decl ) )
            // InternalIDL.g:2276:1: (this_Interface_decl_0= ruleInterface_decl | this_Forward_decl_1= ruleForward_decl )
            {
            // InternalIDL.g:2276:1: (this_Interface_decl_0= ruleInterface_decl | this_Forward_decl_1= ruleForward_decl )
            int alt19=2;
            switch ( input.LA(1) ) {
            case 61:
                {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==63) ) {
                    int LA19_3 = input.LA(3);

                    if ( (LA19_3==RULE_ID) ) {
                        int LA19_4 = input.LA(4);

                        if ( (LA19_4==RULE_SL_COMMENT||LA19_4==59||LA19_4==64) ) {
                            alt19=1;
                        }
                        else if ( (LA19_4==EOF||LA19_4==57) ) {
                            alt19=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 19, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
                }
                break;
            case 62:
                {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==63) ) {
                    int LA19_3 = input.LA(3);

                    if ( (LA19_3==RULE_ID) ) {
                        int LA19_4 = input.LA(4);

                        if ( (LA19_4==RULE_SL_COMMENT||LA19_4==59||LA19_4==64) ) {
                            alt19=1;
                        }
                        else if ( (LA19_4==EOF||LA19_4==57) ) {
                            alt19=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 19, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
                }
                break;
            case 63:
                {
                int LA19_3 = input.LA(2);

                if ( (LA19_3==RULE_ID) ) {
                    int LA19_4 = input.LA(3);

                    if ( (LA19_4==RULE_SL_COMMENT||LA19_4==59||LA19_4==64) ) {
                        alt19=1;
                    }
                    else if ( (LA19_4==EOF||LA19_4==57) ) {
                        alt19=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 4, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalIDL.g:2277:2: this_Interface_decl_0= ruleInterface_decl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInterface_or_Forward_DeclAccess().getInterface_declParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Interface_decl_0=ruleInterface_decl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Interface_decl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:2290:2: this_Forward_decl_1= ruleForward_decl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getInterface_or_Forward_DeclAccess().getForward_declParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Forward_decl_1=ruleForward_decl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Forward_decl_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, ruleInterface_or_Forward_Decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleInterface_or_Forward_Decl"


    // $ANTLR start "entryRuleInterface_decl"
    // InternalIDL.g:2309:1: entryRuleInterface_decl returns [EObject current=null] : iv_ruleInterface_decl= ruleInterface_decl EOF ;
    public final EObject entryRuleInterface_decl() throws RecognitionException {
        EObject current = null;
        int entryRuleInterface_decl_StartIndex = input.index();
        EObject iv_ruleInterface_decl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return current; }
            // InternalIDL.g:2310:2: (iv_ruleInterface_decl= ruleInterface_decl EOF )
            // InternalIDL.g:2311:2: iv_ruleInterface_decl= ruleInterface_decl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterface_declRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterface_decl=ruleInterface_decl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterface_decl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, entryRuleInterface_decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleInterface_decl"


    // $ANTLR start "ruleInterface_decl"
    // InternalIDL.g:2318:1: ruleInterface_decl returns [EObject current=null] : ( ( (lv_header_0_0= ruleInterface_header ) ) otherlv_1= '{' ( (lv_interfaceBody_2_0= ruleInterfaceBody ) ) otherlv_3= '}' ) ;
    public final EObject ruleInterface_decl() throws RecognitionException {
        EObject current = null;
        int ruleInterface_decl_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_header_0_0 = null;

        EObject lv_interfaceBody_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return current; }
            // InternalIDL.g:2321:28: ( ( ( (lv_header_0_0= ruleInterface_header ) ) otherlv_1= '{' ( (lv_interfaceBody_2_0= ruleInterfaceBody ) ) otherlv_3= '}' ) )
            // InternalIDL.g:2322:1: ( ( (lv_header_0_0= ruleInterface_header ) ) otherlv_1= '{' ( (lv_interfaceBody_2_0= ruleInterfaceBody ) ) otherlv_3= '}' )
            {
            // InternalIDL.g:2322:1: ( ( (lv_header_0_0= ruleInterface_header ) ) otherlv_1= '{' ( (lv_interfaceBody_2_0= ruleInterfaceBody ) ) otherlv_3= '}' )
            // InternalIDL.g:2322:2: ( (lv_header_0_0= ruleInterface_header ) ) otherlv_1= '{' ( (lv_interfaceBody_2_0= ruleInterfaceBody ) ) otherlv_3= '}'
            {
            // InternalIDL.g:2322:2: ( (lv_header_0_0= ruleInterface_header ) )
            // InternalIDL.g:2323:1: (lv_header_0_0= ruleInterface_header )
            {
            // InternalIDL.g:2323:1: (lv_header_0_0= ruleInterface_header )
            // InternalIDL.g:2324:3: lv_header_0_0= ruleInterface_header
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInterface_declAccess().getHeaderInterface_headerParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_31);
            lv_header_0_0=ruleInterface_header();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInterface_declRule());
              	        }
                     		set(
                     			current, 
                     			"header",
                      		lv_header_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.Interface_header");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,59,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInterface_declAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalIDL.g:2344:1: ( (lv_interfaceBody_2_0= ruleInterfaceBody ) )
            // InternalIDL.g:2345:1: (lv_interfaceBody_2_0= ruleInterfaceBody )
            {
            // InternalIDL.g:2345:1: (lv_interfaceBody_2_0= ruleInterfaceBody )
            // InternalIDL.g:2346:3: lv_interfaceBody_2_0= ruleInterfaceBody
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getInterface_declAccess().getInterfaceBodyInterfaceBodyParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_33);
            lv_interfaceBody_2_0=ruleInterfaceBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getInterface_declRule());
              	        }
                     		set(
                     			current, 
                     			"interfaceBody",
                      		lv_interfaceBody_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.InterfaceBody");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getInterface_declAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, ruleInterface_decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleInterface_decl"


    // $ANTLR start "entryRuleForward_decl"
    // InternalIDL.g:2374:1: entryRuleForward_decl returns [EObject current=null] : iv_ruleForward_decl= ruleForward_decl EOF ;
    public final EObject entryRuleForward_decl() throws RecognitionException {
        EObject current = null;
        int entryRuleForward_decl_StartIndex = input.index();
        EObject iv_ruleForward_decl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return current; }
            // InternalIDL.g:2375:2: (iv_ruleForward_decl= ruleForward_decl EOF )
            // InternalIDL.g:2376:2: iv_ruleForward_decl= ruleForward_decl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getForward_declRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleForward_decl=ruleForward_decl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleForward_decl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, entryRuleForward_decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleForward_decl"


    // $ANTLR start "ruleForward_decl"
    // InternalIDL.g:2383:1: ruleForward_decl returns [EObject current=null] : ( (otherlv_0= 'abstract' | otherlv_1= 'local' )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) ) ;
    public final EObject ruleForward_decl() throws RecognitionException {
        EObject current = null;
        int ruleForward_decl_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return current; }
            // InternalIDL.g:2386:28: ( ( (otherlv_0= 'abstract' | otherlv_1= 'local' )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) ) )
            // InternalIDL.g:2387:1: ( (otherlv_0= 'abstract' | otherlv_1= 'local' )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) )
            {
            // InternalIDL.g:2387:1: ( (otherlv_0= 'abstract' | otherlv_1= 'local' )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) )
            // InternalIDL.g:2387:2: (otherlv_0= 'abstract' | otherlv_1= 'local' )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) )
            {
            // InternalIDL.g:2387:2: (otherlv_0= 'abstract' | otherlv_1= 'local' )?
            int alt20=3;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==61) ) {
                alt20=1;
            }
            else if ( (LA20_0==62) ) {
                alt20=2;
            }
            switch (alt20) {
                case 1 :
                    // InternalIDL.g:2387:4: otherlv_0= 'abstract'
                    {
                    otherlv_0=(Token)match(input,61,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getForward_declAccess().getAbstractKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:2392:7: otherlv_1= 'local'
                    {
                    otherlv_1=(Token)match(input,62,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getForward_declAccess().getLocalKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            otherlv_2=(Token)match(input,63,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getForward_declAccess().getInterfaceKeyword_1());
                  
            }
            // InternalIDL.g:2400:1: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:2401:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:2401:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:2402:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getForward_declAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getForward_declRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, ruleForward_decl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleForward_decl"


    // $ANTLR start "entryRuleInterface_header"
    // InternalIDL.g:2426:1: entryRuleInterface_header returns [EObject current=null] : iv_ruleInterface_header= ruleInterface_header EOF ;
    public final EObject entryRuleInterface_header() throws RecognitionException {
        EObject current = null;
        int entryRuleInterface_header_StartIndex = input.index();
        EObject iv_ruleInterface_header = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return current; }
            // InternalIDL.g:2427:2: (iv_ruleInterface_header= ruleInterface_header EOF )
            // InternalIDL.g:2428:2: iv_ruleInterface_header= ruleInterface_header EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterface_headerRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterface_header=ruleInterface_header();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterface_header; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, entryRuleInterface_header_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleInterface_header"


    // $ANTLR start "ruleInterface_header"
    // InternalIDL.g:2435:1: ruleInterface_header returns [EObject current=null] : ( ( ( (lv_isAbstract_0_0= 'abstract' ) ) | ( (lv_isLocal_1_0= 'local' ) ) )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_specializes_5_0= ruleScopedName ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )* )? ( (lv_comments_9_0= ruleIDLComment ) )* ) ;
    public final EObject ruleInterface_header() throws RecognitionException {
        EObject current = null;
        int ruleInterface_header_StartIndex = input.index();
        Token lv_isAbstract_0_0=null;
        Token lv_isLocal_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_specializes_5_0 = null;

        EObject lv_comments_7_0 = null;

        EObject lv_specializes_8_0 = null;

        EObject lv_comments_9_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return current; }
            // InternalIDL.g:2438:28: ( ( ( ( (lv_isAbstract_0_0= 'abstract' ) ) | ( (lv_isLocal_1_0= 'local' ) ) )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_specializes_5_0= ruleScopedName ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )* )? ( (lv_comments_9_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:2439:1: ( ( ( (lv_isAbstract_0_0= 'abstract' ) ) | ( (lv_isLocal_1_0= 'local' ) ) )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_specializes_5_0= ruleScopedName ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )* )? ( (lv_comments_9_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:2439:1: ( ( ( (lv_isAbstract_0_0= 'abstract' ) ) | ( (lv_isLocal_1_0= 'local' ) ) )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_specializes_5_0= ruleScopedName ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )* )? ( (lv_comments_9_0= ruleIDLComment ) )* )
            // InternalIDL.g:2439:2: ( ( (lv_isAbstract_0_0= 'abstract' ) ) | ( (lv_isLocal_1_0= 'local' ) ) )? otherlv_2= 'interface' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_specializes_5_0= ruleScopedName ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )* )? ( (lv_comments_9_0= ruleIDLComment ) )*
            {
            // InternalIDL.g:2439:2: ( ( (lv_isAbstract_0_0= 'abstract' ) ) | ( (lv_isLocal_1_0= 'local' ) ) )?
            int alt21=3;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==61) ) {
                alt21=1;
            }
            else if ( (LA21_0==62) ) {
                alt21=2;
            }
            switch (alt21) {
                case 1 :
                    // InternalIDL.g:2439:3: ( (lv_isAbstract_0_0= 'abstract' ) )
                    {
                    // InternalIDL.g:2439:3: ( (lv_isAbstract_0_0= 'abstract' ) )
                    // InternalIDL.g:2440:1: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalIDL.g:2440:1: (lv_isAbstract_0_0= 'abstract' )
                    // InternalIDL.g:2441:3: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,61,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAbstract_0_0, grammarAccess.getInterface_headerAccess().getIsAbstractAbstractKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getInterface_headerRule());
                      	        }
                             		setWithLastConsumed(current, "isAbstract", true, "abstract");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:2455:6: ( (lv_isLocal_1_0= 'local' ) )
                    {
                    // InternalIDL.g:2455:6: ( (lv_isLocal_1_0= 'local' ) )
                    // InternalIDL.g:2456:1: (lv_isLocal_1_0= 'local' )
                    {
                    // InternalIDL.g:2456:1: (lv_isLocal_1_0= 'local' )
                    // InternalIDL.g:2457:3: lv_isLocal_1_0= 'local'
                    {
                    lv_isLocal_1_0=(Token)match(input,62,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isLocal_1_0, grammarAccess.getInterface_headerAccess().getIsLocalLocalKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getInterface_headerRule());
                      	        }
                             		setWithLastConsumed(current, "isLocal", true, "local");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,63,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getInterface_headerAccess().getInterfaceKeyword_1());
                  
            }
            // InternalIDL.g:2474:1: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:2475:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:2475:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:2476:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getInterface_headerAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getInterface_headerRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:2492:2: (otherlv_4= ':' ( (lv_specializes_5_0= ruleScopedName ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )* )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==64) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalIDL.g:2492:4: otherlv_4= ':' ( (lv_specializes_5_0= ruleScopedName ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )*
                    {
                    otherlv_4=(Token)match(input,64,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getInterface_headerAccess().getColonKeyword_3_0());
                          
                    }
                    // InternalIDL.g:2496:1: ( (lv_specializes_5_0= ruleScopedName ) )
                    // InternalIDL.g:2497:1: (lv_specializes_5_0= ruleScopedName )
                    {
                    // InternalIDL.g:2497:1: (lv_specializes_5_0= ruleScopedName )
                    // InternalIDL.g:2498:3: lv_specializes_5_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getInterface_headerAccess().getSpecializesScopedNameParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_36);
                    lv_specializes_5_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getInterface_headerRule());
                      	        }
                             		add(
                             			current, 
                             			"specializes",
                              		lv_specializes_5_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIDL.g:2514:2: (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) ) )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==65) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // InternalIDL.g:2514:4: otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_specializes_8_0= ruleScopedName ) )
                    	    {
                    	    otherlv_6=(Token)match(input,65,FOLLOW_37); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_6, grammarAccess.getInterface_headerAccess().getCommaKeyword_3_2_0());
                    	          
                    	    }
                    	    // InternalIDL.g:2518:1: ( (lv_comments_7_0= ruleIDLComment ) )*
                    	    loop22:
                    	    do {
                    	        int alt22=2;
                    	        int LA22_0 = input.LA(1);

                    	        if ( (LA22_0==RULE_SL_COMMENT) ) {
                    	            alt22=1;
                    	        }


                    	        switch (alt22) {
                    	    	case 1 :
                    	    	    // InternalIDL.g:2519:1: (lv_comments_7_0= ruleIDLComment )
                    	    	    {
                    	    	    // InternalIDL.g:2519:1: (lv_comments_7_0= ruleIDLComment )
                    	    	    // InternalIDL.g:2520:3: lv_comments_7_0= ruleIDLComment
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getInterface_headerAccess().getCommentsIDLCommentParserRuleCall_3_2_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_37);
                    	    	    lv_comments_7_0=ruleIDLComment();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getInterface_headerRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"comments",
                    	    	              		lv_comments_7_0, 
                    	    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop22;
                    	        }
                    	    } while (true);

                    	    // InternalIDL.g:2536:3: ( (lv_specializes_8_0= ruleScopedName ) )
                    	    // InternalIDL.g:2537:1: (lv_specializes_8_0= ruleScopedName )
                    	    {
                    	    // InternalIDL.g:2537:1: (lv_specializes_8_0= ruleScopedName )
                    	    // InternalIDL.g:2538:3: lv_specializes_8_0= ruleScopedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getInterface_headerAccess().getSpecializesScopedNameParserRuleCall_3_2_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_36);
                    	    lv_specializes_8_0=ruleScopedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getInterface_headerRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"specializes",
                    	              		lv_specializes_8_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalIDL.g:2554:6: ( (lv_comments_9_0= ruleIDLComment ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==RULE_SL_COMMENT) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalIDL.g:2555:1: (lv_comments_9_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:2555:1: (lv_comments_9_0= ruleIDLComment )
            	    // InternalIDL.g:2556:3: lv_comments_9_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInterface_headerAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_9_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInterface_headerRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_9_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, ruleInterface_header_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleInterface_header"


    // $ANTLR start "entryRuleInterfaceBody"
    // InternalIDL.g:2580:1: entryRuleInterfaceBody returns [EObject current=null] : iv_ruleInterfaceBody= ruleInterfaceBody EOF ;
    public final EObject entryRuleInterfaceBody() throws RecognitionException {
        EObject current = null;
        int entryRuleInterfaceBody_StartIndex = input.index();
        EObject iv_ruleInterfaceBody = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return current; }
            // InternalIDL.g:2581:2: (iv_ruleInterfaceBody= ruleInterfaceBody EOF )
            // InternalIDL.g:2582:2: iv_ruleInterfaceBody= ruleInterfaceBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceBody=ruleInterfaceBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, entryRuleInterfaceBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceBody"


    // $ANTLR start "ruleInterfaceBody"
    // InternalIDL.g:2589:1: ruleInterfaceBody returns [EObject current=null] : ( () ( (lv_export_1_0= ruleExport ) )* ) ;
    public final EObject ruleInterfaceBody() throws RecognitionException {
        EObject current = null;
        int ruleInterfaceBody_StartIndex = input.index();
        EObject lv_export_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return current; }
            // InternalIDL.g:2592:28: ( ( () ( (lv_export_1_0= ruleExport ) )* ) )
            // InternalIDL.g:2593:1: ( () ( (lv_export_1_0= ruleExport ) )* )
            {
            // InternalIDL.g:2593:1: ( () ( (lv_export_1_0= ruleExport ) )* )
            // InternalIDL.g:2593:2: () ( (lv_export_1_0= ruleExport ) )*
            {
            // InternalIDL.g:2593:2: ()
            // InternalIDL.g:2594:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getInterfaceBodyAccess().getInterfaceBodyAction_0(),
                          current);
                  
            }

            }

            // InternalIDL.g:2602:2: ( (lv_export_1_0= ruleExport ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==RULE_ID||LA26_0==RULE_SL_COMMENT||LA26_0==20||(LA26_0>=24 && LA26_0<=28)||(LA26_0>=35 && LA26_0<=39)||LA26_0==42||(LA26_0>=54 && LA26_0<=55)||LA26_0==66||LA26_0==69||(LA26_0>=73 && LA26_0<=74)||(LA26_0>=76 && LA26_0<=90)||(LA26_0>=93 && LA26_0<=97)||LA26_0==101||LA26_0==105) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalIDL.g:2603:1: (lv_export_1_0= ruleExport )
            	    {
            	    // InternalIDL.g:2603:1: (lv_export_1_0= ruleExport )
            	    // InternalIDL.g:2604:3: lv_export_1_0= ruleExport
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getInterfaceBodyAccess().getExportExportParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_export_1_0=ruleExport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getInterfaceBodyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"export",
            	              		lv_export_1_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Export");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, ruleInterfaceBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceBody"


    // $ANTLR start "entryRuleExport"
    // InternalIDL.g:2628:1: entryRuleExport returns [EObject current=null] : iv_ruleExport= ruleExport EOF ;
    public final EObject entryRuleExport() throws RecognitionException {
        EObject current = null;
        int entryRuleExport_StartIndex = input.index();
        EObject iv_ruleExport = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return current; }
            // InternalIDL.g:2629:2: (iv_ruleExport= ruleExport EOF )
            // InternalIDL.g:2630:2: iv_ruleExport= ruleExport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExport=ruleExport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, entryRuleExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExport"


    // $ANTLR start "ruleExport"
    // InternalIDL.g:2637:1: ruleExport returns [EObject current=null] : ( (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' ) | (this_OpDecl_2= ruleOpDecl otherlv_3= ';' ) | (this_TypeDecl_4= ruleTypeDecl otherlv_5= ';' ) | (this_ConstDecl_6= ruleConstDecl otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | this_Preproc_10= rulePreproc | this_IDLComment_11= ruleIDLComment ) ;
    public final EObject ruleExport() throws RecognitionException {
        EObject current = null;
        int ruleExport_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject this_AttrDecl_0 = null;

        EObject this_OpDecl_2 = null;

        EObject this_TypeDecl_4 = null;

        EObject this_ConstDecl_6 = null;

        EObject this_ExceptDecl_8 = null;

        EObject this_Preproc_10 = null;

        EObject this_IDLComment_11 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return current; }
            // InternalIDL.g:2640:28: ( ( (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' ) | (this_OpDecl_2= ruleOpDecl otherlv_3= ';' ) | (this_TypeDecl_4= ruleTypeDecl otherlv_5= ';' ) | (this_ConstDecl_6= ruleConstDecl otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | this_Preproc_10= rulePreproc | this_IDLComment_11= ruleIDLComment ) )
            // InternalIDL.g:2641:1: ( (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' ) | (this_OpDecl_2= ruleOpDecl otherlv_3= ';' ) | (this_TypeDecl_4= ruleTypeDecl otherlv_5= ';' ) | (this_ConstDecl_6= ruleConstDecl otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | this_Preproc_10= rulePreproc | this_IDLComment_11= ruleIDLComment )
            {
            // InternalIDL.g:2641:1: ( (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' ) | (this_OpDecl_2= ruleOpDecl otherlv_3= ';' ) | (this_TypeDecl_4= ruleTypeDecl otherlv_5= ';' ) | (this_ConstDecl_6= ruleConstDecl otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | this_Preproc_10= rulePreproc | this_IDLComment_11= ruleIDLComment )
            int alt27=7;
            switch ( input.LA(1) ) {
            case RULE_SL_COMMENT:
                {
                int LA27_1 = input.LA(2);

                if ( (synpred69_InternalIDL()) ) {
                    alt27=1;
                }
                else if ( (synpred70_InternalIDL()) ) {
                    alt27=2;
                }
                else if ( (true) ) {
                    alt27=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 27, 1, input);

                    throw nvae;
                }
                }
                break;
            case 66:
            case 69:
                {
                alt27=1;
                }
                break;
            case RULE_ID:
            case 42:
            case 73:
            case 74:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
                {
                alt27=2;
                }
                break;
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 101:
                {
                alt27=3;
                }
                break;
            case 105:
                {
                alt27=4;
                }
                break;
            case 90:
                {
                alt27=5;
                }
                break;
            case 20:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 54:
            case 55:
                {
                alt27=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalIDL.g:2641:2: (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' )
                    {
                    // InternalIDL.g:2641:2: (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' )
                    // InternalIDL.g:2642:2: this_AttrDecl_0= ruleAttrDecl otherlv_1= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportAccess().getAttrDeclParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_AttrDecl_0=ruleAttrDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AttrDecl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getExportAccess().getSemicolonKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:2658:6: (this_OpDecl_2= ruleOpDecl otherlv_3= ';' )
                    {
                    // InternalIDL.g:2658:6: (this_OpDecl_2= ruleOpDecl otherlv_3= ';' )
                    // InternalIDL.g:2659:2: this_OpDecl_2= ruleOpDecl otherlv_3= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportAccess().getOpDeclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_OpDecl_2=ruleOpDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OpDecl_2; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getExportAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:2675:6: (this_TypeDecl_4= ruleTypeDecl otherlv_5= ';' )
                    {
                    // InternalIDL.g:2675:6: (this_TypeDecl_4= ruleTypeDecl otherlv_5= ';' )
                    // InternalIDL.g:2676:2: this_TypeDecl_4= ruleTypeDecl otherlv_5= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportAccess().getTypeDeclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_TypeDecl_4=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypeDecl_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getExportAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:2692:6: (this_ConstDecl_6= ruleConstDecl otherlv_7= ';' )
                    {
                    // InternalIDL.g:2692:6: (this_ConstDecl_6= ruleConstDecl otherlv_7= ';' )
                    // InternalIDL.g:2693:2: this_ConstDecl_6= ruleConstDecl otherlv_7= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportAccess().getConstDeclParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ConstDecl_6=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstDecl_6; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getExportAccess().getSemicolonKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalIDL.g:2709:6: (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' )
                    {
                    // InternalIDL.g:2709:6: (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' )
                    // InternalIDL.g:2710:2: this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportAccess().getExceptDeclParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ExceptDecl_8=ruleExceptDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExceptDecl_8; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getExportAccess().getSemicolonKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalIDL.g:2727:2: this_Preproc_10= rulePreproc
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportAccess().getPreprocParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_10=rulePreproc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalIDL.g:2740:2: this_IDLComment_11= ruleIDLComment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getExportAccess().getIDLCommentParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IDLComment_11=ruleIDLComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IDLComment_11; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, ruleExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExport"


    // $ANTLR start "entryRuleAttrDecl"
    // InternalIDL.g:2759:1: entryRuleAttrDecl returns [EObject current=null] : iv_ruleAttrDecl= ruleAttrDecl EOF ;
    public final EObject entryRuleAttrDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleAttrDecl_StartIndex = input.index();
        EObject iv_ruleAttrDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return current; }
            // InternalIDL.g:2760:2: (iv_ruleAttrDecl= ruleAttrDecl EOF )
            // InternalIDL.g:2761:2: iv_ruleAttrDecl= ruleAttrDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttrDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAttrDecl=ruleAttrDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttrDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, entryRuleAttrDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttrDecl"


    // $ANTLR start "ruleAttrDecl"
    // InternalIDL.g:2768:1: ruleAttrDecl returns [EObject current=null] : (this_AttrSpec_0= ruleAttrSpec | this_ReadOnlyAttrSpec_1= ruleReadOnlyAttrSpec ) ;
    public final EObject ruleAttrDecl() throws RecognitionException {
        EObject current = null;
        int ruleAttrDecl_StartIndex = input.index();
        EObject this_AttrSpec_0 = null;

        EObject this_ReadOnlyAttrSpec_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return current; }
            // InternalIDL.g:2771:28: ( (this_AttrSpec_0= ruleAttrSpec | this_ReadOnlyAttrSpec_1= ruleReadOnlyAttrSpec ) )
            // InternalIDL.g:2772:1: (this_AttrSpec_0= ruleAttrSpec | this_ReadOnlyAttrSpec_1= ruleReadOnlyAttrSpec )
            {
            // InternalIDL.g:2772:1: (this_AttrSpec_0= ruleAttrSpec | this_ReadOnlyAttrSpec_1= ruleReadOnlyAttrSpec )
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalIDL.g:2773:2: this_AttrSpec_0= ruleAttrSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAttrDeclAccess().getAttrSpecParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AttrSpec_0=ruleAttrSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AttrSpec_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:2786:2: this_ReadOnlyAttrSpec_1= ruleReadOnlyAttrSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getAttrDeclAccess().getReadOnlyAttrSpecParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ReadOnlyAttrSpec_1=ruleReadOnlyAttrSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ReadOnlyAttrSpec_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, ruleAttrDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttrDecl"


    // $ANTLR start "entryRuleAttrSpec"
    // InternalIDL.g:2805:1: entryRuleAttrSpec returns [EObject current=null] : iv_ruleAttrSpec= ruleAttrSpec EOF ;
    public final EObject entryRuleAttrSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleAttrSpec_StartIndex = input.index();
        EObject iv_ruleAttrSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return current; }
            // InternalIDL.g:2806:2: (iv_ruleAttrSpec= ruleAttrSpec EOF )
            // InternalIDL.g:2807:2: iv_ruleAttrSpec= ruleAttrSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttrSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAttrSpec=ruleAttrSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttrSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, entryRuleAttrSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttrSpec"


    // $ANTLR start "ruleAttrSpec"
    // InternalIDL.g:2814:1: ruleAttrSpec returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'attribute' ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) ( ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )? ( ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )* )? ( (lv_comments_16_0= ruleIDLComment ) )* ) ;
    public final EObject ruleAttrSpec() throws RecognitionException {
        EObject current = null;
        int ruleAttrSpec_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_names_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_names_9_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token lv_names_15_0=null;
        EObject lv_comments_0_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_getRaises_5_0 = null;

        EObject lv_setRaises_7_0 = null;

        EObject lv_getRaises_11_0 = null;

        EObject lv_setRaises_13_0 = null;

        EObject lv_comments_16_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return current; }
            // InternalIDL.g:2817:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'attribute' ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) ( ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )? ( ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )* )? ( (lv_comments_16_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:2818:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'attribute' ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) ( ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )? ( ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )* )? ( (lv_comments_16_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:2818:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'attribute' ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) ( ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )? ( ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )* )? ( (lv_comments_16_0= ruleIDLComment ) )* )
            // InternalIDL.g:2818:2: ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'attribute' ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) ( ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )? ( ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )* )? ( (lv_comments_16_0= ruleIDLComment ) )*
            {
            // InternalIDL.g:2818:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==RULE_SL_COMMENT) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalIDL.g:2819:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:2819:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:2820:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAttrSpecAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAttrSpecRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            otherlv_1=(Token)match(input,66,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAttrSpecAccess().getAttributeKeyword_1());
                  
            }
            // InternalIDL.g:2840:1: ( (lv_type_2_0= ruleParamTypeSpec ) )
            // InternalIDL.g:2841:1: (lv_type_2_0= ruleParamTypeSpec )
            {
            // InternalIDL.g:2841:1: (lv_type_2_0= ruleParamTypeSpec )
            // InternalIDL.g:2842:3: lv_type_2_0= ruleParamTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAttrSpecAccess().getTypeParamTypeSpecParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_2_0=ruleParamTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAttrSpecRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParamTypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:2858:2: ( (lv_names_3_0= RULE_ID ) )
            // InternalIDL.g:2859:1: (lv_names_3_0= RULE_ID )
            {
            // InternalIDL.g:2859:1: (lv_names_3_0= RULE_ID )
            // InternalIDL.g:2860:3: lv_names_3_0= RULE_ID
            {
            lv_names_3_0=(Token)match(input,RULE_ID,FOLLOW_42); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_names_3_0, grammarAccess.getAttrSpecAccess().getNamesIDTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getAttrSpecRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"names",
                      		lv_names_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:2876:2: ( ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )?
            int alt32=3;
            alt32 = dfa32.predict(input);
            switch (alt32) {
                case 1 :
                    // InternalIDL.g:2876:3: ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) )
                    {
                    // InternalIDL.g:2876:3: ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) )
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==67) ) {
                        alt30=1;
                    }
                    else if ( (LA30_0==68) ) {
                        alt30=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 30, 0, input);

                        throw nvae;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalIDL.g:2876:4: (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) )
                            {
                            // InternalIDL.g:2876:4: (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) )
                            // InternalIDL.g:2876:6: otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) )
                            {
                            otherlv_4=(Token)match(input,67,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_4, grammarAccess.getAttrSpecAccess().getGetraisesKeyword_4_0_0_0());
                                  
                            }
                            // InternalIDL.g:2880:1: ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) )
                            // InternalIDL.g:2881:1: (lv_getRaises_5_0= ruleAttrRaisesExpr )
                            {
                            // InternalIDL.g:2881:1: (lv_getRaises_5_0= ruleAttrRaisesExpr )
                            // InternalIDL.g:2882:3: lv_getRaises_5_0= ruleAttrRaisesExpr
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAttrSpecAccess().getGetRaisesAttrRaisesExprParserRuleCall_4_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_42);
                            lv_getRaises_5_0=ruleAttrRaisesExpr();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAttrSpecRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"getRaises",
                                      		lv_getRaises_5_0, 
                                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.AttrRaisesExpr");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalIDL.g:2899:6: (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) )
                            {
                            // InternalIDL.g:2899:6: (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) )
                            // InternalIDL.g:2899:8: otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) )
                            {
                            otherlv_6=(Token)match(input,68,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_6, grammarAccess.getAttrSpecAccess().getSetraisesKeyword_4_0_1_0());
                                  
                            }
                            // InternalIDL.g:2903:1: ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) )
                            // InternalIDL.g:2904:1: (lv_setRaises_7_0= ruleAttrRaisesExpr )
                            {
                            // InternalIDL.g:2904:1: (lv_setRaises_7_0= ruleAttrRaisesExpr )
                            // InternalIDL.g:2905:3: lv_setRaises_7_0= ruleAttrRaisesExpr
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAttrSpecAccess().getSetRaisesAttrRaisesExprParserRuleCall_4_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_42);
                            lv_setRaises_7_0=ruleAttrRaisesExpr();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAttrSpecRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"setRaises",
                                      		lv_setRaises_7_0, 
                                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.AttrRaisesExpr");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:2922:6: (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )*
                    {
                    // InternalIDL.g:2922:6: (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==65) ) {
                            int LA31_2 = input.LA(2);

                            if ( (LA31_2==RULE_ID) ) {
                                int LA31_3 = input.LA(3);

                                if ( (synpred79_InternalIDL()) ) {
                                    alt31=1;
                                }


                            }


                        }


                        switch (alt31) {
                    	case 1 :
                    	    // InternalIDL.g:2922:8: otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) )
                    	    {
                    	    otherlv_8=(Token)match(input,65,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_8, grammarAccess.getAttrSpecAccess().getCommaKeyword_4_1_0());
                    	          
                    	    }
                    	    // InternalIDL.g:2926:1: ( (lv_names_9_0= RULE_ID ) )
                    	    // InternalIDL.g:2927:1: (lv_names_9_0= RULE_ID )
                    	    {
                    	    // InternalIDL.g:2927:1: (lv_names_9_0= RULE_ID )
                    	    // InternalIDL.g:2928:3: lv_names_9_0= RULE_ID
                    	    {
                    	    lv_names_9_0=(Token)match(input,RULE_ID,FOLLOW_42); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_names_9_0, grammarAccess.getAttrSpecAccess().getNamesIDTerminalRuleCall_4_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getAttrSpecRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"names",
                    	              		lv_names_9_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalIDL.g:2944:6: ( ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )* )?
            int alt35=3;
            switch ( input.LA(1) ) {
                case 67:
                case 68:
                    {
                    alt35=1;
                    }
                    break;
                case 65:
                    {
                    alt35=2;
                    }
                    break;
                case RULE_SL_COMMENT:
                    {
                    int LA35_3 = input.LA(2);

                    if ( (synpred84_InternalIDL()) ) {
                        alt35=2;
                    }
                    }
                    break;
                case 57:
                    {
                    int LA35_4 = input.LA(2);

                    if ( (synpred84_InternalIDL()) ) {
                        alt35=2;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA35_5 = input.LA(2);

                    if ( (synpred84_InternalIDL()) ) {
                        alt35=2;
                    }
                    }
                    break;
            }

            switch (alt35) {
                case 1 :
                    // InternalIDL.g:2944:7: ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) )
                    {
                    // InternalIDL.g:2944:7: ( (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) ) | (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) ) )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==67) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==68) ) {
                        alt33=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalIDL.g:2944:8: (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) )
                            {
                            // InternalIDL.g:2944:8: (otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) ) )
                            // InternalIDL.g:2944:10: otherlv_10= 'getraises' ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) )
                            {
                            otherlv_10=(Token)match(input,67,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_10, grammarAccess.getAttrSpecAccess().getGetraisesKeyword_5_0_0_0());
                                  
                            }
                            // InternalIDL.g:2948:1: ( (lv_getRaises_11_0= ruleAttrRaisesExpr ) )
                            // InternalIDL.g:2949:1: (lv_getRaises_11_0= ruleAttrRaisesExpr )
                            {
                            // InternalIDL.g:2949:1: (lv_getRaises_11_0= ruleAttrRaisesExpr )
                            // InternalIDL.g:2950:3: lv_getRaises_11_0= ruleAttrRaisesExpr
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAttrSpecAccess().getGetRaisesAttrRaisesExprParserRuleCall_5_0_0_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_38);
                            lv_getRaises_11_0=ruleAttrRaisesExpr();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAttrSpecRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"getRaises",
                                      		lv_getRaises_11_0, 
                                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.AttrRaisesExpr");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalIDL.g:2967:6: (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) )
                            {
                            // InternalIDL.g:2967:6: (otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) ) )
                            // InternalIDL.g:2967:8: otherlv_12= 'setraises' ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) )
                            {
                            otherlv_12=(Token)match(input,68,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                  	newLeafNode(otherlv_12, grammarAccess.getAttrSpecAccess().getSetraisesKeyword_5_0_1_0());
                                  
                            }
                            // InternalIDL.g:2971:1: ( (lv_setRaises_13_0= ruleAttrRaisesExpr ) )
                            // InternalIDL.g:2972:1: (lv_setRaises_13_0= ruleAttrRaisesExpr )
                            {
                            // InternalIDL.g:2972:1: (lv_setRaises_13_0= ruleAttrRaisesExpr )
                            // InternalIDL.g:2973:3: lv_setRaises_13_0= ruleAttrRaisesExpr
                            {
                            if ( state.backtracking==0 ) {
                               
                              	        newCompositeNode(grammarAccess.getAttrSpecAccess().getSetRaisesAttrRaisesExprParserRuleCall_5_0_1_1_0()); 
                              	    
                            }
                            pushFollow(FOLLOW_38);
                            lv_setRaises_13_0=ruleAttrRaisesExpr();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElementForParent(grammarAccess.getAttrSpecRule());
                              	        }
                                     		set(
                                     			current, 
                                     			"setRaises",
                                      		lv_setRaises_13_0, 
                                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.AttrRaisesExpr");
                              	        afterParserOrEnumRuleCall();
                              	    
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:2990:6: (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )*
                    {
                    // InternalIDL.g:2990:6: (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )*
                    loop34:
                    do {
                        int alt34=2;
                        int LA34_0 = input.LA(1);

                        if ( (LA34_0==65) ) {
                            alt34=1;
                        }


                        switch (alt34) {
                    	case 1 :
                    	    // InternalIDL.g:2990:8: otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) )
                    	    {
                    	    otherlv_14=(Token)match(input,65,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_14, grammarAccess.getAttrSpecAccess().getCommaKeyword_5_1_0());
                    	          
                    	    }
                    	    // InternalIDL.g:2994:1: ( (lv_names_15_0= RULE_ID ) )
                    	    // InternalIDL.g:2995:1: (lv_names_15_0= RULE_ID )
                    	    {
                    	    // InternalIDL.g:2995:1: (lv_names_15_0= RULE_ID )
                    	    // InternalIDL.g:2996:3: lv_names_15_0= RULE_ID
                    	    {
                    	    lv_names_15_0=(Token)match(input,RULE_ID,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_names_15_0, grammarAccess.getAttrSpecAccess().getNamesIDTerminalRuleCall_5_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getAttrSpecRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"names",
                    	              		lv_names_15_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop34;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalIDL.g:3012:6: ( (lv_comments_16_0= ruleIDLComment ) )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==RULE_SL_COMMENT) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalIDL.g:3013:1: (lv_comments_16_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:3013:1: (lv_comments_16_0= ruleIDLComment )
            	    // InternalIDL.g:3014:3: lv_comments_16_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAttrSpecAccess().getCommentsIDLCommentParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_16_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAttrSpecRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_16_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, ruleAttrSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttrSpec"


    // $ANTLR start "entryRuleReadOnlyAttrSpec"
    // InternalIDL.g:3038:1: entryRuleReadOnlyAttrSpec returns [EObject current=null] : iv_ruleReadOnlyAttrSpec= ruleReadOnlyAttrSpec EOF ;
    public final EObject entryRuleReadOnlyAttrSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleReadOnlyAttrSpec_StartIndex = input.index();
        EObject iv_ruleReadOnlyAttrSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return current; }
            // InternalIDL.g:3039:2: (iv_ruleReadOnlyAttrSpec= ruleReadOnlyAttrSpec EOF )
            // InternalIDL.g:3040:2: iv_ruleReadOnlyAttrSpec= ruleReadOnlyAttrSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReadOnlyAttrSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleReadOnlyAttrSpec=ruleReadOnlyAttrSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReadOnlyAttrSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, entryRuleReadOnlyAttrSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleReadOnlyAttrSpec"


    // $ANTLR start "ruleReadOnlyAttrSpec"
    // InternalIDL.g:3047:1: ruleReadOnlyAttrSpec returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'readonly' otherlv_2= 'attribute' ( (lv_type_3_0= ruleParamTypeSpec ) ) ( (lv_names_4_0= RULE_ID ) ) ( (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) ) | (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )* )? ( (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) ) | (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )* )? ( (lv_comments_13_0= ruleIDLComment ) )* ) ;
    public final EObject ruleReadOnlyAttrSpec() throws RecognitionException {
        EObject current = null;
        int ruleReadOnlyAttrSpec_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_names_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_names_8_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_names_12_0=null;
        EObject lv_comments_0_0 = null;

        EObject lv_type_3_0 = null;

        EObject lv_raises_6_0 = null;

        EObject lv_raises_10_0 = null;

        EObject lv_comments_13_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return current; }
            // InternalIDL.g:3050:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'readonly' otherlv_2= 'attribute' ( (lv_type_3_0= ruleParamTypeSpec ) ) ( (lv_names_4_0= RULE_ID ) ) ( (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) ) | (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )* )? ( (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) ) | (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )* )? ( (lv_comments_13_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:3051:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'readonly' otherlv_2= 'attribute' ( (lv_type_3_0= ruleParamTypeSpec ) ) ( (lv_names_4_0= RULE_ID ) ) ( (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) ) | (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )* )? ( (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) ) | (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )* )? ( (lv_comments_13_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:3051:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'readonly' otherlv_2= 'attribute' ( (lv_type_3_0= ruleParamTypeSpec ) ) ( (lv_names_4_0= RULE_ID ) ) ( (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) ) | (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )* )? ( (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) ) | (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )* )? ( (lv_comments_13_0= ruleIDLComment ) )* )
            // InternalIDL.g:3051:2: ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'readonly' otherlv_2= 'attribute' ( (lv_type_3_0= ruleParamTypeSpec ) ) ( (lv_names_4_0= RULE_ID ) ) ( (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) ) | (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )* )? ( (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) ) | (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )* )? ( (lv_comments_13_0= ruleIDLComment ) )*
            {
            // InternalIDL.g:3051:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop37:
            do {
                int alt37=2;
                int LA37_0 = input.LA(1);

                if ( (LA37_0==RULE_SL_COMMENT) ) {
                    alt37=1;
                }


                switch (alt37) {
            	case 1 :
            	    // InternalIDL.g:3052:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:3052:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:3053:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop37;
                }
            } while (true);

            otherlv_1=(Token)match(input,69,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getReadOnlyAttrSpecAccess().getReadonlyKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,66,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getReadOnlyAttrSpecAccess().getAttributeKeyword_2());
                  
            }
            // InternalIDL.g:3077:1: ( (lv_type_3_0= ruleParamTypeSpec ) )
            // InternalIDL.g:3078:1: (lv_type_3_0= ruleParamTypeSpec )
            {
            // InternalIDL.g:3078:1: (lv_type_3_0= ruleParamTypeSpec )
            // InternalIDL.g:3079:3: lv_type_3_0= ruleParamTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getTypeParamTypeSpecParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_3_0=ruleParamTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParamTypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:3095:2: ( (lv_names_4_0= RULE_ID ) )
            // InternalIDL.g:3096:1: (lv_names_4_0= RULE_ID )
            {
            // InternalIDL.g:3096:1: (lv_names_4_0= RULE_ID )
            // InternalIDL.g:3097:3: lv_names_4_0= RULE_ID
            {
            lv_names_4_0=(Token)match(input,RULE_ID,FOLLOW_46); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_names_4_0, grammarAccess.getReadOnlyAttrSpecAccess().getNamesIDTerminalRuleCall_4_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getReadOnlyAttrSpecRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"names",
                      		lv_names_4_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:3113:2: ( (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) ) | (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )* )?
            int alt39=3;
            switch ( input.LA(1) ) {
                case 70:
                    {
                    int LA39_1 = input.LA(2);

                    if ( (LA39_1==71) ) {
                        alt39=1;
                    }
                    else if ( (synpred89_InternalIDL()) ) {
                        alt39=2;
                    }
                    }
                    break;
                case 65:
                    {
                    int LA39_2 = input.LA(2);

                    if ( (synpred89_InternalIDL()) ) {
                        alt39=2;
                    }
                    }
                    break;
                case RULE_SL_COMMENT:
                    {
                    int LA39_3 = input.LA(2);

                    if ( (synpred89_InternalIDL()) ) {
                        alt39=2;
                    }
                    }
                    break;
                case 57:
                    {
                    int LA39_4 = input.LA(2);

                    if ( (synpred89_InternalIDL()) ) {
                        alt39=2;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA39_5 = input.LA(2);

                    if ( (synpred89_InternalIDL()) ) {
                        alt39=2;
                    }
                    }
                    break;
            }

            switch (alt39) {
                case 1 :
                    // InternalIDL.g:3113:3: (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) )
                    {
                    // InternalIDL.g:3113:3: (otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) ) )
                    // InternalIDL.g:3113:5: otherlv_5= 'raises' ( (lv_raises_6_0= ruleAttrRaisesExpr ) )
                    {
                    otherlv_5=(Token)match(input,70,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getReadOnlyAttrSpecAccess().getRaisesKeyword_5_0_0());
                          
                    }
                    // InternalIDL.g:3117:1: ( (lv_raises_6_0= ruleAttrRaisesExpr ) )
                    // InternalIDL.g:3118:1: (lv_raises_6_0= ruleAttrRaisesExpr )
                    {
                    // InternalIDL.g:3118:1: (lv_raises_6_0= ruleAttrRaisesExpr )
                    // InternalIDL.g:3119:3: lv_raises_6_0= ruleAttrRaisesExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getRaisesAttrRaisesExprParserRuleCall_5_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_46);
                    lv_raises_6_0=ruleAttrRaisesExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
                      	        }
                             		set(
                             			current, 
                             			"raises",
                              		lv_raises_6_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.AttrRaisesExpr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:3136:6: (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )*
                    {
                    // InternalIDL.g:3136:6: (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==65) ) {
                            int LA38_2 = input.LA(2);

                            if ( (LA38_2==RULE_ID) ) {
                                int LA38_3 = input.LA(3);

                                if ( (synpred88_InternalIDL()) ) {
                                    alt38=1;
                                }


                            }


                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalIDL.g:3136:8: otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) )
                    	    {
                    	    otherlv_7=(Token)match(input,65,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getReadOnlyAttrSpecAccess().getCommaKeyword_5_1_0());
                    	          
                    	    }
                    	    // InternalIDL.g:3140:1: ( (lv_names_8_0= RULE_ID ) )
                    	    // InternalIDL.g:3141:1: (lv_names_8_0= RULE_ID )
                    	    {
                    	    // InternalIDL.g:3141:1: (lv_names_8_0= RULE_ID )
                    	    // InternalIDL.g:3142:3: lv_names_8_0= RULE_ID
                    	    {
                    	    lv_names_8_0=(Token)match(input,RULE_ID,FOLLOW_46); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_names_8_0, grammarAccess.getReadOnlyAttrSpecAccess().getNamesIDTerminalRuleCall_5_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getReadOnlyAttrSpecRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"names",
                    	              		lv_names_8_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalIDL.g:3158:6: ( (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) ) | (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )* )?
            int alt41=3;
            switch ( input.LA(1) ) {
                case 70:
                    {
                    alt41=1;
                    }
                    break;
                case 65:
                    {
                    alt41=2;
                    }
                    break;
                case RULE_SL_COMMENT:
                    {
                    int LA41_3 = input.LA(2);

                    if ( (synpred92_InternalIDL()) ) {
                        alt41=2;
                    }
                    }
                    break;
                case 57:
                    {
                    int LA41_4 = input.LA(2);

                    if ( (synpred92_InternalIDL()) ) {
                        alt41=2;
                    }
                    }
                    break;
                case EOF:
                    {
                    int LA41_5 = input.LA(2);

                    if ( (synpred92_InternalIDL()) ) {
                        alt41=2;
                    }
                    }
                    break;
            }

            switch (alt41) {
                case 1 :
                    // InternalIDL.g:3158:7: (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) )
                    {
                    // InternalIDL.g:3158:7: (otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) ) )
                    // InternalIDL.g:3158:9: otherlv_9= 'raises' ( (lv_raises_10_0= ruleAttrRaisesExpr ) )
                    {
                    otherlv_9=(Token)match(input,70,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getReadOnlyAttrSpecAccess().getRaisesKeyword_6_0_0());
                          
                    }
                    // InternalIDL.g:3162:1: ( (lv_raises_10_0= ruleAttrRaisesExpr ) )
                    // InternalIDL.g:3163:1: (lv_raises_10_0= ruleAttrRaisesExpr )
                    {
                    // InternalIDL.g:3163:1: (lv_raises_10_0= ruleAttrRaisesExpr )
                    // InternalIDL.g:3164:3: lv_raises_10_0= ruleAttrRaisesExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getRaisesAttrRaisesExprParserRuleCall_6_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_38);
                    lv_raises_10_0=ruleAttrRaisesExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
                      	        }
                             		set(
                             			current, 
                             			"raises",
                              		lv_raises_10_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.AttrRaisesExpr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:3181:6: (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )*
                    {
                    // InternalIDL.g:3181:6: (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )*
                    loop40:
                    do {
                        int alt40=2;
                        int LA40_0 = input.LA(1);

                        if ( (LA40_0==65) ) {
                            alt40=1;
                        }


                        switch (alt40) {
                    	case 1 :
                    	    // InternalIDL.g:3181:8: otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) )
                    	    {
                    	    otherlv_11=(Token)match(input,65,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_11, grammarAccess.getReadOnlyAttrSpecAccess().getCommaKeyword_6_1_0());
                    	          
                    	    }
                    	    // InternalIDL.g:3185:1: ( (lv_names_12_0= RULE_ID ) )
                    	    // InternalIDL.g:3186:1: (lv_names_12_0= RULE_ID )
                    	    {
                    	    // InternalIDL.g:3186:1: (lv_names_12_0= RULE_ID )
                    	    // InternalIDL.g:3187:3: lv_names_12_0= RULE_ID
                    	    {
                    	    lv_names_12_0=(Token)match(input,RULE_ID,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      			newLeafNode(lv_names_12_0, grammarAccess.getReadOnlyAttrSpecAccess().getNamesIDTerminalRuleCall_6_1_1_0()); 
                    	      		
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElement(grammarAccess.getReadOnlyAttrSpecRule());
                    	      	        }
                    	             		addWithLastConsumed(
                    	             			current, 
                    	             			"names",
                    	              		lv_names_12_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop40;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalIDL.g:3203:6: ( (lv_comments_13_0= ruleIDLComment ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==RULE_SL_COMMENT) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalIDL.g:3204:1: (lv_comments_13_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:3204:1: (lv_comments_13_0= ruleIDLComment )
            	    // InternalIDL.g:3205:3: lv_comments_13_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getReadOnlyAttrSpecAccess().getCommentsIDLCommentParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_13_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getReadOnlyAttrSpecRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_13_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, ruleReadOnlyAttrSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleReadOnlyAttrSpec"


    // $ANTLR start "entryRuleAttrRaisesExpr"
    // InternalIDL.g:3229:1: entryRuleAttrRaisesExpr returns [EObject current=null] : iv_ruleAttrRaisesExpr= ruleAttrRaisesExpr EOF ;
    public final EObject entryRuleAttrRaisesExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleAttrRaisesExpr_StartIndex = input.index();
        EObject iv_ruleAttrRaisesExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return current; }
            // InternalIDL.g:3230:2: (iv_ruleAttrRaisesExpr= ruleAttrRaisesExpr EOF )
            // InternalIDL.g:3231:2: iv_ruleAttrRaisesExpr= ruleAttrRaisesExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAttrRaisesExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAttrRaisesExpr=ruleAttrRaisesExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAttrRaisesExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, entryRuleAttrRaisesExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAttrRaisesExpr"


    // $ANTLR start "ruleAttrRaisesExpr"
    // InternalIDL.g:3238:1: ruleAttrRaisesExpr returns [EObject current=null] : ( (lv_exceptions_0_0= ruleExceptionList ) ) ;
    public final EObject ruleAttrRaisesExpr() throws RecognitionException {
        EObject current = null;
        int ruleAttrRaisesExpr_StartIndex = input.index();
        EObject lv_exceptions_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return current; }
            // InternalIDL.g:3241:28: ( ( (lv_exceptions_0_0= ruleExceptionList ) ) )
            // InternalIDL.g:3242:1: ( (lv_exceptions_0_0= ruleExceptionList ) )
            {
            // InternalIDL.g:3242:1: ( (lv_exceptions_0_0= ruleExceptionList ) )
            // InternalIDL.g:3243:1: (lv_exceptions_0_0= ruleExceptionList )
            {
            // InternalIDL.g:3243:1: (lv_exceptions_0_0= ruleExceptionList )
            // InternalIDL.g:3244:3: lv_exceptions_0_0= ruleExceptionList
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAttrRaisesExprAccess().getExceptionsExceptionListParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_exceptions_0_0=ruleExceptionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAttrRaisesExprRule());
              	        }
                     		set(
                     			current, 
                     			"exceptions",
                      		lv_exceptions_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ExceptionList");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, ruleAttrRaisesExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAttrRaisesExpr"


    // $ANTLR start "entryRuleExceptionList"
    // InternalIDL.g:3268:1: entryRuleExceptionList returns [EObject current=null] : iv_ruleExceptionList= ruleExceptionList EOF ;
    public final EObject entryRuleExceptionList() throws RecognitionException {
        EObject current = null;
        int entryRuleExceptionList_StartIndex = input.index();
        EObject iv_ruleExceptionList = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return current; }
            // InternalIDL.g:3269:2: (iv_ruleExceptionList= ruleExceptionList EOF )
            // InternalIDL.g:3270:2: iv_ruleExceptionList= ruleExceptionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExceptionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExceptionList=ruleExceptionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExceptionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, entryRuleExceptionList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExceptionList"


    // $ANTLR start "ruleExceptionList"
    // InternalIDL.g:3277:1: ruleExceptionList returns [EObject current=null] : (otherlv_0= '(' ( (lv_exception_1_0= ruleScopedName ) ) (otherlv_2= ',' ( (lv_exception_3_0= ruleScopedName ) ) )* otherlv_4= ')' ) ;
    public final EObject ruleExceptionList() throws RecognitionException {
        EObject current = null;
        int ruleExceptionList_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_exception_1_0 = null;

        EObject lv_exception_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return current; }
            // InternalIDL.g:3280:28: ( (otherlv_0= '(' ( (lv_exception_1_0= ruleScopedName ) ) (otherlv_2= ',' ( (lv_exception_3_0= ruleScopedName ) ) )* otherlv_4= ')' ) )
            // InternalIDL.g:3281:1: (otherlv_0= '(' ( (lv_exception_1_0= ruleScopedName ) ) (otherlv_2= ',' ( (lv_exception_3_0= ruleScopedName ) ) )* otherlv_4= ')' )
            {
            // InternalIDL.g:3281:1: (otherlv_0= '(' ( (lv_exception_1_0= ruleScopedName ) ) (otherlv_2= ',' ( (lv_exception_3_0= ruleScopedName ) ) )* otherlv_4= ')' )
            // InternalIDL.g:3281:3: otherlv_0= '(' ( (lv_exception_1_0= ruleScopedName ) ) (otherlv_2= ',' ( (lv_exception_3_0= ruleScopedName ) ) )* otherlv_4= ')'
            {
            otherlv_0=(Token)match(input,71,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExceptionListAccess().getLeftParenthesisKeyword_0());
                  
            }
            // InternalIDL.g:3285:1: ( (lv_exception_1_0= ruleScopedName ) )
            // InternalIDL.g:3286:1: (lv_exception_1_0= ruleScopedName )
            {
            // InternalIDL.g:3286:1: (lv_exception_1_0= ruleScopedName )
            // InternalIDL.g:3287:3: lv_exception_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getExceptionListAccess().getExceptionScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_47);
            lv_exception_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getExceptionListRule());
              	        }
                     		add(
                     			current, 
                     			"exception",
                      		lv_exception_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:3303:2: (otherlv_2= ',' ( (lv_exception_3_0= ruleScopedName ) ) )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==65) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalIDL.g:3303:4: otherlv_2= ',' ( (lv_exception_3_0= ruleScopedName ) )
            	    {
            	    otherlv_2=(Token)match(input,65,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getExceptionListAccess().getCommaKeyword_2_0());
            	          
            	    }
            	    // InternalIDL.g:3307:1: ( (lv_exception_3_0= ruleScopedName ) )
            	    // InternalIDL.g:3308:1: (lv_exception_3_0= ruleScopedName )
            	    {
            	    // InternalIDL.g:3308:1: (lv_exception_3_0= ruleScopedName )
            	    // InternalIDL.g:3309:3: lv_exception_3_0= ruleScopedName
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExceptionListAccess().getExceptionScopedNameParserRuleCall_2_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_47);
            	    lv_exception_3_0=ruleScopedName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExceptionListRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"exception",
            	              		lv_exception_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            otherlv_4=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getExceptionListAccess().getRightParenthesisKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, ruleExceptionList_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExceptionList"


    // $ANTLR start "entryRuleOpDecl"
    // InternalIDL.g:3337:1: entryRuleOpDecl returns [EObject current=null] : iv_ruleOpDecl= ruleOpDecl EOF ;
    public final EObject entryRuleOpDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleOpDecl_StartIndex = input.index();
        EObject iv_ruleOpDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return current; }
            // InternalIDL.g:3338:2: (iv_ruleOpDecl= ruleOpDecl EOF )
            // InternalIDL.g:3339:2: iv_ruleOpDecl= ruleOpDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpDecl=ruleOpDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, entryRuleOpDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOpDecl"


    // $ANTLR start "ruleOpDecl"
    // InternalIDL.g:3346:1: ruleOpDecl returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_isOneway_1_0= 'oneway' ) )? ( (lv_type_2_0= ruleOpTypeDecl ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_params_4_0= ruleParameterDecls ) ) (otherlv_5= 'raises' ( (lv_raises_6_0= ruleExceptionList ) ) )? ( (lv_context_7_0= ruleContextExpr ) )? ) ;
    public final EObject ruleOpDecl() throws RecognitionException {
        EObject current = null;
        int ruleOpDecl_StartIndex = input.index();
        Token lv_isOneway_1_0=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        EObject lv_comments_0_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_params_4_0 = null;

        EObject lv_raises_6_0 = null;

        EObject lv_context_7_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return current; }
            // InternalIDL.g:3349:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_isOneway_1_0= 'oneway' ) )? ( (lv_type_2_0= ruleOpTypeDecl ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_params_4_0= ruleParameterDecls ) ) (otherlv_5= 'raises' ( (lv_raises_6_0= ruleExceptionList ) ) )? ( (lv_context_7_0= ruleContextExpr ) )? ) )
            // InternalIDL.g:3350:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_isOneway_1_0= 'oneway' ) )? ( (lv_type_2_0= ruleOpTypeDecl ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_params_4_0= ruleParameterDecls ) ) (otherlv_5= 'raises' ( (lv_raises_6_0= ruleExceptionList ) ) )? ( (lv_context_7_0= ruleContextExpr ) )? )
            {
            // InternalIDL.g:3350:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_isOneway_1_0= 'oneway' ) )? ( (lv_type_2_0= ruleOpTypeDecl ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_params_4_0= ruleParameterDecls ) ) (otherlv_5= 'raises' ( (lv_raises_6_0= ruleExceptionList ) ) )? ( (lv_context_7_0= ruleContextExpr ) )? )
            // InternalIDL.g:3350:2: ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_isOneway_1_0= 'oneway' ) )? ( (lv_type_2_0= ruleOpTypeDecl ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_params_4_0= ruleParameterDecls ) ) (otherlv_5= 'raises' ( (lv_raises_6_0= ruleExceptionList ) ) )? ( (lv_context_7_0= ruleContextExpr ) )?
            {
            // InternalIDL.g:3350:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==RULE_SL_COMMENT) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalIDL.g:3351:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:3351:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:3352:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOpDeclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOpDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            // InternalIDL.g:3368:3: ( (lv_isOneway_1_0= 'oneway' ) )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==73) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalIDL.g:3369:1: (lv_isOneway_1_0= 'oneway' )
                    {
                    // InternalIDL.g:3369:1: (lv_isOneway_1_0= 'oneway' )
                    // InternalIDL.g:3370:3: lv_isOneway_1_0= 'oneway'
                    {
                    lv_isOneway_1_0=(Token)match(input,73,FOLLOW_48); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isOneway_1_0, grammarAccess.getOpDeclAccess().getIsOnewayOnewayKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getOpDeclRule());
                      	        }
                             		setWithLastConsumed(current, "isOneway", true, "oneway");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIDL.g:3383:3: ( (lv_type_2_0= ruleOpTypeDecl ) )
            // InternalIDL.g:3384:1: (lv_type_2_0= ruleOpTypeDecl )
            {
            // InternalIDL.g:3384:1: (lv_type_2_0= ruleOpTypeDecl )
            // InternalIDL.g:3385:3: lv_type_2_0= ruleOpTypeDecl
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOpDeclAccess().getTypeOpTypeDeclParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_2_0=ruleOpTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOpDeclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.OpTypeDecl");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:3401:2: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:3402:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:3402:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:3403:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getOpDeclAccess().getNameIDTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getOpDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:3419:2: ( (lv_params_4_0= ruleParameterDecls ) )
            // InternalIDL.g:3420:1: (lv_params_4_0= ruleParameterDecls )
            {
            // InternalIDL.g:3420:1: (lv_params_4_0= ruleParameterDecls )
            // InternalIDL.g:3421:3: lv_params_4_0= ruleParameterDecls
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOpDeclAccess().getParamsParameterDeclsParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_49);
            lv_params_4_0=ruleParameterDecls();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOpDeclRule());
              	        }
                     		set(
                     			current, 
                     			"params",
                      		lv_params_4_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParameterDecls");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:3437:2: (otherlv_5= 'raises' ( (lv_raises_6_0= ruleExceptionList ) ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==70) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalIDL.g:3437:4: otherlv_5= 'raises' ( (lv_raises_6_0= ruleExceptionList ) )
                    {
                    otherlv_5=(Token)match(input,70,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getOpDeclAccess().getRaisesKeyword_5_0());
                          
                    }
                    // InternalIDL.g:3441:1: ( (lv_raises_6_0= ruleExceptionList ) )
                    // InternalIDL.g:3442:1: (lv_raises_6_0= ruleExceptionList )
                    {
                    // InternalIDL.g:3442:1: (lv_raises_6_0= ruleExceptionList )
                    // InternalIDL.g:3443:3: lv_raises_6_0= ruleExceptionList
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOpDeclAccess().getRaisesExceptionListParserRuleCall_5_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_50);
                    lv_raises_6_0=ruleExceptionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOpDeclRule());
                      	        }
                             		set(
                             			current, 
                             			"raises",
                              		lv_raises_6_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ExceptionList");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalIDL.g:3459:4: ( (lv_context_7_0= ruleContextExpr ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==75) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalIDL.g:3460:1: (lv_context_7_0= ruleContextExpr )
                    {
                    // InternalIDL.g:3460:1: (lv_context_7_0= ruleContextExpr )
                    // InternalIDL.g:3461:3: lv_context_7_0= ruleContextExpr
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getOpDeclAccess().getContextContextExprParserRuleCall_6_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_context_7_0=ruleContextExpr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getOpDeclRule());
                      	        }
                             		set(
                             			current, 
                             			"context",
                              		lv_context_7_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ContextExpr");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, ruleOpDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOpDecl"


    // $ANTLR start "entryRuleOpTypeDecl"
    // InternalIDL.g:3485:1: entryRuleOpTypeDecl returns [EObject current=null] : iv_ruleOpTypeDecl= ruleOpTypeDecl EOF ;
    public final EObject entryRuleOpTypeDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleOpTypeDecl_StartIndex = input.index();
        EObject iv_ruleOpTypeDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return current; }
            // InternalIDL.g:3486:2: (iv_ruleOpTypeDecl= ruleOpTypeDecl EOF )
            // InternalIDL.g:3487:2: iv_ruleOpTypeDecl= ruleOpTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOpTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOpTypeDecl=ruleOpTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOpTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, entryRuleOpTypeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOpTypeDecl"


    // $ANTLR start "ruleOpTypeDecl"
    // InternalIDL.g:3494:1: ruleOpTypeDecl returns [EObject current=null] : (this_ParamTypeSpec_0= ruleParamTypeSpec | otherlv_1= 'void' ) ;
    public final EObject ruleOpTypeDecl() throws RecognitionException {
        EObject current = null;
        int ruleOpTypeDecl_StartIndex = input.index();
        Token otherlv_1=null;
        EObject this_ParamTypeSpec_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return current; }
            // InternalIDL.g:3497:28: ( (this_ParamTypeSpec_0= ruleParamTypeSpec | otherlv_1= 'void' ) )
            // InternalIDL.g:3498:1: (this_ParamTypeSpec_0= ruleParamTypeSpec | otherlv_1= 'void' )
            {
            // InternalIDL.g:3498:1: (this_ParamTypeSpec_0= ruleParamTypeSpec | otherlv_1= 'void' )
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==RULE_ID||LA48_0==42||(LA48_0>=76 && LA48_0<=89)) ) {
                alt48=1;
            }
            else if ( (LA48_0==74) ) {
                alt48=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }
            switch (alt48) {
                case 1 :
                    // InternalIDL.g:3499:2: this_ParamTypeSpec_0= ruleParamTypeSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getOpTypeDeclAccess().getParamTypeSpecParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ParamTypeSpec_0=ruleParamTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ParamTypeSpec_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:3511:7: otherlv_1= 'void'
                    {
                    otherlv_1=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getOpTypeDeclAccess().getVoidKeyword_1());
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, ruleOpTypeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOpTypeDecl"


    // $ANTLR start "entryRuleParameterDecls"
    // InternalIDL.g:3523:1: entryRuleParameterDecls returns [EObject current=null] : iv_ruleParameterDecls= ruleParameterDecls EOF ;
    public final EObject entryRuleParameterDecls() throws RecognitionException {
        EObject current = null;
        int entryRuleParameterDecls_StartIndex = input.index();
        EObject iv_ruleParameterDecls = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return current; }
            // InternalIDL.g:3524:2: (iv_ruleParameterDecls= ruleParameterDecls EOF )
            // InternalIDL.g:3525:2: iv_ruleParameterDecls= ruleParameterDecls EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterDeclsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterDecls=ruleParameterDecls();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterDecls; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, entryRuleParameterDecls_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterDecls"


    // $ANTLR start "ruleParameterDecls"
    // InternalIDL.g:3532:1: ruleParameterDecls returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_comments_2_0= ruleIDLComment ) )* ( ( (lv_decls_3_0= ruleParamDcl ) ) (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )* )? otherlv_7= ')' ) ;
    public final EObject ruleParameterDecls() throws RecognitionException {
        EObject current = null;
        int ruleParameterDecls_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject lv_comments_2_0 = null;

        EObject lv_decls_3_0 = null;

        EObject lv_comments_5_0 = null;

        EObject lv_decls_6_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return current; }
            // InternalIDL.g:3535:28: ( ( () otherlv_1= '(' ( (lv_comments_2_0= ruleIDLComment ) )* ( ( (lv_decls_3_0= ruleParamDcl ) ) (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )* )? otherlv_7= ')' ) )
            // InternalIDL.g:3536:1: ( () otherlv_1= '(' ( (lv_comments_2_0= ruleIDLComment ) )* ( ( (lv_decls_3_0= ruleParamDcl ) ) (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )* )? otherlv_7= ')' )
            {
            // InternalIDL.g:3536:1: ( () otherlv_1= '(' ( (lv_comments_2_0= ruleIDLComment ) )* ( ( (lv_decls_3_0= ruleParamDcl ) ) (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )* )? otherlv_7= ')' )
            // InternalIDL.g:3536:2: () otherlv_1= '(' ( (lv_comments_2_0= ruleIDLComment ) )* ( ( (lv_decls_3_0= ruleParamDcl ) ) (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )* )? otherlv_7= ')'
            {
            // InternalIDL.g:3536:2: ()
            // InternalIDL.g:3537:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getParameterDeclsAccess().getParameterDeclsAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,71,FOLLOW_51); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getParameterDeclsAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalIDL.g:3549:1: ( (lv_comments_2_0= ruleIDLComment ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( (LA49_0==RULE_SL_COMMENT) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalIDL.g:3550:1: (lv_comments_2_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:3550:1: (lv_comments_2_0= ruleIDLComment )
            	    // InternalIDL.g:3551:3: lv_comments_2_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_comments_2_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            // InternalIDL.g:3567:3: ( ( (lv_decls_3_0= ruleParamDcl ) ) (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )* )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( ((LA52_0>=143 && LA52_0<=146)) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalIDL.g:3567:4: ( (lv_decls_3_0= ruleParamDcl ) ) (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )*
                    {
                    // InternalIDL.g:3567:4: ( (lv_decls_3_0= ruleParamDcl ) )
                    // InternalIDL.g:3568:1: (lv_decls_3_0= ruleParamDcl )
                    {
                    // InternalIDL.g:3568:1: (lv_decls_3_0= ruleParamDcl )
                    // InternalIDL.g:3569:3: lv_decls_3_0= ruleParamDcl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getDeclsParamDclParserRuleCall_3_0_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_47);
                    lv_decls_3_0=ruleParamDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
                      	        }
                             		add(
                             			current, 
                             			"decls",
                              		lv_decls_3_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParamDcl");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIDL.g:3585:2: (otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==65) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // InternalIDL.g:3585:4: otherlv_4= ',' ( (lv_comments_5_0= ruleIDLComment ) )* ( (lv_decls_6_0= ruleParamDcl ) )
                    	    {
                    	    otherlv_4=(Token)match(input,65,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_4, grammarAccess.getParameterDeclsAccess().getCommaKeyword_3_1_0());
                    	          
                    	    }
                    	    // InternalIDL.g:3589:1: ( (lv_comments_5_0= ruleIDLComment ) )*
                    	    loop50:
                    	    do {
                    	        int alt50=2;
                    	        int LA50_0 = input.LA(1);

                    	        if ( (LA50_0==RULE_SL_COMMENT) ) {
                    	            alt50=1;
                    	        }


                    	        switch (alt50) {
                    	    	case 1 :
                    	    	    // InternalIDL.g:3590:1: (lv_comments_5_0= ruleIDLComment )
                    	    	    {
                    	    	    // InternalIDL.g:3590:1: (lv_comments_5_0= ruleIDLComment )
                    	    	    // InternalIDL.g:3591:3: lv_comments_5_0= ruleIDLComment
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {
                    	    	       
                    	    	      	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getCommentsIDLCommentParserRuleCall_3_1_1_0()); 
                    	    	      	    
                    	    	    }
                    	    	    pushFollow(FOLLOW_52);
                    	    	    lv_comments_5_0=ruleIDLComment();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      	        if (current==null) {
                    	    	      	            current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
                    	    	      	        }
                    	    	             		add(
                    	    	             			current, 
                    	    	             			"comments",
                    	    	              		lv_comments_5_0, 
                    	    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
                    	    	      	        afterParserOrEnumRuleCall();
                    	    	      	    
                    	    	    }

                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop50;
                    	        }
                    	    } while (true);

                    	    // InternalIDL.g:3607:3: ( (lv_decls_6_0= ruleParamDcl ) )
                    	    // InternalIDL.g:3608:1: (lv_decls_6_0= ruleParamDcl )
                    	    {
                    	    // InternalIDL.g:3608:1: (lv_decls_6_0= ruleParamDcl )
                    	    // InternalIDL.g:3609:3: lv_decls_6_0= ruleParamDcl
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getParameterDeclsAccess().getDeclsParamDclParserRuleCall_3_1_2_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_decls_6_0=ruleParamDcl();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getParameterDeclsRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"decls",
                    	              		lv_decls_6_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParamDcl");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_7=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getParameterDeclsAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, ruleParameterDecls_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleParameterDecls"


    // $ANTLR start "entryRuleParamDcl"
    // InternalIDL.g:3637:1: entryRuleParamDcl returns [EObject current=null] : iv_ruleParamDcl= ruleParamDcl EOF ;
    public final EObject entryRuleParamDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleParamDcl_StartIndex = input.index();
        EObject iv_ruleParamDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return current; }
            // InternalIDL.g:3638:2: (iv_ruleParamDcl= ruleParamDcl EOF )
            // InternalIDL.g:3639:2: iv_ruleParamDcl= ruleParamDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParamDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParamDcl=ruleParamDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParamDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, entryRuleParamDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleParamDcl"


    // $ANTLR start "ruleParamDcl"
    // InternalIDL.g:3646:1: ruleParamDcl returns [EObject current=null] : ( ( (lv_direction_0_0= ruleParamDirection ) ) ( (lv_type_1_0= ruleParamTypeSpec ) ) ( (lv_name_2_0= RULE_ID ) ) ) ;
    public final EObject ruleParamDcl() throws RecognitionException {
        EObject current = null;
        int ruleParamDcl_StartIndex = input.index();
        Token lv_name_2_0=null;
        Enumerator lv_direction_0_0 = null;

        EObject lv_type_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return current; }
            // InternalIDL.g:3649:28: ( ( ( (lv_direction_0_0= ruleParamDirection ) ) ( (lv_type_1_0= ruleParamTypeSpec ) ) ( (lv_name_2_0= RULE_ID ) ) ) )
            // InternalIDL.g:3650:1: ( ( (lv_direction_0_0= ruleParamDirection ) ) ( (lv_type_1_0= ruleParamTypeSpec ) ) ( (lv_name_2_0= RULE_ID ) ) )
            {
            // InternalIDL.g:3650:1: ( ( (lv_direction_0_0= ruleParamDirection ) ) ( (lv_type_1_0= ruleParamTypeSpec ) ) ( (lv_name_2_0= RULE_ID ) ) )
            // InternalIDL.g:3650:2: ( (lv_direction_0_0= ruleParamDirection ) ) ( (lv_type_1_0= ruleParamTypeSpec ) ) ( (lv_name_2_0= RULE_ID ) )
            {
            // InternalIDL.g:3650:2: ( (lv_direction_0_0= ruleParamDirection ) )
            // InternalIDL.g:3651:1: (lv_direction_0_0= ruleParamDirection )
            {
            // InternalIDL.g:3651:1: (lv_direction_0_0= ruleParamDirection )
            // InternalIDL.g:3652:3: lv_direction_0_0= ruleParamDirection
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParamDclAccess().getDirectionParamDirectionEnumRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_41);
            lv_direction_0_0=ruleParamDirection();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParamDclRule());
              	        }
                     		set(
                     			current, 
                     			"direction",
                      		lv_direction_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParamDirection");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:3668:2: ( (lv_type_1_0= ruleParamTypeSpec ) )
            // InternalIDL.g:3669:1: (lv_type_1_0= ruleParamTypeSpec )
            {
            // InternalIDL.g:3669:1: (lv_type_1_0= ruleParamTypeSpec )
            // InternalIDL.g:3670:3: lv_type_1_0= ruleParamTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getParamDclAccess().getTypeParamTypeSpecParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_1_0=ruleParamTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getParamDclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParamTypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:3686:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:3687:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:3687:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:3688:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getParamDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getParamDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, ruleParamDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleParamDcl"


    // $ANTLR start "entryRuleContextExpr"
    // InternalIDL.g:3712:1: entryRuleContextExpr returns [EObject current=null] : iv_ruleContextExpr= ruleContextExpr EOF ;
    public final EObject entryRuleContextExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleContextExpr_StartIndex = input.index();
        EObject iv_ruleContextExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return current; }
            // InternalIDL.g:3713:2: (iv_ruleContextExpr= ruleContextExpr EOF )
            // InternalIDL.g:3714:2: iv_ruleContextExpr= ruleContextExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContextExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContextExpr=ruleContextExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContextExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, entryRuleContextExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleContextExpr"


    // $ANTLR start "ruleContextExpr"
    // InternalIDL.g:3721:1: ruleContextExpr returns [EObject current=null] : (otherlv_0= 'context' otherlv_1= '(' ( (lv_literal_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_literal_4_0= RULE_STRING ) ) )* otherlv_5= ')' ) ;
    public final EObject ruleContextExpr() throws RecognitionException {
        EObject current = null;
        int ruleContextExpr_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_literal_2_0=null;
        Token otherlv_3=null;
        Token lv_literal_4_0=null;
        Token otherlv_5=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return current; }
            // InternalIDL.g:3724:28: ( (otherlv_0= 'context' otherlv_1= '(' ( (lv_literal_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_literal_4_0= RULE_STRING ) ) )* otherlv_5= ')' ) )
            // InternalIDL.g:3725:1: (otherlv_0= 'context' otherlv_1= '(' ( (lv_literal_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_literal_4_0= RULE_STRING ) ) )* otherlv_5= ')' )
            {
            // InternalIDL.g:3725:1: (otherlv_0= 'context' otherlv_1= '(' ( (lv_literal_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_literal_4_0= RULE_STRING ) ) )* otherlv_5= ')' )
            // InternalIDL.g:3725:3: otherlv_0= 'context' otherlv_1= '(' ( (lv_literal_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_literal_4_0= RULE_STRING ) ) )* otherlv_5= ')'
            {
            otherlv_0=(Token)match(input,75,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getContextExprAccess().getContextKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,71,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getContextExprAccess().getLeftParenthesisKeyword_1());
                  
            }
            // InternalIDL.g:3733:1: ( (lv_literal_2_0= RULE_STRING ) )
            // InternalIDL.g:3734:1: (lv_literal_2_0= RULE_STRING )
            {
            // InternalIDL.g:3734:1: (lv_literal_2_0= RULE_STRING )
            // InternalIDL.g:3735:3: lv_literal_2_0= RULE_STRING
            {
            lv_literal_2_0=(Token)match(input,RULE_STRING,FOLLOW_47); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_literal_2_0, grammarAccess.getContextExprAccess().getLiteralSTRINGTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getContextExprRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"literal",
                      		lv_literal_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
              	    
            }

            }


            }

            // InternalIDL.g:3751:2: (otherlv_3= ',' ( (lv_literal_4_0= RULE_STRING ) ) )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==65) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalIDL.g:3751:4: otherlv_3= ',' ( (lv_literal_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,65,FOLLOW_8); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getContextExprAccess().getCommaKeyword_3_0());
            	          
            	    }
            	    // InternalIDL.g:3755:1: ( (lv_literal_4_0= RULE_STRING ) )
            	    // InternalIDL.g:3756:1: (lv_literal_4_0= RULE_STRING )
            	    {
            	    // InternalIDL.g:3756:1: (lv_literal_4_0= RULE_STRING )
            	    // InternalIDL.g:3757:3: lv_literal_4_0= RULE_STRING
            	    {
            	    lv_literal_4_0=(Token)match(input,RULE_STRING,FOLLOW_47); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_literal_4_0, grammarAccess.getContextExprAccess().getLiteralSTRINGTerminalRuleCall_3_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getContextExprRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"literal",
            	              		lv_literal_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            otherlv_5=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getContextExprAccess().getRightParenthesisKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, ruleContextExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleContextExpr"


    // $ANTLR start "entryRuleParamTypeSpec"
    // InternalIDL.g:3785:1: entryRuleParamTypeSpec returns [EObject current=null] : iv_ruleParamTypeSpec= ruleParamTypeSpec EOF ;
    public final EObject entryRuleParamTypeSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleParamTypeSpec_StartIndex = input.index();
        EObject iv_ruleParamTypeSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return current; }
            // InternalIDL.g:3786:2: (iv_ruleParamTypeSpec= ruleParamTypeSpec EOF )
            // InternalIDL.g:3787:2: iv_ruleParamTypeSpec= ruleParamTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParamTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParamTypeSpec=ruleParamTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParamTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, entryRuleParamTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleParamTypeSpec"


    // $ANTLR start "ruleParamTypeSpec"
    // InternalIDL.g:3794:1: ruleParamTypeSpec returns [EObject current=null] : (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_ScopedName_3= ruleScopedName ) ;
    public final EObject ruleParamTypeSpec() throws RecognitionException {
        EObject current = null;
        int ruleParamTypeSpec_StartIndex = input.index();
        EObject this_BaseTypeSpec_0 = null;

        EObject this_StringType_1 = null;

        EObject this_WideStringType_2 = null;

        EObject this_ScopedName_3 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return current; }
            // InternalIDL.g:3797:28: ( (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_ScopedName_3= ruleScopedName ) )
            // InternalIDL.g:3798:1: (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_ScopedName_3= ruleScopedName )
            {
            // InternalIDL.g:3798:1: (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_ScopedName_3= ruleScopedName )
            int alt54=4;
            switch ( input.LA(1) ) {
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
                {
                alt54=1;
                }
                break;
            case 88:
                {
                alt54=2;
                }
                break;
            case 89:
                {
                alt54=3;
                }
                break;
            case RULE_ID:
            case 42:
                {
                alt54=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;
            }

            switch (alt54) {
                case 1 :
                    // InternalIDL.g:3799:2: this_BaseTypeSpec_0= ruleBaseTypeSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParamTypeSpecAccess().getBaseTypeSpecParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BaseTypeSpec_0=ruleBaseTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BaseTypeSpec_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:3812:2: this_StringType_1= ruleStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParamTypeSpecAccess().getStringTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringType_1=ruleStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:3825:2: this_WideStringType_2= ruleWideStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParamTypeSpecAccess().getWideStringTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WideStringType_2=ruleWideStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WideStringType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:3838:2: this_ScopedName_3= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getParamTypeSpecAccess().getScopedNameParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScopedName_3=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScopedName_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, ruleParamTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleParamTypeSpec"


    // $ANTLR start "entryRuleScopedName"
    // InternalIDL.g:3857:1: entryRuleScopedName returns [EObject current=null] : iv_ruleScopedName= ruleScopedName EOF ;
    public final EObject entryRuleScopedName() throws RecognitionException {
        EObject current = null;
        int entryRuleScopedName_StartIndex = input.index();
        EObject iv_ruleScopedName = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return current; }
            // InternalIDL.g:3858:2: (iv_ruleScopedName= ruleScopedName EOF )
            // InternalIDL.g:3859:2: iv_ruleScopedName= ruleScopedName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopedNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleScopedName=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScopedName; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, entryRuleScopedName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleScopedName"


    // $ANTLR start "ruleScopedName"
    // InternalIDL.g:3866:1: ruleScopedName returns [EObject current=null] : ( (otherlv_0= '::' )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) ) )* ) ;
    public final EObject ruleScopedName() throws RecognitionException {
        EObject current = null;
        int ruleScopedName_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return current; }
            // InternalIDL.g:3869:28: ( ( (otherlv_0= '::' )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) ) )* ) )
            // InternalIDL.g:3870:1: ( (otherlv_0= '::' )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) ) )* )
            {
            // InternalIDL.g:3870:1: ( (otherlv_0= '::' )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) ) )* )
            // InternalIDL.g:3870:2: (otherlv_0= '::' )? ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) ) )*
            {
            // InternalIDL.g:3870:2: (otherlv_0= '::' )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==42) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalIDL.g:3870:4: otherlv_0= '::'
                    {
                    otherlv_0=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getScopedNameAccess().getColonColonKeyword_0());
                          
                    }

                    }
                    break;

            }

            // InternalIDL.g:3874:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:3875:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:3875:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:3876:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_53); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getScopedNameAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getScopedNameRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:3892:2: (otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==42) ) {
                    int LA56_2 = input.LA(2);

                    if ( (LA56_2==RULE_ID) ) {
                        int LA56_3 = input.LA(3);

                        if ( (synpred109_InternalIDL()) ) {
                            alt56=1;
                        }


                    }


                }


                switch (alt56) {
            	case 1 :
            	    // InternalIDL.g:3892:4: otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) )
            	    {
            	    otherlv_2=(Token)match(input,42,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_2, grammarAccess.getScopedNameAccess().getColonColonKeyword_2_0());
            	          
            	    }
            	    // InternalIDL.g:3896:1: ( (lv_name_3_0= RULE_ID ) )
            	    // InternalIDL.g:3897:1: (lv_name_3_0= RULE_ID )
            	    {
            	    // InternalIDL.g:3897:1: (lv_name_3_0= RULE_ID )
            	    // InternalIDL.g:3898:3: lv_name_3_0= RULE_ID
            	    {
            	    lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_53); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_name_3_0, grammarAccess.getScopedNameAccess().getNameIDTerminalRuleCall_2_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getScopedNameRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"name",
            	              		lv_name_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, ruleScopedName_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleScopedName"


    // $ANTLR start "entryRuleBaseTypeSpec"
    // InternalIDL.g:3922:1: entryRuleBaseTypeSpec returns [EObject current=null] : iv_ruleBaseTypeSpec= ruleBaseTypeSpec EOF ;
    public final EObject entryRuleBaseTypeSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleBaseTypeSpec_StartIndex = input.index();
        EObject iv_ruleBaseTypeSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return current; }
            // InternalIDL.g:3923:2: (iv_ruleBaseTypeSpec= ruleBaseTypeSpec EOF )
            // InternalIDL.g:3924:2: iv_ruleBaseTypeSpec= ruleBaseTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBaseTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBaseTypeSpec=ruleBaseTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBaseTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, entryRuleBaseTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBaseTypeSpec"


    // $ANTLR start "ruleBaseTypeSpec"
    // InternalIDL.g:3931:1: ruleBaseTypeSpec returns [EObject current=null] : (this_FloatingPtType_0= ruleFloatingPtType | this_IntegerType_1= ruleIntegerType | this_CharType_2= ruleCharType | this_WideCharType_3= ruleWideCharType | this_BooleanType_4= ruleBooleanType | this_OctetType_5= ruleOctetType | this_AnyType_6= ruleAnyType | this_ObjectType_7= ruleObjectType | this_ValueBaseType_8= ruleValueBaseType ) ;
    public final EObject ruleBaseTypeSpec() throws RecognitionException {
        EObject current = null;
        int ruleBaseTypeSpec_StartIndex = input.index();
        EObject this_FloatingPtType_0 = null;

        EObject this_IntegerType_1 = null;

        EObject this_CharType_2 = null;

        EObject this_WideCharType_3 = null;

        EObject this_BooleanType_4 = null;

        EObject this_OctetType_5 = null;

        EObject this_AnyType_6 = null;

        EObject this_ObjectType_7 = null;

        EObject this_ValueBaseType_8 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return current; }
            // InternalIDL.g:3934:28: ( (this_FloatingPtType_0= ruleFloatingPtType | this_IntegerType_1= ruleIntegerType | this_CharType_2= ruleCharType | this_WideCharType_3= ruleWideCharType | this_BooleanType_4= ruleBooleanType | this_OctetType_5= ruleOctetType | this_AnyType_6= ruleAnyType | this_ObjectType_7= ruleObjectType | this_ValueBaseType_8= ruleValueBaseType ) )
            // InternalIDL.g:3935:1: (this_FloatingPtType_0= ruleFloatingPtType | this_IntegerType_1= ruleIntegerType | this_CharType_2= ruleCharType | this_WideCharType_3= ruleWideCharType | this_BooleanType_4= ruleBooleanType | this_OctetType_5= ruleOctetType | this_AnyType_6= ruleAnyType | this_ObjectType_7= ruleObjectType | this_ValueBaseType_8= ruleValueBaseType )
            {
            // InternalIDL.g:3935:1: (this_FloatingPtType_0= ruleFloatingPtType | this_IntegerType_1= ruleIntegerType | this_CharType_2= ruleCharType | this_WideCharType_3= ruleWideCharType | this_BooleanType_4= ruleBooleanType | this_OctetType_5= ruleOctetType | this_AnyType_6= ruleAnyType | this_ObjectType_7= ruleObjectType | this_ValueBaseType_8= ruleValueBaseType )
            int alt57=9;
            alt57 = dfa57.predict(input);
            switch (alt57) {
                case 1 :
                    // InternalIDL.g:3936:2: this_FloatingPtType_0= ruleFloatingPtType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getFloatingPtTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FloatingPtType_0=ruleFloatingPtType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FloatingPtType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:3949:2: this_IntegerType_1= ruleIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getIntegerTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerType_1=ruleIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntegerType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:3962:2: this_CharType_2= ruleCharType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getCharTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CharType_2=ruleCharType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CharType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:3975:2: this_WideCharType_3= ruleWideCharType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getWideCharTypeParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WideCharType_3=ruleWideCharType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WideCharType_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIDL.g:3988:2: this_BooleanType_4= ruleBooleanType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getBooleanTypeParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanType_4=ruleBooleanType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BooleanType_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalIDL.g:4001:2: this_OctetType_5= ruleOctetType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getOctetTypeParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OctetType_5=ruleOctetType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OctetType_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalIDL.g:4014:2: this_AnyType_6= ruleAnyType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getAnyTypeParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_AnyType_6=ruleAnyType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AnyType_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalIDL.g:4027:2: this_ObjectType_7= ruleObjectType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getObjectTypeParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ObjectType_7=ruleObjectType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ObjectType_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalIDL.g:4040:2: this_ValueBaseType_8= ruleValueBaseType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getBaseTypeSpecAccess().getValueBaseTypeParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ValueBaseType_8=ruleValueBaseType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValueBaseType_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, ruleBaseTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBaseTypeSpec"


    // $ANTLR start "entryRuleFloatingPtType"
    // InternalIDL.g:4059:1: entryRuleFloatingPtType returns [EObject current=null] : iv_ruleFloatingPtType= ruleFloatingPtType EOF ;
    public final EObject entryRuleFloatingPtType() throws RecognitionException {
        EObject current = null;
        int entryRuleFloatingPtType_StartIndex = input.index();
        EObject iv_ruleFloatingPtType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return current; }
            // InternalIDL.g:4060:2: (iv_ruleFloatingPtType= ruleFloatingPtType EOF )
            // InternalIDL.g:4061:2: iv_ruleFloatingPtType= ruleFloatingPtType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatingPtTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFloatingPtType=ruleFloatingPtType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatingPtType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, entryRuleFloatingPtType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatingPtType"


    // $ANTLR start "ruleFloatingPtType"
    // InternalIDL.g:4068:1: ruleFloatingPtType returns [EObject current=null] : (this_FloatType_0= ruleFloatType | this_DoubleType_1= ruleDoubleType | this_LongDoubleType_2= ruleLongDoubleType ) ;
    public final EObject ruleFloatingPtType() throws RecognitionException {
        EObject current = null;
        int ruleFloatingPtType_StartIndex = input.index();
        EObject this_FloatType_0 = null;

        EObject this_DoubleType_1 = null;

        EObject this_LongDoubleType_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return current; }
            // InternalIDL.g:4071:28: ( (this_FloatType_0= ruleFloatType | this_DoubleType_1= ruleDoubleType | this_LongDoubleType_2= ruleLongDoubleType ) )
            // InternalIDL.g:4072:1: (this_FloatType_0= ruleFloatType | this_DoubleType_1= ruleDoubleType | this_LongDoubleType_2= ruleLongDoubleType )
            {
            // InternalIDL.g:4072:1: (this_FloatType_0= ruleFloatType | this_DoubleType_1= ruleDoubleType | this_LongDoubleType_2= ruleLongDoubleType )
            int alt58=3;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt58=1;
                }
                break;
            case 77:
                {
                alt58=2;
                }
                break;
            case 78:
                {
                alt58=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 58, 0, input);

                throw nvae;
            }

            switch (alt58) {
                case 1 :
                    // InternalIDL.g:4073:2: this_FloatType_0= ruleFloatType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFloatingPtTypeAccess().getFloatTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FloatType_0=ruleFloatType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FloatType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:4086:2: this_DoubleType_1= ruleDoubleType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFloatingPtTypeAccess().getDoubleTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_DoubleType_1=ruleDoubleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_DoubleType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:4099:2: this_LongDoubleType_2= ruleLongDoubleType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFloatingPtTypeAccess().getLongDoubleTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_LongDoubleType_2=ruleLongDoubleType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_LongDoubleType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, ruleFloatingPtType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFloatingPtType"


    // $ANTLR start "entryRuleFloatType"
    // InternalIDL.g:4118:1: entryRuleFloatType returns [EObject current=null] : iv_ruleFloatType= ruleFloatType EOF ;
    public final EObject entryRuleFloatType() throws RecognitionException {
        EObject current = null;
        int entryRuleFloatType_StartIndex = input.index();
        EObject iv_ruleFloatType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return current; }
            // InternalIDL.g:4119:2: (iv_ruleFloatType= ruleFloatType EOF )
            // InternalIDL.g:4120:2: iv_ruleFloatType= ruleFloatType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFloatType=ruleFloatType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, entryRuleFloatType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatType"


    // $ANTLR start "ruleFloatType"
    // InternalIDL.g:4127:1: ruleFloatType returns [EObject current=null] : ( () otherlv_1= 'float' ) ;
    public final EObject ruleFloatType() throws RecognitionException {
        EObject current = null;
        int ruleFloatType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return current; }
            // InternalIDL.g:4130:28: ( ( () otherlv_1= 'float' ) )
            // InternalIDL.g:4131:1: ( () otherlv_1= 'float' )
            {
            // InternalIDL.g:4131:1: ( () otherlv_1= 'float' )
            // InternalIDL.g:4131:2: () otherlv_1= 'float'
            {
            // InternalIDL.g:4131:2: ()
            // InternalIDL.g:4132:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFloatTypeAccess().getFloatTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFloatTypeAccess().getFloatKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, ruleFloatType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFloatType"


    // $ANTLR start "entryRuleDoubleType"
    // InternalIDL.g:4152:1: entryRuleDoubleType returns [EObject current=null] : iv_ruleDoubleType= ruleDoubleType EOF ;
    public final EObject entryRuleDoubleType() throws RecognitionException {
        EObject current = null;
        int entryRuleDoubleType_StartIndex = input.index();
        EObject iv_ruleDoubleType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return current; }
            // InternalIDL.g:4153:2: (iv_ruleDoubleType= ruleDoubleType EOF )
            // InternalIDL.g:4154:2: iv_ruleDoubleType= ruleDoubleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDoubleTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDoubleType=ruleDoubleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDoubleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, entryRuleDoubleType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDoubleType"


    // $ANTLR start "ruleDoubleType"
    // InternalIDL.g:4161:1: ruleDoubleType returns [EObject current=null] : ( () otherlv_1= 'double' ) ;
    public final EObject ruleDoubleType() throws RecognitionException {
        EObject current = null;
        int ruleDoubleType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return current; }
            // InternalIDL.g:4164:28: ( ( () otherlv_1= 'double' ) )
            // InternalIDL.g:4165:1: ( () otherlv_1= 'double' )
            {
            // InternalIDL.g:4165:1: ( () otherlv_1= 'double' )
            // InternalIDL.g:4165:2: () otherlv_1= 'double'
            {
            // InternalIDL.g:4165:2: ()
            // InternalIDL.g:4166:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getDoubleTypeAccess().getDoubleTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getDoubleTypeAccess().getDoubleKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, ruleDoubleType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDoubleType"


    // $ANTLR start "entryRuleLongDoubleType"
    // InternalIDL.g:4186:1: entryRuleLongDoubleType returns [EObject current=null] : iv_ruleLongDoubleType= ruleLongDoubleType EOF ;
    public final EObject entryRuleLongDoubleType() throws RecognitionException {
        EObject current = null;
        int entryRuleLongDoubleType_StartIndex = input.index();
        EObject iv_ruleLongDoubleType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return current; }
            // InternalIDL.g:4187:2: (iv_ruleLongDoubleType= ruleLongDoubleType EOF )
            // InternalIDL.g:4188:2: iv_ruleLongDoubleType= ruleLongDoubleType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLongDoubleTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLongDoubleType=ruleLongDoubleType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLongDoubleType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, entryRuleLongDoubleType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLongDoubleType"


    // $ANTLR start "ruleLongDoubleType"
    // InternalIDL.g:4195:1: ruleLongDoubleType returns [EObject current=null] : ( () otherlv_1= 'long' otherlv_2= 'double' ) ;
    public final EObject ruleLongDoubleType() throws RecognitionException {
        EObject current = null;
        int ruleLongDoubleType_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return current; }
            // InternalIDL.g:4198:28: ( ( () otherlv_1= 'long' otherlv_2= 'double' ) )
            // InternalIDL.g:4199:1: ( () otherlv_1= 'long' otherlv_2= 'double' )
            {
            // InternalIDL.g:4199:1: ( () otherlv_1= 'long' otherlv_2= 'double' )
            // InternalIDL.g:4199:2: () otherlv_1= 'long' otherlv_2= 'double'
            {
            // InternalIDL.g:4199:2: ()
            // InternalIDL.g:4200:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getLongDoubleTypeAccess().getLongDoubleTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_54); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getLongDoubleTypeAccess().getLongKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getLongDoubleTypeAccess().getDoubleKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, ruleLongDoubleType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLongDoubleType"


    // $ANTLR start "entryRuleIntegerType"
    // InternalIDL.g:4224:1: entryRuleIntegerType returns [EObject current=null] : iv_ruleIntegerType= ruleIntegerType EOF ;
    public final EObject entryRuleIntegerType() throws RecognitionException {
        EObject current = null;
        int entryRuleIntegerType_StartIndex = input.index();
        EObject iv_ruleIntegerType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return current; }
            // InternalIDL.g:4225:2: (iv_ruleIntegerType= ruleIntegerType EOF )
            // InternalIDL.g:4226:2: iv_ruleIntegerType= ruleIntegerType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIntegerType=ruleIntegerType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntegerType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, entryRuleIntegerType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleIntegerType"


    // $ANTLR start "ruleIntegerType"
    // InternalIDL.g:4233:1: ruleIntegerType returns [EObject current=null] : (this_UnsignedInt_0= ruleUnsignedInt | this_SignedInt_1= ruleSignedInt ) ;
    public final EObject ruleIntegerType() throws RecognitionException {
        EObject current = null;
        int ruleIntegerType_StartIndex = input.index();
        EObject this_UnsignedInt_0 = null;

        EObject this_SignedInt_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return current; }
            // InternalIDL.g:4236:28: ( (this_UnsignedInt_0= ruleUnsignedInt | this_SignedInt_1= ruleSignedInt ) )
            // InternalIDL.g:4237:1: (this_UnsignedInt_0= ruleUnsignedInt | this_SignedInt_1= ruleSignedInt )
            {
            // InternalIDL.g:4237:1: (this_UnsignedInt_0= ruleUnsignedInt | this_SignedInt_1= ruleSignedInt )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==80) ) {
                alt59=1;
            }
            else if ( ((LA59_0>=78 && LA59_0<=79)) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalIDL.g:4238:2: this_UnsignedInt_0= ruleUnsignedInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerTypeAccess().getUnsignedIntParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnsignedInt_0=ruleUnsignedInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnsignedInt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:4251:2: this_SignedInt_1= ruleSignedInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getIntegerTypeAccess().getSignedIntParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SignedInt_1=ruleSignedInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SignedInt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, ruleIntegerType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIntegerType"


    // $ANTLR start "entryRuleSignedInt"
    // InternalIDL.g:4270:1: entryRuleSignedInt returns [EObject current=null] : iv_ruleSignedInt= ruleSignedInt EOF ;
    public final EObject entryRuleSignedInt() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedInt_StartIndex = input.index();
        EObject iv_ruleSignedInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return current; }
            // InternalIDL.g:4271:2: (iv_ruleSignedInt= ruleSignedInt EOF )
            // InternalIDL.g:4272:2: iv_ruleSignedInt= ruleSignedInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignedInt=ruleSignedInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, entryRuleSignedInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedInt"


    // $ANTLR start "ruleSignedInt"
    // InternalIDL.g:4279:1: ruleSignedInt returns [EObject current=null] : (this_SignedShortInt_0= ruleSignedShortInt | this_SignedLongLongInt_1= ruleSignedLongLongInt | this_SignedLongInt_2= ruleSignedLongInt ) ;
    public final EObject ruleSignedInt() throws RecognitionException {
        EObject current = null;
        int ruleSignedInt_StartIndex = input.index();
        EObject this_SignedShortInt_0 = null;

        EObject this_SignedLongLongInt_1 = null;

        EObject this_SignedLongInt_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 112) ) { return current; }
            // InternalIDL.g:4282:28: ( (this_SignedShortInt_0= ruleSignedShortInt | this_SignedLongLongInt_1= ruleSignedLongLongInt | this_SignedLongInt_2= ruleSignedLongInt ) )
            // InternalIDL.g:4283:1: (this_SignedShortInt_0= ruleSignedShortInt | this_SignedLongLongInt_1= ruleSignedLongLongInt | this_SignedLongInt_2= ruleSignedLongInt )
            {
            // InternalIDL.g:4283:1: (this_SignedShortInt_0= ruleSignedShortInt | this_SignedLongLongInt_1= ruleSignedLongLongInt | this_SignedLongInt_2= ruleSignedLongInt )
            int alt60=3;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==79) ) {
                alt60=1;
            }
            else if ( (LA60_0==78) ) {
                int LA60_2 = input.LA(2);

                if ( (LA60_2==78) ) {
                    alt60=2;
                }
                else if ( (LA60_2==EOF||LA60_2==RULE_ID||LA60_2==22||LA60_2==65||LA60_2==72) ) {
                    alt60=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 60, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 60, 0, input);

                throw nvae;
            }
            switch (alt60) {
                case 1 :
                    // InternalIDL.g:4284:2: this_SignedShortInt_0= ruleSignedShortInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSignedIntAccess().getSignedShortIntParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SignedShortInt_0=ruleSignedShortInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SignedShortInt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:4297:2: this_SignedLongLongInt_1= ruleSignedLongLongInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSignedIntAccess().getSignedLongLongIntParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SignedLongLongInt_1=ruleSignedLongLongInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SignedLongLongInt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:4310:2: this_SignedLongInt_2= ruleSignedLongInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSignedIntAccess().getSignedLongIntParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SignedLongInt_2=ruleSignedLongInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SignedLongInt_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 112, ruleSignedInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedInt"


    // $ANTLR start "entryRuleSignedShortInt"
    // InternalIDL.g:4329:1: entryRuleSignedShortInt returns [EObject current=null] : iv_ruleSignedShortInt= ruleSignedShortInt EOF ;
    public final EObject entryRuleSignedShortInt() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedShortInt_StartIndex = input.index();
        EObject iv_ruleSignedShortInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 113) ) { return current; }
            // InternalIDL.g:4330:2: (iv_ruleSignedShortInt= ruleSignedShortInt EOF )
            // InternalIDL.g:4331:2: iv_ruleSignedShortInt= ruleSignedShortInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedShortIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignedShortInt=ruleSignedShortInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedShortInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 113, entryRuleSignedShortInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedShortInt"


    // $ANTLR start "ruleSignedShortInt"
    // InternalIDL.g:4338:1: ruleSignedShortInt returns [EObject current=null] : ( () otherlv_1= 'short' ) ;
    public final EObject ruleSignedShortInt() throws RecognitionException {
        EObject current = null;
        int ruleSignedShortInt_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 114) ) { return current; }
            // InternalIDL.g:4341:28: ( ( () otherlv_1= 'short' ) )
            // InternalIDL.g:4342:1: ( () otherlv_1= 'short' )
            {
            // InternalIDL.g:4342:1: ( () otherlv_1= 'short' )
            // InternalIDL.g:4342:2: () otherlv_1= 'short'
            {
            // InternalIDL.g:4342:2: ()
            // InternalIDL.g:4343:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSignedShortIntAccess().getSignedShortIntAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSignedShortIntAccess().getShortKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 114, ruleSignedShortInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedShortInt"


    // $ANTLR start "entryRuleSignedLongInt"
    // InternalIDL.g:4363:1: entryRuleSignedLongInt returns [EObject current=null] : iv_ruleSignedLongInt= ruleSignedLongInt EOF ;
    public final EObject entryRuleSignedLongInt() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedLongInt_StartIndex = input.index();
        EObject iv_ruleSignedLongInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 115) ) { return current; }
            // InternalIDL.g:4364:2: (iv_ruleSignedLongInt= ruleSignedLongInt EOF )
            // InternalIDL.g:4365:2: iv_ruleSignedLongInt= ruleSignedLongInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedLongIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignedLongInt=ruleSignedLongInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedLongInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 115, entryRuleSignedLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedLongInt"


    // $ANTLR start "ruleSignedLongInt"
    // InternalIDL.g:4372:1: ruleSignedLongInt returns [EObject current=null] : ( () otherlv_1= 'long' ) ;
    public final EObject ruleSignedLongInt() throws RecognitionException {
        EObject current = null;
        int ruleSignedLongInt_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 116) ) { return current; }
            // InternalIDL.g:4375:28: ( ( () otherlv_1= 'long' ) )
            // InternalIDL.g:4376:1: ( () otherlv_1= 'long' )
            {
            // InternalIDL.g:4376:1: ( () otherlv_1= 'long' )
            // InternalIDL.g:4376:2: () otherlv_1= 'long'
            {
            // InternalIDL.g:4376:2: ()
            // InternalIDL.g:4377:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSignedLongIntAccess().getSignedLongIntAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSignedLongIntAccess().getLongKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 116, ruleSignedLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedLongInt"


    // $ANTLR start "entryRuleSignedLongLongInt"
    // InternalIDL.g:4397:1: entryRuleSignedLongLongInt returns [EObject current=null] : iv_ruleSignedLongLongInt= ruleSignedLongLongInt EOF ;
    public final EObject entryRuleSignedLongLongInt() throws RecognitionException {
        EObject current = null;
        int entryRuleSignedLongLongInt_StartIndex = input.index();
        EObject iv_ruleSignedLongLongInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 117) ) { return current; }
            // InternalIDL.g:4398:2: (iv_ruleSignedLongLongInt= ruleSignedLongLongInt EOF )
            // InternalIDL.g:4399:2: iv_ruleSignedLongLongInt= ruleSignedLongLongInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSignedLongLongIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSignedLongLongInt=ruleSignedLongLongInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSignedLongLongInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 117, entryRuleSignedLongLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSignedLongLongInt"


    // $ANTLR start "ruleSignedLongLongInt"
    // InternalIDL.g:4406:1: ruleSignedLongLongInt returns [EObject current=null] : ( () otherlv_1= 'long' otherlv_2= 'long' ) ;
    public final EObject ruleSignedLongLongInt() throws RecognitionException {
        EObject current = null;
        int ruleSignedLongLongInt_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 118) ) { return current; }
            // InternalIDL.g:4409:28: ( ( () otherlv_1= 'long' otherlv_2= 'long' ) )
            // InternalIDL.g:4410:1: ( () otherlv_1= 'long' otherlv_2= 'long' )
            {
            // InternalIDL.g:4410:1: ( () otherlv_1= 'long' otherlv_2= 'long' )
            // InternalIDL.g:4410:2: () otherlv_1= 'long' otherlv_2= 'long'
            {
            // InternalIDL.g:4410:2: ()
            // InternalIDL.g:4411:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSignedLongLongIntAccess().getSignedLongLongIntAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,78,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSignedLongLongIntAccess().getLongKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getSignedLongLongIntAccess().getLongKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 118, ruleSignedLongLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSignedLongLongInt"


    // $ANTLR start "entryRuleUnsignedInt"
    // InternalIDL.g:4435:1: entryRuleUnsignedInt returns [EObject current=null] : iv_ruleUnsignedInt= ruleUnsignedInt EOF ;
    public final EObject entryRuleUnsignedInt() throws RecognitionException {
        EObject current = null;
        int entryRuleUnsignedInt_StartIndex = input.index();
        EObject iv_ruleUnsignedInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 119) ) { return current; }
            // InternalIDL.g:4436:2: (iv_ruleUnsignedInt= ruleUnsignedInt EOF )
            // InternalIDL.g:4437:2: iv_ruleUnsignedInt= ruleUnsignedInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnsignedIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnsignedInt=ruleUnsignedInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnsignedInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 119, entryRuleUnsignedInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsignedInt"


    // $ANTLR start "ruleUnsignedInt"
    // InternalIDL.g:4444:1: ruleUnsignedInt returns [EObject current=null] : (this_UnsignedShortInt_0= ruleUnsignedShortInt | this_UnsignedLongInt_1= ruleUnsignedLongInt | this_UnsignedLongLongInt_2= ruleUnsignedLongLongInt ) ;
    public final EObject ruleUnsignedInt() throws RecognitionException {
        EObject current = null;
        int ruleUnsignedInt_StartIndex = input.index();
        EObject this_UnsignedShortInt_0 = null;

        EObject this_UnsignedLongInt_1 = null;

        EObject this_UnsignedLongLongInt_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 120) ) { return current; }
            // InternalIDL.g:4447:28: ( (this_UnsignedShortInt_0= ruleUnsignedShortInt | this_UnsignedLongInt_1= ruleUnsignedLongInt | this_UnsignedLongLongInt_2= ruleUnsignedLongLongInt ) )
            // InternalIDL.g:4448:1: (this_UnsignedShortInt_0= ruleUnsignedShortInt | this_UnsignedLongInt_1= ruleUnsignedLongInt | this_UnsignedLongLongInt_2= ruleUnsignedLongLongInt )
            {
            // InternalIDL.g:4448:1: (this_UnsignedShortInt_0= ruleUnsignedShortInt | this_UnsignedLongInt_1= ruleUnsignedLongInt | this_UnsignedLongLongInt_2= ruleUnsignedLongLongInt )
            int alt61=3;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==80) ) {
                int LA61_1 = input.LA(2);

                if ( (LA61_1==79) ) {
                    alt61=1;
                }
                else if ( (LA61_1==78) ) {
                    int LA61_3 = input.LA(3);

                    if ( (LA61_3==78) ) {
                        alt61=3;
                    }
                    else if ( (LA61_3==EOF||LA61_3==RULE_ID||LA61_3==22||LA61_3==65||LA61_3==72) ) {
                        alt61=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 61, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalIDL.g:4449:2: this_UnsignedShortInt_0= ruleUnsignedShortInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnsignedIntAccess().getUnsignedShortIntParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnsignedShortInt_0=ruleUnsignedShortInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnsignedShortInt_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:4462:2: this_UnsignedLongInt_1= ruleUnsignedLongInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnsignedIntAccess().getUnsignedLongIntParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnsignedLongInt_1=ruleUnsignedLongInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnsignedLongInt_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:4475:2: this_UnsignedLongLongInt_2= ruleUnsignedLongLongInt
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getUnsignedIntAccess().getUnsignedLongLongIntParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnsignedLongLongInt_2=ruleUnsignedLongLongInt();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnsignedLongLongInt_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 120, ruleUnsignedInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnsignedInt"


    // $ANTLR start "entryRuleUnsignedShortInt"
    // InternalIDL.g:4494:1: entryRuleUnsignedShortInt returns [EObject current=null] : iv_ruleUnsignedShortInt= ruleUnsignedShortInt EOF ;
    public final EObject entryRuleUnsignedShortInt() throws RecognitionException {
        EObject current = null;
        int entryRuleUnsignedShortInt_StartIndex = input.index();
        EObject iv_ruleUnsignedShortInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 121) ) { return current; }
            // InternalIDL.g:4495:2: (iv_ruleUnsignedShortInt= ruleUnsignedShortInt EOF )
            // InternalIDL.g:4496:2: iv_ruleUnsignedShortInt= ruleUnsignedShortInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnsignedShortIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnsignedShortInt=ruleUnsignedShortInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnsignedShortInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 121, entryRuleUnsignedShortInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsignedShortInt"


    // $ANTLR start "ruleUnsignedShortInt"
    // InternalIDL.g:4503:1: ruleUnsignedShortInt returns [EObject current=null] : ( () otherlv_1= 'unsigned' otherlv_2= 'short' ) ;
    public final EObject ruleUnsignedShortInt() throws RecognitionException {
        EObject current = null;
        int ruleUnsignedShortInt_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 122) ) { return current; }
            // InternalIDL.g:4506:28: ( ( () otherlv_1= 'unsigned' otherlv_2= 'short' ) )
            // InternalIDL.g:4507:1: ( () otherlv_1= 'unsigned' otherlv_2= 'short' )
            {
            // InternalIDL.g:4507:1: ( () otherlv_1= 'unsigned' otherlv_2= 'short' )
            // InternalIDL.g:4507:2: () otherlv_1= 'unsigned' otherlv_2= 'short'
            {
            // InternalIDL.g:4507:2: ()
            // InternalIDL.g:4508:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnsignedShortIntAccess().getUnsignedShortIntAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_56); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnsignedShortIntAccess().getUnsignedKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUnsignedShortIntAccess().getShortKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 122, ruleUnsignedShortInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnsignedShortInt"


    // $ANTLR start "entryRuleUnsignedLongInt"
    // InternalIDL.g:4532:1: entryRuleUnsignedLongInt returns [EObject current=null] : iv_ruleUnsignedLongInt= ruleUnsignedLongInt EOF ;
    public final EObject entryRuleUnsignedLongInt() throws RecognitionException {
        EObject current = null;
        int entryRuleUnsignedLongInt_StartIndex = input.index();
        EObject iv_ruleUnsignedLongInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 123) ) { return current; }
            // InternalIDL.g:4533:2: (iv_ruleUnsignedLongInt= ruleUnsignedLongInt EOF )
            // InternalIDL.g:4534:2: iv_ruleUnsignedLongInt= ruleUnsignedLongInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnsignedLongIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnsignedLongInt=ruleUnsignedLongInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnsignedLongInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 123, entryRuleUnsignedLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsignedLongInt"


    // $ANTLR start "ruleUnsignedLongInt"
    // InternalIDL.g:4541:1: ruleUnsignedLongInt returns [EObject current=null] : ( () otherlv_1= 'unsigned' otherlv_2= 'long' ) ;
    public final EObject ruleUnsignedLongInt() throws RecognitionException {
        EObject current = null;
        int ruleUnsignedLongInt_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 124) ) { return current; }
            // InternalIDL.g:4544:28: ( ( () otherlv_1= 'unsigned' otherlv_2= 'long' ) )
            // InternalIDL.g:4545:1: ( () otherlv_1= 'unsigned' otherlv_2= 'long' )
            {
            // InternalIDL.g:4545:1: ( () otherlv_1= 'unsigned' otherlv_2= 'long' )
            // InternalIDL.g:4545:2: () otherlv_1= 'unsigned' otherlv_2= 'long'
            {
            // InternalIDL.g:4545:2: ()
            // InternalIDL.g:4546:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnsignedLongIntAccess().getUnsignedLongIntAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnsignedLongIntAccess().getUnsignedKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUnsignedLongIntAccess().getLongKeyword_2());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 124, ruleUnsignedLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnsignedLongInt"


    // $ANTLR start "entryRuleUnsignedLongLongInt"
    // InternalIDL.g:4570:1: entryRuleUnsignedLongLongInt returns [EObject current=null] : iv_ruleUnsignedLongLongInt= ruleUnsignedLongLongInt EOF ;
    public final EObject entryRuleUnsignedLongLongInt() throws RecognitionException {
        EObject current = null;
        int entryRuleUnsignedLongLongInt_StartIndex = input.index();
        EObject iv_ruleUnsignedLongLongInt = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 125) ) { return current; }
            // InternalIDL.g:4571:2: (iv_ruleUnsignedLongLongInt= ruleUnsignedLongLongInt EOF )
            // InternalIDL.g:4572:2: iv_ruleUnsignedLongLongInt= ruleUnsignedLongLongInt EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnsignedLongLongIntRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnsignedLongLongInt=ruleUnsignedLongLongInt();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnsignedLongLongInt; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 125, entryRuleUnsignedLongLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnsignedLongLongInt"


    // $ANTLR start "ruleUnsignedLongLongInt"
    // InternalIDL.g:4579:1: ruleUnsignedLongLongInt returns [EObject current=null] : ( () otherlv_1= 'unsigned' otherlv_2= 'long' otherlv_3= 'long' ) ;
    public final EObject ruleUnsignedLongLongInt() throws RecognitionException {
        EObject current = null;
        int ruleUnsignedLongLongInt_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 126) ) { return current; }
            // InternalIDL.g:4582:28: ( ( () otherlv_1= 'unsigned' otherlv_2= 'long' otherlv_3= 'long' ) )
            // InternalIDL.g:4583:1: ( () otherlv_1= 'unsigned' otherlv_2= 'long' otherlv_3= 'long' )
            {
            // InternalIDL.g:4583:1: ( () otherlv_1= 'unsigned' otherlv_2= 'long' otherlv_3= 'long' )
            // InternalIDL.g:4583:2: () otherlv_1= 'unsigned' otherlv_2= 'long' otherlv_3= 'long'
            {
            // InternalIDL.g:4583:2: ()
            // InternalIDL.g:4584:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnsignedLongLongIntAccess().getUnsignedLongLongIntAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,80,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnsignedLongLongIntAccess().getUnsignedKeyword_1());
                  
            }
            otherlv_2=(Token)match(input,78,FOLLOW_55); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUnsignedLongLongIntAccess().getLongKeyword_2());
                  
            }
            otherlv_3=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getUnsignedLongLongIntAccess().getLongKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 126, ruleUnsignedLongLongInt_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnsignedLongLongInt"


    // $ANTLR start "entryRuleCharType"
    // InternalIDL.g:4612:1: entryRuleCharType returns [EObject current=null] : iv_ruleCharType= ruleCharType EOF ;
    public final EObject entryRuleCharType() throws RecognitionException {
        EObject current = null;
        int entryRuleCharType_StartIndex = input.index();
        EObject iv_ruleCharType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 127) ) { return current; }
            // InternalIDL.g:4613:2: (iv_ruleCharType= ruleCharType EOF )
            // InternalIDL.g:4614:2: iv_ruleCharType= ruleCharType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCharTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCharType=ruleCharType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCharType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 127, entryRuleCharType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCharType"


    // $ANTLR start "ruleCharType"
    // InternalIDL.g:4621:1: ruleCharType returns [EObject current=null] : ( () otherlv_1= 'char' ) ;
    public final EObject ruleCharType() throws RecognitionException {
        EObject current = null;
        int ruleCharType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 128) ) { return current; }
            // InternalIDL.g:4624:28: ( ( () otherlv_1= 'char' ) )
            // InternalIDL.g:4625:1: ( () otherlv_1= 'char' )
            {
            // InternalIDL.g:4625:1: ( () otherlv_1= 'char' )
            // InternalIDL.g:4625:2: () otherlv_1= 'char'
            {
            // InternalIDL.g:4625:2: ()
            // InternalIDL.g:4626:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getCharTypeAccess().getCharTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getCharTypeAccess().getCharKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 128, ruleCharType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCharType"


    // $ANTLR start "entryRuleWideCharType"
    // InternalIDL.g:4646:1: entryRuleWideCharType returns [EObject current=null] : iv_ruleWideCharType= ruleWideCharType EOF ;
    public final EObject entryRuleWideCharType() throws RecognitionException {
        EObject current = null;
        int entryRuleWideCharType_StartIndex = input.index();
        EObject iv_ruleWideCharType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 129) ) { return current; }
            // InternalIDL.g:4647:2: (iv_ruleWideCharType= ruleWideCharType EOF )
            // InternalIDL.g:4648:2: iv_ruleWideCharType= ruleWideCharType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWideCharTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWideCharType=ruleWideCharType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWideCharType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 129, entryRuleWideCharType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWideCharType"


    // $ANTLR start "ruleWideCharType"
    // InternalIDL.g:4655:1: ruleWideCharType returns [EObject current=null] : ( () otherlv_1= 'wchar' ) ;
    public final EObject ruleWideCharType() throws RecognitionException {
        EObject current = null;
        int ruleWideCharType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 130) ) { return current; }
            // InternalIDL.g:4658:28: ( ( () otherlv_1= 'wchar' ) )
            // InternalIDL.g:4659:1: ( () otherlv_1= 'wchar' )
            {
            // InternalIDL.g:4659:1: ( () otherlv_1= 'wchar' )
            // InternalIDL.g:4659:2: () otherlv_1= 'wchar'
            {
            // InternalIDL.g:4659:2: ()
            // InternalIDL.g:4660:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWideCharTypeAccess().getWideCharTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWideCharTypeAccess().getWcharKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 130, ruleWideCharType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWideCharType"


    // $ANTLR start "entryRuleBooleanType"
    // InternalIDL.g:4680:1: entryRuleBooleanType returns [EObject current=null] : iv_ruleBooleanType= ruleBooleanType EOF ;
    public final EObject entryRuleBooleanType() throws RecognitionException {
        EObject current = null;
        int entryRuleBooleanType_StartIndex = input.index();
        EObject iv_ruleBooleanType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 131) ) { return current; }
            // InternalIDL.g:4681:2: (iv_ruleBooleanType= ruleBooleanType EOF )
            // InternalIDL.g:4682:2: iv_ruleBooleanType= ruleBooleanType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBooleanTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBooleanType=ruleBooleanType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBooleanType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 131, entryRuleBooleanType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleBooleanType"


    // $ANTLR start "ruleBooleanType"
    // InternalIDL.g:4689:1: ruleBooleanType returns [EObject current=null] : ( () otherlv_1= 'boolean' ) ;
    public final EObject ruleBooleanType() throws RecognitionException {
        EObject current = null;
        int ruleBooleanType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 132) ) { return current; }
            // InternalIDL.g:4692:28: ( ( () otherlv_1= 'boolean' ) )
            // InternalIDL.g:4693:1: ( () otherlv_1= 'boolean' )
            {
            // InternalIDL.g:4693:1: ( () otherlv_1= 'boolean' )
            // InternalIDL.g:4693:2: () otherlv_1= 'boolean'
            {
            // InternalIDL.g:4693:2: ()
            // InternalIDL.g:4694:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getBooleanTypeAccess().getBooleanTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getBooleanTypeAccess().getBooleanKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 132, ruleBooleanType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleBooleanType"


    // $ANTLR start "entryRuleOctetType"
    // InternalIDL.g:4714:1: entryRuleOctetType returns [EObject current=null] : iv_ruleOctetType= ruleOctetType EOF ;
    public final EObject entryRuleOctetType() throws RecognitionException {
        EObject current = null;
        int entryRuleOctetType_StartIndex = input.index();
        EObject iv_ruleOctetType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 133) ) { return current; }
            // InternalIDL.g:4715:2: (iv_ruleOctetType= ruleOctetType EOF )
            // InternalIDL.g:4716:2: iv_ruleOctetType= ruleOctetType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOctetTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOctetType=ruleOctetType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOctetType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 133, entryRuleOctetType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOctetType"


    // $ANTLR start "ruleOctetType"
    // InternalIDL.g:4723:1: ruleOctetType returns [EObject current=null] : ( () otherlv_1= 'octet' ) ;
    public final EObject ruleOctetType() throws RecognitionException {
        EObject current = null;
        int ruleOctetType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 134) ) { return current; }
            // InternalIDL.g:4726:28: ( ( () otherlv_1= 'octet' ) )
            // InternalIDL.g:4727:1: ( () otherlv_1= 'octet' )
            {
            // InternalIDL.g:4727:1: ( () otherlv_1= 'octet' )
            // InternalIDL.g:4727:2: () otherlv_1= 'octet'
            {
            // InternalIDL.g:4727:2: ()
            // InternalIDL.g:4728:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getOctetTypeAccess().getOctetTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getOctetTypeAccess().getOctetKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 134, ruleOctetType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOctetType"


    // $ANTLR start "entryRuleAnyType"
    // InternalIDL.g:4748:1: entryRuleAnyType returns [EObject current=null] : iv_ruleAnyType= ruleAnyType EOF ;
    public final EObject entryRuleAnyType() throws RecognitionException {
        EObject current = null;
        int entryRuleAnyType_StartIndex = input.index();
        EObject iv_ruleAnyType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 135) ) { return current; }
            // InternalIDL.g:4749:2: (iv_ruleAnyType= ruleAnyType EOF )
            // InternalIDL.g:4750:2: iv_ruleAnyType= ruleAnyType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnyType=ruleAnyType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 135, entryRuleAnyType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyType"


    // $ANTLR start "ruleAnyType"
    // InternalIDL.g:4757:1: ruleAnyType returns [EObject current=null] : ( () otherlv_1= 'any' ) ;
    public final EObject ruleAnyType() throws RecognitionException {
        EObject current = null;
        int ruleAnyType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 136) ) { return current; }
            // InternalIDL.g:4760:28: ( ( () otherlv_1= 'any' ) )
            // InternalIDL.g:4761:1: ( () otherlv_1= 'any' )
            {
            // InternalIDL.g:4761:1: ( () otherlv_1= 'any' )
            // InternalIDL.g:4761:2: () otherlv_1= 'any'
            {
            // InternalIDL.g:4761:2: ()
            // InternalIDL.g:4762:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getAnyTypeAccess().getAnyTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getAnyTypeAccess().getAnyKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 136, ruleAnyType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAnyType"


    // $ANTLR start "entryRuleObjectType"
    // InternalIDL.g:4782:1: entryRuleObjectType returns [EObject current=null] : iv_ruleObjectType= ruleObjectType EOF ;
    public final EObject entryRuleObjectType() throws RecognitionException {
        EObject current = null;
        int entryRuleObjectType_StartIndex = input.index();
        EObject iv_ruleObjectType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 137) ) { return current; }
            // InternalIDL.g:4783:2: (iv_ruleObjectType= ruleObjectType EOF )
            // InternalIDL.g:4784:2: iv_ruleObjectType= ruleObjectType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObjectTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObjectType=ruleObjectType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObjectType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 137, entryRuleObjectType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleObjectType"


    // $ANTLR start "ruleObjectType"
    // InternalIDL.g:4791:1: ruleObjectType returns [EObject current=null] : ( () otherlv_1= 'Object' ) ;
    public final EObject ruleObjectType() throws RecognitionException {
        EObject current = null;
        int ruleObjectType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 138) ) { return current; }
            // InternalIDL.g:4794:28: ( ( () otherlv_1= 'Object' ) )
            // InternalIDL.g:4795:1: ( () otherlv_1= 'Object' )
            {
            // InternalIDL.g:4795:1: ( () otherlv_1= 'Object' )
            // InternalIDL.g:4795:2: () otherlv_1= 'Object'
            {
            // InternalIDL.g:4795:2: ()
            // InternalIDL.g:4796:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getObjectTypeAccess().getObjectTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getObjectTypeAccess().getObjectKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 138, ruleObjectType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleObjectType"


    // $ANTLR start "entryRuleValueBaseType"
    // InternalIDL.g:4816:1: entryRuleValueBaseType returns [EObject current=null] : iv_ruleValueBaseType= ruleValueBaseType EOF ;
    public final EObject entryRuleValueBaseType() throws RecognitionException {
        EObject current = null;
        int entryRuleValueBaseType_StartIndex = input.index();
        EObject iv_ruleValueBaseType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 139) ) { return current; }
            // InternalIDL.g:4817:2: (iv_ruleValueBaseType= ruleValueBaseType EOF )
            // InternalIDL.g:4818:2: iv_ruleValueBaseType= ruleValueBaseType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueBaseTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueBaseType=ruleValueBaseType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueBaseType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 139, entryRuleValueBaseType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleValueBaseType"


    // $ANTLR start "ruleValueBaseType"
    // InternalIDL.g:4825:1: ruleValueBaseType returns [EObject current=null] : ( () otherlv_1= 'ValueBase' ) ;
    public final EObject ruleValueBaseType() throws RecognitionException {
        EObject current = null;
        int ruleValueBaseType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 140) ) { return current; }
            // InternalIDL.g:4828:28: ( ( () otherlv_1= 'ValueBase' ) )
            // InternalIDL.g:4829:1: ( () otherlv_1= 'ValueBase' )
            {
            // InternalIDL.g:4829:1: ( () otherlv_1= 'ValueBase' )
            // InternalIDL.g:4829:2: () otherlv_1= 'ValueBase'
            {
            // InternalIDL.g:4829:2: ()
            // InternalIDL.g:4830:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getValueBaseTypeAccess().getValueBaseTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getValueBaseTypeAccess().getValueBaseKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 140, ruleValueBaseType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleValueBaseType"


    // $ANTLR start "entryRuleStringType"
    // InternalIDL.g:4850:1: entryRuleStringType returns [EObject current=null] : iv_ruleStringType= ruleStringType EOF ;
    public final EObject entryRuleStringType() throws RecognitionException {
        EObject current = null;
        int entryRuleStringType_StartIndex = input.index();
        EObject iv_ruleStringType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 141) ) { return current; }
            // InternalIDL.g:4851:2: (iv_ruleStringType= ruleStringType EOF )
            // InternalIDL.g:4852:2: iv_ruleStringType= ruleStringType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringType=ruleStringType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 141, entryRuleStringType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStringType"


    // $ANTLR start "ruleStringType"
    // InternalIDL.g:4859:1: ruleStringType returns [EObject current=null] : ( () otherlv_1= 'string' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? ) ;
    public final EObject ruleStringType() throws RecognitionException {
        EObject current = null;
        int ruleStringType_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_size_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 142) ) { return current; }
            // InternalIDL.g:4862:28: ( ( () otherlv_1= 'string' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? ) )
            // InternalIDL.g:4863:1: ( () otherlv_1= 'string' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? )
            {
            // InternalIDL.g:4863:1: ( () otherlv_1= 'string' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? )
            // InternalIDL.g:4863:2: () otherlv_1= 'string' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )?
            {
            // InternalIDL.g:4863:2: ()
            // InternalIDL.g:4864:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getStringTypeAccess().getStringTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,88,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStringTypeAccess().getStringKeyword_1());
                  
            }
            // InternalIDL.g:4876:1: (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==21) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalIDL.g:4876:3: otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>'
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getStringTypeAccess().getLessThanSignKeyword_2_0());
                          
                    }
                    // InternalIDL.g:4880:1: ( (lv_size_3_0= rulePositiveIntConst ) )
                    // InternalIDL.g:4881:1: (lv_size_3_0= rulePositiveIntConst )
                    {
                    // InternalIDL.g:4881:1: (lv_size_3_0= rulePositiveIntConst )
                    // InternalIDL.g:4882:3: lv_size_3_0= rulePositiveIntConst
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getStringTypeAccess().getSizePositiveIntConstParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_7);
                    lv_size_3_0=rulePositiveIntConst();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getStringTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"size",
                              		lv_size_3_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.PositiveIntConst");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getStringTypeAccess().getGreaterThanSignKeyword_2_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 142, ruleStringType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStringType"


    // $ANTLR start "entryRuleWideStringType"
    // InternalIDL.g:4910:1: entryRuleWideStringType returns [EObject current=null] : iv_ruleWideStringType= ruleWideStringType EOF ;
    public final EObject entryRuleWideStringType() throws RecognitionException {
        EObject current = null;
        int entryRuleWideStringType_StartIndex = input.index();
        EObject iv_ruleWideStringType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 143) ) { return current; }
            // InternalIDL.g:4911:2: (iv_ruleWideStringType= ruleWideStringType EOF )
            // InternalIDL.g:4912:2: iv_ruleWideStringType= ruleWideStringType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWideStringTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWideStringType=ruleWideStringType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWideStringType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 143, entryRuleWideStringType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleWideStringType"


    // $ANTLR start "ruleWideStringType"
    // InternalIDL.g:4919:1: ruleWideStringType returns [EObject current=null] : ( () otherlv_1= 'wstring' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? ) ;
    public final EObject ruleWideStringType() throws RecognitionException {
        EObject current = null;
        int ruleWideStringType_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_size_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 144) ) { return current; }
            // InternalIDL.g:4922:28: ( ( () otherlv_1= 'wstring' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? ) )
            // InternalIDL.g:4923:1: ( () otherlv_1= 'wstring' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? )
            {
            // InternalIDL.g:4923:1: ( () otherlv_1= 'wstring' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )? )
            // InternalIDL.g:4923:2: () otherlv_1= 'wstring' (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )?
            {
            // InternalIDL.g:4923:2: ()
            // InternalIDL.g:4924:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getWideStringTypeAccess().getWideStringTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,89,FOLLOW_57); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getWideStringTypeAccess().getWstringKeyword_1());
                  
            }
            // InternalIDL.g:4936:1: (otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>' )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==21) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalIDL.g:4936:3: otherlv_2= '<' ( (lv_size_3_0= rulePositiveIntConst ) ) otherlv_4= '>'
                    {
                    otherlv_2=(Token)match(input,21,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getWideStringTypeAccess().getLessThanSignKeyword_2_0());
                          
                    }
                    // InternalIDL.g:4940:1: ( (lv_size_3_0= rulePositiveIntConst ) )
                    // InternalIDL.g:4941:1: (lv_size_3_0= rulePositiveIntConst )
                    {
                    // InternalIDL.g:4941:1: (lv_size_3_0= rulePositiveIntConst )
                    // InternalIDL.g:4942:3: lv_size_3_0= rulePositiveIntConst
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getWideStringTypeAccess().getSizePositiveIntConstParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_7);
                    lv_size_3_0=rulePositiveIntConst();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getWideStringTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"size",
                              		lv_size_3_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.PositiveIntConst");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getWideStringTypeAccess().getGreaterThanSignKeyword_2_2());
                          
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 144, ruleWideStringType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleWideStringType"


    // $ANTLR start "entryRuleExceptDecl"
    // InternalIDL.g:4970:1: entryRuleExceptDecl returns [EObject current=null] : iv_ruleExceptDecl= ruleExceptDecl EOF ;
    public final EObject entryRuleExceptDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleExceptDecl_StartIndex = input.index();
        EObject iv_ruleExceptDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 145) ) { return current; }
            // InternalIDL.g:4971:2: (iv_ruleExceptDecl= ruleExceptDecl EOF )
            // InternalIDL.g:4972:2: iv_ruleExceptDecl= ruleExceptDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExceptDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExceptDecl=ruleExceptDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExceptDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 145, entryRuleExceptDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExceptDecl"


    // $ANTLR start "ruleExceptDecl"
    // InternalIDL.g:4979:1: ruleExceptDecl returns [EObject current=null] : (otherlv_0= 'exception' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_members_5_0= ruleMember ) )* otherlv_6= '}' ) ;
    public final EObject ruleExceptDecl() throws RecognitionException {
        EObject current = null;
        int ruleExceptDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        EObject lv_comments_2_0 = null;

        EObject lv_comments_4_0 = null;

        EObject lv_members_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 146) ) { return current; }
            // InternalIDL.g:4982:28: ( (otherlv_0= 'exception' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_members_5_0= ruleMember ) )* otherlv_6= '}' ) )
            // InternalIDL.g:4983:1: (otherlv_0= 'exception' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_members_5_0= ruleMember ) )* otherlv_6= '}' )
            {
            // InternalIDL.g:4983:1: (otherlv_0= 'exception' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_members_5_0= ruleMember ) )* otherlv_6= '}' )
            // InternalIDL.g:4983:3: otherlv_0= 'exception' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_members_5_0= ruleMember ) )* otherlv_6= '}'
            {
            otherlv_0=(Token)match(input,90,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getExceptDeclAccess().getExceptionKeyword_0());
                  
            }
            // InternalIDL.g:4987:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:4988:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:4988:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:4989:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getExceptDeclAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getExceptDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:5005:2: ( (lv_comments_2_0= ruleIDLComment ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==RULE_SL_COMMENT) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalIDL.g:5006:1: (lv_comments_2_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:5006:1: (lv_comments_2_0= ruleIDLComment )
            	    // InternalIDL.g:5007:3: lv_comments_2_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExceptDeclAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_comments_2_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExceptDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            otherlv_3=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getExceptDeclAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalIDL.g:5027:1: ( (lv_comments_4_0= ruleIDLComment ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==RULE_SL_COMMENT) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalIDL.g:5028:1: (lv_comments_4_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:5028:1: (lv_comments_4_0= ruleIDLComment )
            	    // InternalIDL.g:5029:3: lv_comments_4_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExceptDeclAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_comments_4_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExceptDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            // InternalIDL.g:5045:3: ( (lv_members_5_0= ruleMember ) )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==RULE_ID||LA66_0==42||(LA66_0>=76 && LA66_0<=89)||(LA66_0>=93 && LA66_0<=95)||LA66_0==97||(LA66_0>=101 && LA66_0<=102)||LA66_0==104) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalIDL.g:5046:1: (lv_members_5_0= ruleMember )
            	    {
            	    // InternalIDL.g:5046:1: (lv_members_5_0= ruleMember )
            	    // InternalIDL.g:5047:3: lv_members_5_0= ruleMember
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getExceptDeclAccess().getMembersMemberParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_members_5_0=ruleMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getExceptDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"members",
            	              		lv_members_5_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Member");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            otherlv_6=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getExceptDeclAccess().getRightCurlyBracketKeyword_6());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 146, ruleExceptDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExceptDecl"


    // $ANTLR start "entryRuleMember"
    // InternalIDL.g:5075:1: entryRuleMember returns [EObject current=null] : iv_ruleMember= ruleMember EOF ;
    public final EObject entryRuleMember() throws RecognitionException {
        EObject current = null;
        int entryRuleMember_StartIndex = input.index();
        EObject iv_ruleMember = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 147) ) { return current; }
            // InternalIDL.g:5076:2: (iv_ruleMember= ruleMember EOF )
            // InternalIDL.g:5077:2: iv_ruleMember= ruleMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMember=ruleMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 147, entryRuleMember_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMember"


    // $ANTLR start "ruleMember"
    // InternalIDL.g:5084:1: ruleMember returns [EObject current=null] : ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_decl_1_0= ruleDeclarator ) ) otherlv_2= ';' ( (lv_comment_3_0= ruleIDLComment ) )* ) ;
    public final EObject ruleMember() throws RecognitionException {
        EObject current = null;
        int ruleMember_StartIndex = input.index();
        Token otherlv_2=null;
        EObject lv_type_0_0 = null;

        EObject lv_decl_1_0 = null;

        EObject lv_comment_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 148) ) { return current; }
            // InternalIDL.g:5087:28: ( ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_decl_1_0= ruleDeclarator ) ) otherlv_2= ';' ( (lv_comment_3_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:5088:1: ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_decl_1_0= ruleDeclarator ) ) otherlv_2= ';' ( (lv_comment_3_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:5088:1: ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_decl_1_0= ruleDeclarator ) ) otherlv_2= ';' ( (lv_comment_3_0= ruleIDLComment ) )* )
            // InternalIDL.g:5088:2: ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_decl_1_0= ruleDeclarator ) ) otherlv_2= ';' ( (lv_comment_3_0= ruleIDLComment ) )*
            {
            // InternalIDL.g:5088:2: ( (lv_type_0_0= ruleTypeSpec ) )
            // InternalIDL.g:5089:1: (lv_type_0_0= ruleTypeSpec )
            {
            // InternalIDL.g:5089:1: (lv_type_0_0= ruleTypeSpec )
            // InternalIDL.g:5090:3: lv_type_0_0= ruleTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMemberAccess().getTypeTypeSpecParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_0_0=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMemberRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.TypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:5106:2: ( (lv_decl_1_0= ruleDeclarator ) )
            // InternalIDL.g:5107:1: (lv_decl_1_0= ruleDeclarator )
            {
            // InternalIDL.g:5107:1: (lv_decl_1_0= ruleDeclarator )
            // InternalIDL.g:5108:3: lv_decl_1_0= ruleDeclarator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMemberAccess().getDeclDeclaratorParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_28);
            lv_decl_1_0=ruleDeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMemberRule());
              	        }
                     		set(
                     			current, 
                     			"decl",
                      		lv_decl_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.Declarator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,57,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getMemberAccess().getSemicolonKeyword_2());
                  
            }
            // InternalIDL.g:5128:1: ( (lv_comment_3_0= ruleIDLComment ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==RULE_SL_COMMENT) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalIDL.g:5129:1: (lv_comment_3_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:5129:1: (lv_comment_3_0= ruleIDLComment )
            	    // InternalIDL.g:5130:3: lv_comment_3_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMemberAccess().getCommentIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comment_3_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMemberRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comment",
            	              		lv_comment_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 148, ruleMember_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMember"


    // $ANTLR start "entryRuleDeclarator"
    // InternalIDL.g:5154:1: entryRuleDeclarator returns [EObject current=null] : iv_ruleDeclarator= ruleDeclarator EOF ;
    public final EObject entryRuleDeclarator() throws RecognitionException {
        EObject current = null;
        int entryRuleDeclarator_StartIndex = input.index();
        EObject iv_ruleDeclarator = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 149) ) { return current; }
            // InternalIDL.g:5155:2: (iv_ruleDeclarator= ruleDeclarator EOF )
            // InternalIDL.g:5156:2: iv_ruleDeclarator= ruleDeclarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDeclarator=ruleDeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 149, entryRuleDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarator"


    // $ANTLR start "ruleDeclarator"
    // InternalIDL.g:5163:1: ruleDeclarator returns [EObject current=null] : (this_SimpleDeclarator_0= ruleSimpleDeclarator | this_ArrayDeclarator_1= ruleArrayDeclarator ) ;
    public final EObject ruleDeclarator() throws RecognitionException {
        EObject current = null;
        int ruleDeclarator_StartIndex = input.index();
        EObject this_SimpleDeclarator_0 = null;

        EObject this_ArrayDeclarator_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 150) ) { return current; }
            // InternalIDL.g:5166:28: ( (this_SimpleDeclarator_0= ruleSimpleDeclarator | this_ArrayDeclarator_1= ruleArrayDeclarator ) )
            // InternalIDL.g:5167:1: (this_SimpleDeclarator_0= ruleSimpleDeclarator | this_ArrayDeclarator_1= ruleArrayDeclarator )
            {
            // InternalIDL.g:5167:1: (this_SimpleDeclarator_0= ruleSimpleDeclarator | this_ArrayDeclarator_1= ruleArrayDeclarator )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==RULE_ID) ) {
                int LA68_1 = input.LA(2);

                if ( (LA68_1==91) ) {
                    alt68=2;
                }
                else if ( (LA68_1==EOF||LA68_1==RULE_ID||LA68_1==57) ) {
                    alt68=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 68, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalIDL.g:5168:2: this_SimpleDeclarator_0= ruleSimpleDeclarator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclaratorAccess().getSimpleDeclaratorParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleDeclarator_0=ruleSimpleDeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SimpleDeclarator_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:5181:2: this_ArrayDeclarator_1= ruleArrayDeclarator
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getDeclaratorAccess().getArrayDeclaratorParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ArrayDeclarator_1=ruleArrayDeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ArrayDeclarator_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 150, ruleDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleDeclarator"


    // $ANTLR start "entryRuleSimpleDeclarator"
    // InternalIDL.g:5200:1: entryRuleSimpleDeclarator returns [EObject current=null] : iv_ruleSimpleDeclarator= ruleSimpleDeclarator EOF ;
    public final EObject entryRuleSimpleDeclarator() throws RecognitionException {
        EObject current = null;
        int entryRuleSimpleDeclarator_StartIndex = input.index();
        EObject iv_ruleSimpleDeclarator = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 151) ) { return current; }
            // InternalIDL.g:5201:2: (iv_ruleSimpleDeclarator= ruleSimpleDeclarator EOF )
            // InternalIDL.g:5202:2: iv_ruleSimpleDeclarator= ruleSimpleDeclarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleDeclaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleDeclarator=ruleSimpleDeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleDeclarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 151, entryRuleSimpleDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleDeclarator"


    // $ANTLR start "ruleSimpleDeclarator"
    // InternalIDL.g:5209:1: ruleSimpleDeclarator returns [EObject current=null] : ( (lv_id_0_0= RULE_ID ) ) ;
    public final EObject ruleSimpleDeclarator() throws RecognitionException {
        EObject current = null;
        int ruleSimpleDeclarator_StartIndex = input.index();
        Token lv_id_0_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 152) ) { return current; }
            // InternalIDL.g:5212:28: ( ( (lv_id_0_0= RULE_ID ) ) )
            // InternalIDL.g:5213:1: ( (lv_id_0_0= RULE_ID ) )
            {
            // InternalIDL.g:5213:1: ( (lv_id_0_0= RULE_ID ) )
            // InternalIDL.g:5214:1: (lv_id_0_0= RULE_ID )
            {
            // InternalIDL.g:5214:1: (lv_id_0_0= RULE_ID )
            // InternalIDL.g:5215:3: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_id_0_0, grammarAccess.getSimpleDeclaratorAccess().getIdIDTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getSimpleDeclaratorRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"id",
                      		lv_id_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 152, ruleSimpleDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSimpleDeclarator"


    // $ANTLR start "entryRuleArrayDeclarator"
    // InternalIDL.g:5241:1: entryRuleArrayDeclarator returns [EObject current=null] : iv_ruleArrayDeclarator= ruleArrayDeclarator EOF ;
    public final EObject entryRuleArrayDeclarator() throws RecognitionException {
        EObject current = null;
        int entryRuleArrayDeclarator_StartIndex = input.index();
        EObject iv_ruleArrayDeclarator = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 153) ) { return current; }
            // InternalIDL.g:5242:2: (iv_ruleArrayDeclarator= ruleArrayDeclarator EOF )
            // InternalIDL.g:5243:2: iv_ruleArrayDeclarator= ruleArrayDeclarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArrayDeclaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArrayDeclarator=ruleArrayDeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArrayDeclarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 153, entryRuleArrayDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleArrayDeclarator"


    // $ANTLR start "ruleArrayDeclarator"
    // InternalIDL.g:5250:1: ruleArrayDeclarator returns [EObject current=null] : ( ( (lv_id_0_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_size_2_0= ruleConstExp ) ) otherlv_3= ']' )+ ) ;
    public final EObject ruleArrayDeclarator() throws RecognitionException {
        EObject current = null;
        int ruleArrayDeclarator_StartIndex = input.index();
        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_size_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 154) ) { return current; }
            // InternalIDL.g:5253:28: ( ( ( (lv_id_0_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_size_2_0= ruleConstExp ) ) otherlv_3= ']' )+ ) )
            // InternalIDL.g:5254:1: ( ( (lv_id_0_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_size_2_0= ruleConstExp ) ) otherlv_3= ']' )+ )
            {
            // InternalIDL.g:5254:1: ( ( (lv_id_0_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_size_2_0= ruleConstExp ) ) otherlv_3= ']' )+ )
            // InternalIDL.g:5254:2: ( (lv_id_0_0= RULE_ID ) ) (otherlv_1= '[' ( (lv_size_2_0= ruleConstExp ) ) otherlv_3= ']' )+
            {
            // InternalIDL.g:5254:2: ( (lv_id_0_0= RULE_ID ) )
            // InternalIDL.g:5255:1: (lv_id_0_0= RULE_ID )
            {
            // InternalIDL.g:5255:1: (lv_id_0_0= RULE_ID )
            // InternalIDL.g:5256:3: lv_id_0_0= RULE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_ID,FOLLOW_60); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_id_0_0, grammarAccess.getArrayDeclaratorAccess().getIdIDTerminalRuleCall_0_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getArrayDeclaratorRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"id",
                      		lv_id_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:5272:2: (otherlv_1= '[' ( (lv_size_2_0= ruleConstExp ) ) otherlv_3= ']' )+
            int cnt69=0;
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==91) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalIDL.g:5272:4: otherlv_1= '[' ( (lv_size_2_0= ruleConstExp ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,91,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_1, grammarAccess.getArrayDeclaratorAccess().getLeftSquareBracketKeyword_1_0());
            	          
            	    }
            	    // InternalIDL.g:5276:1: ( (lv_size_2_0= ruleConstExp ) )
            	    // InternalIDL.g:5277:1: (lv_size_2_0= ruleConstExp )
            	    {
            	    // InternalIDL.g:5277:1: (lv_size_2_0= ruleConstExp )
            	    // InternalIDL.g:5278:3: lv_size_2_0= ruleConstExp
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getArrayDeclaratorAccess().getSizeConstExpParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_size_2_0=ruleConstExp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getArrayDeclaratorRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"size",
            	              		lv_size_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConstExp");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,92,FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_3, grammarAccess.getArrayDeclaratorAccess().getRightSquareBracketKeyword_1_2());
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt69 >= 1 ) break loop69;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(69, input);
                        throw eee;
                }
                cnt69++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 154, ruleArrayDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleArrayDeclarator"


    // $ANTLR start "entryRuleStructType"
    // InternalIDL.g:5306:1: entryRuleStructType returns [EObject current=null] : iv_ruleStructType= ruleStructType EOF ;
    public final EObject entryRuleStructType() throws RecognitionException {
        EObject current = null;
        int entryRuleStructType_StartIndex = input.index();
        EObject iv_ruleStructType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 155) ) { return current; }
            // InternalIDL.g:5307:2: (iv_ruleStructType= ruleStructType EOF )
            // InternalIDL.g:5308:2: iv_ruleStructType= ruleStructType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructType=ruleStructType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 155, entryRuleStructType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStructType"


    // $ANTLR start "ruleStructType"
    // InternalIDL.g:5315:1: ruleStructType returns [EObject current=null] : ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'struct' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= '{' ( (lv_comments_6_0= ruleIDLComment ) )* ( (lv_members_7_0= ruleMember ) )* otherlv_8= '}' ) ;
    public final EObject ruleStructType() throws RecognitionException {
        EObject current = null;
        int ruleStructType_StartIndex = input.index();
        Token lv_isAppendable_0_0=null;
        Token lv_isFinal_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_comments_4_0 = null;

        EObject lv_comments_6_0 = null;

        EObject lv_members_7_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 156) ) { return current; }
            // InternalIDL.g:5318:28: ( ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'struct' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= '{' ( (lv_comments_6_0= ruleIDLComment ) )* ( (lv_members_7_0= ruleMember ) )* otherlv_8= '}' ) )
            // InternalIDL.g:5319:1: ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'struct' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= '{' ( (lv_comments_6_0= ruleIDLComment ) )* ( (lv_members_7_0= ruleMember ) )* otherlv_8= '}' )
            {
            // InternalIDL.g:5319:1: ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'struct' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= '{' ( (lv_comments_6_0= ruleIDLComment ) )* ( (lv_members_7_0= ruleMember ) )* otherlv_8= '}' )
            // InternalIDL.g:5319:2: ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'struct' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= '{' ( (lv_comments_6_0= ruleIDLComment ) )* ( (lv_members_7_0= ruleMember ) )* otherlv_8= '}'
            {
            // InternalIDL.g:5319:2: ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )?
            int alt70=3;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==93) ) {
                alt70=1;
            }
            else if ( (LA70_0==94) ) {
                alt70=2;
            }
            switch (alt70) {
                case 1 :
                    // InternalIDL.g:5319:3: ( (lv_isAppendable_0_0= '@appendable' ) )
                    {
                    // InternalIDL.g:5319:3: ( (lv_isAppendable_0_0= '@appendable' ) )
                    // InternalIDL.g:5320:1: (lv_isAppendable_0_0= '@appendable' )
                    {
                    // InternalIDL.g:5320:1: (lv_isAppendable_0_0= '@appendable' )
                    // InternalIDL.g:5321:3: lv_isAppendable_0_0= '@appendable'
                    {
                    lv_isAppendable_0_0=(Token)match(input,93,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAppendable_0_0, grammarAccess.getStructTypeAccess().getIsAppendableAppendableKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructTypeRule());
                      	        }
                             		setWithLastConsumed(current, "isAppendable", true, "@appendable");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:5335:6: ( (lv_isFinal_1_0= '@final' ) )
                    {
                    // InternalIDL.g:5335:6: ( (lv_isFinal_1_0= '@final' ) )
                    // InternalIDL.g:5336:1: (lv_isFinal_1_0= '@final' )
                    {
                    // InternalIDL.g:5336:1: (lv_isFinal_1_0= '@final' )
                    // InternalIDL.g:5337:3: lv_isFinal_1_0= '@final'
                    {
                    lv_isFinal_1_0=(Token)match(input,94,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isFinal_1_0, grammarAccess.getStructTypeAccess().getIsFinalFinalKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStructTypeRule());
                      	        }
                             		setWithLastConsumed(current, "isFinal", true, "@final");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,95,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getStructTypeAccess().getStructKeyword_1());
                  
            }
            // InternalIDL.g:5354:1: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:5355:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:5355:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:5356:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getStructTypeAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStructTypeRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:5372:2: ( (lv_comments_4_0= ruleIDLComment ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==RULE_SL_COMMENT) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalIDL.g:5373:1: (lv_comments_4_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:5373:1: (lv_comments_4_0= ruleIDLComment )
            	    // InternalIDL.g:5374:3: lv_comments_4_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStructTypeAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_comments_4_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            otherlv_5=(Token)match(input,59,FOLLOW_58); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getStructTypeAccess().getLeftCurlyBracketKeyword_4());
                  
            }
            // InternalIDL.g:5394:1: ( (lv_comments_6_0= ruleIDLComment ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==RULE_SL_COMMENT) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalIDL.g:5395:1: (lv_comments_6_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:5395:1: (lv_comments_6_0= ruleIDLComment )
            	    // InternalIDL.g:5396:3: lv_comments_6_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStructTypeAccess().getCommentsIDLCommentParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_58);
            	    lv_comments_6_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_6_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            // InternalIDL.g:5412:3: ( (lv_members_7_0= ruleMember ) )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==RULE_ID||LA73_0==42||(LA73_0>=76 && LA73_0<=89)||(LA73_0>=93 && LA73_0<=95)||LA73_0==97||(LA73_0>=101 && LA73_0<=102)||LA73_0==104) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalIDL.g:5413:1: (lv_members_7_0= ruleMember )
            	    {
            	    // InternalIDL.g:5413:1: (lv_members_7_0= ruleMember )
            	    // InternalIDL.g:5414:3: lv_members_7_0= ruleMember
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getStructTypeAccess().getMembersMemberParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_members_7_0=ruleMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getStructTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"members",
            	              		lv_members_7_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Member");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            otherlv_8=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getStructTypeAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 156, ruleStructType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "entryRuleTypeDecl"
    // InternalIDL.g:5442:1: entryRuleTypeDecl returns [EObject current=null] : iv_ruleTypeDecl= ruleTypeDecl EOF ;
    public final EObject entryRuleTypeDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleTypeDecl_StartIndex = input.index();
        EObject iv_ruleTypeDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 157) ) { return current; }
            // InternalIDL.g:5443:2: (iv_ruleTypeDecl= ruleTypeDecl EOF )
            // InternalIDL.g:5444:2: iv_ruleTypeDecl= ruleTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDecl=ruleTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 157, entryRuleTypeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDecl"


    // $ANTLR start "ruleTypeDecl"
    // InternalIDL.g:5451:1: ruleTypeDecl returns [EObject current=null] : ( (otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator ) | this_StructType_2= ruleStructType | this_UnionType_3= ruleUnionType | this_EnumType_4= ruleEnumType | this_ConstrForwardDecl_5= ruleConstrForwardDecl ) ;
    public final EObject ruleTypeDecl() throws RecognitionException {
        EObject current = null;
        int ruleTypeDecl_StartIndex = input.index();
        Token otherlv_0=null;
        EObject this_TypeDeclarator_1 = null;

        EObject this_StructType_2 = null;

        EObject this_UnionType_3 = null;

        EObject this_EnumType_4 = null;

        EObject this_ConstrForwardDecl_5 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 158) ) { return current; }
            // InternalIDL.g:5454:28: ( ( (otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator ) | this_StructType_2= ruleStructType | this_UnionType_3= ruleUnionType | this_EnumType_4= ruleEnumType | this_ConstrForwardDecl_5= ruleConstrForwardDecl ) )
            // InternalIDL.g:5455:1: ( (otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator ) | this_StructType_2= ruleStructType | this_UnionType_3= ruleUnionType | this_EnumType_4= ruleEnumType | this_ConstrForwardDecl_5= ruleConstrForwardDecl )
            {
            // InternalIDL.g:5455:1: ( (otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator ) | this_StructType_2= ruleStructType | this_UnionType_3= ruleUnionType | this_EnumType_4= ruleEnumType | this_ConstrForwardDecl_5= ruleConstrForwardDecl )
            int alt74=5;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalIDL.g:5455:2: (otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator )
                    {
                    // InternalIDL.g:5455:2: (otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator )
                    // InternalIDL.g:5455:4: otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator
                    {
                    otherlv_0=(Token)match(input,96,FOLLOW_64); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getTypeDeclAccess().getTypedefKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclAccess().getTypeDeclaratorParserRuleCall_0_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDeclarator_1=ruleTypeDeclarator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypeDeclarator_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:5473:2: this_StructType_2= ruleStructType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclAccess().getStructTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StructType_2=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:5486:2: this_UnionType_3= ruleUnionType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclAccess().getUnionTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionType_3=ruleUnionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnionType_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:5499:2: this_EnumType_4= ruleEnumType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclAccess().getEnumTypeParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumType_4=ruleEnumType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumType_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIDL.g:5512:2: this_ConstrForwardDecl_5= ruleConstrForwardDecl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeDeclAccess().getConstrForwardDeclParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstrForwardDecl_5=ruleConstrForwardDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstrForwardDecl_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 158, ruleTypeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTypeDecl"


    // $ANTLR start "entryRuleTypeDeclarator"
    // InternalIDL.g:5531:1: entryRuleTypeDeclarator returns [EObject current=null] : iv_ruleTypeDeclarator= ruleTypeDeclarator EOF ;
    public final EObject entryRuleTypeDeclarator() throws RecognitionException {
        EObject current = null;
        int entryRuleTypeDeclarator_StartIndex = input.index();
        EObject iv_ruleTypeDeclarator = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 159) ) { return current; }
            // InternalIDL.g:5532:2: (iv_ruleTypeDeclarator= ruleTypeDeclarator EOF )
            // InternalIDL.g:5533:2: iv_ruleTypeDeclarator= ruleTypeDeclarator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclaratorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDeclarator=ruleTypeDeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDeclarator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 159, entryRuleTypeDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDeclarator"


    // $ANTLR start "ruleTypeDeclarator"
    // InternalIDL.g:5540:1: ruleTypeDeclarator returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_type_1_0= ruleTypeSpec ) ) ( (lv_declarators_2_0= ruleDeclarator ) )+ ) ;
    public final EObject ruleTypeDeclarator() throws RecognitionException {
        EObject current = null;
        int ruleTypeDeclarator_StartIndex = input.index();
        EObject lv_comments_0_0 = null;

        EObject lv_type_1_0 = null;

        EObject lv_declarators_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 160) ) { return current; }
            // InternalIDL.g:5543:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_type_1_0= ruleTypeSpec ) ) ( (lv_declarators_2_0= ruleDeclarator ) )+ ) )
            // InternalIDL.g:5544:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_type_1_0= ruleTypeSpec ) ) ( (lv_declarators_2_0= ruleDeclarator ) )+ )
            {
            // InternalIDL.g:5544:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_type_1_0= ruleTypeSpec ) ) ( (lv_declarators_2_0= ruleDeclarator ) )+ )
            // InternalIDL.g:5544:2: ( (lv_comments_0_0= ruleIDLComment ) )* ( (lv_type_1_0= ruleTypeSpec ) ) ( (lv_declarators_2_0= ruleDeclarator ) )+
            {
            // InternalIDL.g:5544:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==RULE_SL_COMMENT) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalIDL.g:5545:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:5545:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:5546:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeDeclaratorAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeDeclaratorRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            // InternalIDL.g:5562:3: ( (lv_type_1_0= ruleTypeSpec ) )
            // InternalIDL.g:5563:1: (lv_type_1_0= ruleTypeSpec )
            {
            // InternalIDL.g:5563:1: (lv_type_1_0= ruleTypeSpec )
            // InternalIDL.g:5564:3: lv_type_1_0= ruleTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTypeDeclaratorAccess().getTypeTypeSpecParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_1_0=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTypeDeclaratorRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.TypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:5580:2: ( (lv_declarators_2_0= ruleDeclarator ) )+
            int cnt76=0;
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==RULE_ID) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalIDL.g:5581:1: (lv_declarators_2_0= ruleDeclarator )
            	    {
            	    // InternalIDL.g:5581:1: (lv_declarators_2_0= ruleDeclarator )
            	    // InternalIDL.g:5582:3: lv_declarators_2_0= ruleDeclarator
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTypeDeclaratorAccess().getDeclaratorsDeclaratorParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_declarators_2_0=ruleDeclarator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTypeDeclaratorRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"declarators",
            	              		lv_declarators_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Declarator");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt76 >= 1 ) break loop76;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(76, input);
                        throw eee;
                }
                cnt76++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 160, ruleTypeDeclarator_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclarator"


    // $ANTLR start "entryRuleTypeSpec"
    // InternalIDL.g:5606:1: entryRuleTypeSpec returns [EObject current=null] : iv_ruleTypeSpec= ruleTypeSpec EOF ;
    public final EObject entryRuleTypeSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleTypeSpec_StartIndex = input.index();
        EObject iv_ruleTypeSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 161) ) { return current; }
            // InternalIDL.g:5607:2: (iv_ruleTypeSpec= ruleTypeSpec EOF )
            // InternalIDL.g:5608:2: iv_ruleTypeSpec= ruleTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeSpec=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 161, entryRuleTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeSpec"


    // $ANTLR start "ruleTypeSpec"
    // InternalIDL.g:5615:1: ruleTypeSpec returns [EObject current=null] : (this_SimpleTypeSpec_0= ruleSimpleTypeSpec | this_ConstrTypeSpec_1= ruleConstrTypeSpec ) ;
    public final EObject ruleTypeSpec() throws RecognitionException {
        EObject current = null;
        int ruleTypeSpec_StartIndex = input.index();
        EObject this_SimpleTypeSpec_0 = null;

        EObject this_ConstrTypeSpec_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 162) ) { return current; }
            // InternalIDL.g:5618:28: ( (this_SimpleTypeSpec_0= ruleSimpleTypeSpec | this_ConstrTypeSpec_1= ruleConstrTypeSpec ) )
            // InternalIDL.g:5619:1: (this_SimpleTypeSpec_0= ruleSimpleTypeSpec | this_ConstrTypeSpec_1= ruleConstrTypeSpec )
            {
            // InternalIDL.g:5619:1: (this_SimpleTypeSpec_0= ruleSimpleTypeSpec | this_ConstrTypeSpec_1= ruleConstrTypeSpec )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==RULE_ID||LA77_0==42||(LA77_0>=76 && LA77_0<=89)||LA77_0==102||LA77_0==104) ) {
                alt77=1;
            }
            else if ( ((LA77_0>=93 && LA77_0<=95)||LA77_0==97||LA77_0==101) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalIDL.g:5620:2: this_SimpleTypeSpec_0= ruleSimpleTypeSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeSpecAccess().getSimpleTypeSpecParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SimpleTypeSpec_0=ruleSimpleTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SimpleTypeSpec_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:5633:2: this_ConstrTypeSpec_1= ruleConstrTypeSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTypeSpecAccess().getConstrTypeSpecParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstrTypeSpec_1=ruleConstrTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstrTypeSpec_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 162, ruleTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTypeSpec"


    // $ANTLR start "entryRuleSimpleTypeSpec"
    // InternalIDL.g:5652:1: entryRuleSimpleTypeSpec returns [EObject current=null] : iv_ruleSimpleTypeSpec= ruleSimpleTypeSpec EOF ;
    public final EObject entryRuleSimpleTypeSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleSimpleTypeSpec_StartIndex = input.index();
        EObject iv_ruleSimpleTypeSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 163) ) { return current; }
            // InternalIDL.g:5653:2: (iv_ruleSimpleTypeSpec= ruleSimpleTypeSpec EOF )
            // InternalIDL.g:5654:2: iv_ruleSimpleTypeSpec= ruleSimpleTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleTypeSpec=ruleSimpleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 163, entryRuleSimpleTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleTypeSpec"


    // $ANTLR start "ruleSimpleTypeSpec"
    // InternalIDL.g:5661:1: ruleSimpleTypeSpec returns [EObject current=null] : (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_TemplateTypeSpec_1= ruleTemplateTypeSpec | this_ScopedName_2= ruleScopedName ) ;
    public final EObject ruleSimpleTypeSpec() throws RecognitionException {
        EObject current = null;
        int ruleSimpleTypeSpec_StartIndex = input.index();
        EObject this_BaseTypeSpec_0 = null;

        EObject this_TemplateTypeSpec_1 = null;

        EObject this_ScopedName_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 164) ) { return current; }
            // InternalIDL.g:5664:28: ( (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_TemplateTypeSpec_1= ruleTemplateTypeSpec | this_ScopedName_2= ruleScopedName ) )
            // InternalIDL.g:5665:1: (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_TemplateTypeSpec_1= ruleTemplateTypeSpec | this_ScopedName_2= ruleScopedName )
            {
            // InternalIDL.g:5665:1: (this_BaseTypeSpec_0= ruleBaseTypeSpec | this_TemplateTypeSpec_1= ruleTemplateTypeSpec | this_ScopedName_2= ruleScopedName )
            int alt78=3;
            switch ( input.LA(1) ) {
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
                {
                alt78=1;
                }
                break;
            case 88:
            case 89:
            case 102:
            case 104:
                {
                alt78=2;
                }
                break;
            case RULE_ID:
            case 42:
                {
                alt78=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }

            switch (alt78) {
                case 1 :
                    // InternalIDL.g:5666:2: this_BaseTypeSpec_0= ruleBaseTypeSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSimpleTypeSpecAccess().getBaseTypeSpecParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BaseTypeSpec_0=ruleBaseTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BaseTypeSpec_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:5679:2: this_TemplateTypeSpec_1= ruleTemplateTypeSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSimpleTypeSpecAccess().getTemplateTypeSpecParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TemplateTypeSpec_1=ruleTemplateTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TemplateTypeSpec_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:5692:2: this_ScopedName_2= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSimpleTypeSpecAccess().getScopedNameParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScopedName_2=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScopedName_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 164, ruleSimpleTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSimpleTypeSpec"


    // $ANTLR start "entryRuleTemplateTypeSpec"
    // InternalIDL.g:5711:1: entryRuleTemplateTypeSpec returns [EObject current=null] : iv_ruleTemplateTypeSpec= ruleTemplateTypeSpec EOF ;
    public final EObject entryRuleTemplateTypeSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleTemplateTypeSpec_StartIndex = input.index();
        EObject iv_ruleTemplateTypeSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 165) ) { return current; }
            // InternalIDL.g:5712:2: (iv_ruleTemplateTypeSpec= ruleTemplateTypeSpec EOF )
            // InternalIDL.g:5713:2: iv_ruleTemplateTypeSpec= ruleTemplateTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateTypeSpec=ruleTemplateTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 165, entryRuleTemplateTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateTypeSpec"


    // $ANTLR start "ruleTemplateTypeSpec"
    // InternalIDL.g:5720:1: ruleTemplateTypeSpec returns [EObject current=null] : (this_SequenceType_0= ruleSequenceType | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_FixedPtType_3= ruleFixedPtType ) ;
    public final EObject ruleTemplateTypeSpec() throws RecognitionException {
        EObject current = null;
        int ruleTemplateTypeSpec_StartIndex = input.index();
        EObject this_SequenceType_0 = null;

        EObject this_StringType_1 = null;

        EObject this_WideStringType_2 = null;

        EObject this_FixedPtType_3 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 166) ) { return current; }
            // InternalIDL.g:5723:28: ( (this_SequenceType_0= ruleSequenceType | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_FixedPtType_3= ruleFixedPtType ) )
            // InternalIDL.g:5724:1: (this_SequenceType_0= ruleSequenceType | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_FixedPtType_3= ruleFixedPtType )
            {
            // InternalIDL.g:5724:1: (this_SequenceType_0= ruleSequenceType | this_StringType_1= ruleStringType | this_WideStringType_2= ruleWideStringType | this_FixedPtType_3= ruleFixedPtType )
            int alt79=4;
            switch ( input.LA(1) ) {
            case 102:
                {
                alt79=1;
                }
                break;
            case 88:
                {
                alt79=2;
                }
                break;
            case 89:
                {
                alt79=3;
                }
                break;
            case 104:
                {
                alt79=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalIDL.g:5725:2: this_SequenceType_0= ruleSequenceType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getSequenceTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceType_0=ruleSequenceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SequenceType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:5738:2: this_StringType_1= ruleStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getStringTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringType_1=ruleStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:5751:2: this_WideStringType_2= ruleWideStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getWideStringTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WideStringType_2=ruleWideStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WideStringType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:5764:2: this_FixedPtType_3= ruleFixedPtType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateTypeSpecAccess().getFixedPtTypeParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FixedPtType_3=ruleFixedPtType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FixedPtType_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 166, ruleTemplateTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTemplateTypeSpec"


    // $ANTLR start "entryRuleConstrTypeSpec"
    // InternalIDL.g:5783:1: entryRuleConstrTypeSpec returns [EObject current=null] : iv_ruleConstrTypeSpec= ruleConstrTypeSpec EOF ;
    public final EObject entryRuleConstrTypeSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleConstrTypeSpec_StartIndex = input.index();
        EObject iv_ruleConstrTypeSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 167) ) { return current; }
            // InternalIDL.g:5784:2: (iv_ruleConstrTypeSpec= ruleConstrTypeSpec EOF )
            // InternalIDL.g:5785:2: iv_ruleConstrTypeSpec= ruleConstrTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstrTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstrTypeSpec=ruleConstrTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstrTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 167, entryRuleConstrTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstrTypeSpec"


    // $ANTLR start "ruleConstrTypeSpec"
    // InternalIDL.g:5792:1: ruleConstrTypeSpec returns [EObject current=null] : (this_StructType_0= ruleStructType | this_UnionType_1= ruleUnionType | this_EnumType_2= ruleEnumType ) ;
    public final EObject ruleConstrTypeSpec() throws RecognitionException {
        EObject current = null;
        int ruleConstrTypeSpec_StartIndex = input.index();
        EObject this_StructType_0 = null;

        EObject this_UnionType_1 = null;

        EObject this_EnumType_2 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 168) ) { return current; }
            // InternalIDL.g:5795:28: ( (this_StructType_0= ruleStructType | this_UnionType_1= ruleUnionType | this_EnumType_2= ruleEnumType ) )
            // InternalIDL.g:5796:1: (this_StructType_0= ruleStructType | this_UnionType_1= ruleUnionType | this_EnumType_2= ruleEnumType )
            {
            // InternalIDL.g:5796:1: (this_StructType_0= ruleStructType | this_UnionType_1= ruleUnionType | this_EnumType_2= ruleEnumType )
            int alt80=3;
            switch ( input.LA(1) ) {
            case 93:
                {
                int LA80_1 = input.LA(2);

                if ( (LA80_1==95) ) {
                    alt80=1;
                }
                else if ( (LA80_1==97) ) {
                    alt80=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 1, input);

                    throw nvae;
                }
                }
                break;
            case 94:
                {
                int LA80_2 = input.LA(2);

                if ( (LA80_2==97) ) {
                    alt80=2;
                }
                else if ( (LA80_2==95) ) {
                    alt80=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 80, 2, input);

                    throw nvae;
                }
                }
                break;
            case 95:
                {
                alt80=1;
                }
                break;
            case 97:
                {
                alt80=2;
                }
                break;
            case 101:
                {
                alt80=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }

            switch (alt80) {
                case 1 :
                    // InternalIDL.g:5797:2: this_StructType_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstrTypeSpecAccess().getStructTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StructType_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:5810:2: this_UnionType_1= ruleUnionType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstrTypeSpecAccess().getUnionTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionType_1=ruleUnionType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnionType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:5823:2: this_EnumType_2= ruleEnumType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstrTypeSpecAccess().getEnumTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumType_2=ruleEnumType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 168, ruleConstrTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstrTypeSpec"


    // $ANTLR start "entryRuleUnionType"
    // InternalIDL.g:5842:1: entryRuleUnionType returns [EObject current=null] : iv_ruleUnionType= ruleUnionType EOF ;
    public final EObject entryRuleUnionType() throws RecognitionException {
        EObject current = null;
        int entryRuleUnionType_StartIndex = input.index();
        EObject iv_ruleUnionType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 169) ) { return current; }
            // InternalIDL.g:5843:2: (iv_ruleUnionType= ruleUnionType EOF )
            // InternalIDL.g:5844:2: iv_ruleUnionType= ruleUnionType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionType=ruleUnionType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 169, entryRuleUnionType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnionType"


    // $ANTLR start "ruleUnionType"
    // InternalIDL.g:5851:1: ruleUnionType returns [EObject current=null] : ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'union' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= 'switch' otherlv_6= '(' ( (lv_switch_7_0= ruleSwitchTypeSpec ) ) otherlv_8= ')' otherlv_9= '{' ( (lv_body_10_0= ruleSwitchBody ) ) otherlv_11= '}' ) ;
    public final EObject ruleUnionType() throws RecognitionException {
        EObject current = null;
        int ruleUnionType_StartIndex = input.index();
        Token lv_isAppendable_0_0=null;
        Token lv_isFinal_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_comments_4_0 = null;

        EObject lv_switch_7_0 = null;

        EObject lv_body_10_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 170) ) { return current; }
            // InternalIDL.g:5854:28: ( ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'union' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= 'switch' otherlv_6= '(' ( (lv_switch_7_0= ruleSwitchTypeSpec ) ) otherlv_8= ')' otherlv_9= '{' ( (lv_body_10_0= ruleSwitchBody ) ) otherlv_11= '}' ) )
            // InternalIDL.g:5855:1: ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'union' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= 'switch' otherlv_6= '(' ( (lv_switch_7_0= ruleSwitchTypeSpec ) ) otherlv_8= ')' otherlv_9= '{' ( (lv_body_10_0= ruleSwitchBody ) ) otherlv_11= '}' )
            {
            // InternalIDL.g:5855:1: ( ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'union' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= 'switch' otherlv_6= '(' ( (lv_switch_7_0= ruleSwitchTypeSpec ) ) otherlv_8= ')' otherlv_9= '{' ( (lv_body_10_0= ruleSwitchBody ) ) otherlv_11= '}' )
            // InternalIDL.g:5855:2: ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )? otherlv_2= 'union' ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* otherlv_5= 'switch' otherlv_6= '(' ( (lv_switch_7_0= ruleSwitchTypeSpec ) ) otherlv_8= ')' otherlv_9= '{' ( (lv_body_10_0= ruleSwitchBody ) ) otherlv_11= '}'
            {
            // InternalIDL.g:5855:2: ( ( (lv_isAppendable_0_0= '@appendable' ) ) | ( (lv_isFinal_1_0= '@final' ) ) )?
            int alt81=3;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==93) ) {
                alt81=1;
            }
            else if ( (LA81_0==94) ) {
                alt81=2;
            }
            switch (alt81) {
                case 1 :
                    // InternalIDL.g:5855:3: ( (lv_isAppendable_0_0= '@appendable' ) )
                    {
                    // InternalIDL.g:5855:3: ( (lv_isAppendable_0_0= '@appendable' ) )
                    // InternalIDL.g:5856:1: (lv_isAppendable_0_0= '@appendable' )
                    {
                    // InternalIDL.g:5856:1: (lv_isAppendable_0_0= '@appendable' )
                    // InternalIDL.g:5857:3: lv_isAppendable_0_0= '@appendable'
                    {
                    lv_isAppendable_0_0=(Token)match(input,93,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAppendable_0_0, grammarAccess.getUnionTypeAccess().getIsAppendableAppendableKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnionTypeRule());
                      	        }
                             		setWithLastConsumed(current, "isAppendable", true, "@appendable");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:5871:6: ( (lv_isFinal_1_0= '@final' ) )
                    {
                    // InternalIDL.g:5871:6: ( (lv_isFinal_1_0= '@final' ) )
                    // InternalIDL.g:5872:1: (lv_isFinal_1_0= '@final' )
                    {
                    // InternalIDL.g:5872:1: (lv_isFinal_1_0= '@final' )
                    // InternalIDL.g:5873:3: lv_isFinal_1_0= '@final'
                    {
                    lv_isFinal_1_0=(Token)match(input,94,FOLLOW_66); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isFinal_1_0, grammarAccess.getUnionTypeAccess().getIsFinalFinalKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnionTypeRule());
                      	        }
                             		setWithLastConsumed(current, "isFinal", true, "@final");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,97,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getUnionTypeAccess().getUnionKeyword_1());
                  
            }
            // InternalIDL.g:5890:1: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:5891:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:5891:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:5892:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_67); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getUnionTypeAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getUnionTypeRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:5908:2: ( (lv_comments_4_0= ruleIDLComment ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==RULE_SL_COMMENT) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalIDL.g:5909:1: (lv_comments_4_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:5909:1: (lv_comments_4_0= ruleIDLComment )
            	    // InternalIDL.g:5910:3: lv_comments_4_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getUnionTypeAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_comments_4_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getUnionTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            otherlv_5=(Token)match(input,98,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getUnionTypeAccess().getSwitchKeyword_4());
                  
            }
            otherlv_6=(Token)match(input,71,FOLLOW_68); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getUnionTypeAccess().getLeftParenthesisKeyword_5());
                  
            }
            // InternalIDL.g:5934:1: ( (lv_switch_7_0= ruleSwitchTypeSpec ) )
            // InternalIDL.g:5935:1: (lv_switch_7_0= ruleSwitchTypeSpec )
            {
            // InternalIDL.g:5935:1: (lv_switch_7_0= ruleSwitchTypeSpec )
            // InternalIDL.g:5936:3: lv_switch_7_0= ruleSwitchTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUnionTypeAccess().getSwitchSwitchTypeSpecParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FOLLOW_69);
            lv_switch_7_0=ruleSwitchTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUnionTypeRule());
              	        }
                     		set(
                     			current, 
                     			"switch",
                      		lv_switch_7_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.SwitchTypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_8=(Token)match(input,72,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_8, grammarAccess.getUnionTypeAccess().getRightParenthesisKeyword_7());
                  
            }
            otherlv_9=(Token)match(input,59,FOLLOW_70); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getUnionTypeAccess().getLeftCurlyBracketKeyword_8());
                  
            }
            // InternalIDL.g:5960:1: ( (lv_body_10_0= ruleSwitchBody ) )
            // InternalIDL.g:5961:1: (lv_body_10_0= ruleSwitchBody )
            {
            // InternalIDL.g:5961:1: (lv_body_10_0= ruleSwitchBody )
            // InternalIDL.g:5962:3: lv_body_10_0= ruleSwitchBody
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUnionTypeAccess().getBodySwitchBodyParserRuleCall_9_0()); 
              	    
            }
            pushFollow(FOLLOW_33);
            lv_body_10_0=ruleSwitchBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUnionTypeRule());
              	        }
                     		set(
                     			current, 
                     			"body",
                      		lv_body_10_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.SwitchBody");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_11=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getUnionTypeAccess().getRightCurlyBracketKeyword_10());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 170, ruleUnionType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnionType"


    // $ANTLR start "entryRuleSwitchTypeSpec"
    // InternalIDL.g:5990:1: entryRuleSwitchTypeSpec returns [EObject current=null] : iv_ruleSwitchTypeSpec= ruleSwitchTypeSpec EOF ;
    public final EObject entryRuleSwitchTypeSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleSwitchTypeSpec_StartIndex = input.index();
        EObject iv_ruleSwitchTypeSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 171) ) { return current; }
            // InternalIDL.g:5991:2: (iv_ruleSwitchTypeSpec= ruleSwitchTypeSpec EOF )
            // InternalIDL.g:5992:2: iv_ruleSwitchTypeSpec= ruleSwitchTypeSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchTypeSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchTypeSpec=ruleSwitchTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchTypeSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 171, entryRuleSwitchTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchTypeSpec"


    // $ANTLR start "ruleSwitchTypeSpec"
    // InternalIDL.g:5999:1: ruleSwitchTypeSpec returns [EObject current=null] : (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_BooleanType_2= ruleBooleanType | this_EnumType_3= ruleEnumType | this_ScopedName_4= ruleScopedName ) ;
    public final EObject ruleSwitchTypeSpec() throws RecognitionException {
        EObject current = null;
        int ruleSwitchTypeSpec_StartIndex = input.index();
        EObject this_IntegerType_0 = null;

        EObject this_CharType_1 = null;

        EObject this_BooleanType_2 = null;

        EObject this_EnumType_3 = null;

        EObject this_ScopedName_4 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 172) ) { return current; }
            // InternalIDL.g:6002:28: ( (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_BooleanType_2= ruleBooleanType | this_EnumType_3= ruleEnumType | this_ScopedName_4= ruleScopedName ) )
            // InternalIDL.g:6003:1: (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_BooleanType_2= ruleBooleanType | this_EnumType_3= ruleEnumType | this_ScopedName_4= ruleScopedName )
            {
            // InternalIDL.g:6003:1: (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_BooleanType_2= ruleBooleanType | this_EnumType_3= ruleEnumType | this_ScopedName_4= ruleScopedName )
            int alt83=5;
            switch ( input.LA(1) ) {
            case 78:
            case 79:
            case 80:
                {
                alt83=1;
                }
                break;
            case 81:
                {
                alt83=2;
                }
                break;
            case 83:
                {
                alt83=3;
                }
                break;
            case 101:
                {
                alt83=4;
                }
                break;
            case RULE_ID:
            case 42:
                {
                alt83=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }

            switch (alt83) {
                case 1 :
                    // InternalIDL.g:6004:2: this_IntegerType_0= ruleIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getIntegerTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerType_0=ruleIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntegerType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:6017:2: this_CharType_1= ruleCharType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getCharTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CharType_1=ruleCharType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CharType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:6030:2: this_BooleanType_2= ruleBooleanType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getBooleanTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanType_2=ruleBooleanType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BooleanType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:6043:2: this_EnumType_3= ruleEnumType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getEnumTypeParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumType_3=ruleEnumType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumType_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIDL.g:6056:2: this_ScopedName_4= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getSwitchTypeSpecAccess().getScopedNameParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScopedName_4=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScopedName_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 172, ruleSwitchTypeSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSwitchTypeSpec"


    // $ANTLR start "entryRuleSwitchBody"
    // InternalIDL.g:6075:1: entryRuleSwitchBody returns [EObject current=null] : iv_ruleSwitchBody= ruleSwitchBody EOF ;
    public final EObject entryRuleSwitchBody() throws RecognitionException {
        EObject current = null;
        int entryRuleSwitchBody_StartIndex = input.index();
        EObject iv_ruleSwitchBody = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 173) ) { return current; }
            // InternalIDL.g:6076:2: (iv_ruleSwitchBody= ruleSwitchBody EOF )
            // InternalIDL.g:6077:2: iv_ruleSwitchBody= ruleSwitchBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSwitchBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSwitchBody=ruleSwitchBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSwitchBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 173, entryRuleSwitchBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSwitchBody"


    // $ANTLR start "ruleSwitchBody"
    // InternalIDL.g:6084:1: ruleSwitchBody returns [EObject current=null] : ( (lv_case_0_0= ruleCase ) )+ ;
    public final EObject ruleSwitchBody() throws RecognitionException {
        EObject current = null;
        int ruleSwitchBody_StartIndex = input.index();
        EObject lv_case_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 174) ) { return current; }
            // InternalIDL.g:6087:28: ( ( (lv_case_0_0= ruleCase ) )+ )
            // InternalIDL.g:6088:1: ( (lv_case_0_0= ruleCase ) )+
            {
            // InternalIDL.g:6088:1: ( (lv_case_0_0= ruleCase ) )+
            int cnt84=0;
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==RULE_SL_COMMENT||(LA84_0>=99 && LA84_0<=100)) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // InternalIDL.g:6089:1: (lv_case_0_0= ruleCase )
            	    {
            	    // InternalIDL.g:6089:1: (lv_case_0_0= ruleCase )
            	    // InternalIDL.g:6090:3: lv_case_0_0= ruleCase
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getSwitchBodyAccess().getCaseCaseParserRuleCall_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_71);
            	    lv_case_0_0=ruleCase();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getSwitchBodyRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"case",
            	              		lv_case_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Case");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt84 >= 1 ) break loop84;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(84, input);
                        throw eee;
                }
                cnt84++;
            } while (true);


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 174, ruleSwitchBody_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSwitchBody"


    // $ANTLR start "entryRuleCase"
    // InternalIDL.g:6114:1: entryRuleCase returns [EObject current=null] : iv_ruleCase= ruleCase EOF ;
    public final EObject entryRuleCase() throws RecognitionException {
        EObject current = null;
        int entryRuleCase_StartIndex = input.index();
        EObject iv_ruleCase = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 175) ) { return current; }
            // InternalIDL.g:6115:2: (iv_ruleCase= ruleCase EOF )
            // InternalIDL.g:6116:2: iv_ruleCase= ruleCase EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCase=ruleCase();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCase; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 175, entryRuleCase_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCase"


    // $ANTLR start "ruleCase"
    // InternalIDL.g:6123:1: ruleCase returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* ( ( (lv_label_1_0= ruleCaseLabel ) ) ( (lv_comments_2_0= ruleIDLComment ) )* )+ ( (lv_comments_3_0= ruleIDLComment ) )* ( (lv_spec_4_0= ruleElementSpec ) ) otherlv_5= ';' ( (lv_comments_6_0= ruleIDLComment ) )* ) ;
    public final EObject ruleCase() throws RecognitionException {
        EObject current = null;
        int ruleCase_StartIndex = input.index();
        Token otherlv_5=null;
        EObject lv_comments_0_0 = null;

        EObject lv_label_1_0 = null;

        EObject lv_comments_2_0 = null;

        EObject lv_comments_3_0 = null;

        EObject lv_spec_4_0 = null;

        EObject lv_comments_6_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 176) ) { return current; }
            // InternalIDL.g:6126:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* ( ( (lv_label_1_0= ruleCaseLabel ) ) ( (lv_comments_2_0= ruleIDLComment ) )* )+ ( (lv_comments_3_0= ruleIDLComment ) )* ( (lv_spec_4_0= ruleElementSpec ) ) otherlv_5= ';' ( (lv_comments_6_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:6127:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* ( ( (lv_label_1_0= ruleCaseLabel ) ) ( (lv_comments_2_0= ruleIDLComment ) )* )+ ( (lv_comments_3_0= ruleIDLComment ) )* ( (lv_spec_4_0= ruleElementSpec ) ) otherlv_5= ';' ( (lv_comments_6_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:6127:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* ( ( (lv_label_1_0= ruleCaseLabel ) ) ( (lv_comments_2_0= ruleIDLComment ) )* )+ ( (lv_comments_3_0= ruleIDLComment ) )* ( (lv_spec_4_0= ruleElementSpec ) ) otherlv_5= ';' ( (lv_comments_6_0= ruleIDLComment ) )* )
            // InternalIDL.g:6127:2: ( (lv_comments_0_0= ruleIDLComment ) )* ( ( (lv_label_1_0= ruleCaseLabel ) ) ( (lv_comments_2_0= ruleIDLComment ) )* )+ ( (lv_comments_3_0= ruleIDLComment ) )* ( (lv_spec_4_0= ruleElementSpec ) ) otherlv_5= ';' ( (lv_comments_6_0= ruleIDLComment ) )*
            {
            // InternalIDL.g:6127:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==RULE_SL_COMMENT) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalIDL.g:6128:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:6128:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:6129:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_70);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            // InternalIDL.g:6145:3: ( ( (lv_label_1_0= ruleCaseLabel ) ) ( (lv_comments_2_0= ruleIDLComment ) )* )+
            int cnt87=0;
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( ((LA87_0>=99 && LA87_0<=100)) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalIDL.g:6145:4: ( (lv_label_1_0= ruleCaseLabel ) ) ( (lv_comments_2_0= ruleIDLComment ) )*
            	    {
            	    // InternalIDL.g:6145:4: ( (lv_label_1_0= ruleCaseLabel ) )
            	    // InternalIDL.g:6146:1: (lv_label_1_0= ruleCaseLabel )
            	    {
            	    // InternalIDL.g:6146:1: (lv_label_1_0= ruleCaseLabel )
            	    // InternalIDL.g:6147:3: lv_label_1_0= ruleCaseLabel
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseAccess().getLabelCaseLabelParserRuleCall_1_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_label_1_0=ruleCaseLabel();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"label",
            	              		lv_label_1_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.CaseLabel");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }

            	    // InternalIDL.g:6163:2: ( (lv_comments_2_0= ruleIDLComment ) )*
            	    loop86:
            	    do {
            	        int alt86=2;
            	        int LA86_0 = input.LA(1);

            	        if ( (LA86_0==RULE_SL_COMMENT) ) {
            	            int LA86_1 = input.LA(2);

            	            if ( (synpred161_InternalIDL()) ) {
            	                alt86=1;
            	            }


            	        }


            	        switch (alt86) {
            	    	case 1 :
            	    	    // InternalIDL.g:6164:1: (lv_comments_2_0= ruleIDLComment )
            	    	    {
            	    	    // InternalIDL.g:6164:1: (lv_comments_2_0= ruleIDLComment )
            	    	    // InternalIDL.g:6165:3: lv_comments_2_0= ruleIDLComment
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_1_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_72);
            	    	    lv_comments_2_0=ruleIDLComment();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getCaseRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"comments",
            	    	              		lv_comments_2_0, 
            	    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop86;
            	        }
            	    } while (true);


            	    }
            	    break;

            	default :
            	    if ( cnt87 >= 1 ) break loop87;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(87, input);
                        throw eee;
                }
                cnt87++;
            } while (true);

            // InternalIDL.g:6181:5: ( (lv_comments_3_0= ruleIDLComment ) )*
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==RULE_SL_COMMENT) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // InternalIDL.g:6182:1: (lv_comments_3_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:6182:1: (lv_comments_3_0= ruleIDLComment )
            	    // InternalIDL.g:6183:3: lv_comments_3_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_64);
            	    lv_comments_3_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop88;
                }
            } while (true);

            // InternalIDL.g:6199:3: ( (lv_spec_4_0= ruleElementSpec ) )
            // InternalIDL.g:6200:1: (lv_spec_4_0= ruleElementSpec )
            {
            // InternalIDL.g:6200:1: (lv_spec_4_0= ruleElementSpec )
            // InternalIDL.g:6201:3: lv_spec_4_0= ruleElementSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getCaseAccess().getSpecElementSpecParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_28);
            lv_spec_4_0=ruleElementSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getCaseRule());
              	        }
                     		set(
                     			current, 
                     			"spec",
                      		lv_spec_4_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ElementSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,57,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getCaseAccess().getSemicolonKeyword_4());
                  
            }
            // InternalIDL.g:6221:1: ( (lv_comments_6_0= ruleIDLComment ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==RULE_SL_COMMENT) ) {
                    int LA89_2 = input.LA(2);

                    if ( (synpred164_InternalIDL()) ) {
                        alt89=1;
                    }


                }


                switch (alt89) {
            	case 1 :
            	    // InternalIDL.g:6222:1: (lv_comments_6_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:6222:1: (lv_comments_6_0= ruleIDLComment )
            	    // InternalIDL.g:6223:3: lv_comments_6_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_6_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getCaseRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_6_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 176, ruleCase_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCase"


    // $ANTLR start "entryRuleCaseLabel"
    // InternalIDL.g:6247:1: entryRuleCaseLabel returns [EObject current=null] : iv_ruleCaseLabel= ruleCaseLabel EOF ;
    public final EObject entryRuleCaseLabel() throws RecognitionException {
        EObject current = null;
        int entryRuleCaseLabel_StartIndex = input.index();
        EObject iv_ruleCaseLabel = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 177) ) { return current; }
            // InternalIDL.g:6248:2: (iv_ruleCaseLabel= ruleCaseLabel EOF )
            // InternalIDL.g:6249:2: iv_ruleCaseLabel= ruleCaseLabel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCaseLabelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCaseLabel=ruleCaseLabel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCaseLabel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 177, entryRuleCaseLabel_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleCaseLabel"


    // $ANTLR start "ruleCaseLabel"
    // InternalIDL.g:6256:1: ruleCaseLabel returns [EObject current=null] : ( ( ( (lv_isCase_0_0= 'case' ) ) ( (lv_constExp_1_0= ruleConstExp ) ) otherlv_2= ':' ) | ( ( (lv_isDefault_3_0= 'default' ) ) otherlv_4= ':' ) ) ;
    public final EObject ruleCaseLabel() throws RecognitionException {
        EObject current = null;
        int ruleCaseLabel_StartIndex = input.index();
        Token lv_isCase_0_0=null;
        Token otherlv_2=null;
        Token lv_isDefault_3_0=null;
        Token otherlv_4=null;
        EObject lv_constExp_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 178) ) { return current; }
            // InternalIDL.g:6259:28: ( ( ( ( (lv_isCase_0_0= 'case' ) ) ( (lv_constExp_1_0= ruleConstExp ) ) otherlv_2= ':' ) | ( ( (lv_isDefault_3_0= 'default' ) ) otherlv_4= ':' ) ) )
            // InternalIDL.g:6260:1: ( ( ( (lv_isCase_0_0= 'case' ) ) ( (lv_constExp_1_0= ruleConstExp ) ) otherlv_2= ':' ) | ( ( (lv_isDefault_3_0= 'default' ) ) otherlv_4= ':' ) )
            {
            // InternalIDL.g:6260:1: ( ( ( (lv_isCase_0_0= 'case' ) ) ( (lv_constExp_1_0= ruleConstExp ) ) otherlv_2= ':' ) | ( ( (lv_isDefault_3_0= 'default' ) ) otherlv_4= ':' ) )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==99) ) {
                alt90=1;
            }
            else if ( (LA90_0==100) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalIDL.g:6260:2: ( ( (lv_isCase_0_0= 'case' ) ) ( (lv_constExp_1_0= ruleConstExp ) ) otherlv_2= ':' )
                    {
                    // InternalIDL.g:6260:2: ( ( (lv_isCase_0_0= 'case' ) ) ( (lv_constExp_1_0= ruleConstExp ) ) otherlv_2= ':' )
                    // InternalIDL.g:6260:3: ( (lv_isCase_0_0= 'case' ) ) ( (lv_constExp_1_0= ruleConstExp ) ) otherlv_2= ':'
                    {
                    // InternalIDL.g:6260:3: ( (lv_isCase_0_0= 'case' ) )
                    // InternalIDL.g:6261:1: (lv_isCase_0_0= 'case' )
                    {
                    // InternalIDL.g:6261:1: (lv_isCase_0_0= 'case' )
                    // InternalIDL.g:6262:3: lv_isCase_0_0= 'case'
                    {
                    lv_isCase_0_0=(Token)match(input,99,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCase_0_0, grammarAccess.getCaseLabelAccess().getIsCaseCaseKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getCaseLabelRule());
                      	        }
                             		setWithLastConsumed(current, "isCase", true, "case");
                      	    
                    }

                    }


                    }

                    // InternalIDL.g:6275:2: ( (lv_constExp_1_0= ruleConstExp ) )
                    // InternalIDL.g:6276:1: (lv_constExp_1_0= ruleConstExp )
                    {
                    // InternalIDL.g:6276:1: (lv_constExp_1_0= ruleConstExp )
                    // InternalIDL.g:6277:3: lv_constExp_1_0= ruleConstExp
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getCaseLabelAccess().getConstExpConstExpParserRuleCall_0_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_73);
                    lv_constExp_1_0=ruleConstExp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getCaseLabelRule());
                      	        }
                             		set(
                             			current, 
                             			"constExp",
                              		lv_constExp_1_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConstExp");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getCaseLabelAccess().getColonKeyword_0_2());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:6298:6: ( ( (lv_isDefault_3_0= 'default' ) ) otherlv_4= ':' )
                    {
                    // InternalIDL.g:6298:6: ( ( (lv_isDefault_3_0= 'default' ) ) otherlv_4= ':' )
                    // InternalIDL.g:6298:7: ( (lv_isDefault_3_0= 'default' ) ) otherlv_4= ':'
                    {
                    // InternalIDL.g:6298:7: ( (lv_isDefault_3_0= 'default' ) )
                    // InternalIDL.g:6299:1: (lv_isDefault_3_0= 'default' )
                    {
                    // InternalIDL.g:6299:1: (lv_isDefault_3_0= 'default' )
                    // InternalIDL.g:6300:3: lv_isDefault_3_0= 'default'
                    {
                    lv_isDefault_3_0=(Token)match(input,100,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isDefault_3_0, grammarAccess.getCaseLabelAccess().getIsDefaultDefaultKeyword_1_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getCaseLabelRule());
                      	        }
                             		setWithLastConsumed(current, "isDefault", true, "default");
                      	    
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getCaseLabelAccess().getColonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 178, ruleCaseLabel_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleCaseLabel"


    // $ANTLR start "entryRuleElementSpec"
    // InternalIDL.g:6325:1: entryRuleElementSpec returns [EObject current=null] : iv_ruleElementSpec= ruleElementSpec EOF ;
    public final EObject entryRuleElementSpec() throws RecognitionException {
        EObject current = null;
        int entryRuleElementSpec_StartIndex = input.index();
        EObject iv_ruleElementSpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 179) ) { return current; }
            // InternalIDL.g:6326:2: (iv_ruleElementSpec= ruleElementSpec EOF )
            // InternalIDL.g:6327:2: iv_ruleElementSpec= ruleElementSpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getElementSpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleElementSpec=ruleElementSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleElementSpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 179, entryRuleElementSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleElementSpec"


    // $ANTLR start "ruleElementSpec"
    // InternalIDL.g:6334:1: ruleElementSpec returns [EObject current=null] : ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_declarator_1_0= ruleDeclarator ) ) ) ;
    public final EObject ruleElementSpec() throws RecognitionException {
        EObject current = null;
        int ruleElementSpec_StartIndex = input.index();
        EObject lv_type_0_0 = null;

        EObject lv_declarator_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 180) ) { return current; }
            // InternalIDL.g:6337:28: ( ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_declarator_1_0= ruleDeclarator ) ) ) )
            // InternalIDL.g:6338:1: ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_declarator_1_0= ruleDeclarator ) ) )
            {
            // InternalIDL.g:6338:1: ( ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_declarator_1_0= ruleDeclarator ) ) )
            // InternalIDL.g:6338:2: ( (lv_type_0_0= ruleTypeSpec ) ) ( (lv_declarator_1_0= ruleDeclarator ) )
            {
            // InternalIDL.g:6338:2: ( (lv_type_0_0= ruleTypeSpec ) )
            // InternalIDL.g:6339:1: (lv_type_0_0= ruleTypeSpec )
            {
            // InternalIDL.g:6339:1: (lv_type_0_0= ruleTypeSpec )
            // InternalIDL.g:6340:3: lv_type_0_0= ruleTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getElementSpecAccess().getTypeTypeSpecParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_0_0=ruleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElementSpecRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.TypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:6356:2: ( (lv_declarator_1_0= ruleDeclarator ) )
            // InternalIDL.g:6357:1: (lv_declarator_1_0= ruleDeclarator )
            {
            // InternalIDL.g:6357:1: (lv_declarator_1_0= ruleDeclarator )
            // InternalIDL.g:6358:3: lv_declarator_1_0= ruleDeclarator
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getElementSpecAccess().getDeclaratorDeclaratorParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_declarator_1_0=ruleDeclarator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getElementSpecRule());
              	        }
                     		set(
                     			current, 
                     			"declarator",
                      		lv_declarator_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.Declarator");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 180, ruleElementSpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleElementSpec"


    // $ANTLR start "entryRuleEnumType"
    // InternalIDL.g:6382:1: entryRuleEnumType returns [EObject current=null] : iv_ruleEnumType= ruleEnumType EOF ;
    public final EObject entryRuleEnumType() throws RecognitionException {
        EObject current = null;
        int entryRuleEnumType_StartIndex = input.index();
        EObject iv_ruleEnumType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 181) ) { return current; }
            // InternalIDL.g:6383:2: (iv_ruleEnumType= ruleEnumType EOF )
            // InternalIDL.g:6384:2: iv_ruleEnumType= ruleEnumType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumType=ruleEnumType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 181, entryRuleEnumType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumType"


    // $ANTLR start "ruleEnumType"
    // InternalIDL.g:6391:1: ruleEnumType returns [EObject current=null] : (otherlv_0= 'enum' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_literal_5_0= RULE_ID ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_literal_8_0= RULE_ID ) ) )* ( (lv_comments_9_0= ruleIDLComment ) )* otherlv_10= '}' ) ;
    public final EObject ruleEnumType() throws RecognitionException {
        EObject current = null;
        int ruleEnumType_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_3=null;
        Token lv_literal_5_0=null;
        Token otherlv_6=null;
        Token lv_literal_8_0=null;
        Token otherlv_10=null;
        EObject lv_comments_2_0 = null;

        EObject lv_comments_4_0 = null;

        EObject lv_comments_7_0 = null;

        EObject lv_comments_9_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 182) ) { return current; }
            // InternalIDL.g:6394:28: ( (otherlv_0= 'enum' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_literal_5_0= RULE_ID ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_literal_8_0= RULE_ID ) ) )* ( (lv_comments_9_0= ruleIDLComment ) )* otherlv_10= '}' ) )
            // InternalIDL.g:6395:1: (otherlv_0= 'enum' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_literal_5_0= RULE_ID ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_literal_8_0= RULE_ID ) ) )* ( (lv_comments_9_0= ruleIDLComment ) )* otherlv_10= '}' )
            {
            // InternalIDL.g:6395:1: (otherlv_0= 'enum' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_literal_5_0= RULE_ID ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_literal_8_0= RULE_ID ) ) )* ( (lv_comments_9_0= ruleIDLComment ) )* otherlv_10= '}' )
            // InternalIDL.g:6395:3: otherlv_0= 'enum' ( (lv_name_1_0= RULE_ID ) ) ( (lv_comments_2_0= ruleIDLComment ) )* otherlv_3= '{' ( (lv_comments_4_0= ruleIDLComment ) )* ( (lv_literal_5_0= RULE_ID ) ) (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_literal_8_0= RULE_ID ) ) )* ( (lv_comments_9_0= ruleIDLComment ) )* otherlv_10= '}'
            {
            otherlv_0=(Token)match(input,101,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEnumTypeAccess().getEnumKeyword_0());
                  
            }
            // InternalIDL.g:6399:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:6400:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:6400:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:6401:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_29); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getEnumTypeAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumTypeRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:6417:2: ( (lv_comments_2_0= ruleIDLComment ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==RULE_SL_COMMENT) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalIDL.g:6418:1: (lv_comments_2_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:6418:1: (lv_comments_2_0= ruleIDLComment )
            	    // InternalIDL.g:6419:3: lv_comments_2_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_comments_2_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            otherlv_3=(Token)match(input,59,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getEnumTypeAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalIDL.g:6439:1: ( (lv_comments_4_0= ruleIDLComment ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==RULE_SL_COMMENT) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // InternalIDL.g:6440:1: (lv_comments_4_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:6440:1: (lv_comments_4_0= ruleIDLComment )
            	    // InternalIDL.g:6441:3: lv_comments_4_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_comments_4_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            // InternalIDL.g:6457:3: ( (lv_literal_5_0= RULE_ID ) )
            // InternalIDL.g:6458:1: (lv_literal_5_0= RULE_ID )
            {
            // InternalIDL.g:6458:1: (lv_literal_5_0= RULE_ID )
            // InternalIDL.g:6459:3: lv_literal_5_0= RULE_ID
            {
            lv_literal_5_0=(Token)match(input,RULE_ID,FOLLOW_75); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_literal_5_0, grammarAccess.getEnumTypeAccess().getLiteralIDTerminalRuleCall_5_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEnumTypeRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"literal",
                      		lv_literal_5_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:6475:2: (otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_literal_8_0= RULE_ID ) ) )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==65) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalIDL.g:6475:4: otherlv_6= ',' ( (lv_comments_7_0= ruleIDLComment ) )* ( (lv_literal_8_0= RULE_ID ) )
            	    {
            	    otherlv_6=(Token)match(input,65,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_6, grammarAccess.getEnumTypeAccess().getCommaKeyword_6_0());
            	          
            	    }
            	    // InternalIDL.g:6479:1: ( (lv_comments_7_0= ruleIDLComment ) )*
            	    loop93:
            	    do {
            	        int alt93=2;
            	        int LA93_0 = input.LA(1);

            	        if ( (LA93_0==RULE_SL_COMMENT) ) {
            	            alt93=1;
            	        }


            	        switch (alt93) {
            	    	case 1 :
            	    	    // InternalIDL.g:6480:1: (lv_comments_7_0= ruleIDLComment )
            	    	    {
            	    	    // InternalIDL.g:6480:1: (lv_comments_7_0= ruleIDLComment )
            	    	    // InternalIDL.g:6481:3: lv_comments_7_0= ruleIDLComment
            	    	    {
            	    	    if ( state.backtracking==0 ) {
            	    	       
            	    	      	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_6_1_0()); 
            	    	      	    
            	    	    }
            	    	    pushFollow(FOLLOW_74);
            	    	    lv_comments_7_0=ruleIDLComment();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      	        if (current==null) {
            	    	      	            current = createModelElementForParent(grammarAccess.getEnumTypeRule());
            	    	      	        }
            	    	             		add(
            	    	             			current, 
            	    	             			"comments",
            	    	              		lv_comments_7_0, 
            	    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	    	      	        afterParserOrEnumRuleCall();
            	    	      	    
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop93;
            	        }
            	    } while (true);

            	    // InternalIDL.g:6497:3: ( (lv_literal_8_0= RULE_ID ) )
            	    // InternalIDL.g:6498:1: (lv_literal_8_0= RULE_ID )
            	    {
            	    // InternalIDL.g:6498:1: (lv_literal_8_0= RULE_ID )
            	    // InternalIDL.g:6499:3: lv_literal_8_0= RULE_ID
            	    {
            	    lv_literal_8_0=(Token)match(input,RULE_ID,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_literal_8_0, grammarAccess.getEnumTypeAccess().getLiteralIDTerminalRuleCall_6_2_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getEnumTypeRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"literal",
            	              		lv_literal_8_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            // InternalIDL.g:6515:4: ( (lv_comments_9_0= ruleIDLComment ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==RULE_SL_COMMENT) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalIDL.g:6516:1: (lv_comments_9_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:6516:1: (lv_comments_9_0= ruleIDLComment )
            	    // InternalIDL.g:6517:3: lv_comments_9_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEnumTypeAccess().getCommentsIDLCommentParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_76);
            	    lv_comments_9_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEnumTypeRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_9_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);

            otherlv_10=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_10, grammarAccess.getEnumTypeAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 182, ruleEnumType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEnumType"


    // $ANTLR start "entryRuleSequenceType"
    // InternalIDL.g:6545:1: entryRuleSequenceType returns [EObject current=null] : iv_ruleSequenceType= ruleSequenceType EOF ;
    public final EObject entryRuleSequenceType() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceType_StartIndex = input.index();
        EObject iv_ruleSequenceType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 183) ) { return current; }
            // InternalIDL.g:6546:2: (iv_ruleSequenceType= ruleSequenceType EOF )
            // InternalIDL.g:6547:2: iv_ruleSequenceType= ruleSequenceType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceType=ruleSequenceType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 183, entryRuleSequenceType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceType"


    // $ANTLR start "ruleSequenceType"
    // InternalIDL.g:6554:1: ruleSequenceType returns [EObject current=null] : (otherlv_0= 'sequence' otherlv_1= '<' ( (lv_type_2_0= ruleSimpleTypeSpec ) ) (otherlv_3= ',' ( (lv_size_4_0= rulePositiveIntConst ) ) )? otherlv_5= '>' ) ;
    public final EObject ruleSequenceType() throws RecognitionException {
        EObject current = null;
        int ruleSequenceType_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_type_2_0 = null;

        EObject lv_size_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 184) ) { return current; }
            // InternalIDL.g:6557:28: ( (otherlv_0= 'sequence' otherlv_1= '<' ( (lv_type_2_0= ruleSimpleTypeSpec ) ) (otherlv_3= ',' ( (lv_size_4_0= rulePositiveIntConst ) ) )? otherlv_5= '>' ) )
            // InternalIDL.g:6558:1: (otherlv_0= 'sequence' otherlv_1= '<' ( (lv_type_2_0= ruleSimpleTypeSpec ) ) (otherlv_3= ',' ( (lv_size_4_0= rulePositiveIntConst ) ) )? otherlv_5= '>' )
            {
            // InternalIDL.g:6558:1: (otherlv_0= 'sequence' otherlv_1= '<' ( (lv_type_2_0= ruleSimpleTypeSpec ) ) (otherlv_3= ',' ( (lv_size_4_0= rulePositiveIntConst ) ) )? otherlv_5= '>' )
            // InternalIDL.g:6558:3: otherlv_0= 'sequence' otherlv_1= '<' ( (lv_type_2_0= ruleSimpleTypeSpec ) ) (otherlv_3= ',' ( (lv_size_4_0= rulePositiveIntConst ) ) )? otherlv_5= '>'
            {
            otherlv_0=(Token)match(input,102,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getSequenceTypeAccess().getSequenceKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,21,FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSequenceTypeAccess().getLessThanSignKeyword_1());
                  
            }
            // InternalIDL.g:6566:1: ( (lv_type_2_0= ruleSimpleTypeSpec ) )
            // InternalIDL.g:6567:1: (lv_type_2_0= ruleSimpleTypeSpec )
            {
            // InternalIDL.g:6567:1: (lv_type_2_0= ruleSimpleTypeSpec )
            // InternalIDL.g:6568:3: lv_type_2_0= ruleSimpleTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getTypeSimpleTypeSpecParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            lv_type_2_0=ruleSimpleTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.SimpleTypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:6584:2: (otherlv_3= ',' ( (lv_size_4_0= rulePositiveIntConst ) ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==65) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalIDL.g:6584:4: otherlv_3= ',' ( (lv_size_4_0= rulePositiveIntConst ) )
                    {
                    otherlv_3=(Token)match(input,65,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getSequenceTypeAccess().getCommaKeyword_3_0());
                          
                    }
                    // InternalIDL.g:6588:1: ( (lv_size_4_0= rulePositiveIntConst ) )
                    // InternalIDL.g:6589:1: (lv_size_4_0= rulePositiveIntConst )
                    {
                    // InternalIDL.g:6589:1: (lv_size_4_0= rulePositiveIntConst )
                    // InternalIDL.g:6590:3: lv_size_4_0= rulePositiveIntConst
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getSequenceTypeAccess().getSizePositiveIntConstParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_7);
                    lv_size_4_0=rulePositiveIntConst();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getSequenceTypeRule());
                      	        }
                             		set(
                             			current, 
                             			"size",
                              		lv_size_4_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.PositiveIntConst");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getSequenceTypeAccess().getGreaterThanSignKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 184, ruleSequenceType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceType"


    // $ANTLR start "entryRuleNativeType"
    // InternalIDL.g:6618:1: entryRuleNativeType returns [EObject current=null] : iv_ruleNativeType= ruleNativeType EOF ;
    public final EObject entryRuleNativeType() throws RecognitionException {
        EObject current = null;
        int entryRuleNativeType_StartIndex = input.index();
        EObject iv_ruleNativeType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 185) ) { return current; }
            // InternalIDL.g:6619:2: (iv_ruleNativeType= ruleNativeType EOF )
            // InternalIDL.g:6620:2: iv_ruleNativeType= ruleNativeType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNativeTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNativeType=ruleNativeType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNativeType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 185, entryRuleNativeType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleNativeType"


    // $ANTLR start "ruleNativeType"
    // InternalIDL.g:6627:1: ruleNativeType returns [EObject current=null] : (otherlv_0= 'native' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleNativeType() throws RecognitionException {
        EObject current = null;
        int ruleNativeType_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 186) ) { return current; }
            // InternalIDL.g:6630:28: ( (otherlv_0= 'native' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:6631:1: (otherlv_0= 'native' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:6631:1: (otherlv_0= 'native' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalIDL.g:6631:3: otherlv_0= 'native' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,103,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getNativeTypeAccess().getNativeKeyword_0());
                  
            }
            // InternalIDL.g:6635:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:6636:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:6636:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:6637:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getNativeTypeAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getNativeTypeRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 186, ruleNativeType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleNativeType"


    // $ANTLR start "entryRuleFixedPtType"
    // InternalIDL.g:6661:1: entryRuleFixedPtType returns [EObject current=null] : iv_ruleFixedPtType= ruleFixedPtType EOF ;
    public final EObject entryRuleFixedPtType() throws RecognitionException {
        EObject current = null;
        int entryRuleFixedPtType_StartIndex = input.index();
        EObject iv_ruleFixedPtType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 187) ) { return current; }
            // InternalIDL.g:6662:2: (iv_ruleFixedPtType= ruleFixedPtType EOF )
            // InternalIDL.g:6663:2: iv_ruleFixedPtType= ruleFixedPtType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFixedPtTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFixedPtType=ruleFixedPtType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFixedPtType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 187, entryRuleFixedPtType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFixedPtType"


    // $ANTLR start "ruleFixedPtType"
    // InternalIDL.g:6670:1: ruleFixedPtType returns [EObject current=null] : (otherlv_0= 'fixed' otherlv_1= '<' ( (lv_lower_2_0= rulePositiveIntConst ) ) otherlv_3= ',' ( (lv_upper_4_0= rulePositiveIntConst ) ) otherlv_5= '>' ) ;
    public final EObject ruleFixedPtType() throws RecognitionException {
        EObject current = null;
        int ruleFixedPtType_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_lower_2_0 = null;

        EObject lv_upper_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 188) ) { return current; }
            // InternalIDL.g:6673:28: ( (otherlv_0= 'fixed' otherlv_1= '<' ( (lv_lower_2_0= rulePositiveIntConst ) ) otherlv_3= ',' ( (lv_upper_4_0= rulePositiveIntConst ) ) otherlv_5= '>' ) )
            // InternalIDL.g:6674:1: (otherlv_0= 'fixed' otherlv_1= '<' ( (lv_lower_2_0= rulePositiveIntConst ) ) otherlv_3= ',' ( (lv_upper_4_0= rulePositiveIntConst ) ) otherlv_5= '>' )
            {
            // InternalIDL.g:6674:1: (otherlv_0= 'fixed' otherlv_1= '<' ( (lv_lower_2_0= rulePositiveIntConst ) ) otherlv_3= ',' ( (lv_upper_4_0= rulePositiveIntConst ) ) otherlv_5= '>' )
            // InternalIDL.g:6674:3: otherlv_0= 'fixed' otherlv_1= '<' ( (lv_lower_2_0= rulePositiveIntConst ) ) otherlv_3= ',' ( (lv_upper_4_0= rulePositiveIntConst ) ) otherlv_5= '>'
            {
            otherlv_0=(Token)match(input,104,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFixedPtTypeAccess().getFixedKeyword_0());
                  
            }
            otherlv_1=(Token)match(input,21,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFixedPtTypeAccess().getLessThanSignKeyword_1());
                  
            }
            // InternalIDL.g:6682:1: ( (lv_lower_2_0= rulePositiveIntConst ) )
            // InternalIDL.g:6683:1: (lv_lower_2_0= rulePositiveIntConst )
            {
            // InternalIDL.g:6683:1: (lv_lower_2_0= rulePositiveIntConst )
            // InternalIDL.g:6684:3: lv_lower_2_0= rulePositiveIntConst
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFixedPtTypeAccess().getLowerPositiveIntConstParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_79);
            lv_lower_2_0=rulePositiveIntConst();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFixedPtTypeRule());
              	        }
                     		set(
                     			current, 
                     			"lower",
                      		lv_lower_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.PositiveIntConst");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,65,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getFixedPtTypeAccess().getCommaKeyword_3());
                  
            }
            // InternalIDL.g:6704:1: ( (lv_upper_4_0= rulePositiveIntConst ) )
            // InternalIDL.g:6705:1: (lv_upper_4_0= rulePositiveIntConst )
            {
            // InternalIDL.g:6705:1: (lv_upper_4_0= rulePositiveIntConst )
            // InternalIDL.g:6706:3: lv_upper_4_0= rulePositiveIntConst
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFixedPtTypeAccess().getUpperPositiveIntConstParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_7);
            lv_upper_4_0=rulePositiveIntConst();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFixedPtTypeRule());
              	        }
                     		set(
                     			current, 
                     			"upper",
                      		lv_upper_4_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.PositiveIntConst");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_5=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getFixedPtTypeAccess().getGreaterThanSignKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 188, ruleFixedPtType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFixedPtType"


    // $ANTLR start "entryRuleConstrForwardDecl"
    // InternalIDL.g:6734:1: entryRuleConstrForwardDecl returns [EObject current=null] : iv_ruleConstrForwardDecl= ruleConstrForwardDecl EOF ;
    public final EObject entryRuleConstrForwardDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleConstrForwardDecl_StartIndex = input.index();
        EObject iv_ruleConstrForwardDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 189) ) { return current; }
            // InternalIDL.g:6735:2: (iv_ruleConstrForwardDecl= ruleConstrForwardDecl EOF )
            // InternalIDL.g:6736:2: iv_ruleConstrForwardDecl= ruleConstrForwardDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstrForwardDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstrForwardDecl=ruleConstrForwardDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstrForwardDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 189, entryRuleConstrForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstrForwardDecl"


    // $ANTLR start "ruleConstrForwardDecl"
    // InternalIDL.g:6743:1: ruleConstrForwardDecl returns [EObject current=null] : (this_StructForwardDecl_0= ruleStructForwardDecl | this_UnionForwardDecl_1= ruleUnionForwardDecl ) ;
    public final EObject ruleConstrForwardDecl() throws RecognitionException {
        EObject current = null;
        int ruleConstrForwardDecl_StartIndex = input.index();
        EObject this_StructForwardDecl_0 = null;

        EObject this_UnionForwardDecl_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 190) ) { return current; }
            // InternalIDL.g:6746:28: ( (this_StructForwardDecl_0= ruleStructForwardDecl | this_UnionForwardDecl_1= ruleUnionForwardDecl ) )
            // InternalIDL.g:6747:1: (this_StructForwardDecl_0= ruleStructForwardDecl | this_UnionForwardDecl_1= ruleUnionForwardDecl )
            {
            // InternalIDL.g:6747:1: (this_StructForwardDecl_0= ruleStructForwardDecl | this_UnionForwardDecl_1= ruleUnionForwardDecl )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==95) ) {
                alt97=1;
            }
            else if ( (LA97_0==97) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // InternalIDL.g:6748:2: this_StructForwardDecl_0= ruleStructForwardDecl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstrForwardDeclAccess().getStructForwardDeclParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StructForwardDecl_0=ruleStructForwardDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructForwardDecl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:6761:2: this_UnionForwardDecl_1= ruleUnionForwardDecl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstrForwardDeclAccess().getUnionForwardDeclParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionForwardDecl_1=ruleUnionForwardDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnionForwardDecl_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 190, ruleConstrForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstrForwardDecl"


    // $ANTLR start "entryRuleStructForwardDecl"
    // InternalIDL.g:6780:1: entryRuleStructForwardDecl returns [EObject current=null] : iv_ruleStructForwardDecl= ruleStructForwardDecl EOF ;
    public final EObject entryRuleStructForwardDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleStructForwardDecl_StartIndex = input.index();
        EObject iv_ruleStructForwardDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 191) ) { return current; }
            // InternalIDL.g:6781:2: (iv_ruleStructForwardDecl= ruleStructForwardDecl EOF )
            // InternalIDL.g:6782:2: iv_ruleStructForwardDecl= ruleStructForwardDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructForwardDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructForwardDecl=ruleStructForwardDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructForwardDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 191, entryRuleStructForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStructForwardDecl"


    // $ANTLR start "ruleStructForwardDecl"
    // InternalIDL.g:6789:1: ruleStructForwardDecl returns [EObject current=null] : (otherlv_0= 'struct' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleStructForwardDecl() throws RecognitionException {
        EObject current = null;
        int ruleStructForwardDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 192) ) { return current; }
            // InternalIDL.g:6792:28: ( (otherlv_0= 'struct' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:6793:1: (otherlv_0= 'struct' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:6793:1: (otherlv_0= 'struct' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalIDL.g:6793:3: otherlv_0= 'struct' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,95,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getStructForwardDeclAccess().getStructKeyword_0());
                  
            }
            // InternalIDL.g:6797:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:6798:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:6798:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:6799:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getStructForwardDeclAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStructForwardDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 192, ruleStructForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStructForwardDecl"


    // $ANTLR start "entryRuleUnionForwardDecl"
    // InternalIDL.g:6823:1: entryRuleUnionForwardDecl returns [EObject current=null] : iv_ruleUnionForwardDecl= ruleUnionForwardDecl EOF ;
    public final EObject entryRuleUnionForwardDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleUnionForwardDecl_StartIndex = input.index();
        EObject iv_ruleUnionForwardDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 193) ) { return current; }
            // InternalIDL.g:6824:2: (iv_ruleUnionForwardDecl= ruleUnionForwardDecl EOF )
            // InternalIDL.g:6825:2: iv_ruleUnionForwardDecl= ruleUnionForwardDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionForwardDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionForwardDecl=ruleUnionForwardDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionForwardDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 193, entryRuleUnionForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnionForwardDecl"


    // $ANTLR start "ruleUnionForwardDecl"
    // InternalIDL.g:6832:1: ruleUnionForwardDecl returns [EObject current=null] : (otherlv_0= 'union' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleUnionForwardDecl() throws RecognitionException {
        EObject current = null;
        int ruleUnionForwardDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 194) ) { return current; }
            // InternalIDL.g:6835:28: ( (otherlv_0= 'union' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:6836:1: (otherlv_0= 'union' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:6836:1: (otherlv_0= 'union' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalIDL.g:6836:3: otherlv_0= 'union' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,97,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getUnionForwardDeclAccess().getUnionKeyword_0());
                  
            }
            // InternalIDL.g:6840:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:6841:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:6841:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:6842:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getUnionForwardDeclAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getUnionForwardDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 194, ruleUnionForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnionForwardDecl"


    // $ANTLR start "entryRulePositiveIntConst"
    // InternalIDL.g:6866:1: entryRulePositiveIntConst returns [EObject current=null] : iv_rulePositiveIntConst= rulePositiveIntConst EOF ;
    public final EObject entryRulePositiveIntConst() throws RecognitionException {
        EObject current = null;
        int entryRulePositiveIntConst_StartIndex = input.index();
        EObject iv_rulePositiveIntConst = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 195) ) { return current; }
            // InternalIDL.g:6867:2: (iv_rulePositiveIntConst= rulePositiveIntConst EOF )
            // InternalIDL.g:6868:2: iv_rulePositiveIntConst= rulePositiveIntConst EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPositiveIntConstRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePositiveIntConst=rulePositiveIntConst();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePositiveIntConst; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 195, entryRulePositiveIntConst_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePositiveIntConst"


    // $ANTLR start "rulePositiveIntConst"
    // InternalIDL.g:6875:1: rulePositiveIntConst returns [EObject current=null] : ( (lv_exp_0_0= ruleConstExp ) ) ;
    public final EObject rulePositiveIntConst() throws RecognitionException {
        EObject current = null;
        int rulePositiveIntConst_StartIndex = input.index();
        EObject lv_exp_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 196) ) { return current; }
            // InternalIDL.g:6878:28: ( ( (lv_exp_0_0= ruleConstExp ) ) )
            // InternalIDL.g:6879:1: ( (lv_exp_0_0= ruleConstExp ) )
            {
            // InternalIDL.g:6879:1: ( (lv_exp_0_0= ruleConstExp ) )
            // InternalIDL.g:6880:1: (lv_exp_0_0= ruleConstExp )
            {
            // InternalIDL.g:6880:1: (lv_exp_0_0= ruleConstExp )
            // InternalIDL.g:6881:3: lv_exp_0_0= ruleConstExp
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPositiveIntConstAccess().getExpConstExpParserRuleCall_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleConstExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPositiveIntConstRule());
              	        }
                     		set(
                     			current, 
                     			"exp",
                      		lv_exp_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConstExp");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 196, rulePositiveIntConst_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePositiveIntConst"


    // $ANTLR start "entryRuleConstDecl"
    // InternalIDL.g:6905:1: entryRuleConstDecl returns [EObject current=null] : iv_ruleConstDecl= ruleConstDecl EOF ;
    public final EObject entryRuleConstDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleConstDecl_StartIndex = input.index();
        EObject iv_ruleConstDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 197) ) { return current; }
            // InternalIDL.g:6906:2: (iv_ruleConstDecl= ruleConstDecl EOF )
            // InternalIDL.g:6907:2: iv_ruleConstDecl= ruleConstDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstDecl=ruleConstDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 197, entryRuleConstDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstDecl"


    // $ANTLR start "ruleConstDecl"
    // InternalIDL.g:6914:1: ruleConstDecl returns [EObject current=null] : (otherlv_0= 'const' ( (lv_type_1_0= ruleConstType ) ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' ( (lv_value_4_0= ruleConstExp ) ) ( (lv_comments_5_0= ruleIDLComment ) )* ) ;
    public final EObject ruleConstDecl() throws RecognitionException {
        EObject current = null;
        int ruleConstDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        EObject lv_type_1_0 = null;

        EObject lv_value_4_0 = null;

        EObject lv_comments_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 198) ) { return current; }
            // InternalIDL.g:6917:28: ( (otherlv_0= 'const' ( (lv_type_1_0= ruleConstType ) ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' ( (lv_value_4_0= ruleConstExp ) ) ( (lv_comments_5_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:6918:1: (otherlv_0= 'const' ( (lv_type_1_0= ruleConstType ) ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' ( (lv_value_4_0= ruleConstExp ) ) ( (lv_comments_5_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:6918:1: (otherlv_0= 'const' ( (lv_type_1_0= ruleConstType ) ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' ( (lv_value_4_0= ruleConstExp ) ) ( (lv_comments_5_0= ruleIDLComment ) )* )
            // InternalIDL.g:6918:3: otherlv_0= 'const' ( (lv_type_1_0= ruleConstType ) ) ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '=' ( (lv_value_4_0= ruleConstExp ) ) ( (lv_comments_5_0= ruleIDLComment ) )*
            {
            otherlv_0=(Token)match(input,105,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getConstDeclAccess().getConstKeyword_0());
                  
            }
            // InternalIDL.g:6922:1: ( (lv_type_1_0= ruleConstType ) )
            // InternalIDL.g:6923:1: (lv_type_1_0= ruleConstType )
            {
            // InternalIDL.g:6923:1: (lv_type_1_0= ruleConstType )
            // InternalIDL.g:6924:3: lv_type_1_0= ruleConstType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstDeclAccess().getTypeConstTypeParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_1_0=ruleConstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstDeclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConstType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:6940:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:6941:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:6941:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:6942:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_81); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getConstDeclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getConstDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,106,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getConstDeclAccess().getEqualsSignKeyword_3());
                  
            }
            // InternalIDL.g:6962:1: ( (lv_value_4_0= ruleConstExp ) )
            // InternalIDL.g:6963:1: (lv_value_4_0= ruleConstExp )
            {
            // InternalIDL.g:6963:1: (lv_value_4_0= ruleConstExp )
            // InternalIDL.g:6964:3: lv_value_4_0= ruleConstExp
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConstDeclAccess().getValueConstExpParserRuleCall_4_0()); 
              	    
            }
            pushFollow(FOLLOW_38);
            lv_value_4_0=ruleConstExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConstDeclRule());
              	        }
                     		set(
                     			current, 
                     			"value",
                      		lv_value_4_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConstExp");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:6980:2: ( (lv_comments_5_0= ruleIDLComment ) )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==RULE_SL_COMMENT) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalIDL.g:6981:1: (lv_comments_5_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:6981:1: (lv_comments_5_0= ruleIDLComment )
            	    // InternalIDL.g:6982:3: lv_comments_5_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getConstDeclAccess().getCommentsIDLCommentParserRuleCall_5_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_5_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getConstDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_5_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 198, ruleConstDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstDecl"


    // $ANTLR start "entryRuleConstType"
    // InternalIDL.g:7006:1: entryRuleConstType returns [EObject current=null] : iv_ruleConstType= ruleConstType EOF ;
    public final EObject entryRuleConstType() throws RecognitionException {
        EObject current = null;
        int entryRuleConstType_StartIndex = input.index();
        EObject iv_ruleConstType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 199) ) { return current; }
            // InternalIDL.g:7007:2: (iv_ruleConstType= ruleConstType EOF )
            // InternalIDL.g:7008:2: iv_ruleConstType= ruleConstType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstType=ruleConstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 199, entryRuleConstType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstType"


    // $ANTLR start "ruleConstType"
    // InternalIDL.g:7015:1: ruleConstType returns [EObject current=null] : (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_WideCharType_2= ruleWideCharType | this_BooleanType_3= ruleBooleanType | this_FloatingPtType_4= ruleFloatingPtType | this_StringType_5= ruleStringType | this_WideStringType_6= ruleWideStringType | this_FixedPtConstType_7= ruleFixedPtConstType | this_ScopedName_8= ruleScopedName | this_OctetType_9= ruleOctetType ) ;
    public final EObject ruleConstType() throws RecognitionException {
        EObject current = null;
        int ruleConstType_StartIndex = input.index();
        EObject this_IntegerType_0 = null;

        EObject this_CharType_1 = null;

        EObject this_WideCharType_2 = null;

        EObject this_BooleanType_3 = null;

        EObject this_FloatingPtType_4 = null;

        EObject this_StringType_5 = null;

        EObject this_WideStringType_6 = null;

        EObject this_FixedPtConstType_7 = null;

        EObject this_ScopedName_8 = null;

        EObject this_OctetType_9 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 200) ) { return current; }
            // InternalIDL.g:7018:28: ( (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_WideCharType_2= ruleWideCharType | this_BooleanType_3= ruleBooleanType | this_FloatingPtType_4= ruleFloatingPtType | this_StringType_5= ruleStringType | this_WideStringType_6= ruleWideStringType | this_FixedPtConstType_7= ruleFixedPtConstType | this_ScopedName_8= ruleScopedName | this_OctetType_9= ruleOctetType ) )
            // InternalIDL.g:7019:1: (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_WideCharType_2= ruleWideCharType | this_BooleanType_3= ruleBooleanType | this_FloatingPtType_4= ruleFloatingPtType | this_StringType_5= ruleStringType | this_WideStringType_6= ruleWideStringType | this_FixedPtConstType_7= ruleFixedPtConstType | this_ScopedName_8= ruleScopedName | this_OctetType_9= ruleOctetType )
            {
            // InternalIDL.g:7019:1: (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_WideCharType_2= ruleWideCharType | this_BooleanType_3= ruleBooleanType | this_FloatingPtType_4= ruleFloatingPtType | this_StringType_5= ruleStringType | this_WideStringType_6= ruleWideStringType | this_FixedPtConstType_7= ruleFixedPtConstType | this_ScopedName_8= ruleScopedName | this_OctetType_9= ruleOctetType )
            int alt99=10;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalIDL.g:7020:2: this_IntegerType_0= ruleIntegerType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getIntegerTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IntegerType_0=ruleIntegerType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IntegerType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:7033:2: this_CharType_1= ruleCharType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getCharTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_CharType_1=ruleCharType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_CharType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:7046:2: this_WideCharType_2= ruleWideCharType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getWideCharTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WideCharType_2=ruleWideCharType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WideCharType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:7059:2: this_BooleanType_3= ruleBooleanType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getBooleanTypeParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_BooleanType_3=ruleBooleanType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_BooleanType_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIDL.g:7072:2: this_FloatingPtType_4= ruleFloatingPtType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getFloatingPtTypeParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FloatingPtType_4=ruleFloatingPtType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FloatingPtType_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalIDL.g:7085:2: this_StringType_5= ruleStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getStringTypeParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StringType_5=ruleStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StringType_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalIDL.g:7098:2: this_WideStringType_6= ruleWideStringType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getWideStringTypeParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_WideStringType_6=ruleWideStringType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_WideStringType_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalIDL.g:7111:2: this_FixedPtConstType_7= ruleFixedPtConstType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getFixedPtConstTypeParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_FixedPtConstType_7=ruleFixedPtConstType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FixedPtConstType_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalIDL.g:7124:2: this_ScopedName_8= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getScopedNameParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScopedName_8=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScopedName_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalIDL.g:7137:2: this_OctetType_9= ruleOctetType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConstTypeAccess().getOctetTypeParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_OctetType_9=ruleOctetType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_OctetType_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 200, ruleConstType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstType"


    // $ANTLR start "entryRuleFixedPtConstType"
    // InternalIDL.g:7156:1: entryRuleFixedPtConstType returns [EObject current=null] : iv_ruleFixedPtConstType= ruleFixedPtConstType EOF ;
    public final EObject entryRuleFixedPtConstType() throws RecognitionException {
        EObject current = null;
        int entryRuleFixedPtConstType_StartIndex = input.index();
        EObject iv_ruleFixedPtConstType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 201) ) { return current; }
            // InternalIDL.g:7157:2: (iv_ruleFixedPtConstType= ruleFixedPtConstType EOF )
            // InternalIDL.g:7158:2: iv_ruleFixedPtConstType= ruleFixedPtConstType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFixedPtConstTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFixedPtConstType=ruleFixedPtConstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFixedPtConstType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 201, entryRuleFixedPtConstType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFixedPtConstType"


    // $ANTLR start "ruleFixedPtConstType"
    // InternalIDL.g:7165:1: ruleFixedPtConstType returns [EObject current=null] : ( () otherlv_1= 'fixed' ) ;
    public final EObject ruleFixedPtConstType() throws RecognitionException {
        EObject current = null;
        int ruleFixedPtConstType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 202) ) { return current; }
            // InternalIDL.g:7168:28: ( ( () otherlv_1= 'fixed' ) )
            // InternalIDL.g:7169:1: ( () otherlv_1= 'fixed' )
            {
            // InternalIDL.g:7169:1: ( () otherlv_1= 'fixed' )
            // InternalIDL.g:7169:2: () otherlv_1= 'fixed'
            {
            // InternalIDL.g:7169:2: ()
            // InternalIDL.g:7170:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getFixedPtConstTypeAccess().getFixedPtConstTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFixedPtConstTypeAccess().getFixedKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 202, ruleFixedPtConstType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFixedPtConstType"


    // $ANTLR start "entryRuleConstExp"
    // InternalIDL.g:7190:1: entryRuleConstExp returns [EObject current=null] : iv_ruleConstExp= ruleConstExp EOF ;
    public final EObject entryRuleConstExp() throws RecognitionException {
        EObject current = null;
        int entryRuleConstExp_StartIndex = input.index();
        EObject iv_ruleConstExp = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 203) ) { return current; }
            // InternalIDL.g:7191:2: (iv_ruleConstExp= ruleConstExp EOF )
            // InternalIDL.g:7192:2: iv_ruleConstExp= ruleConstExp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstExpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstExp=ruleConstExp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstExp; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 203, entryRuleConstExp_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstExp"


    // $ANTLR start "ruleConstExp"
    // InternalIDL.g:7199:1: ruleConstExp returns [EObject current=null] : this_OrExpr_0= ruleOrExpr ;
    public final EObject ruleConstExp() throws RecognitionException {
        EObject current = null;
        int ruleConstExp_StartIndex = input.index();
        EObject this_OrExpr_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 204) ) { return current; }
            // InternalIDL.g:7202:28: (this_OrExpr_0= ruleOrExpr )
            // InternalIDL.g:7204:2: this_OrExpr_0= ruleOrExpr
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConstExpAccess().getOrExprParserRuleCall()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_OrExpr_0=ruleOrExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_OrExpr_0; 
                      afterParserOrEnumRuleCall();
                  
            }

            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 204, ruleConstExp_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstExp"


    // $ANTLR start "entryRuleOrExpr"
    // InternalIDL.g:7223:1: entryRuleOrExpr returns [EObject current=null] : iv_ruleOrExpr= ruleOrExpr EOF ;
    public final EObject entryRuleOrExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleOrExpr_StartIndex = input.index();
        EObject iv_ruleOrExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 205) ) { return current; }
            // InternalIDL.g:7224:2: (iv_ruleOrExpr= ruleOrExpr EOF )
            // InternalIDL.g:7225:2: iv_ruleOrExpr= ruleOrExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOrExpr=ruleOrExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOrExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 205, entryRuleOrExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleOrExpr"


    // $ANTLR start "ruleOrExpr"
    // InternalIDL.g:7232:1: ruleOrExpr returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleXOrExpr ) ) ( ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) ) )* ) ;
    public final EObject ruleOrExpr() throws RecognitionException {
        EObject current = null;
        int ruleOrExpr_StartIndex = input.index();
        Token lv_op_1_0=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 206) ) { return current; }
            // InternalIDL.g:7235:28: ( ( ( (lv_lhs_0_0= ruleXOrExpr ) ) ( ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) ) )* ) )
            // InternalIDL.g:7236:1: ( ( (lv_lhs_0_0= ruleXOrExpr ) ) ( ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) ) )* )
            {
            // InternalIDL.g:7236:1: ( ( (lv_lhs_0_0= ruleXOrExpr ) ) ( ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) ) )* )
            // InternalIDL.g:7236:2: ( (lv_lhs_0_0= ruleXOrExpr ) ) ( ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) ) )*
            {
            // InternalIDL.g:7236:2: ( (lv_lhs_0_0= ruleXOrExpr ) )
            // InternalIDL.g:7237:1: (lv_lhs_0_0= ruleXOrExpr )
            {
            // InternalIDL.g:7237:1: (lv_lhs_0_0= ruleXOrExpr )
            // InternalIDL.g:7238:3: lv_lhs_0_0= ruleXOrExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getOrExprAccess().getLhsXOrExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_82);
            lv_lhs_0_0=ruleXOrExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getOrExprRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.XOrExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:7254:2: ( ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) ) )*
            loop100:
            do {
                int alt100=2;
                int LA100_0 = input.LA(1);

                if ( (LA100_0==107) ) {
                    int LA100_2 = input.LA(2);

                    if ( (synpred183_InternalIDL()) ) {
                        alt100=1;
                    }


                }


                switch (alt100) {
            	case 1 :
            	    // InternalIDL.g:7254:3: ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) )
            	    {
            	    // InternalIDL.g:7254:3: ( (lv_op_1_0= '|' ) )
            	    // InternalIDL.g:7255:1: (lv_op_1_0= '|' )
            	    {
            	    // InternalIDL.g:7255:1: (lv_op_1_0= '|' )
            	    // InternalIDL.g:7256:3: lv_op_1_0= '|'
            	    {
            	    lv_op_1_0=(Token)match(input,107,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_op_1_0, grammarAccess.getOrExprAccess().getOpVerticalLineKeyword_1_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getOrExprRule());
            	      	        }
            	             		setWithLastConsumed(current, "op", lv_op_1_0, "|");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalIDL.g:7269:2: ( (lv_rhs_2_0= ruleOrExpr ) )
            	    // InternalIDL.g:7270:1: (lv_rhs_2_0= ruleOrExpr )
            	    {
            	    // InternalIDL.g:7270:1: (lv_rhs_2_0= ruleOrExpr )
            	    // InternalIDL.g:7271:3: lv_rhs_2_0= ruleOrExpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getOrExprAccess().getRhsOrExprParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_82);
            	    lv_rhs_2_0=ruleOrExpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getOrExprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.OrExpr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop100;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 206, ruleOrExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleOrExpr"


    // $ANTLR start "entryRuleXOrExpr"
    // InternalIDL.g:7295:1: entryRuleXOrExpr returns [EObject current=null] : iv_ruleXOrExpr= ruleXOrExpr EOF ;
    public final EObject entryRuleXOrExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleXOrExpr_StartIndex = input.index();
        EObject iv_ruleXOrExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 207) ) { return current; }
            // InternalIDL.g:7296:2: (iv_ruleXOrExpr= ruleXOrExpr EOF )
            // InternalIDL.g:7297:2: iv_ruleXOrExpr= ruleXOrExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getXOrExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleXOrExpr=ruleXOrExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleXOrExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 207, entryRuleXOrExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleXOrExpr"


    // $ANTLR start "ruleXOrExpr"
    // InternalIDL.g:7304:1: ruleXOrExpr returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleAndExpr ) ) ( ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) ) )* ) ;
    public final EObject ruleXOrExpr() throws RecognitionException {
        EObject current = null;
        int ruleXOrExpr_StartIndex = input.index();
        Token lv_op_1_0=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 208) ) { return current; }
            // InternalIDL.g:7307:28: ( ( ( (lv_lhs_0_0= ruleAndExpr ) ) ( ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) ) )* ) )
            // InternalIDL.g:7308:1: ( ( (lv_lhs_0_0= ruleAndExpr ) ) ( ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) ) )* )
            {
            // InternalIDL.g:7308:1: ( ( (lv_lhs_0_0= ruleAndExpr ) ) ( ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) ) )* )
            // InternalIDL.g:7308:2: ( (lv_lhs_0_0= ruleAndExpr ) ) ( ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) ) )*
            {
            // InternalIDL.g:7308:2: ( (lv_lhs_0_0= ruleAndExpr ) )
            // InternalIDL.g:7309:1: (lv_lhs_0_0= ruleAndExpr )
            {
            // InternalIDL.g:7309:1: (lv_lhs_0_0= ruleAndExpr )
            // InternalIDL.g:7310:3: lv_lhs_0_0= ruleAndExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getXOrExprAccess().getLhsAndExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_83);
            lv_lhs_0_0=ruleAndExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getXOrExprRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.AndExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:7326:2: ( ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) ) )*
            loop101:
            do {
                int alt101=2;
                int LA101_0 = input.LA(1);

                if ( (LA101_0==108) ) {
                    int LA101_2 = input.LA(2);

                    if ( (synpred184_InternalIDL()) ) {
                        alt101=1;
                    }


                }


                switch (alt101) {
            	case 1 :
            	    // InternalIDL.g:7326:3: ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) )
            	    {
            	    // InternalIDL.g:7326:3: ( (lv_op_1_0= '^' ) )
            	    // InternalIDL.g:7327:1: (lv_op_1_0= '^' )
            	    {
            	    // InternalIDL.g:7327:1: (lv_op_1_0= '^' )
            	    // InternalIDL.g:7328:3: lv_op_1_0= '^'
            	    {
            	    lv_op_1_0=(Token)match(input,108,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_op_1_0, grammarAccess.getXOrExprAccess().getOpCircumflexAccentKeyword_1_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getXOrExprRule());
            	      	        }
            	             		setWithLastConsumed(current, "op", lv_op_1_0, "^");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalIDL.g:7341:2: ( (lv_rhs_2_0= ruleXOrExpr ) )
            	    // InternalIDL.g:7342:1: (lv_rhs_2_0= ruleXOrExpr )
            	    {
            	    // InternalIDL.g:7342:1: (lv_rhs_2_0= ruleXOrExpr )
            	    // InternalIDL.g:7343:3: lv_rhs_2_0= ruleXOrExpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getXOrExprAccess().getRhsXOrExprParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_83);
            	    lv_rhs_2_0=ruleXOrExpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getXOrExprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.XOrExpr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop101;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 208, ruleXOrExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleXOrExpr"


    // $ANTLR start "entryRuleAndExpr"
    // InternalIDL.g:7367:1: entryRuleAndExpr returns [EObject current=null] : iv_ruleAndExpr= ruleAndExpr EOF ;
    public final EObject entryRuleAndExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleAndExpr_StartIndex = input.index();
        EObject iv_ruleAndExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 209) ) { return current; }
            // InternalIDL.g:7368:2: (iv_ruleAndExpr= ruleAndExpr EOF )
            // InternalIDL.g:7369:2: iv_ruleAndExpr= ruleAndExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAndExpr=ruleAndExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAndExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 209, entryRuleAndExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAndExpr"


    // $ANTLR start "ruleAndExpr"
    // InternalIDL.g:7376:1: ruleAndExpr returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleShiftExpr ) ) ( ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) ) )* ) ;
    public final EObject ruleAndExpr() throws RecognitionException {
        EObject current = null;
        int ruleAndExpr_StartIndex = input.index();
        Token lv_op_1_0=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 210) ) { return current; }
            // InternalIDL.g:7379:28: ( ( ( (lv_lhs_0_0= ruleShiftExpr ) ) ( ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) ) )* ) )
            // InternalIDL.g:7380:1: ( ( (lv_lhs_0_0= ruleShiftExpr ) ) ( ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) ) )* )
            {
            // InternalIDL.g:7380:1: ( ( (lv_lhs_0_0= ruleShiftExpr ) ) ( ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) ) )* )
            // InternalIDL.g:7380:2: ( (lv_lhs_0_0= ruleShiftExpr ) ) ( ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) ) )*
            {
            // InternalIDL.g:7380:2: ( (lv_lhs_0_0= ruleShiftExpr ) )
            // InternalIDL.g:7381:1: (lv_lhs_0_0= ruleShiftExpr )
            {
            // InternalIDL.g:7381:1: (lv_lhs_0_0= ruleShiftExpr )
            // InternalIDL.g:7382:3: lv_lhs_0_0= ruleShiftExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAndExprAccess().getLhsShiftExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_84);
            lv_lhs_0_0=ruleShiftExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAndExprRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ShiftExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:7398:2: ( ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==109) ) {
                    int LA102_2 = input.LA(2);

                    if ( (synpred185_InternalIDL()) ) {
                        alt102=1;
                    }


                }


                switch (alt102) {
            	case 1 :
            	    // InternalIDL.g:7398:3: ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) )
            	    {
            	    // InternalIDL.g:7398:3: ( (lv_op_1_0= '&' ) )
            	    // InternalIDL.g:7399:1: (lv_op_1_0= '&' )
            	    {
            	    // InternalIDL.g:7399:1: (lv_op_1_0= '&' )
            	    // InternalIDL.g:7400:3: lv_op_1_0= '&'
            	    {
            	    lv_op_1_0=(Token)match(input,109,FOLLOW_10); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	              newLeafNode(lv_op_1_0, grammarAccess.getAndExprAccess().getOpAmpersandKeyword_1_0_0());
            	          
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getAndExprRule());
            	      	        }
            	             		setWithLastConsumed(current, "op", lv_op_1_0, "&");
            	      	    
            	    }

            	    }


            	    }

            	    // InternalIDL.g:7413:2: ( (lv_rhs_2_0= ruleAndExpr ) )
            	    // InternalIDL.g:7414:1: (lv_rhs_2_0= ruleAndExpr )
            	    {
            	    // InternalIDL.g:7414:1: (lv_rhs_2_0= ruleAndExpr )
            	    // InternalIDL.g:7415:3: lv_rhs_2_0= ruleAndExpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAndExprAccess().getRhsAndExprParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_rhs_2_0=ruleAndExpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAndExprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.AndExpr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 210, ruleAndExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAndExpr"


    // $ANTLR start "entryRuleShiftExpr"
    // InternalIDL.g:7439:1: entryRuleShiftExpr returns [EObject current=null] : iv_ruleShiftExpr= ruleShiftExpr EOF ;
    public final EObject entryRuleShiftExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleShiftExpr_StartIndex = input.index();
        EObject iv_ruleShiftExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 211) ) { return current; }
            // InternalIDL.g:7440:2: (iv_ruleShiftExpr= ruleShiftExpr EOF )
            // InternalIDL.g:7441:2: iv_ruleShiftExpr= ruleShiftExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleShiftExpr=ruleShiftExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 211, entryRuleShiftExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftExpr"


    // $ANTLR start "ruleShiftExpr"
    // InternalIDL.g:7448:1: ruleShiftExpr returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleAddExpr ) ) ( ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) ) )* ) ;
    public final EObject ruleShiftExpr() throws RecognitionException {
        EObject current = null;
        int ruleShiftExpr_StartIndex = input.index();
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 212) ) { return current; }
            // InternalIDL.g:7451:28: ( ( ( (lv_lhs_0_0= ruleAddExpr ) ) ( ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) ) )* ) )
            // InternalIDL.g:7452:1: ( ( (lv_lhs_0_0= ruleAddExpr ) ) ( ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) ) )* )
            {
            // InternalIDL.g:7452:1: ( ( (lv_lhs_0_0= ruleAddExpr ) ) ( ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) ) )* )
            // InternalIDL.g:7452:2: ( (lv_lhs_0_0= ruleAddExpr ) ) ( ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) ) )*
            {
            // InternalIDL.g:7452:2: ( (lv_lhs_0_0= ruleAddExpr ) )
            // InternalIDL.g:7453:1: (lv_lhs_0_0= ruleAddExpr )
            {
            // InternalIDL.g:7453:1: (lv_lhs_0_0= ruleAddExpr )
            // InternalIDL.g:7454:3: lv_lhs_0_0= ruleAddExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getShiftExprAccess().getLhsAddExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_85);
            lv_lhs_0_0=ruleAddExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getShiftExprRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.AddExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:7470:2: ( ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) ) )*
            loop104:
            do {
                int alt104=2;
                int LA104_0 = input.LA(1);

                if ( (LA104_0==110) ) {
                    int LA104_2 = input.LA(2);

                    if ( (synpred187_InternalIDL()) ) {
                        alt104=1;
                    }


                }
                else if ( (LA104_0==111) ) {
                    int LA104_3 = input.LA(2);

                    if ( (synpred187_InternalIDL()) ) {
                        alt104=1;
                    }


                }


                switch (alt104) {
            	case 1 :
            	    // InternalIDL.g:7470:3: ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) )
            	    {
            	    // InternalIDL.g:7470:3: ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) )
            	    int alt103=2;
            	    int LA103_0 = input.LA(1);

            	    if ( (LA103_0==110) ) {
            	        alt103=1;
            	    }
            	    else if ( (LA103_0==111) ) {
            	        alt103=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 103, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt103) {
            	        case 1 :
            	            // InternalIDL.g:7470:4: ( (lv_op_1_0= '<<' ) )
            	            {
            	            // InternalIDL.g:7470:4: ( (lv_op_1_0= '<<' ) )
            	            // InternalIDL.g:7471:1: (lv_op_1_0= '<<' )
            	            {
            	            // InternalIDL.g:7471:1: (lv_op_1_0= '<<' )
            	            // InternalIDL.g:7472:3: lv_op_1_0= '<<'
            	            {
            	            lv_op_1_0=(Token)match(input,110,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_1_0, grammarAccess.getShiftExprAccess().getOpLessThanSignLessThanSignKeyword_1_0_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getShiftExprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_1_0, "<<");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalIDL.g:7486:6: ( (lv_op_2_0= '>>' ) )
            	            {
            	            // InternalIDL.g:7486:6: ( (lv_op_2_0= '>>' ) )
            	            // InternalIDL.g:7487:1: (lv_op_2_0= '>>' )
            	            {
            	            // InternalIDL.g:7487:1: (lv_op_2_0= '>>' )
            	            // InternalIDL.g:7488:3: lv_op_2_0= '>>'
            	            {
            	            lv_op_2_0=(Token)match(input,111,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_2_0, grammarAccess.getShiftExprAccess().getOpGreaterThanSignGreaterThanSignKeyword_1_0_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getShiftExprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_2_0, ">>");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalIDL.g:7501:3: ( (lv_rhs_3_0= ruleShiftExpr ) )
            	    // InternalIDL.g:7502:1: (lv_rhs_3_0= ruleShiftExpr )
            	    {
            	    // InternalIDL.g:7502:1: (lv_rhs_3_0= ruleShiftExpr )
            	    // InternalIDL.g:7503:3: lv_rhs_3_0= ruleShiftExpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getShiftExprAccess().getRhsShiftExprParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_rhs_3_0=ruleShiftExpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getShiftExprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ShiftExpr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop104;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 212, ruleShiftExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleShiftExpr"


    // $ANTLR start "entryRuleAddExpr"
    // InternalIDL.g:7527:1: entryRuleAddExpr returns [EObject current=null] : iv_ruleAddExpr= ruleAddExpr EOF ;
    public final EObject entryRuleAddExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleAddExpr_StartIndex = input.index();
        EObject iv_ruleAddExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 213) ) { return current; }
            // InternalIDL.g:7528:2: (iv_ruleAddExpr= ruleAddExpr EOF )
            // InternalIDL.g:7529:2: iv_ruleAddExpr= ruleAddExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAddExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddExpr=ruleAddExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 213, entryRuleAddExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleAddExpr"


    // $ANTLR start "ruleAddExpr"
    // InternalIDL.g:7536:1: ruleAddExpr returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleMultExpr ) ) ( ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) ) )* ) ;
    public final EObject ruleAddExpr() throws RecognitionException {
        EObject current = null;
        int ruleAddExpr_StartIndex = input.index();
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 214) ) { return current; }
            // InternalIDL.g:7539:28: ( ( ( (lv_lhs_0_0= ruleMultExpr ) ) ( ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) ) )* ) )
            // InternalIDL.g:7540:1: ( ( (lv_lhs_0_0= ruleMultExpr ) ) ( ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) ) )* )
            {
            // InternalIDL.g:7540:1: ( ( (lv_lhs_0_0= ruleMultExpr ) ) ( ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) ) )* )
            // InternalIDL.g:7540:2: ( (lv_lhs_0_0= ruleMultExpr ) ) ( ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) ) )*
            {
            // InternalIDL.g:7540:2: ( (lv_lhs_0_0= ruleMultExpr ) )
            // InternalIDL.g:7541:1: (lv_lhs_0_0= ruleMultExpr )
            {
            // InternalIDL.g:7541:1: (lv_lhs_0_0= ruleMultExpr )
            // InternalIDL.g:7542:3: lv_lhs_0_0= ruleMultExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getAddExprAccess().getLhsMultExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_86);
            lv_lhs_0_0=ruleMultExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getAddExprRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.MultExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:7558:2: ( ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==113) ) {
                    int LA106_2 = input.LA(2);

                    if ( (synpred189_InternalIDL()) ) {
                        alt106=1;
                    }


                }
                else if ( (LA106_0==112) ) {
                    int LA106_3 = input.LA(2);

                    if ( (synpred189_InternalIDL()) ) {
                        alt106=1;
                    }


                }


                switch (alt106) {
            	case 1 :
            	    // InternalIDL.g:7558:3: ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) )
            	    {
            	    // InternalIDL.g:7558:3: ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) )
            	    int alt105=2;
            	    int LA105_0 = input.LA(1);

            	    if ( (LA105_0==112) ) {
            	        alt105=1;
            	    }
            	    else if ( (LA105_0==113) ) {
            	        alt105=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 105, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt105) {
            	        case 1 :
            	            // InternalIDL.g:7558:4: ( (lv_op_1_0= '+' ) )
            	            {
            	            // InternalIDL.g:7558:4: ( (lv_op_1_0= '+' ) )
            	            // InternalIDL.g:7559:1: (lv_op_1_0= '+' )
            	            {
            	            // InternalIDL.g:7559:1: (lv_op_1_0= '+' )
            	            // InternalIDL.g:7560:3: lv_op_1_0= '+'
            	            {
            	            lv_op_1_0=(Token)match(input,112,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_1_0, grammarAccess.getAddExprAccess().getOpPlusSignKeyword_1_0_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getAddExprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_1_0, "+");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalIDL.g:7574:6: ( (lv_op_2_0= '-' ) )
            	            {
            	            // InternalIDL.g:7574:6: ( (lv_op_2_0= '-' ) )
            	            // InternalIDL.g:7575:1: (lv_op_2_0= '-' )
            	            {
            	            // InternalIDL.g:7575:1: (lv_op_2_0= '-' )
            	            // InternalIDL.g:7576:3: lv_op_2_0= '-'
            	            {
            	            lv_op_2_0=(Token)match(input,113,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_2_0, grammarAccess.getAddExprAccess().getOpHyphenMinusKeyword_1_0_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getAddExprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_2_0, "-");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalIDL.g:7589:3: ( (lv_rhs_3_0= ruleAddExpr ) )
            	    // InternalIDL.g:7590:1: (lv_rhs_3_0= ruleAddExpr )
            	    {
            	    // InternalIDL.g:7590:1: (lv_rhs_3_0= ruleAddExpr )
            	    // InternalIDL.g:7591:3: lv_rhs_3_0= ruleAddExpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getAddExprAccess().getRhsAddExprParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_86);
            	    lv_rhs_3_0=ruleAddExpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getAddExprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.AddExpr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 214, ruleAddExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleAddExpr"


    // $ANTLR start "entryRuleMultExpr"
    // InternalIDL.g:7615:1: entryRuleMultExpr returns [EObject current=null] : iv_ruleMultExpr= ruleMultExpr EOF ;
    public final EObject entryRuleMultExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleMultExpr_StartIndex = input.index();
        EObject iv_ruleMultExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 215) ) { return current; }
            // InternalIDL.g:7616:2: (iv_ruleMultExpr= ruleMultExpr EOF )
            // InternalIDL.g:7617:2: iv_ruleMultExpr= ruleMultExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultExpr=ruleMultExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 215, entryRuleMultExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleMultExpr"


    // $ANTLR start "ruleMultExpr"
    // InternalIDL.g:7624:1: ruleMultExpr returns [EObject current=null] : ( ( (lv_lhs_0_0= ruleUnaryExpr ) ) ( ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) ) )* ) ;
    public final EObject ruleMultExpr() throws RecognitionException {
        EObject current = null;
        int ruleMultExpr_StartIndex = input.index();
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        Token lv_op_3_0=null;
        EObject lv_lhs_0_0 = null;

        EObject lv_rhs_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 216) ) { return current; }
            // InternalIDL.g:7627:28: ( ( ( (lv_lhs_0_0= ruleUnaryExpr ) ) ( ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) ) )* ) )
            // InternalIDL.g:7628:1: ( ( (lv_lhs_0_0= ruleUnaryExpr ) ) ( ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) ) )* )
            {
            // InternalIDL.g:7628:1: ( ( (lv_lhs_0_0= ruleUnaryExpr ) ) ( ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) ) )* )
            // InternalIDL.g:7628:2: ( (lv_lhs_0_0= ruleUnaryExpr ) ) ( ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) ) )*
            {
            // InternalIDL.g:7628:2: ( (lv_lhs_0_0= ruleUnaryExpr ) )
            // InternalIDL.g:7629:1: (lv_lhs_0_0= ruleUnaryExpr )
            {
            // InternalIDL.g:7629:1: (lv_lhs_0_0= ruleUnaryExpr )
            // InternalIDL.g:7630:3: lv_lhs_0_0= ruleUnaryExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getMultExprAccess().getLhsUnaryExprParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_87);
            lv_lhs_0_0=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getMultExprRule());
              	        }
                     		set(
                     			current, 
                     			"lhs",
                      		lv_lhs_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.UnaryExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:7646:2: ( ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) ) )*
            loop108:
            do {
                int alt108=2;
                switch ( input.LA(1) ) {
                case 114:
                    {
                    int LA108_2 = input.LA(2);

                    if ( (synpred192_InternalIDL()) ) {
                        alt108=1;
                    }


                    }
                    break;
                case 115:
                    {
                    int LA108_3 = input.LA(2);

                    if ( (synpred192_InternalIDL()) ) {
                        alt108=1;
                    }


                    }
                    break;
                case 116:
                    {
                    int LA108_4 = input.LA(2);

                    if ( (synpred192_InternalIDL()) ) {
                        alt108=1;
                    }


                    }
                    break;

                }

                switch (alt108) {
            	case 1 :
            	    // InternalIDL.g:7646:3: ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) )
            	    {
            	    // InternalIDL.g:7646:3: ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) )
            	    int alt107=3;
            	    switch ( input.LA(1) ) {
            	    case 114:
            	        {
            	        alt107=1;
            	        }
            	        break;
            	    case 115:
            	        {
            	        alt107=2;
            	        }
            	        break;
            	    case 116:
            	        {
            	        alt107=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 107, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt107) {
            	        case 1 :
            	            // InternalIDL.g:7646:4: ( (lv_op_1_0= '*' ) )
            	            {
            	            // InternalIDL.g:7646:4: ( (lv_op_1_0= '*' ) )
            	            // InternalIDL.g:7647:1: (lv_op_1_0= '*' )
            	            {
            	            // InternalIDL.g:7647:1: (lv_op_1_0= '*' )
            	            // InternalIDL.g:7648:3: lv_op_1_0= '*'
            	            {
            	            lv_op_1_0=(Token)match(input,114,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_1_0, grammarAccess.getMultExprAccess().getOpAsteriskKeyword_1_0_0_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getMultExprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_1_0, "*");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalIDL.g:7662:6: ( (lv_op_2_0= '/' ) )
            	            {
            	            // InternalIDL.g:7662:6: ( (lv_op_2_0= '/' ) )
            	            // InternalIDL.g:7663:1: (lv_op_2_0= '/' )
            	            {
            	            // InternalIDL.g:7663:1: (lv_op_2_0= '/' )
            	            // InternalIDL.g:7664:3: lv_op_2_0= '/'
            	            {
            	            lv_op_2_0=(Token)match(input,115,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_2_0, grammarAccess.getMultExprAccess().getOpSolidusKeyword_1_0_1_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getMultExprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_2_0, "/");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalIDL.g:7678:6: ( (lv_op_3_0= '%' ) )
            	            {
            	            // InternalIDL.g:7678:6: ( (lv_op_3_0= '%' ) )
            	            // InternalIDL.g:7679:1: (lv_op_3_0= '%' )
            	            {
            	            // InternalIDL.g:7679:1: (lv_op_3_0= '%' )
            	            // InternalIDL.g:7680:3: lv_op_3_0= '%'
            	            {
            	            lv_op_3_0=(Token)match(input,116,FOLLOW_10); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	                      newLeafNode(lv_op_3_0, grammarAccess.getMultExprAccess().getOpPercentSignKeyword_1_0_2_0());
            	                  
            	            }
            	            if ( state.backtracking==0 ) {

            	              	        if (current==null) {
            	              	            current = createModelElement(grammarAccess.getMultExprRule());
            	              	        }
            	                     		setWithLastConsumed(current, "op", lv_op_3_0, "%");
            	              	    
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalIDL.g:7693:3: ( (lv_rhs_4_0= ruleMultExpr ) )
            	    // InternalIDL.g:7694:1: (lv_rhs_4_0= ruleMultExpr )
            	    {
            	    // InternalIDL.g:7694:1: (lv_rhs_4_0= ruleMultExpr )
            	    // InternalIDL.g:7695:3: lv_rhs_4_0= ruleMultExpr
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getMultExprAccess().getRhsMultExprParserRuleCall_1_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_rhs_4_0=ruleMultExpr();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getMultExprRule());
            	      	        }
            	             		set(
            	             			current, 
            	             			"rhs",
            	              		lv_rhs_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.MultExpr");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop108;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 216, ruleMultExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleMultExpr"


    // $ANTLR start "entryRuleUnaryExpr"
    // InternalIDL.g:7719:1: entryRuleUnaryExpr returns [EObject current=null] : iv_ruleUnaryExpr= ruleUnaryExpr EOF ;
    public final EObject entryRuleUnaryExpr() throws RecognitionException {
        EObject current = null;
        int entryRuleUnaryExpr_StartIndex = input.index();
        EObject iv_ruleUnaryExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 217) ) { return current; }
            // InternalIDL.g:7720:2: (iv_ruleUnaryExpr= ruleUnaryExpr EOF )
            // InternalIDL.g:7721:2: iv_ruleUnaryExpr= ruleUnaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnaryExpr=ruleUnaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 217, entryRuleUnaryExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnaryExpr"


    // $ANTLR start "ruleUnaryExpr"
    // InternalIDL.g:7728:1: ruleUnaryExpr returns [EObject current=null] : ( ( ( (lv_op_0_0= '-' ) ) | ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '~' ) ) )? ( (lv_expr_3_0= rulePrimaryExpr ) ) ) ;
    public final EObject ruleUnaryExpr() throws RecognitionException {
        EObject current = null;
        int ruleUnaryExpr_StartIndex = input.index();
        Token lv_op_0_0=null;
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        EObject lv_expr_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 218) ) { return current; }
            // InternalIDL.g:7731:28: ( ( ( ( (lv_op_0_0= '-' ) ) | ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '~' ) ) )? ( (lv_expr_3_0= rulePrimaryExpr ) ) ) )
            // InternalIDL.g:7732:1: ( ( ( (lv_op_0_0= '-' ) ) | ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '~' ) ) )? ( (lv_expr_3_0= rulePrimaryExpr ) ) )
            {
            // InternalIDL.g:7732:1: ( ( ( (lv_op_0_0= '-' ) ) | ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '~' ) ) )? ( (lv_expr_3_0= rulePrimaryExpr ) ) )
            // InternalIDL.g:7732:2: ( ( (lv_op_0_0= '-' ) ) | ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '~' ) ) )? ( (lv_expr_3_0= rulePrimaryExpr ) )
            {
            // InternalIDL.g:7732:2: ( ( (lv_op_0_0= '-' ) ) | ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '~' ) ) )?
            int alt109=4;
            switch ( input.LA(1) ) {
                case 113:
                    {
                    alt109=1;
                    }
                    break;
                case 112:
                    {
                    alt109=2;
                    }
                    break;
                case 117:
                    {
                    alt109=3;
                    }
                    break;
            }

            switch (alt109) {
                case 1 :
                    // InternalIDL.g:7732:3: ( (lv_op_0_0= '-' ) )
                    {
                    // InternalIDL.g:7732:3: ( (lv_op_0_0= '-' ) )
                    // InternalIDL.g:7733:1: (lv_op_0_0= '-' )
                    {
                    // InternalIDL.g:7733:1: (lv_op_0_0= '-' )
                    // InternalIDL.g:7734:3: lv_op_0_0= '-'
                    {
                    lv_op_0_0=(Token)match(input,113,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_op_0_0, grammarAccess.getUnaryExprAccess().getOpHyphenMinusKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnaryExprRule());
                      	        }
                             		setWithLastConsumed(current, "op", lv_op_0_0, "-");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:7748:6: ( (lv_op_1_0= '+' ) )
                    {
                    // InternalIDL.g:7748:6: ( (lv_op_1_0= '+' ) )
                    // InternalIDL.g:7749:1: (lv_op_1_0= '+' )
                    {
                    // InternalIDL.g:7749:1: (lv_op_1_0= '+' )
                    // InternalIDL.g:7750:3: lv_op_1_0= '+'
                    {
                    lv_op_1_0=(Token)match(input,112,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_op_1_0, grammarAccess.getUnaryExprAccess().getOpPlusSignKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnaryExprRule());
                      	        }
                             		setWithLastConsumed(current, "op", lv_op_1_0, "+");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:7764:6: ( (lv_op_2_0= '~' ) )
                    {
                    // InternalIDL.g:7764:6: ( (lv_op_2_0= '~' ) )
                    // InternalIDL.g:7765:1: (lv_op_2_0= '~' )
                    {
                    // InternalIDL.g:7765:1: (lv_op_2_0= '~' )
                    // InternalIDL.g:7766:3: lv_op_2_0= '~'
                    {
                    lv_op_2_0=(Token)match(input,117,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_op_2_0, grammarAccess.getUnaryExprAccess().getOpTildeKeyword_0_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUnaryExprRule());
                      	        }
                             		setWithLastConsumed(current, "op", lv_op_2_0, "~");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalIDL.g:7779:4: ( (lv_expr_3_0= rulePrimaryExpr ) )
            // InternalIDL.g:7780:1: (lv_expr_3_0= rulePrimaryExpr )
            {
            // InternalIDL.g:7780:1: (lv_expr_3_0= rulePrimaryExpr )
            // InternalIDL.g:7781:3: lv_expr_3_0= rulePrimaryExpr
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUnaryExprAccess().getExprPrimaryExprParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_expr_3_0=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUnaryExprRule());
              	        }
                     		set(
                     			current, 
                     			"expr",
                      		lv_expr_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.PrimaryExpr");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 218, ruleUnaryExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnaryExpr"


    // $ANTLR start "entryRulePrimaryExpr"
    // InternalIDL.g:7805:1: entryRulePrimaryExpr returns [EObject current=null] : iv_rulePrimaryExpr= rulePrimaryExpr EOF ;
    public final EObject entryRulePrimaryExpr() throws RecognitionException {
        EObject current = null;
        int entryRulePrimaryExpr_StartIndex = input.index();
        EObject iv_rulePrimaryExpr = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 219) ) { return current; }
            // InternalIDL.g:7806:2: (iv_rulePrimaryExpr= rulePrimaryExpr EOF )
            // InternalIDL.g:7807:2: iv_rulePrimaryExpr= rulePrimaryExpr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryExprRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryExpr=rulePrimaryExpr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryExpr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 219, entryRulePrimaryExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryExpr"


    // $ANTLR start "rulePrimaryExpr"
    // InternalIDL.g:7814:1: rulePrimaryExpr returns [EObject current=null] : (this_ScopedName_0= ruleScopedName | this_Literal_1= ruleLiteral | (otherlv_2= '(' this_ConstExp_3= ruleConstExp otherlv_4= ')' ) ) ;
    public final EObject rulePrimaryExpr() throws RecognitionException {
        EObject current = null;
        int rulePrimaryExpr_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ScopedName_0 = null;

        EObject this_Literal_1 = null;

        EObject this_ConstExp_3 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 220) ) { return current; }
            // InternalIDL.g:7817:28: ( (this_ScopedName_0= ruleScopedName | this_Literal_1= ruleLiteral | (otherlv_2= '(' this_ConstExp_3= ruleConstExp otherlv_4= ')' ) ) )
            // InternalIDL.g:7818:1: (this_ScopedName_0= ruleScopedName | this_Literal_1= ruleLiteral | (otherlv_2= '(' this_ConstExp_3= ruleConstExp otherlv_4= ')' ) )
            {
            // InternalIDL.g:7818:1: (this_ScopedName_0= ruleScopedName | this_Literal_1= ruleLiteral | (otherlv_2= '(' this_ConstExp_3= ruleConstExp otherlv_4= ')' ) )
            int alt110=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
            case 42:
                {
                alt110=1;
                }
                break;
            case RULE_STRING:
            case RULE_HEX_LITERAL:
            case RULE_CHARACTER_LITERAL:
            case RULE_FLOATING_PT_LITERAL:
            case RULE_INTEGER_LITERAL:
            case RULE_BOOLEAN_LITERAL:
                {
                alt110=2;
                }
                break;
            case 71:
                {
                alt110=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 110, 0, input);

                throw nvae;
            }

            switch (alt110) {
                case 1 :
                    // InternalIDL.g:7819:2: this_ScopedName_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExprAccess().getScopedNameParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ScopedName_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ScopedName_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:7832:2: this_Literal_1= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExprAccess().getLiteralParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Literal_1=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Literal_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:7844:6: (otherlv_2= '(' this_ConstExp_3= ruleConstExp otherlv_4= ')' )
                    {
                    // InternalIDL.g:7844:6: (otherlv_2= '(' this_ConstExp_3= ruleConstExp otherlv_4= ')' )
                    // InternalIDL.g:7844:8: otherlv_2= '(' this_ConstExp_3= ruleConstExp otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,71,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getPrimaryExprAccess().getLeftParenthesisKeyword_2_0());
                          
                    }
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPrimaryExprAccess().getConstExpParserRuleCall_2_1()); 
                          
                    }
                    pushFollow(FOLLOW_69);
                    this_ConstExp_3=ruleConstExp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstExp_3; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_4=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getPrimaryExprAccess().getRightParenthesisKeyword_2_2());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 220, rulePrimaryExpr_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePrimaryExpr"


    // $ANTLR start "entryRuleLiteral"
    // InternalIDL.g:7872:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;
        int entryRuleLiteral_StartIndex = input.index();
        EObject iv_ruleLiteral = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 221) ) { return current; }
            // InternalIDL.g:7873:2: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalIDL.g:7874:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 221, entryRuleLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalIDL.g:7881:1: ruleLiteral returns [EObject current=null] : ( ( (lv_value_0_0= RULE_HEX_LITERAL ) ) | ( (lv_value_1_0= RULE_STRING ) ) | ( (lv_value_2_0= RULE_CHARACTER_LITERAL ) ) | ( (lv_value_3_0= RULE_FLOATING_PT_LITERAL ) ) | ( (lv_value_4_0= RULE_INTEGER_LITERAL ) ) | ( (lv_value_5_0= RULE_BOOLEAN_LITERAL ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;
        int ruleLiteral_StartIndex = input.index();
        Token lv_value_0_0=null;
        Token lv_value_1_0=null;
        Token lv_value_2_0=null;
        Token lv_value_3_0=null;
        Token lv_value_4_0=null;
        Token lv_value_5_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 222) ) { return current; }
            // InternalIDL.g:7884:28: ( ( ( (lv_value_0_0= RULE_HEX_LITERAL ) ) | ( (lv_value_1_0= RULE_STRING ) ) | ( (lv_value_2_0= RULE_CHARACTER_LITERAL ) ) | ( (lv_value_3_0= RULE_FLOATING_PT_LITERAL ) ) | ( (lv_value_4_0= RULE_INTEGER_LITERAL ) ) | ( (lv_value_5_0= RULE_BOOLEAN_LITERAL ) ) ) )
            // InternalIDL.g:7885:1: ( ( (lv_value_0_0= RULE_HEX_LITERAL ) ) | ( (lv_value_1_0= RULE_STRING ) ) | ( (lv_value_2_0= RULE_CHARACTER_LITERAL ) ) | ( (lv_value_3_0= RULE_FLOATING_PT_LITERAL ) ) | ( (lv_value_4_0= RULE_INTEGER_LITERAL ) ) | ( (lv_value_5_0= RULE_BOOLEAN_LITERAL ) ) )
            {
            // InternalIDL.g:7885:1: ( ( (lv_value_0_0= RULE_HEX_LITERAL ) ) | ( (lv_value_1_0= RULE_STRING ) ) | ( (lv_value_2_0= RULE_CHARACTER_LITERAL ) ) | ( (lv_value_3_0= RULE_FLOATING_PT_LITERAL ) ) | ( (lv_value_4_0= RULE_INTEGER_LITERAL ) ) | ( (lv_value_5_0= RULE_BOOLEAN_LITERAL ) ) )
            int alt111=6;
            switch ( input.LA(1) ) {
            case RULE_HEX_LITERAL:
                {
                alt111=1;
                }
                break;
            case RULE_STRING:
                {
                alt111=2;
                }
                break;
            case RULE_CHARACTER_LITERAL:
                {
                alt111=3;
                }
                break;
            case RULE_FLOATING_PT_LITERAL:
                {
                alt111=4;
                }
                break;
            case RULE_INTEGER_LITERAL:
                {
                alt111=5;
                }
                break;
            case RULE_BOOLEAN_LITERAL:
                {
                alt111=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 111, 0, input);

                throw nvae;
            }

            switch (alt111) {
                case 1 :
                    // InternalIDL.g:7885:2: ( (lv_value_0_0= RULE_HEX_LITERAL ) )
                    {
                    // InternalIDL.g:7885:2: ( (lv_value_0_0= RULE_HEX_LITERAL ) )
                    // InternalIDL.g:7886:1: (lv_value_0_0= RULE_HEX_LITERAL )
                    {
                    // InternalIDL.g:7886:1: (lv_value_0_0= RULE_HEX_LITERAL )
                    // InternalIDL.g:7887:3: lv_value_0_0= RULE_HEX_LITERAL
                    {
                    lv_value_0_0=(Token)match(input,RULE_HEX_LITERAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_0_0, grammarAccess.getLiteralAccess().getValueHEX_LITERALTerminalRuleCall_0_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_0_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.HEX_LITERAL");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:7904:6: ( (lv_value_1_0= RULE_STRING ) )
                    {
                    // InternalIDL.g:7904:6: ( (lv_value_1_0= RULE_STRING ) )
                    // InternalIDL.g:7905:1: (lv_value_1_0= RULE_STRING )
                    {
                    // InternalIDL.g:7905:1: (lv_value_1_0= RULE_STRING )
                    // InternalIDL.g:7906:3: lv_value_1_0= RULE_STRING
                    {
                    lv_value_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_1_0, grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_1_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_1_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.STRING");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:7923:6: ( (lv_value_2_0= RULE_CHARACTER_LITERAL ) )
                    {
                    // InternalIDL.g:7923:6: ( (lv_value_2_0= RULE_CHARACTER_LITERAL ) )
                    // InternalIDL.g:7924:1: (lv_value_2_0= RULE_CHARACTER_LITERAL )
                    {
                    // InternalIDL.g:7924:1: (lv_value_2_0= RULE_CHARACTER_LITERAL )
                    // InternalIDL.g:7925:3: lv_value_2_0= RULE_CHARACTER_LITERAL
                    {
                    lv_value_2_0=(Token)match(input,RULE_CHARACTER_LITERAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_2_0, grammarAccess.getLiteralAccess().getValueCHARACTER_LITERALTerminalRuleCall_2_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_2_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.CHARACTER_LITERAL");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:7942:6: ( (lv_value_3_0= RULE_FLOATING_PT_LITERAL ) )
                    {
                    // InternalIDL.g:7942:6: ( (lv_value_3_0= RULE_FLOATING_PT_LITERAL ) )
                    // InternalIDL.g:7943:1: (lv_value_3_0= RULE_FLOATING_PT_LITERAL )
                    {
                    // InternalIDL.g:7943:1: (lv_value_3_0= RULE_FLOATING_PT_LITERAL )
                    // InternalIDL.g:7944:3: lv_value_3_0= RULE_FLOATING_PT_LITERAL
                    {
                    lv_value_3_0=(Token)match(input,RULE_FLOATING_PT_LITERAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_3_0, grammarAccess.getLiteralAccess().getValueFLOATING_PT_LITERALTerminalRuleCall_3_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_3_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.FLOATING_PT_LITERAL");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalIDL.g:7961:6: ( (lv_value_4_0= RULE_INTEGER_LITERAL ) )
                    {
                    // InternalIDL.g:7961:6: ( (lv_value_4_0= RULE_INTEGER_LITERAL ) )
                    // InternalIDL.g:7962:1: (lv_value_4_0= RULE_INTEGER_LITERAL )
                    {
                    // InternalIDL.g:7962:1: (lv_value_4_0= RULE_INTEGER_LITERAL )
                    // InternalIDL.g:7963:3: lv_value_4_0= RULE_INTEGER_LITERAL
                    {
                    lv_value_4_0=(Token)match(input,RULE_INTEGER_LITERAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_4_0, grammarAccess.getLiteralAccess().getValueINTEGER_LITERALTerminalRuleCall_4_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_4_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.INTEGER_LITERAL");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalIDL.g:7980:6: ( (lv_value_5_0= RULE_BOOLEAN_LITERAL ) )
                    {
                    // InternalIDL.g:7980:6: ( (lv_value_5_0= RULE_BOOLEAN_LITERAL ) )
                    // InternalIDL.g:7981:1: (lv_value_5_0= RULE_BOOLEAN_LITERAL )
                    {
                    // InternalIDL.g:7981:1: (lv_value_5_0= RULE_BOOLEAN_LITERAL )
                    // InternalIDL.g:7982:3: lv_value_5_0= RULE_BOOLEAN_LITERAL
                    {
                    lv_value_5_0=(Token)match(input,RULE_BOOLEAN_LITERAL,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			newLeafNode(lv_value_5_0, grammarAccess.getLiteralAccess().getValueBOOLEAN_LITERALTerminalRuleCall_5_0()); 
                      		
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getLiteralRule());
                      	        }
                             		setWithLastConsumed(
                             			current, 
                             			"value",
                              		lv_value_5_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.BOOLEAN_LITERAL");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 222, ruleLiteral_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleComponentDecl"
    // InternalIDL.g:8006:1: entryRuleComponentDecl returns [EObject current=null] : iv_ruleComponentDecl= ruleComponentDecl EOF ;
    public final EObject entryRuleComponentDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleComponentDecl_StartIndex = input.index();
        EObject iv_ruleComponentDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 223) ) { return current; }
            // InternalIDL.g:8007:2: (iv_ruleComponentDecl= ruleComponentDecl EOF )
            // InternalIDL.g:8008:2: iv_ruleComponentDecl= ruleComponentDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComponentDecl=ruleComponentDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 223, entryRuleComponentDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentDecl"


    // $ANTLR start "ruleComponentDecl"
    // InternalIDL.g:8015:1: ruleComponentDecl returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'component' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= '{' ( (lv_export_10_0= ruleComponentExport ) )* otherlv_11= '}' ) ;
    public final EObject ruleComponentDecl() throws RecognitionException {
        EObject current = null;
        int ruleComponentDecl_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_comments_0_0 = null;

        EObject lv_base_4_0 = null;

        EObject lv_supports_6_0 = null;

        EObject lv_supports_8_0 = null;

        EObject lv_export_10_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 224) ) { return current; }
            // InternalIDL.g:8018:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'component' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= '{' ( (lv_export_10_0= ruleComponentExport ) )* otherlv_11= '}' ) )
            // InternalIDL.g:8019:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'component' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= '{' ( (lv_export_10_0= ruleComponentExport ) )* otherlv_11= '}' )
            {
            // InternalIDL.g:8019:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'component' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= '{' ( (lv_export_10_0= ruleComponentExport ) )* otherlv_11= '}' )
            // InternalIDL.g:8019:2: ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'component' ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= '{' ( (lv_export_10_0= ruleComponentExport ) )* otherlv_11= '}'
            {
            // InternalIDL.g:8019:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==RULE_SL_COMMENT) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalIDL.g:8020:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:8020:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:8021:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComponentDeclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComponentDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            otherlv_1=(Token)match(input,118,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getComponentDeclAccess().getComponentKeyword_1());
                  
            }
            // InternalIDL.g:8041:1: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:8042:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:8042:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:8043:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getComponentDeclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getComponentDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:8059:2: (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==64) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalIDL.g:8059:4: otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) )
                    {
                    otherlv_3=(Token)match(input,64,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getComponentDeclAccess().getColonKeyword_3_0());
                          
                    }
                    // InternalIDL.g:8063:1: ( (lv_base_4_0= ruleScopedName ) )
                    // InternalIDL.g:8064:1: (lv_base_4_0= ruleScopedName )
                    {
                    // InternalIDL.g:8064:1: (lv_base_4_0= ruleScopedName )
                    // InternalIDL.g:8065:3: lv_base_4_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getComponentDeclAccess().getBaseScopedNameParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_90);
                    lv_base_4_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getComponentDeclRule());
                      	        }
                             		set(
                             			current, 
                             			"base",
                              		lv_base_4_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalIDL.g:8081:4: (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )?
            int alt115=2;
            int LA115_0 = input.LA(1);

            if ( (LA115_0==119) ) {
                alt115=1;
            }
            switch (alt115) {
                case 1 :
                    // InternalIDL.g:8081:6: otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )*
                    {
                    otherlv_5=(Token)match(input,119,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getComponentDeclAccess().getSupportsKeyword_4_0());
                          
                    }
                    // InternalIDL.g:8085:1: ( (lv_supports_6_0= ruleScopedName ) )
                    // InternalIDL.g:8086:1: (lv_supports_6_0= ruleScopedName )
                    {
                    // InternalIDL.g:8086:1: (lv_supports_6_0= ruleScopedName )
                    // InternalIDL.g:8087:3: lv_supports_6_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getComponentDeclAccess().getSupportsScopedNameParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_supports_6_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getComponentDeclRule());
                      	        }
                             		add(
                             			current, 
                             			"supports",
                              		lv_supports_6_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIDL.g:8103:2: (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )*
                    loop114:
                    do {
                        int alt114=2;
                        int LA114_0 = input.LA(1);

                        if ( (LA114_0==65) ) {
                            alt114=1;
                        }


                        switch (alt114) {
                    	case 1 :
                    	    // InternalIDL.g:8103:4: otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) )
                    	    {
                    	    otherlv_7=(Token)match(input,65,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getComponentDeclAccess().getCommaKeyword_4_2_0());
                    	          
                    	    }
                    	    // InternalIDL.g:8107:1: ( (lv_supports_8_0= ruleScopedName ) )
                    	    // InternalIDL.g:8108:1: (lv_supports_8_0= ruleScopedName )
                    	    {
                    	    // InternalIDL.g:8108:1: (lv_supports_8_0= ruleScopedName )
                    	    // InternalIDL.g:8109:3: lv_supports_8_0= ruleScopedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getComponentDeclAccess().getSupportsScopedNameParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_supports_8_0=ruleScopedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getComponentDeclRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"supports",
                    	              		lv_supports_8_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop114;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,59,FOLLOW_92); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getComponentDeclAccess().getLeftCurlyBracketKeyword_5());
                  
            }
            // InternalIDL.g:8129:1: ( (lv_export_10_0= ruleComponentExport ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==RULE_SL_COMMENT||LA116_0==20||(LA116_0>=24 && LA116_0<=28)||(LA116_0>=35 && LA116_0<=39)||(LA116_0>=54 && LA116_0<=55)||LA116_0==66||LA116_0==69||(LA116_0>=120 && LA116_0<=121)||(LA116_0>=123 && LA116_0<=125)||(LA116_0>=137 && LA116_0<=138)) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalIDL.g:8130:1: (lv_export_10_0= ruleComponentExport )
            	    {
            	    // InternalIDL.g:8130:1: (lv_export_10_0= ruleComponentExport )
            	    // InternalIDL.g:8131:3: lv_export_10_0= ruleComponentExport
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getComponentDeclAccess().getExportComponentExportParserRuleCall_6_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_92);
            	    lv_export_10_0=ruleComponentExport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getComponentDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"export",
            	              		lv_export_10_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ComponentExport");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);

            otherlv_11=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_11, grammarAccess.getComponentDeclAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 224, ruleComponentDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleComponentDecl"


    // $ANTLR start "entryRuleComponentExport"
    // InternalIDL.g:8159:1: entryRuleComponentExport returns [EObject current=null] : iv_ruleComponentExport= ruleComponentExport EOF ;
    public final EObject entryRuleComponentExport() throws RecognitionException {
        EObject current = null;
        int entryRuleComponentExport_StartIndex = input.index();
        EObject iv_ruleComponentExport = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 225) ) { return current; }
            // InternalIDL.g:8160:2: (iv_ruleComponentExport= ruleComponentExport EOF )
            // InternalIDL.g:8161:2: iv_ruleComponentExport= ruleComponentExport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentExportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComponentExport=ruleComponentExport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentExport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 225, entryRuleComponentExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentExport"


    // $ANTLR start "ruleComponentExport"
    // InternalIDL.g:8168:1: ruleComponentExport returns [EObject current=null] : ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_EmitDcl_4= ruleEmitDcl otherlv_5= ';' ) | (this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';' ) | (this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';' ) | (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' ) | (this_PortDecl_12= rulePortDecl otherlv_13= ';' ) | this_Preproc_14= rulePreproc | this_IDLComment_15= ruleIDLComment ) ;
    public final EObject ruleComponentExport() throws RecognitionException {
        EObject current = null;
        int ruleComponentExport_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject this_ProvidesDcl_0 = null;

        EObject this_UsesDcl_2 = null;

        EObject this_EmitDcl_4 = null;

        EObject this_PublishesDcl_6 = null;

        EObject this_ConsumesDcl_8 = null;

        EObject this_AttrDecl_10 = null;

        EObject this_PortDecl_12 = null;

        EObject this_Preproc_14 = null;

        EObject this_IDLComment_15 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 226) ) { return current; }
            // InternalIDL.g:8171:28: ( ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_EmitDcl_4= ruleEmitDcl otherlv_5= ';' ) | (this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';' ) | (this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';' ) | (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' ) | (this_PortDecl_12= rulePortDecl otherlv_13= ';' ) | this_Preproc_14= rulePreproc | this_IDLComment_15= ruleIDLComment ) )
            // InternalIDL.g:8172:1: ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_EmitDcl_4= ruleEmitDcl otherlv_5= ';' ) | (this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';' ) | (this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';' ) | (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' ) | (this_PortDecl_12= rulePortDecl otherlv_13= ';' ) | this_Preproc_14= rulePreproc | this_IDLComment_15= ruleIDLComment )
            {
            // InternalIDL.g:8172:1: ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_EmitDcl_4= ruleEmitDcl otherlv_5= ';' ) | (this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';' ) | (this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';' ) | (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' ) | (this_PortDecl_12= rulePortDecl otherlv_13= ';' ) | this_Preproc_14= rulePreproc | this_IDLComment_15= ruleIDLComment )
            int alt117=9;
            alt117 = dfa117.predict(input);
            switch (alt117) {
                case 1 :
                    // InternalIDL.g:8172:2: (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' )
                    {
                    // InternalIDL.g:8172:2: (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' )
                    // InternalIDL.g:8173:2: this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getProvidesDclParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ProvidesDcl_0=ruleProvidesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ProvidesDcl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getComponentExportAccess().getSemicolonKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:8189:6: (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' )
                    {
                    // InternalIDL.g:8189:6: (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' )
                    // InternalIDL.g:8190:2: this_UsesDcl_2= ruleUsesDcl otherlv_3= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getUsesDclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_UsesDcl_2=ruleUsesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UsesDcl_2; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getComponentExportAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:8206:6: (this_EmitDcl_4= ruleEmitDcl otherlv_5= ';' )
                    {
                    // InternalIDL.g:8206:6: (this_EmitDcl_4= ruleEmitDcl otherlv_5= ';' )
                    // InternalIDL.g:8207:2: this_EmitDcl_4= ruleEmitDcl otherlv_5= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getEmitDclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_EmitDcl_4=ruleEmitDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EmitDcl_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getComponentExportAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:8223:6: (this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';' )
                    {
                    // InternalIDL.g:8223:6: (this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';' )
                    // InternalIDL.g:8224:2: this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getPublishesDclParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_PublishesDcl_6=rulePublishesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PublishesDcl_6; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getComponentExportAccess().getSemicolonKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalIDL.g:8240:6: (this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';' )
                    {
                    // InternalIDL.g:8240:6: (this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';' )
                    // InternalIDL.g:8241:2: this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getConsumesDclParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ConsumesDcl_8=ruleConsumesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConsumesDcl_8; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getComponentExportAccess().getSemicolonKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalIDL.g:8257:6: (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' )
                    {
                    // InternalIDL.g:8257:6: (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' )
                    // InternalIDL.g:8258:2: this_AttrDecl_10= ruleAttrDecl otherlv_11= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getAttrDeclParserRuleCall_5_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_AttrDecl_10=ruleAttrDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AttrDecl_10; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getComponentExportAccess().getSemicolonKeyword_5_1());
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalIDL.g:8274:6: (this_PortDecl_12= rulePortDecl otherlv_13= ';' )
                    {
                    // InternalIDL.g:8274:6: (this_PortDecl_12= rulePortDecl otherlv_13= ';' )
                    // InternalIDL.g:8275:2: this_PortDecl_12= rulePortDecl otherlv_13= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getPortDeclParserRuleCall_6_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_PortDecl_12=rulePortDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PortDecl_12; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_13=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getComponentExportAccess().getSemicolonKeyword_6_1());
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalIDL.g:8292:2: this_Preproc_14= rulePreproc
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getPreprocParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Preproc_14=rulePreproc();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Preproc_14; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalIDL.g:8305:2: this_IDLComment_15= ruleIDLComment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getComponentExportAccess().getIDLCommentParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IDLComment_15=ruleIDLComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IDLComment_15; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 226, ruleComponentExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleComponentExport"


    // $ANTLR start "entryRuleProvidesDcl"
    // InternalIDL.g:8324:1: entryRuleProvidesDcl returns [EObject current=null] : iv_ruleProvidesDcl= ruleProvidesDcl EOF ;
    public final EObject entryRuleProvidesDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleProvidesDcl_StartIndex = input.index();
        EObject iv_ruleProvidesDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 227) ) { return current; }
            // InternalIDL.g:8325:2: (iv_ruleProvidesDcl= ruleProvidesDcl EOF )
            // InternalIDL.g:8326:2: iv_ruleProvidesDcl= ruleProvidesDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProvidesDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleProvidesDcl=ruleProvidesDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProvidesDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 227, entryRuleProvidesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleProvidesDcl"


    // $ANTLR start "ruleProvidesDcl"
    // InternalIDL.g:8333:1: ruleProvidesDcl returns [EObject current=null] : (otherlv_0= 'provides' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) ;
    public final EObject ruleProvidesDcl() throws RecognitionException {
        EObject current = null;
        int ruleProvidesDcl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_2_0=null;
        EObject lv_type_1_0 = null;

        EObject lv_comments_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 228) ) { return current; }
            // InternalIDL.g:8336:28: ( (otherlv_0= 'provides' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:8337:1: (otherlv_0= 'provides' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:8337:1: (otherlv_0= 'provides' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            // InternalIDL.g:8337:3: otherlv_0= 'provides' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )*
            {
            otherlv_0=(Token)match(input,120,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getProvidesDclAccess().getProvidesKeyword_0());
                  
            }
            // InternalIDL.g:8341:1: ( (lv_type_1_0= ruleScopedName ) )
            // InternalIDL.g:8342:1: (lv_type_1_0= ruleScopedName )
            {
            // InternalIDL.g:8342:1: (lv_type_1_0= ruleScopedName )
            // InternalIDL.g:8343:3: lv_type_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getProvidesDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getProvidesDclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:8359:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:8360:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:8360:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:8361:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getProvidesDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getProvidesDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:8377:2: ( (lv_comments_3_0= ruleIDLComment ) )*
            loop118:
            do {
                int alt118=2;
                int LA118_0 = input.LA(1);

                if ( (LA118_0==RULE_SL_COMMENT) ) {
                    alt118=1;
                }


                switch (alt118) {
            	case 1 :
            	    // InternalIDL.g:8378:1: (lv_comments_3_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:8378:1: (lv_comments_3_0= ruleIDLComment )
            	    // InternalIDL.g:8379:3: lv_comments_3_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getProvidesDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_3_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getProvidesDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop118;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 228, ruleProvidesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleProvidesDcl"


    // $ANTLR start "entryRuleUsesDcl"
    // InternalIDL.g:8403:1: entryRuleUsesDcl returns [EObject current=null] : iv_ruleUsesDcl= ruleUsesDcl EOF ;
    public final EObject entryRuleUsesDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleUsesDcl_StartIndex = input.index();
        EObject iv_ruleUsesDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 229) ) { return current; }
            // InternalIDL.g:8404:2: (iv_ruleUsesDcl= ruleUsesDcl EOF )
            // InternalIDL.g:8405:2: iv_ruleUsesDcl= ruleUsesDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUsesDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUsesDcl=ruleUsesDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUsesDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 229, entryRuleUsesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUsesDcl"


    // $ANTLR start "ruleUsesDcl"
    // InternalIDL.g:8412:1: ruleUsesDcl returns [EObject current=null] : (otherlv_0= 'uses' ( (lv_isMultiple_1_0= 'multiple' ) )? ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* ) ;
    public final EObject ruleUsesDcl() throws RecognitionException {
        EObject current = null;
        int ruleUsesDcl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_isMultiple_1_0=null;
        Token lv_name_3_0=null;
        EObject lv_type_2_0 = null;

        EObject lv_comments_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 230) ) { return current; }
            // InternalIDL.g:8415:28: ( (otherlv_0= 'uses' ( (lv_isMultiple_1_0= 'multiple' ) )? ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:8416:1: (otherlv_0= 'uses' ( (lv_isMultiple_1_0= 'multiple' ) )? ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:8416:1: (otherlv_0= 'uses' ( (lv_isMultiple_1_0= 'multiple' ) )? ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* )
            // InternalIDL.g:8416:3: otherlv_0= 'uses' ( (lv_isMultiple_1_0= 'multiple' ) )? ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )*
            {
            otherlv_0=(Token)match(input,121,FOLLOW_93); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getUsesDclAccess().getUsesKeyword_0());
                  
            }
            // InternalIDL.g:8420:1: ( (lv_isMultiple_1_0= 'multiple' ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==122) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalIDL.g:8421:1: (lv_isMultiple_1_0= 'multiple' )
                    {
                    // InternalIDL.g:8421:1: (lv_isMultiple_1_0= 'multiple' )
                    // InternalIDL.g:8422:3: lv_isMultiple_1_0= 'multiple'
                    {
                    lv_isMultiple_1_0=(Token)match(input,122,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isMultiple_1_0, grammarAccess.getUsesDclAccess().getIsMultipleMultipleKeyword_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getUsesDclRule());
                      	        }
                             		setWithLastConsumed(current, "isMultiple", true, "multiple");
                      	    
                    }

                    }


                    }
                    break;

            }

            // InternalIDL.g:8435:3: ( (lv_type_2_0= ruleScopedName ) )
            // InternalIDL.g:8436:1: (lv_type_2_0= ruleScopedName )
            {
            // InternalIDL.g:8436:1: (lv_type_2_0= ruleScopedName )
            // InternalIDL.g:8437:3: lv_type_2_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getUsesDclAccess().getTypeScopedNameParserRuleCall_2_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_2_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getUsesDclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:8453:2: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:8454:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:8454:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:8455:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getUsesDclAccess().getNameIDTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getUsesDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:8471:2: ( (lv_comments_4_0= ruleIDLComment ) )*
            loop120:
            do {
                int alt120=2;
                int LA120_0 = input.LA(1);

                if ( (LA120_0==RULE_SL_COMMENT) ) {
                    alt120=1;
                }


                switch (alt120) {
            	case 1 :
            	    // InternalIDL.g:8472:1: (lv_comments_4_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:8472:1: (lv_comments_4_0= ruleIDLComment )
            	    // InternalIDL.g:8473:3: lv_comments_4_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getUsesDclAccess().getCommentsIDLCommentParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_4_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getUsesDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop120;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 230, ruleUsesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUsesDcl"


    // $ANTLR start "entryRulePublishesDcl"
    // InternalIDL.g:8497:1: entryRulePublishesDcl returns [EObject current=null] : iv_rulePublishesDcl= rulePublishesDcl EOF ;
    public final EObject entryRulePublishesDcl() throws RecognitionException {
        EObject current = null;
        int entryRulePublishesDcl_StartIndex = input.index();
        EObject iv_rulePublishesDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 231) ) { return current; }
            // InternalIDL.g:8498:2: (iv_rulePublishesDcl= rulePublishesDcl EOF )
            // InternalIDL.g:8499:2: iv_rulePublishesDcl= rulePublishesDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPublishesDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePublishesDcl=rulePublishesDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePublishesDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 231, entryRulePublishesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePublishesDcl"


    // $ANTLR start "rulePublishesDcl"
    // InternalIDL.g:8506:1: rulePublishesDcl returns [EObject current=null] : (otherlv_0= 'publishes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) ;
    public final EObject rulePublishesDcl() throws RecognitionException {
        EObject current = null;
        int rulePublishesDcl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_2_0=null;
        EObject lv_type_1_0 = null;

        EObject lv_comments_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 232) ) { return current; }
            // InternalIDL.g:8509:28: ( (otherlv_0= 'publishes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:8510:1: (otherlv_0= 'publishes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:8510:1: (otherlv_0= 'publishes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            // InternalIDL.g:8510:3: otherlv_0= 'publishes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )*
            {
            otherlv_0=(Token)match(input,123,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPublishesDclAccess().getPublishesKeyword_0());
                  
            }
            // InternalIDL.g:8514:1: ( (lv_type_1_0= ruleScopedName ) )
            // InternalIDL.g:8515:1: (lv_type_1_0= ruleScopedName )
            {
            // InternalIDL.g:8515:1: (lv_type_1_0= ruleScopedName )
            // InternalIDL.g:8516:3: lv_type_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPublishesDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPublishesDclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:8532:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:8533:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:8533:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:8534:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getPublishesDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPublishesDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:8550:2: ( (lv_comments_3_0= ruleIDLComment ) )*
            loop121:
            do {
                int alt121=2;
                int LA121_0 = input.LA(1);

                if ( (LA121_0==RULE_SL_COMMENT) ) {
                    alt121=1;
                }


                switch (alt121) {
            	case 1 :
            	    // InternalIDL.g:8551:1: (lv_comments_3_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:8551:1: (lv_comments_3_0= ruleIDLComment )
            	    // InternalIDL.g:8552:3: lv_comments_3_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPublishesDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_3_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPublishesDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop121;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 232, rulePublishesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePublishesDcl"


    // $ANTLR start "entryRuleEmitDcl"
    // InternalIDL.g:8576:1: entryRuleEmitDcl returns [EObject current=null] : iv_ruleEmitDcl= ruleEmitDcl EOF ;
    public final EObject entryRuleEmitDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleEmitDcl_StartIndex = input.index();
        EObject iv_ruleEmitDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 233) ) { return current; }
            // InternalIDL.g:8577:2: (iv_ruleEmitDcl= ruleEmitDcl EOF )
            // InternalIDL.g:8578:2: iv_ruleEmitDcl= ruleEmitDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmitDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEmitDcl=ruleEmitDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmitDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 233, entryRuleEmitDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEmitDcl"


    // $ANTLR start "ruleEmitDcl"
    // InternalIDL.g:8585:1: ruleEmitDcl returns [EObject current=null] : (otherlv_0= 'emits' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) ;
    public final EObject ruleEmitDcl() throws RecognitionException {
        EObject current = null;
        int ruleEmitDcl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_2_0=null;
        EObject lv_type_1_0 = null;

        EObject lv_comments_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 234) ) { return current; }
            // InternalIDL.g:8588:28: ( (otherlv_0= 'emits' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:8589:1: (otherlv_0= 'emits' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:8589:1: (otherlv_0= 'emits' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            // InternalIDL.g:8589:3: otherlv_0= 'emits' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )*
            {
            otherlv_0=(Token)match(input,124,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getEmitDclAccess().getEmitsKeyword_0());
                  
            }
            // InternalIDL.g:8593:1: ( (lv_type_1_0= ruleScopedName ) )
            // InternalIDL.g:8594:1: (lv_type_1_0= ruleScopedName )
            {
            // InternalIDL.g:8594:1: (lv_type_1_0= ruleScopedName )
            // InternalIDL.g:8595:3: lv_type_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getEmitDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getEmitDclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:8611:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:8612:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:8612:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:8613:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getEmitDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEmitDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:8629:2: ( (lv_comments_3_0= ruleIDLComment ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==RULE_SL_COMMENT) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalIDL.g:8630:1: (lv_comments_3_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:8630:1: (lv_comments_3_0= ruleIDLComment )
            	    // InternalIDL.g:8631:3: lv_comments_3_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEmitDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_3_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEmitDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 234, ruleEmitDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEmitDcl"


    // $ANTLR start "entryRuleConsumesDcl"
    // InternalIDL.g:8655:1: entryRuleConsumesDcl returns [EObject current=null] : iv_ruleConsumesDcl= ruleConsumesDcl EOF ;
    public final EObject entryRuleConsumesDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleConsumesDcl_StartIndex = input.index();
        EObject iv_ruleConsumesDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 235) ) { return current; }
            // InternalIDL.g:8656:2: (iv_ruleConsumesDcl= ruleConsumesDcl EOF )
            // InternalIDL.g:8657:2: iv_ruleConsumesDcl= ruleConsumesDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConsumesDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConsumesDcl=ruleConsumesDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConsumesDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 235, entryRuleConsumesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConsumesDcl"


    // $ANTLR start "ruleConsumesDcl"
    // InternalIDL.g:8664:1: ruleConsumesDcl returns [EObject current=null] : (otherlv_0= 'consumes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) ;
    public final EObject ruleConsumesDcl() throws RecognitionException {
        EObject current = null;
        int ruleConsumesDcl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_2_0=null;
        EObject lv_type_1_0 = null;

        EObject lv_comments_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 236) ) { return current; }
            // InternalIDL.g:8667:28: ( (otherlv_0= 'consumes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:8668:1: (otherlv_0= 'consumes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:8668:1: (otherlv_0= 'consumes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )* )
            // InternalIDL.g:8668:3: otherlv_0= 'consumes' ( (lv_type_1_0= ruleScopedName ) ) ( (lv_name_2_0= RULE_ID ) ) ( (lv_comments_3_0= ruleIDLComment ) )*
            {
            otherlv_0=(Token)match(input,125,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getConsumesDclAccess().getConsumesKeyword_0());
                  
            }
            // InternalIDL.g:8672:1: ( (lv_type_1_0= ruleScopedName ) )
            // InternalIDL.g:8673:1: (lv_type_1_0= ruleScopedName )
            {
            // InternalIDL.g:8673:1: (lv_type_1_0= ruleScopedName )
            // InternalIDL.g:8674:3: lv_type_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConsumesDclAccess().getTypeScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConsumesDclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:8690:2: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:8691:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:8691:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:8692:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getConsumesDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getConsumesDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:8708:2: ( (lv_comments_3_0= ruleIDLComment ) )*
            loop123:
            do {
                int alt123=2;
                int LA123_0 = input.LA(1);

                if ( (LA123_0==RULE_SL_COMMENT) ) {
                    alt123=1;
                }


                switch (alt123) {
            	case 1 :
            	    // InternalIDL.g:8709:1: (lv_comments_3_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:8709:1: (lv_comments_3_0= ruleIDLComment )
            	    // InternalIDL.g:8710:3: lv_comments_3_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getConsumesDclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_3_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getConsumesDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop123;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 236, ruleConsumesDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConsumesDcl"


    // $ANTLR start "entryRuleComponentForwardDecl"
    // InternalIDL.g:8734:1: entryRuleComponentForwardDecl returns [EObject current=null] : iv_ruleComponentForwardDecl= ruleComponentForwardDecl EOF ;
    public final EObject entryRuleComponentForwardDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleComponentForwardDecl_StartIndex = input.index();
        EObject iv_ruleComponentForwardDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 237) ) { return current; }
            // InternalIDL.g:8735:2: (iv_ruleComponentForwardDecl= ruleComponentForwardDecl EOF )
            // InternalIDL.g:8736:2: iv_ruleComponentForwardDecl= ruleComponentForwardDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComponentForwardDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComponentForwardDecl=ruleComponentForwardDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComponentForwardDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 237, entryRuleComponentForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleComponentForwardDecl"


    // $ANTLR start "ruleComponentForwardDecl"
    // InternalIDL.g:8743:1: ruleComponentForwardDecl returns [EObject current=null] : (otherlv_0= 'component' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleComponentForwardDecl() throws RecognitionException {
        EObject current = null;
        int ruleComponentForwardDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 238) ) { return current; }
            // InternalIDL.g:8746:28: ( (otherlv_0= 'component' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:8747:1: (otherlv_0= 'component' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:8747:1: (otherlv_0= 'component' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalIDL.g:8747:3: otherlv_0= 'component' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,118,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getComponentForwardDeclAccess().getComponentKeyword_0());
                  
            }
            // InternalIDL.g:8751:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:8752:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:8752:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:8753:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getComponentForwardDeclAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getComponentForwardDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 238, ruleComponentForwardDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleComponentForwardDecl"


    // $ANTLR start "entryRuleHomeDecl"
    // InternalIDL.g:8777:1: entryRuleHomeDecl returns [EObject current=null] : iv_ruleHomeDecl= ruleHomeDecl EOF ;
    public final EObject entryRuleHomeDecl() throws RecognitionException {
        EObject current = null;
        int entryRuleHomeDecl_StartIndex = input.index();
        EObject iv_ruleHomeDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 239) ) { return current; }
            // InternalIDL.g:8778:2: (iv_ruleHomeDecl= ruleHomeDecl EOF )
            // InternalIDL.g:8779:2: iv_ruleHomeDecl= ruleHomeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHomeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHomeDecl=ruleHomeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHomeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 239, entryRuleHomeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleHomeDecl"


    // $ANTLR start "ruleHomeDecl"
    // InternalIDL.g:8786:1: ruleHomeDecl returns [EObject current=null] : (otherlv_0= 'home' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= 'manages' ( (lv_manages_10_0= ruleScopedName ) ) ( (lv_primary_key_11_0= rulePrimaryKeySpec ) )? otherlv_12= '{' ( (lv_export_13_0= ruleHomeExport ) )* otherlv_14= '}' ) ;
    public final EObject ruleHomeDecl() throws RecognitionException {
        EObject current = null;
        int ruleHomeDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_comments_1_0 = null;

        EObject lv_base_4_0 = null;

        EObject lv_supports_6_0 = null;

        EObject lv_supports_8_0 = null;

        EObject lv_manages_10_0 = null;

        EObject lv_primary_key_11_0 = null;

        EObject lv_export_13_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 240) ) { return current; }
            // InternalIDL.g:8789:28: ( (otherlv_0= 'home' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= 'manages' ( (lv_manages_10_0= ruleScopedName ) ) ( (lv_primary_key_11_0= rulePrimaryKeySpec ) )? otherlv_12= '{' ( (lv_export_13_0= ruleHomeExport ) )* otherlv_14= '}' ) )
            // InternalIDL.g:8790:1: (otherlv_0= 'home' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= 'manages' ( (lv_manages_10_0= ruleScopedName ) ) ( (lv_primary_key_11_0= rulePrimaryKeySpec ) )? otherlv_12= '{' ( (lv_export_13_0= ruleHomeExport ) )* otherlv_14= '}' )
            {
            // InternalIDL.g:8790:1: (otherlv_0= 'home' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= 'manages' ( (lv_manages_10_0= ruleScopedName ) ) ( (lv_primary_key_11_0= rulePrimaryKeySpec ) )? otherlv_12= '{' ( (lv_export_13_0= ruleHomeExport ) )* otherlv_14= '}' )
            // InternalIDL.g:8790:3: otherlv_0= 'home' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )? (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )? otherlv_9= 'manages' ( (lv_manages_10_0= ruleScopedName ) ) ( (lv_primary_key_11_0= rulePrimaryKeySpec ) )? otherlv_12= '{' ( (lv_export_13_0= ruleHomeExport ) )* otherlv_14= '}'
            {
            otherlv_0=(Token)match(input,126,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getHomeDeclAccess().getHomeKeyword_0());
                  
            }
            // InternalIDL.g:8794:1: ( (lv_comments_1_0= ruleIDLComment ) )*
            loop124:
            do {
                int alt124=2;
                int LA124_0 = input.LA(1);

                if ( (LA124_0==RULE_SL_COMMENT) ) {
                    alt124=1;
                }


                switch (alt124) {
            	case 1 :
            	    // InternalIDL.g:8795:1: (lv_comments_1_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:8795:1: (lv_comments_1_0= ruleIDLComment )
            	    // InternalIDL.g:8796:3: lv_comments_1_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getHomeDeclAccess().getCommentsIDLCommentParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_comments_1_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getHomeDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_1_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop124;
                }
            } while (true);

            // InternalIDL.g:8812:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:8813:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:8813:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:8814:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_94); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getHomeDeclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getHomeDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:8830:2: (otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) ) )?
            int alt125=2;
            int LA125_0 = input.LA(1);

            if ( (LA125_0==64) ) {
                alt125=1;
            }
            switch (alt125) {
                case 1 :
                    // InternalIDL.g:8830:4: otherlv_3= ':' ( (lv_base_4_0= ruleScopedName ) )
                    {
                    otherlv_3=(Token)match(input,64,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getHomeDeclAccess().getColonKeyword_3_0());
                          
                    }
                    // InternalIDL.g:8834:1: ( (lv_base_4_0= ruleScopedName ) )
                    // InternalIDL.g:8835:1: (lv_base_4_0= ruleScopedName )
                    {
                    // InternalIDL.g:8835:1: (lv_base_4_0= ruleScopedName )
                    // InternalIDL.g:8836:3: lv_base_4_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getHomeDeclAccess().getBaseScopedNameParserRuleCall_3_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_95);
                    lv_base_4_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getHomeDeclRule());
                      	        }
                             		set(
                             			current, 
                             			"base",
                              		lv_base_4_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalIDL.g:8852:4: (otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )* )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==119) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalIDL.g:8852:6: otherlv_5= 'supports' ( (lv_supports_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )*
                    {
                    otherlv_5=(Token)match(input,119,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getHomeDeclAccess().getSupportsKeyword_4_0());
                          
                    }
                    // InternalIDL.g:8856:1: ( (lv_supports_6_0= ruleScopedName ) )
                    // InternalIDL.g:8857:1: (lv_supports_6_0= ruleScopedName )
                    {
                    // InternalIDL.g:8857:1: (lv_supports_6_0= ruleScopedName )
                    // InternalIDL.g:8858:3: lv_supports_6_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getHomeDeclAccess().getSupportsScopedNameParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_96);
                    lv_supports_6_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getHomeDeclRule());
                      	        }
                             		add(
                             			current, 
                             			"supports",
                              		lv_supports_6_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIDL.g:8874:2: (otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) ) )*
                    loop126:
                    do {
                        int alt126=2;
                        int LA126_0 = input.LA(1);

                        if ( (LA126_0==65) ) {
                            alt126=1;
                        }


                        switch (alt126) {
                    	case 1 :
                    	    // InternalIDL.g:8874:4: otherlv_7= ',' ( (lv_supports_8_0= ruleScopedName ) )
                    	    {
                    	    otherlv_7=(Token)match(input,65,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getHomeDeclAccess().getCommaKeyword_4_2_0());
                    	          
                    	    }
                    	    // InternalIDL.g:8878:1: ( (lv_supports_8_0= ruleScopedName ) )
                    	    // InternalIDL.g:8879:1: (lv_supports_8_0= ruleScopedName )
                    	    {
                    	    // InternalIDL.g:8879:1: (lv_supports_8_0= ruleScopedName )
                    	    // InternalIDL.g:8880:3: lv_supports_8_0= ruleScopedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getHomeDeclAccess().getSupportsScopedNameParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_96);
                    	    lv_supports_8_0=ruleScopedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getHomeDeclRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"supports",
                    	              		lv_supports_8_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop126;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_9=(Token)match(input,127,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getHomeDeclAccess().getManagesKeyword_5());
                  
            }
            // InternalIDL.g:8900:1: ( (lv_manages_10_0= ruleScopedName ) )
            // InternalIDL.g:8901:1: (lv_manages_10_0= ruleScopedName )
            {
            // InternalIDL.g:8901:1: (lv_manages_10_0= ruleScopedName )
            // InternalIDL.g:8902:3: lv_manages_10_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getHomeDeclAccess().getManagesScopedNameParserRuleCall_6_0()); 
              	    
            }
            pushFollow(FOLLOW_97);
            lv_manages_10_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getHomeDeclRule());
              	        }
                     		set(
                     			current, 
                     			"manages",
                      		lv_manages_10_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:8918:2: ( (lv_primary_key_11_0= rulePrimaryKeySpec ) )?
            int alt128=2;
            int LA128_0 = input.LA(1);

            if ( (LA128_0==128) ) {
                alt128=1;
            }
            switch (alt128) {
                case 1 :
                    // InternalIDL.g:8919:1: (lv_primary_key_11_0= rulePrimaryKeySpec )
                    {
                    // InternalIDL.g:8919:1: (lv_primary_key_11_0= rulePrimaryKeySpec )
                    // InternalIDL.g:8920:3: lv_primary_key_11_0= rulePrimaryKeySpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getHomeDeclAccess().getPrimary_keyPrimaryKeySpecParserRuleCall_7_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_31);
                    lv_primary_key_11_0=rulePrimaryKeySpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getHomeDeclRule());
                      	        }
                             		set(
                             			current, 
                             			"primary_key",
                              		lv_primary_key_11_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.PrimaryKeySpec");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_12=(Token)match(input,59,FOLLOW_98); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_12, grammarAccess.getHomeDeclAccess().getLeftCurlyBracketKeyword_8());
                  
            }
            // InternalIDL.g:8940:1: ( (lv_export_13_0= ruleHomeExport ) )*
            loop129:
            do {
                int alt129=2;
                int LA129_0 = input.LA(1);

                if ( (LA129_0==RULE_ID||LA129_0==RULE_SL_COMMENT||LA129_0==20||(LA129_0>=24 && LA129_0<=28)||(LA129_0>=35 && LA129_0<=39)||LA129_0==42||(LA129_0>=54 && LA129_0<=55)||LA129_0==66||LA129_0==69||(LA129_0>=73 && LA129_0<=74)||(LA129_0>=76 && LA129_0<=90)||(LA129_0>=93 && LA129_0<=97)||LA129_0==101||LA129_0==105||(LA129_0>=129 && LA129_0<=130)) ) {
                    alt129=1;
                }


                switch (alt129) {
            	case 1 :
            	    // InternalIDL.g:8941:1: (lv_export_13_0= ruleHomeExport )
            	    {
            	    // InternalIDL.g:8941:1: (lv_export_13_0= ruleHomeExport )
            	    // InternalIDL.g:8942:3: lv_export_13_0= ruleHomeExport
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getHomeDeclAccess().getExportHomeExportParserRuleCall_9_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_export_13_0=ruleHomeExport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getHomeDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"export",
            	              		lv_export_13_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.HomeExport");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop129;
                }
            } while (true);

            otherlv_14=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_14, grammarAccess.getHomeDeclAccess().getRightCurlyBracketKeyword_10());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 240, ruleHomeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHomeDecl"


    // $ANTLR start "entryRulePrimaryKeySpec"
    // InternalIDL.g:8970:1: entryRulePrimaryKeySpec returns [EObject current=null] : iv_rulePrimaryKeySpec= rulePrimaryKeySpec EOF ;
    public final EObject entryRulePrimaryKeySpec() throws RecognitionException {
        EObject current = null;
        int entryRulePrimaryKeySpec_StartIndex = input.index();
        EObject iv_rulePrimaryKeySpec = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 241) ) { return current; }
            // InternalIDL.g:8971:2: (iv_rulePrimaryKeySpec= rulePrimaryKeySpec EOF )
            // InternalIDL.g:8972:2: iv_rulePrimaryKeySpec= rulePrimaryKeySpec EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryKeySpecRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimaryKeySpec=rulePrimaryKeySpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimaryKeySpec; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 241, entryRulePrimaryKeySpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePrimaryKeySpec"


    // $ANTLR start "rulePrimaryKeySpec"
    // InternalIDL.g:8979:1: rulePrimaryKeySpec returns [EObject current=null] : (otherlv_0= 'primarykey' ( (lv_key_1_0= ruleScopedName ) ) ) ;
    public final EObject rulePrimaryKeySpec() throws RecognitionException {
        EObject current = null;
        int rulePrimaryKeySpec_StartIndex = input.index();
        Token otherlv_0=null;
        EObject lv_key_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 242) ) { return current; }
            // InternalIDL.g:8982:28: ( (otherlv_0= 'primarykey' ( (lv_key_1_0= ruleScopedName ) ) ) )
            // InternalIDL.g:8983:1: (otherlv_0= 'primarykey' ( (lv_key_1_0= ruleScopedName ) ) )
            {
            // InternalIDL.g:8983:1: (otherlv_0= 'primarykey' ( (lv_key_1_0= ruleScopedName ) ) )
            // InternalIDL.g:8983:3: otherlv_0= 'primarykey' ( (lv_key_1_0= ruleScopedName ) )
            {
            otherlv_0=(Token)match(input,128,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPrimaryKeySpecAccess().getPrimarykeyKeyword_0());
                  
            }
            // InternalIDL.g:8987:1: ( (lv_key_1_0= ruleScopedName ) )
            // InternalIDL.g:8988:1: (lv_key_1_0= ruleScopedName )
            {
            // InternalIDL.g:8988:1: (lv_key_1_0= ruleScopedName )
            // InternalIDL.g:8989:3: lv_key_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPrimaryKeySpecAccess().getKeyScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_2);
            lv_key_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPrimaryKeySpecRule());
              	        }
                     		set(
                     			current, 
                     			"key",
                      		lv_key_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 242, rulePrimaryKeySpec_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePrimaryKeySpec"


    // $ANTLR start "entryRuleHomeExport"
    // InternalIDL.g:9013:1: entryRuleHomeExport returns [EObject current=null] : iv_ruleHomeExport= ruleHomeExport EOF ;
    public final EObject entryRuleHomeExport() throws RecognitionException {
        EObject current = null;
        int entryRuleHomeExport_StartIndex = input.index();
        EObject iv_ruleHomeExport = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 243) ) { return current; }
            // InternalIDL.g:9014:2: (iv_ruleHomeExport= ruleHomeExport EOF )
            // InternalIDL.g:9015:2: iv_ruleHomeExport= ruleHomeExport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHomeExportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHomeExport=ruleHomeExport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHomeExport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 243, entryRuleHomeExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleHomeExport"


    // $ANTLR start "ruleHomeExport"
    // InternalIDL.g:9022:1: ruleHomeExport returns [EObject current=null] : (this_Export_0= ruleExport | (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' ) | (this_FinderDcl_3= ruleFinderDcl otherlv_4= ';' ) ) ;
    public final EObject ruleHomeExport() throws RecognitionException {
        EObject current = null;
        int ruleHomeExport_StartIndex = input.index();
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_Export_0 = null;

        EObject this_FactoryDcl_1 = null;

        EObject this_FinderDcl_3 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 244) ) { return current; }
            // InternalIDL.g:9025:28: ( (this_Export_0= ruleExport | (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' ) | (this_FinderDcl_3= ruleFinderDcl otherlv_4= ';' ) ) )
            // InternalIDL.g:9026:1: (this_Export_0= ruleExport | (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' ) | (this_FinderDcl_3= ruleFinderDcl otherlv_4= ';' ) )
            {
            // InternalIDL.g:9026:1: (this_Export_0= ruleExport | (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' ) | (this_FinderDcl_3= ruleFinderDcl otherlv_4= ';' ) )
            int alt130=3;
            switch ( input.LA(1) ) {
            case RULE_SL_COMMENT:
                {
                int LA130_1 = input.LA(2);

                if ( (synpred228_InternalIDL()) ) {
                    alt130=1;
                }
                else if ( (synpred229_InternalIDL()) ) {
                    alt130=2;
                }
                else if ( (true) ) {
                    alt130=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 130, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
            case 20:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 42:
            case 54:
            case 55:
            case 66:
            case 69:
            case 73:
            case 74:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 101:
            case 105:
                {
                alt130=1;
                }
                break;
            case 129:
                {
                alt130=2;
                }
                break;
            case 130:
                {
                alt130=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 130, 0, input);

                throw nvae;
            }

            switch (alt130) {
                case 1 :
                    // InternalIDL.g:9027:2: this_Export_0= ruleExport
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getHomeExportAccess().getExportParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_Export_0=ruleExport();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Export_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:9039:6: (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' )
                    {
                    // InternalIDL.g:9039:6: (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' )
                    // InternalIDL.g:9040:2: this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getHomeExportAccess().getFactoryDclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_FactoryDcl_1=ruleFactoryDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FactoryDcl_1; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_2=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getHomeExportAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:9056:6: (this_FinderDcl_3= ruleFinderDcl otherlv_4= ';' )
                    {
                    // InternalIDL.g:9056:6: (this_FinderDcl_3= ruleFinderDcl otherlv_4= ';' )
                    // InternalIDL.g:9057:2: this_FinderDcl_3= ruleFinderDcl otherlv_4= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getHomeExportAccess().getFinderDclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_FinderDcl_3=ruleFinderDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FinderDcl_3; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getHomeExportAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 244, ruleHomeExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleHomeExport"


    // $ANTLR start "entryRuleFactoryDcl"
    // InternalIDL.g:9080:1: entryRuleFactoryDcl returns [EObject current=null] : iv_ruleFactoryDcl= ruleFactoryDcl EOF ;
    public final EObject entryRuleFactoryDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleFactoryDcl_StartIndex = input.index();
        EObject iv_ruleFactoryDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 245) ) { return current; }
            // InternalIDL.g:9081:2: (iv_ruleFactoryDcl= ruleFactoryDcl EOF )
            // InternalIDL.g:9082:2: iv_ruleFactoryDcl= ruleFactoryDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactoryDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactoryDcl=ruleFactoryDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactoryDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 245, entryRuleFactoryDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFactoryDcl"


    // $ANTLR start "ruleFactoryDcl"
    // InternalIDL.g:9089:1: ruleFactoryDcl returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'factory' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? ) ;
    public final EObject ruleFactoryDcl() throws RecognitionException {
        EObject current = null;
        int ruleFactoryDcl_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_4=null;
        EObject lv_comments_0_0 = null;

        EObject lv_params_3_0 = null;

        EObject lv_raises_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 246) ) { return current; }
            // InternalIDL.g:9092:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'factory' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? ) )
            // InternalIDL.g:9093:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'factory' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? )
            {
            // InternalIDL.g:9093:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'factory' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? )
            // InternalIDL.g:9093:2: ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'factory' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )?
            {
            // InternalIDL.g:9093:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop131:
            do {
                int alt131=2;
                int LA131_0 = input.LA(1);

                if ( (LA131_0==RULE_SL_COMMENT) ) {
                    alt131=1;
                }


                switch (alt131) {
            	case 1 :
            	    // InternalIDL.g:9094:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:9094:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:9095:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFactoryDclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_99);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFactoryDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);

            otherlv_1=(Token)match(input,129,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFactoryDclAccess().getFactoryKeyword_1());
                  
            }
            // InternalIDL.g:9115:1: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:9116:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:9116:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:9117:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getFactoryDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFactoryDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:9133:2: ( (lv_params_3_0= ruleParameterDecls ) )
            // InternalIDL.g:9134:1: (lv_params_3_0= ruleParameterDecls )
            {
            // InternalIDL.g:9134:1: (lv_params_3_0= ruleParameterDecls )
            // InternalIDL.g:9135:3: lv_params_3_0= ruleParameterDecls
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFactoryDclAccess().getParamsParameterDeclsParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_100);
            lv_params_3_0=ruleParameterDecls();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFactoryDclRule());
              	        }
                     		set(
                     			current, 
                     			"params",
                      		lv_params_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParameterDecls");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:9151:2: (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==70) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalIDL.g:9151:4: otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) )
                    {
                    otherlv_4=(Token)match(input,70,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFactoryDclAccess().getRaisesKeyword_4_0());
                          
                    }
                    // InternalIDL.g:9155:1: ( (lv_raises_5_0= ruleExceptionList ) )
                    // InternalIDL.g:9156:1: (lv_raises_5_0= ruleExceptionList )
                    {
                    // InternalIDL.g:9156:1: (lv_raises_5_0= ruleExceptionList )
                    // InternalIDL.g:9157:3: lv_raises_5_0= ruleExceptionList
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFactoryDclAccess().getRaisesExceptionListParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_raises_5_0=ruleExceptionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFactoryDclRule());
                      	        }
                             		set(
                             			current, 
                             			"raises",
                              		lv_raises_5_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ExceptionList");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 246, ruleFactoryDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFactoryDcl"


    // $ANTLR start "entryRuleFinderDcl"
    // InternalIDL.g:9181:1: entryRuleFinderDcl returns [EObject current=null] : iv_ruleFinderDcl= ruleFinderDcl EOF ;
    public final EObject entryRuleFinderDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleFinderDcl_StartIndex = input.index();
        EObject iv_ruleFinderDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 247) ) { return current; }
            // InternalIDL.g:9182:2: (iv_ruleFinderDcl= ruleFinderDcl EOF )
            // InternalIDL.g:9183:2: iv_ruleFinderDcl= ruleFinderDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFinderDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFinderDcl=ruleFinderDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFinderDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 247, entryRuleFinderDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFinderDcl"


    // $ANTLR start "ruleFinderDcl"
    // InternalIDL.g:9190:1: ruleFinderDcl returns [EObject current=null] : ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'finder' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? ) ;
    public final EObject ruleFinderDcl() throws RecognitionException {
        EObject current = null;
        int ruleFinderDcl_StartIndex = input.index();
        Token otherlv_1=null;
        Token lv_name_2_0=null;
        Token otherlv_4=null;
        EObject lv_comments_0_0 = null;

        EObject lv_params_3_0 = null;

        EObject lv_raises_5_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 248) ) { return current; }
            // InternalIDL.g:9193:28: ( ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'finder' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? ) )
            // InternalIDL.g:9194:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'finder' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? )
            {
            // InternalIDL.g:9194:1: ( ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'finder' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )? )
            // InternalIDL.g:9194:2: ( (lv_comments_0_0= ruleIDLComment ) )* otherlv_1= 'finder' ( (lv_name_2_0= RULE_ID ) ) ( (lv_params_3_0= ruleParameterDecls ) ) (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )?
            {
            // InternalIDL.g:9194:2: ( (lv_comments_0_0= ruleIDLComment ) )*
            loop133:
            do {
                int alt133=2;
                int LA133_0 = input.LA(1);

                if ( (LA133_0==RULE_SL_COMMENT) ) {
                    alt133=1;
                }


                switch (alt133) {
            	case 1 :
            	    // InternalIDL.g:9195:1: (lv_comments_0_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:9195:1: (lv_comments_0_0= ruleIDLComment )
            	    // InternalIDL.g:9196:3: lv_comments_0_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFinderDclAccess().getCommentsIDLCommentParserRuleCall_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_comments_0_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFinderDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_0_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop133;
                }
            } while (true);

            otherlv_1=(Token)match(input,130,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getFinderDclAccess().getFinderKeyword_1());
                  
            }
            // InternalIDL.g:9216:1: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:9217:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:9217:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:9218:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_43); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getFinderDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFinderDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:9234:2: ( (lv_params_3_0= ruleParameterDecls ) )
            // InternalIDL.g:9235:1: (lv_params_3_0= ruleParameterDecls )
            {
            // InternalIDL.g:9235:1: (lv_params_3_0= ruleParameterDecls )
            // InternalIDL.g:9236:3: lv_params_3_0= ruleParameterDecls
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFinderDclAccess().getParamsParameterDeclsParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_100);
            lv_params_3_0=ruleParameterDecls();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFinderDclRule());
              	        }
                     		set(
                     			current, 
                     			"params",
                      		lv_params_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParameterDecls");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:9252:2: (otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) ) )?
            int alt134=2;
            int LA134_0 = input.LA(1);

            if ( (LA134_0==70) ) {
                alt134=1;
            }
            switch (alt134) {
                case 1 :
                    // InternalIDL.g:9252:4: otherlv_4= 'raises' ( (lv_raises_5_0= ruleExceptionList ) )
                    {
                    otherlv_4=(Token)match(input,70,FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getFinderDclAccess().getRaisesKeyword_4_0());
                          
                    }
                    // InternalIDL.g:9256:1: ( (lv_raises_5_0= ruleExceptionList ) )
                    // InternalIDL.g:9257:1: (lv_raises_5_0= ruleExceptionList )
                    {
                    // InternalIDL.g:9257:1: (lv_raises_5_0= ruleExceptionList )
                    // InternalIDL.g:9258:3: lv_raises_5_0= ruleExceptionList
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getFinderDclAccess().getRaisesExceptionListParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_raises_5_0=ruleExceptionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getFinderDclRule());
                      	        }
                             		set(
                             			current, 
                             			"raises",
                              		lv_raises_5_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ExceptionList");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 248, ruleFinderDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFinderDcl"


    // $ANTLR start "entryRuleEvent"
    // InternalIDL.g:9282:1: entryRuleEvent returns [EObject current=null] : iv_ruleEvent= ruleEvent EOF ;
    public final EObject entryRuleEvent() throws RecognitionException {
        EObject current = null;
        int entryRuleEvent_StartIndex = input.index();
        EObject iv_ruleEvent = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 249) ) { return current; }
            // InternalIDL.g:9283:2: (iv_ruleEvent= ruleEvent EOF )
            // InternalIDL.g:9284:2: iv_ruleEvent= ruleEvent EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEvent=ruleEvent();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEvent; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 249, entryRuleEvent_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEvent"


    // $ANTLR start "ruleEvent"
    // InternalIDL.g:9291:1: ruleEvent returns [EObject current=null] : (this_EventDcl_0= ruleEventDcl | this_EventForwardDcl_1= ruleEventForwardDcl ) ;
    public final EObject ruleEvent() throws RecognitionException {
        EObject current = null;
        int ruleEvent_StartIndex = input.index();
        EObject this_EventDcl_0 = null;

        EObject this_EventForwardDcl_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 250) ) { return current; }
            // InternalIDL.g:9294:28: ( (this_EventDcl_0= ruleEventDcl | this_EventForwardDcl_1= ruleEventForwardDcl ) )
            // InternalIDL.g:9295:1: (this_EventDcl_0= ruleEventDcl | this_EventForwardDcl_1= ruleEventForwardDcl )
            {
            // InternalIDL.g:9295:1: (this_EventDcl_0= ruleEventDcl | this_EventForwardDcl_1= ruleEventForwardDcl )
            int alt135=2;
            switch ( input.LA(1) ) {
            case 131:
                {
                alt135=1;
                }
                break;
            case 61:
                {
                int LA135_2 = input.LA(2);

                if ( (LA135_2==132) ) {
                    int LA135_3 = input.LA(3);

                    if ( (LA135_3==RULE_ID) ) {
                        int LA135_4 = input.LA(4);

                        if ( (LA135_4==59||LA135_4==64||LA135_4==119) ) {
                            alt135=1;
                        }
                        else if ( (LA135_4==EOF||LA135_4==57) ) {
                            alt135=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 135, 4, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 135, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 2, input);

                    throw nvae;
                }
                }
                break;
            case 132:
                {
                int LA135_3 = input.LA(2);

                if ( (LA135_3==RULE_ID) ) {
                    int LA135_4 = input.LA(3);

                    if ( (LA135_4==59||LA135_4==64||LA135_4==119) ) {
                        alt135=1;
                    }
                    else if ( (LA135_4==EOF||LA135_4==57) ) {
                        alt135=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 135, 4, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 135, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }

            switch (alt135) {
                case 1 :
                    // InternalIDL.g:9296:2: this_EventDcl_0= ruleEventDcl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEventAccess().getEventDclParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EventDcl_0=ruleEventDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EventDcl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:9309:2: this_EventForwardDcl_1= ruleEventForwardDcl
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getEventAccess().getEventForwardDclParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EventForwardDcl_1=ruleEventForwardDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EventForwardDcl_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 250, ruleEvent_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEvent"


    // $ANTLR start "entryRuleEventDcl"
    // InternalIDL.g:9328:1: entryRuleEventDcl returns [EObject current=null] : iv_ruleEventDcl= ruleEventDcl EOF ;
    public final EObject entryRuleEventDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleEventDcl_StartIndex = input.index();
        EObject iv_ruleEventDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 251) ) { return current; }
            // InternalIDL.g:9329:2: (iv_ruleEventDcl= ruleEventDcl EOF )
            // InternalIDL.g:9330:2: iv_ruleEventDcl= ruleEventDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventDcl=ruleEventDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 251, entryRuleEventDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEventDcl"


    // $ANTLR start "ruleEventDcl"
    // InternalIDL.g:9337:1: ruleEventDcl returns [EObject current=null] : ( ( ( (lv_isCustom_0_0= 'custom' ) ) | ( (lv_isAbstract_1_0= 'abstract' ) ) )? otherlv_2= 'eventtype' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_isTruncatable_5_0= 'truncatable' ) )? ( (lv_base_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )* )? (otherlv_9= 'supports' ( (lv_supports_10_0= ruleScopedName ) ) (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )* )? otherlv_13= '{' ( ( (lv_export_14_0= ruleExport ) ) | ( (lv_member_15_0= ruleStateMember ) ) )* otherlv_16= '}' ) ;
    public final EObject ruleEventDcl() throws RecognitionException {
        EObject current = null;
        int ruleEventDcl_StartIndex = input.index();
        Token lv_isCustom_0_0=null;
        Token lv_isAbstract_1_0=null;
        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token lv_isTruncatable_5_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        EObject lv_base_6_0 = null;

        EObject lv_base_8_0 = null;

        EObject lv_supports_10_0 = null;

        EObject lv_supports_12_0 = null;

        EObject lv_export_14_0 = null;

        EObject lv_member_15_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 252) ) { return current; }
            // InternalIDL.g:9340:28: ( ( ( ( (lv_isCustom_0_0= 'custom' ) ) | ( (lv_isAbstract_1_0= 'abstract' ) ) )? otherlv_2= 'eventtype' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_isTruncatable_5_0= 'truncatable' ) )? ( (lv_base_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )* )? (otherlv_9= 'supports' ( (lv_supports_10_0= ruleScopedName ) ) (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )* )? otherlv_13= '{' ( ( (lv_export_14_0= ruleExport ) ) | ( (lv_member_15_0= ruleStateMember ) ) )* otherlv_16= '}' ) )
            // InternalIDL.g:9341:1: ( ( ( (lv_isCustom_0_0= 'custom' ) ) | ( (lv_isAbstract_1_0= 'abstract' ) ) )? otherlv_2= 'eventtype' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_isTruncatable_5_0= 'truncatable' ) )? ( (lv_base_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )* )? (otherlv_9= 'supports' ( (lv_supports_10_0= ruleScopedName ) ) (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )* )? otherlv_13= '{' ( ( (lv_export_14_0= ruleExport ) ) | ( (lv_member_15_0= ruleStateMember ) ) )* otherlv_16= '}' )
            {
            // InternalIDL.g:9341:1: ( ( ( (lv_isCustom_0_0= 'custom' ) ) | ( (lv_isAbstract_1_0= 'abstract' ) ) )? otherlv_2= 'eventtype' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_isTruncatable_5_0= 'truncatable' ) )? ( (lv_base_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )* )? (otherlv_9= 'supports' ( (lv_supports_10_0= ruleScopedName ) ) (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )* )? otherlv_13= '{' ( ( (lv_export_14_0= ruleExport ) ) | ( (lv_member_15_0= ruleStateMember ) ) )* otherlv_16= '}' )
            // InternalIDL.g:9341:2: ( ( (lv_isCustom_0_0= 'custom' ) ) | ( (lv_isAbstract_1_0= 'abstract' ) ) )? otherlv_2= 'eventtype' ( (lv_name_3_0= RULE_ID ) ) (otherlv_4= ':' ( (lv_isTruncatable_5_0= 'truncatable' ) )? ( (lv_base_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )* )? (otherlv_9= 'supports' ( (lv_supports_10_0= ruleScopedName ) ) (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )* )? otherlv_13= '{' ( ( (lv_export_14_0= ruleExport ) ) | ( (lv_member_15_0= ruleStateMember ) ) )* otherlv_16= '}'
            {
            // InternalIDL.g:9341:2: ( ( (lv_isCustom_0_0= 'custom' ) ) | ( (lv_isAbstract_1_0= 'abstract' ) ) )?
            int alt136=3;
            int LA136_0 = input.LA(1);

            if ( (LA136_0==131) ) {
                alt136=1;
            }
            else if ( (LA136_0==61) ) {
                alt136=2;
            }
            switch (alt136) {
                case 1 :
                    // InternalIDL.g:9341:3: ( (lv_isCustom_0_0= 'custom' ) )
                    {
                    // InternalIDL.g:9341:3: ( (lv_isCustom_0_0= 'custom' ) )
                    // InternalIDL.g:9342:1: (lv_isCustom_0_0= 'custom' )
                    {
                    // InternalIDL.g:9342:1: (lv_isCustom_0_0= 'custom' )
                    // InternalIDL.g:9343:3: lv_isCustom_0_0= 'custom'
                    {
                    lv_isCustom_0_0=(Token)match(input,131,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isCustom_0_0, grammarAccess.getEventDclAccess().getIsCustomCustomKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEventDclRule());
                      	        }
                             		setWithLastConsumed(current, "isCustom", true, "custom");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:9357:6: ( (lv_isAbstract_1_0= 'abstract' ) )
                    {
                    // InternalIDL.g:9357:6: ( (lv_isAbstract_1_0= 'abstract' ) )
                    // InternalIDL.g:9358:1: (lv_isAbstract_1_0= 'abstract' )
                    {
                    // InternalIDL.g:9358:1: (lv_isAbstract_1_0= 'abstract' )
                    // InternalIDL.g:9359:3: lv_isAbstract_1_0= 'abstract'
                    {
                    lv_isAbstract_1_0=(Token)match(input,61,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAbstract_1_0, grammarAccess.getEventDclAccess().getIsAbstractAbstractKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEventDclRule());
                      	        }
                             		setWithLastConsumed(current, "isAbstract", true, "abstract");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,132,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getEventDclAccess().getEventtypeKeyword_1());
                  
            }
            // InternalIDL.g:9376:1: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:9377:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:9377:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:9378:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getEventDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEventDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:9394:2: (otherlv_4= ':' ( (lv_isTruncatable_5_0= 'truncatable' ) )? ( (lv_base_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )* )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==64) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // InternalIDL.g:9394:4: otherlv_4= ':' ( (lv_isTruncatable_5_0= 'truncatable' ) )? ( (lv_base_6_0= ruleScopedName ) ) (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )*
                    {
                    otherlv_4=(Token)match(input,64,FOLLOW_103); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_4, grammarAccess.getEventDclAccess().getColonKeyword_3_0());
                          
                    }
                    // InternalIDL.g:9398:1: ( (lv_isTruncatable_5_0= 'truncatable' ) )?
                    int alt137=2;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==133) ) {
                        alt137=1;
                    }
                    switch (alt137) {
                        case 1 :
                            // InternalIDL.g:9399:1: (lv_isTruncatable_5_0= 'truncatable' )
                            {
                            // InternalIDL.g:9399:1: (lv_isTruncatable_5_0= 'truncatable' )
                            // InternalIDL.g:9400:3: lv_isTruncatable_5_0= 'truncatable'
                            {
                            lv_isTruncatable_5_0=(Token)match(input,133,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                                      newLeafNode(lv_isTruncatable_5_0, grammarAccess.getEventDclAccess().getIsTruncatableTruncatableKeyword_3_1_0());
                                  
                            }
                            if ( state.backtracking==0 ) {

                              	        if (current==null) {
                              	            current = createModelElement(grammarAccess.getEventDclRule());
                              	        }
                                     		setWithLastConsumed(current, "isTruncatable", true, "truncatable");
                              	    
                            }

                            }


                            }
                            break;

                    }

                    // InternalIDL.g:9413:3: ( (lv_base_6_0= ruleScopedName ) )
                    // InternalIDL.g:9414:1: (lv_base_6_0= ruleScopedName )
                    {
                    // InternalIDL.g:9414:1: (lv_base_6_0= ruleScopedName )
                    // InternalIDL.g:9415:3: lv_base_6_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEventDclAccess().getBaseScopedNameParserRuleCall_3_2_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_104);
                    lv_base_6_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEventDclRule());
                      	        }
                             		add(
                             			current, 
                             			"base",
                              		lv_base_6_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIDL.g:9431:2: (otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) ) )*
                    loop138:
                    do {
                        int alt138=2;
                        int LA138_0 = input.LA(1);

                        if ( (LA138_0==65) ) {
                            alt138=1;
                        }


                        switch (alt138) {
                    	case 1 :
                    	    // InternalIDL.g:9431:4: otherlv_7= ',' ( (lv_base_8_0= ruleScopedName ) )
                    	    {
                    	    otherlv_7=(Token)match(input,65,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_7, grammarAccess.getEventDclAccess().getCommaKeyword_3_3_0());
                    	          
                    	    }
                    	    // InternalIDL.g:9435:1: ( (lv_base_8_0= ruleScopedName ) )
                    	    // InternalIDL.g:9436:1: (lv_base_8_0= ruleScopedName )
                    	    {
                    	    // InternalIDL.g:9436:1: (lv_base_8_0= ruleScopedName )
                    	    // InternalIDL.g:9437:3: lv_base_8_0= ruleScopedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getEventDclAccess().getBaseScopedNameParserRuleCall_3_3_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_104);
                    	    lv_base_8_0=ruleScopedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEventDclRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"base",
                    	              		lv_base_8_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop138;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalIDL.g:9453:6: (otherlv_9= 'supports' ( (lv_supports_10_0= ruleScopedName ) ) (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )* )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==119) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalIDL.g:9453:8: otherlv_9= 'supports' ( (lv_supports_10_0= ruleScopedName ) ) (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )*
                    {
                    otherlv_9=(Token)match(input,119,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getEventDclAccess().getSupportsKeyword_4_0());
                          
                    }
                    // InternalIDL.g:9457:1: ( (lv_supports_10_0= ruleScopedName ) )
                    // InternalIDL.g:9458:1: (lv_supports_10_0= ruleScopedName )
                    {
                    // InternalIDL.g:9458:1: (lv_supports_10_0= ruleScopedName )
                    // InternalIDL.g:9459:3: lv_supports_10_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getEventDclAccess().getSupportsScopedNameParserRuleCall_4_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_91);
                    lv_supports_10_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getEventDclRule());
                      	        }
                             		add(
                             			current, 
                             			"supports",
                              		lv_supports_10_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }

                    // InternalIDL.g:9475:2: (otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) ) )*
                    loop140:
                    do {
                        int alt140=2;
                        int LA140_0 = input.LA(1);

                        if ( (LA140_0==65) ) {
                            alt140=1;
                        }


                        switch (alt140) {
                    	case 1 :
                    	    // InternalIDL.g:9475:4: otherlv_11= ',' ( (lv_supports_12_0= ruleScopedName ) )
                    	    {
                    	    otherlv_11=(Token)match(input,65,FOLLOW_15); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	          	newLeafNode(otherlv_11, grammarAccess.getEventDclAccess().getCommaKeyword_4_2_0());
                    	          
                    	    }
                    	    // InternalIDL.g:9479:1: ( (lv_supports_12_0= ruleScopedName ) )
                    	    // InternalIDL.g:9480:1: (lv_supports_12_0= ruleScopedName )
                    	    {
                    	    // InternalIDL.g:9480:1: (lv_supports_12_0= ruleScopedName )
                    	    // InternalIDL.g:9481:3: lv_supports_12_0= ruleScopedName
                    	    {
                    	    if ( state.backtracking==0 ) {
                    	       
                    	      	        newCompositeNode(grammarAccess.getEventDclAccess().getSupportsScopedNameParserRuleCall_4_2_1_0()); 
                    	      	    
                    	    }
                    	    pushFollow(FOLLOW_91);
                    	    lv_supports_12_0=ruleScopedName();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      	        if (current==null) {
                    	      	            current = createModelElementForParent(grammarAccess.getEventDclRule());
                    	      	        }
                    	             		add(
                    	             			current, 
                    	             			"supports",
                    	              		lv_supports_12_0, 
                    	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                    	      	        afterParserOrEnumRuleCall();
                    	      	    
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop140;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_13=(Token)match(input,59,FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_13, grammarAccess.getEventDclAccess().getLeftCurlyBracketKeyword_5());
                  
            }
            // InternalIDL.g:9501:1: ( ( (lv_export_14_0= ruleExport ) ) | ( (lv_member_15_0= ruleStateMember ) ) )*
            loop142:
            do {
                int alt142=3;
                int LA142_0 = input.LA(1);

                if ( (LA142_0==RULE_ID||LA142_0==RULE_SL_COMMENT||LA142_0==20||(LA142_0>=24 && LA142_0<=28)||(LA142_0>=35 && LA142_0<=39)||LA142_0==42||(LA142_0>=54 && LA142_0<=55)||LA142_0==66||LA142_0==69||(LA142_0>=73 && LA142_0<=74)||(LA142_0>=76 && LA142_0<=90)||(LA142_0>=93 && LA142_0<=97)||LA142_0==101||LA142_0==105) ) {
                    alt142=1;
                }
                else if ( ((LA142_0>=134 && LA142_0<=135)) ) {
                    alt142=2;
                }


                switch (alt142) {
            	case 1 :
            	    // InternalIDL.g:9501:2: ( (lv_export_14_0= ruleExport ) )
            	    {
            	    // InternalIDL.g:9501:2: ( (lv_export_14_0= ruleExport ) )
            	    // InternalIDL.g:9502:1: (lv_export_14_0= ruleExport )
            	    {
            	    // InternalIDL.g:9502:1: (lv_export_14_0= ruleExport )
            	    // InternalIDL.g:9503:3: lv_export_14_0= ruleExport
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEventDclAccess().getExportExportParserRuleCall_6_0_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_export_14_0=ruleExport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEventDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"export",
            	              		lv_export_14_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.Export");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalIDL.g:9520:6: ( (lv_member_15_0= ruleStateMember ) )
            	    {
            	    // InternalIDL.g:9520:6: ( (lv_member_15_0= ruleStateMember ) )
            	    // InternalIDL.g:9521:1: (lv_member_15_0= ruleStateMember )
            	    {
            	    // InternalIDL.g:9521:1: (lv_member_15_0= ruleStateMember )
            	    // InternalIDL.g:9522:3: lv_member_15_0= ruleStateMember
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getEventDclAccess().getMemberStateMemberParserRuleCall_6_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_member_15_0=ruleStateMember();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getEventDclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"member",
            	              		lv_member_15_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.StateMember");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);

            otherlv_16=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_16, grammarAccess.getEventDclAccess().getRightCurlyBracketKeyword_7());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 252, ruleEventDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEventDcl"


    // $ANTLR start "entryRuleStateMember"
    // InternalIDL.g:9550:1: entryRuleStateMember returns [EObject current=null] : iv_ruleStateMember= ruleStateMember EOF ;
    public final EObject entryRuleStateMember() throws RecognitionException {
        EObject current = null;
        int entryRuleStateMember_StartIndex = input.index();
        EObject iv_ruleStateMember = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 253) ) { return current; }
            // InternalIDL.g:9551:2: (iv_ruleStateMember= ruleStateMember EOF )
            // InternalIDL.g:9552:2: iv_ruleStateMember= ruleStateMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateMemberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStateMember=ruleStateMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStateMember; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 253, entryRuleStateMember_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStateMember"


    // $ANTLR start "ruleStateMember"
    // InternalIDL.g:9559:1: ruleStateMember returns [EObject current=null] : ( ( ( (lv_isPublic_0_0= 'public' ) ) | otherlv_1= 'private' ) ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) otherlv_4= ';' ) ;
    public final EObject ruleStateMember() throws RecognitionException {
        EObject current = null;
        int ruleStateMember_StartIndex = input.index();
        Token lv_isPublic_0_0=null;
        Token otherlv_1=null;
        Token lv_names_3_0=null;
        Token otherlv_4=null;
        EObject lv_type_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 254) ) { return current; }
            // InternalIDL.g:9562:28: ( ( ( ( (lv_isPublic_0_0= 'public' ) ) | otherlv_1= 'private' ) ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) otherlv_4= ';' ) )
            // InternalIDL.g:9563:1: ( ( ( (lv_isPublic_0_0= 'public' ) ) | otherlv_1= 'private' ) ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) otherlv_4= ';' )
            {
            // InternalIDL.g:9563:1: ( ( ( (lv_isPublic_0_0= 'public' ) ) | otherlv_1= 'private' ) ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) otherlv_4= ';' )
            // InternalIDL.g:9563:2: ( ( (lv_isPublic_0_0= 'public' ) ) | otherlv_1= 'private' ) ( (lv_type_2_0= ruleParamTypeSpec ) ) ( (lv_names_3_0= RULE_ID ) ) otherlv_4= ';'
            {
            // InternalIDL.g:9563:2: ( ( (lv_isPublic_0_0= 'public' ) ) | otherlv_1= 'private' )
            int alt143=2;
            int LA143_0 = input.LA(1);

            if ( (LA143_0==134) ) {
                alt143=1;
            }
            else if ( (LA143_0==135) ) {
                alt143=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 143, 0, input);

                throw nvae;
            }
            switch (alt143) {
                case 1 :
                    // InternalIDL.g:9563:3: ( (lv_isPublic_0_0= 'public' ) )
                    {
                    // InternalIDL.g:9563:3: ( (lv_isPublic_0_0= 'public' ) )
                    // InternalIDL.g:9564:1: (lv_isPublic_0_0= 'public' )
                    {
                    // InternalIDL.g:9564:1: (lv_isPublic_0_0= 'public' )
                    // InternalIDL.g:9565:3: lv_isPublic_0_0= 'public'
                    {
                    lv_isPublic_0_0=(Token)match(input,134,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isPublic_0_0, grammarAccess.getStateMemberAccess().getIsPublicPublicKeyword_0_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getStateMemberRule());
                      	        }
                             		setWithLastConsumed(current, "isPublic", true, "public");
                      	    
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:9579:7: otherlv_1= 'private'
                    {
                    otherlv_1=(Token)match(input,135,FOLLOW_41); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getStateMemberAccess().getPrivateKeyword_0_1());
                          
                    }

                    }
                    break;

            }

            // InternalIDL.g:9583:2: ( (lv_type_2_0= ruleParamTypeSpec ) )
            // InternalIDL.g:9584:1: (lv_type_2_0= ruleParamTypeSpec )
            {
            // InternalIDL.g:9584:1: (lv_type_2_0= ruleParamTypeSpec )
            // InternalIDL.g:9585:3: lv_type_2_0= ruleParamTypeSpec
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getStateMemberAccess().getTypeParamTypeSpecParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_2_0=ruleParamTypeSpec();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getStateMemberRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ParamTypeSpec");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:9601:2: ( (lv_names_3_0= RULE_ID ) )
            // InternalIDL.g:9602:1: (lv_names_3_0= RULE_ID )
            {
            // InternalIDL.g:9602:1: (lv_names_3_0= RULE_ID )
            // InternalIDL.g:9603:3: lv_names_3_0= RULE_ID
            {
            lv_names_3_0=(Token)match(input,RULE_ID,FOLLOW_28); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_names_3_0, grammarAccess.getStateMemberAccess().getNamesIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getStateMemberRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"names",
                      		lv_names_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            otherlv_4=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getStateMemberAccess().getSemicolonKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 254, ruleStateMember_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStateMember"


    // $ANTLR start "entryRuleEventForwardDcl"
    // InternalIDL.g:9631:1: entryRuleEventForwardDcl returns [EObject current=null] : iv_ruleEventForwardDcl= ruleEventForwardDcl EOF ;
    public final EObject entryRuleEventForwardDcl() throws RecognitionException {
        EObject current = null;
        int entryRuleEventForwardDcl_StartIndex = input.index();
        EObject iv_ruleEventForwardDcl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 255) ) { return current; }
            // InternalIDL.g:9632:2: (iv_ruleEventForwardDcl= ruleEventForwardDcl EOF )
            // InternalIDL.g:9633:2: iv_ruleEventForwardDcl= ruleEventForwardDcl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventForwardDclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventForwardDcl=ruleEventForwardDcl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventForwardDcl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 255, entryRuleEventForwardDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEventForwardDcl"


    // $ANTLR start "ruleEventForwardDcl"
    // InternalIDL.g:9640:1: ruleEventForwardDcl returns [EObject current=null] : ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'eventtype' ( (lv_name_2_0= RULE_ID ) ) ) ;
    public final EObject ruleEventForwardDcl() throws RecognitionException {
        EObject current = null;
        int ruleEventForwardDcl_StartIndex = input.index();
        Token lv_isAbstract_0_0=null;
        Token otherlv_1=null;
        Token lv_name_2_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 256) ) { return current; }
            // InternalIDL.g:9643:28: ( ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'eventtype' ( (lv_name_2_0= RULE_ID ) ) ) )
            // InternalIDL.g:9644:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'eventtype' ( (lv_name_2_0= RULE_ID ) ) )
            {
            // InternalIDL.g:9644:1: ( ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'eventtype' ( (lv_name_2_0= RULE_ID ) ) )
            // InternalIDL.g:9644:2: ( (lv_isAbstract_0_0= 'abstract' ) )? otherlv_1= 'eventtype' ( (lv_name_2_0= RULE_ID ) )
            {
            // InternalIDL.g:9644:2: ( (lv_isAbstract_0_0= 'abstract' ) )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==61) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalIDL.g:9645:1: (lv_isAbstract_0_0= 'abstract' )
                    {
                    // InternalIDL.g:9645:1: (lv_isAbstract_0_0= 'abstract' )
                    // InternalIDL.g:9646:3: lv_isAbstract_0_0= 'abstract'
                    {
                    lv_isAbstract_0_0=(Token)match(input,61,FOLLOW_102); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isAbstract_0_0, grammarAccess.getEventForwardDclAccess().getIsAbstractAbstractKeyword_0_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getEventForwardDclRule());
                      	        }
                             		setWithLastConsumed(current, "isAbstract", true, "abstract");
                      	    
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,132,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEventForwardDclAccess().getEventtypeKeyword_1());
                  
            }
            // InternalIDL.g:9663:1: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:9664:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:9664:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:9665:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getEventForwardDclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getEventForwardDclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 256, ruleEventForwardDcl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEventForwardDcl"


    // $ANTLR start "entryRulePortTypeDecl"
    // InternalIDL.g:9689:1: entryRulePortTypeDecl returns [EObject current=null] : iv_rulePortTypeDecl= rulePortTypeDecl EOF ;
    public final EObject entryRulePortTypeDecl() throws RecognitionException {
        EObject current = null;
        int entryRulePortTypeDecl_StartIndex = input.index();
        EObject iv_rulePortTypeDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 257) ) { return current; }
            // InternalIDL.g:9690:2: (iv_rulePortTypeDecl= rulePortTypeDecl EOF )
            // InternalIDL.g:9691:2: iv_rulePortTypeDecl= rulePortTypeDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPortTypeDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePortTypeDecl=rulePortTypeDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePortTypeDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 257, entryRulePortTypeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePortTypeDecl"


    // $ANTLR start "rulePortTypeDecl"
    // InternalIDL.g:9698:1: rulePortTypeDecl returns [EObject current=null] : (otherlv_0= 'porttype' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_exports_4_0= rulePortExport ) )+ otherlv_5= '}' ) ;
    public final EObject rulePortTypeDecl() throws RecognitionException {
        EObject current = null;
        int rulePortTypeDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_comments_1_0 = null;

        EObject lv_exports_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 258) ) { return current; }
            // InternalIDL.g:9701:28: ( (otherlv_0= 'porttype' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_exports_4_0= rulePortExport ) )+ otherlv_5= '}' ) )
            // InternalIDL.g:9702:1: (otherlv_0= 'porttype' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_exports_4_0= rulePortExport ) )+ otherlv_5= '}' )
            {
            // InternalIDL.g:9702:1: (otherlv_0= 'porttype' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_exports_4_0= rulePortExport ) )+ otherlv_5= '}' )
            // InternalIDL.g:9702:3: otherlv_0= 'porttype' ( (lv_comments_1_0= ruleIDLComment ) )* ( (lv_name_2_0= RULE_ID ) ) otherlv_3= '{' ( (lv_exports_4_0= rulePortExport ) )+ otherlv_5= '}'
            {
            otherlv_0=(Token)match(input,136,FOLLOW_74); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getPortTypeDeclAccess().getPorttypeKeyword_0());
                  
            }
            // InternalIDL.g:9706:1: ( (lv_comments_1_0= ruleIDLComment ) )*
            loop145:
            do {
                int alt145=2;
                int LA145_0 = input.LA(1);

                if ( (LA145_0==RULE_SL_COMMENT) ) {
                    alt145=1;
                }


                switch (alt145) {
            	case 1 :
            	    // InternalIDL.g:9707:1: (lv_comments_1_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:9707:1: (lv_comments_1_0= ruleIDLComment )
            	    // InternalIDL.g:9708:3: lv_comments_1_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPortTypeDeclAccess().getCommentsIDLCommentParserRuleCall_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_74);
            	    lv_comments_1_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPortTypeDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_1_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop145;
                }
            } while (true);

            // InternalIDL.g:9724:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalIDL.g:9725:1: (lv_name_2_0= RULE_ID )
            {
            // InternalIDL.g:9725:1: (lv_name_2_0= RULE_ID )
            // InternalIDL.g:9726:3: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_2_0, grammarAccess.getPortTypeDeclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPortTypeDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            otherlv_3=(Token)match(input,59,FOLLOW_106); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getPortTypeDeclAccess().getLeftCurlyBracketKeyword_3());
                  
            }
            // InternalIDL.g:9746:1: ( (lv_exports_4_0= rulePortExport ) )+
            int cnt146=0;
            loop146:
            do {
                int alt146=2;
                int LA146_0 = input.LA(1);

                if ( (LA146_0==RULE_SL_COMMENT||LA146_0==66||LA146_0==69||(LA146_0>=120 && LA146_0<=121)) ) {
                    alt146=1;
                }


                switch (alt146) {
            	case 1 :
            	    // InternalIDL.g:9747:1: (lv_exports_4_0= rulePortExport )
            	    {
            	    // InternalIDL.g:9747:1: (lv_exports_4_0= rulePortExport )
            	    // InternalIDL.g:9748:3: lv_exports_4_0= rulePortExport
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPortTypeDeclAccess().getExportsPortExportParserRuleCall_4_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_exports_4_0=rulePortExport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPortTypeDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"exports",
            	              		lv_exports_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.PortExport");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt146 >= 1 ) break loop146;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(146, input);
                        throw eee;
                }
                cnt146++;
            } while (true);

            otherlv_5=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_5, grammarAccess.getPortTypeDeclAccess().getRightCurlyBracketKeyword_5());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 258, rulePortTypeDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePortTypeDecl"


    // $ANTLR start "entryRulePortExport"
    // InternalIDL.g:9776:1: entryRulePortExport returns [EObject current=null] : iv_rulePortExport= rulePortExport EOF ;
    public final EObject entryRulePortExport() throws RecognitionException {
        EObject current = null;
        int entryRulePortExport_StartIndex = input.index();
        EObject iv_rulePortExport = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 259) ) { return current; }
            // InternalIDL.g:9777:2: (iv_rulePortExport= rulePortExport EOF )
            // InternalIDL.g:9778:2: iv_rulePortExport= rulePortExport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPortExportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePortExport=rulePortExport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePortExport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 259, entryRulePortExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePortExport"


    // $ANTLR start "rulePortExport"
    // InternalIDL.g:9785:1: rulePortExport returns [EObject current=null] : ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' ) | this_IDLComment_6= ruleIDLComment ) ;
    public final EObject rulePortExport() throws RecognitionException {
        EObject current = null;
        int rulePortExport_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject this_ProvidesDcl_0 = null;

        EObject this_UsesDcl_2 = null;

        EObject this_AttrDecl_4 = null;

        EObject this_IDLComment_6 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 260) ) { return current; }
            // InternalIDL.g:9788:28: ( ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' ) | this_IDLComment_6= ruleIDLComment ) )
            // InternalIDL.g:9789:1: ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' ) | this_IDLComment_6= ruleIDLComment )
            {
            // InternalIDL.g:9789:1: ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' ) | this_IDLComment_6= ruleIDLComment )
            int alt147=4;
            switch ( input.LA(1) ) {
            case 120:
                {
                alt147=1;
                }
                break;
            case 121:
                {
                alt147=2;
                }
                break;
            case RULE_SL_COMMENT:
                {
                int LA147_3 = input.LA(2);

                if ( (synpred250_InternalIDL()) ) {
                    alt147=3;
                }
                else if ( (true) ) {
                    alt147=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 147, 3, input);

                    throw nvae;
                }
                }
                break;
            case 66:
            case 69:
                {
                alt147=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }

            switch (alt147) {
                case 1 :
                    // InternalIDL.g:9789:2: (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' )
                    {
                    // InternalIDL.g:9789:2: (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' )
                    // InternalIDL.g:9790:2: this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPortExportAccess().getProvidesDclParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ProvidesDcl_0=ruleProvidesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ProvidesDcl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getPortExportAccess().getSemicolonKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:9806:6: (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' )
                    {
                    // InternalIDL.g:9806:6: (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' )
                    // InternalIDL.g:9807:2: this_UsesDcl_2= ruleUsesDcl otherlv_3= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPortExportAccess().getUsesDclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_UsesDcl_2=ruleUsesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UsesDcl_2; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getPortExportAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:9823:6: (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' )
                    {
                    // InternalIDL.g:9823:6: (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' )
                    // InternalIDL.g:9824:2: this_AttrDecl_4= ruleAttrDecl otherlv_5= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPortExportAccess().getAttrDeclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_AttrDecl_4=ruleAttrDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AttrDecl_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getPortExportAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:9841:2: this_IDLComment_6= ruleIDLComment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getPortExportAccess().getIDLCommentParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IDLComment_6=ruleIDLComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IDLComment_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 260, rulePortExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePortExport"


    // $ANTLR start "entryRulePortDecl"
    // InternalIDL.g:9860:1: entryRulePortDecl returns [EObject current=null] : iv_rulePortDecl= rulePortDecl EOF ;
    public final EObject entryRulePortDecl() throws RecognitionException {
        EObject current = null;
        int entryRulePortDecl_StartIndex = input.index();
        EObject iv_rulePortDecl = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 261) ) { return current; }
            // InternalIDL.g:9861:2: (iv_rulePortDecl= rulePortDecl EOF )
            // InternalIDL.g:9862:2: iv_rulePortDecl= rulePortDecl EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPortDeclRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePortDecl=rulePortDecl();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePortDecl; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 261, entryRulePortDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRulePortDecl"


    // $ANTLR start "rulePortDecl"
    // InternalIDL.g:9869:1: rulePortDecl returns [EObject current=null] : ( (otherlv_0= 'port' | ( (lv_isMirror_1_0= 'mirrorport' ) ) ) ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* ) ;
    public final EObject rulePortDecl() throws RecognitionException {
        EObject current = null;
        int rulePortDecl_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_isMirror_1_0=null;
        Token lv_name_3_0=null;
        EObject lv_type_2_0 = null;

        EObject lv_comments_4_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 262) ) { return current; }
            // InternalIDL.g:9872:28: ( ( (otherlv_0= 'port' | ( (lv_isMirror_1_0= 'mirrorport' ) ) ) ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:9873:1: ( (otherlv_0= 'port' | ( (lv_isMirror_1_0= 'mirrorport' ) ) ) ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:9873:1: ( (otherlv_0= 'port' | ( (lv_isMirror_1_0= 'mirrorport' ) ) ) ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )* )
            // InternalIDL.g:9873:2: (otherlv_0= 'port' | ( (lv_isMirror_1_0= 'mirrorport' ) ) ) ( (lv_type_2_0= ruleScopedName ) ) ( (lv_name_3_0= RULE_ID ) ) ( (lv_comments_4_0= ruleIDLComment ) )*
            {
            // InternalIDL.g:9873:2: (otherlv_0= 'port' | ( (lv_isMirror_1_0= 'mirrorport' ) ) )
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==137) ) {
                alt148=1;
            }
            else if ( (LA148_0==138) ) {
                alt148=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }
            switch (alt148) {
                case 1 :
                    // InternalIDL.g:9873:4: otherlv_0= 'port'
                    {
                    otherlv_0=(Token)match(input,137,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_0, grammarAccess.getPortDeclAccess().getPortKeyword_0_0());
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:9878:6: ( (lv_isMirror_1_0= 'mirrorport' ) )
                    {
                    // InternalIDL.g:9878:6: ( (lv_isMirror_1_0= 'mirrorport' ) )
                    // InternalIDL.g:9879:1: (lv_isMirror_1_0= 'mirrorport' )
                    {
                    // InternalIDL.g:9879:1: (lv_isMirror_1_0= 'mirrorport' )
                    // InternalIDL.g:9880:3: lv_isMirror_1_0= 'mirrorport'
                    {
                    lv_isMirror_1_0=(Token)match(input,138,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              newLeafNode(lv_isMirror_1_0, grammarAccess.getPortDeclAccess().getIsMirrorMirrorportKeyword_0_1_0());
                          
                    }
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElement(grammarAccess.getPortDeclRule());
                      	        }
                             		setWithLastConsumed(current, "isMirror", true, "mirrorport");
                      	    
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalIDL.g:9893:3: ( (lv_type_2_0= ruleScopedName ) )
            // InternalIDL.g:9894:1: (lv_type_2_0= ruleScopedName )
            {
            // InternalIDL.g:9894:1: (lv_type_2_0= ruleScopedName )
            // InternalIDL.g:9895:3: lv_type_2_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getPortDeclAccess().getTypeScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_2_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getPortDeclRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_2_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:9911:2: ( (lv_name_3_0= RULE_ID ) )
            // InternalIDL.g:9912:1: (lv_name_3_0= RULE_ID )
            {
            // InternalIDL.g:9912:1: (lv_name_3_0= RULE_ID )
            // InternalIDL.g:9913:3: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_3_0, grammarAccess.getPortDeclAccess().getNameIDTerminalRuleCall_2_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getPortDeclRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:9929:2: ( (lv_comments_4_0= ruleIDLComment ) )*
            loop149:
            do {
                int alt149=2;
                int LA149_0 = input.LA(1);

                if ( (LA149_0==RULE_SL_COMMENT) ) {
                    alt149=1;
                }


                switch (alt149) {
            	case 1 :
            	    // InternalIDL.g:9930:1: (lv_comments_4_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:9930:1: (lv_comments_4_0= ruleIDLComment )
            	    // InternalIDL.g:9931:3: lv_comments_4_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getPortDeclAccess().getCommentsIDLCommentParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_4_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getPortDeclRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_4_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop149;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 262, rulePortDecl_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "rulePortDecl"


    // $ANTLR start "entryRuleConnector"
    // InternalIDL.g:9955:1: entryRuleConnector returns [EObject current=null] : iv_ruleConnector= ruleConnector EOF ;
    public final EObject entryRuleConnector() throws RecognitionException {
        EObject current = null;
        int entryRuleConnector_StartIndex = input.index();
        EObject iv_ruleConnector = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 263) ) { return current; }
            // InternalIDL.g:9956:2: (iv_ruleConnector= ruleConnector EOF )
            // InternalIDL.g:9957:2: iv_ruleConnector= ruleConnector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnector=ruleConnector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 263, entryRuleConnector_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConnector"


    // $ANTLR start "ruleConnector"
    // InternalIDL.g:9964:1: ruleConnector returns [EObject current=null] : ( ( (lv_header_0_0= ruleConnectorHeader ) ) otherlv_1= '{' ( (lv_exports_2_0= ruleConnectorExport ) )* otherlv_3= '}' ) ;
    public final EObject ruleConnector() throws RecognitionException {
        EObject current = null;
        int ruleConnector_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_header_0_0 = null;

        EObject lv_exports_2_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 264) ) { return current; }
            // InternalIDL.g:9967:28: ( ( ( (lv_header_0_0= ruleConnectorHeader ) ) otherlv_1= '{' ( (lv_exports_2_0= ruleConnectorExport ) )* otherlv_3= '}' ) )
            // InternalIDL.g:9968:1: ( ( (lv_header_0_0= ruleConnectorHeader ) ) otherlv_1= '{' ( (lv_exports_2_0= ruleConnectorExport ) )* otherlv_3= '}' )
            {
            // InternalIDL.g:9968:1: ( ( (lv_header_0_0= ruleConnectorHeader ) ) otherlv_1= '{' ( (lv_exports_2_0= ruleConnectorExport ) )* otherlv_3= '}' )
            // InternalIDL.g:9968:2: ( (lv_header_0_0= ruleConnectorHeader ) ) otherlv_1= '{' ( (lv_exports_2_0= ruleConnectorExport ) )* otherlv_3= '}'
            {
            // InternalIDL.g:9968:2: ( (lv_header_0_0= ruleConnectorHeader ) )
            // InternalIDL.g:9969:1: (lv_header_0_0= ruleConnectorHeader )
            {
            // InternalIDL.g:9969:1: (lv_header_0_0= ruleConnectorHeader )
            // InternalIDL.g:9970:3: lv_header_0_0= ruleConnectorHeader
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getConnectorAccess().getHeaderConnectorHeaderParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_31);
            lv_header_0_0=ruleConnectorHeader();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getConnectorRule());
              	        }
                     		set(
                     			current, 
                     			"header",
                      		lv_header_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConnectorHeader");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_1=(Token)match(input,59,FOLLOW_108); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getConnectorAccess().getLeftCurlyBracketKeyword_1());
                  
            }
            // InternalIDL.g:9990:1: ( (lv_exports_2_0= ruleConnectorExport ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==RULE_SL_COMMENT||LA150_0==66||LA150_0==69||(LA150_0>=120 && LA150_0<=121)||(LA150_0>=137 && LA150_0<=138)) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalIDL.g:9991:1: (lv_exports_2_0= ruleConnectorExport )
            	    {
            	    // InternalIDL.g:9991:1: (lv_exports_2_0= ruleConnectorExport )
            	    // InternalIDL.g:9992:3: lv_exports_2_0= ruleConnectorExport
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getConnectorAccess().getExportsConnectorExportParserRuleCall_2_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_108);
            	    lv_exports_2_0=ruleConnectorExport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getConnectorRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"exports",
            	              		lv_exports_2_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ConnectorExport");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            otherlv_3=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_3, grammarAccess.getConnectorAccess().getRightCurlyBracketKeyword_3());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 264, ruleConnector_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConnector"


    // $ANTLR start "entryRuleConnectorHeader"
    // InternalIDL.g:10020:1: entryRuleConnectorHeader returns [EObject current=null] : iv_ruleConnectorHeader= ruleConnectorHeader EOF ;
    public final EObject entryRuleConnectorHeader() throws RecognitionException {
        EObject current = null;
        int entryRuleConnectorHeader_StartIndex = input.index();
        EObject iv_ruleConnectorHeader = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 265) ) { return current; }
            // InternalIDL.g:10021:2: (iv_ruleConnectorHeader= ruleConnectorHeader EOF )
            // InternalIDL.g:10022:2: iv_ruleConnectorHeader= ruleConnectorHeader EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorHeaderRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorHeader=ruleConnectorHeader();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorHeader; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 265, entryRuleConnectorHeader_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorHeader"


    // $ANTLR start "ruleConnectorHeader"
    // InternalIDL.g:10029:1: ruleConnectorHeader returns [EObject current=null] : (otherlv_0= 'connector' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' ( (lv_base_3_0= ruleScopedName ) ) )? ) ;
    public final EObject ruleConnectorHeader() throws RecognitionException {
        EObject current = null;
        int ruleConnectorHeader_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_base_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 266) ) { return current; }
            // InternalIDL.g:10032:28: ( (otherlv_0= 'connector' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' ( (lv_base_3_0= ruleScopedName ) ) )? ) )
            // InternalIDL.g:10033:1: (otherlv_0= 'connector' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' ( (lv_base_3_0= ruleScopedName ) ) )? )
            {
            // InternalIDL.g:10033:1: (otherlv_0= 'connector' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' ( (lv_base_3_0= ruleScopedName ) ) )? )
            // InternalIDL.g:10033:3: otherlv_0= 'connector' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= ':' ( (lv_base_3_0= ruleScopedName ) ) )?
            {
            otherlv_0=(Token)match(input,139,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getConnectorHeaderAccess().getConnectorKeyword_0());
                  
            }
            // InternalIDL.g:10037:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:10038:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:10038:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:10039:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getConnectorHeaderAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getConnectorHeaderRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:10055:2: (otherlv_2= ':' ( (lv_base_3_0= ruleScopedName ) ) )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==64) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalIDL.g:10055:4: otherlv_2= ':' ( (lv_base_3_0= ruleScopedName ) )
                    {
                    otherlv_2=(Token)match(input,64,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_2, grammarAccess.getConnectorHeaderAccess().getColonKeyword_2_0());
                          
                    }
                    // InternalIDL.g:10059:1: ( (lv_base_3_0= ruleScopedName ) )
                    // InternalIDL.g:10060:1: (lv_base_3_0= ruleScopedName )
                    {
                    // InternalIDL.g:10060:1: (lv_base_3_0= ruleScopedName )
                    // InternalIDL.g:10061:3: lv_base_3_0= ruleScopedName
                    {
                    if ( state.backtracking==0 ) {
                       
                      	        newCompositeNode(grammarAccess.getConnectorHeaderAccess().getBaseScopedNameParserRuleCall_2_1_0()); 
                      	    
                    }
                    pushFollow(FOLLOW_2);
                    lv_base_3_0=ruleScopedName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      	        if (current==null) {
                      	            current = createModelElementForParent(grammarAccess.getConnectorHeaderRule());
                      	        }
                             		set(
                             			current, 
                             			"base",
                              		lv_base_3_0, 
                              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
                      	        afterParserOrEnumRuleCall();
                      	    
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 266, ruleConnectorHeader_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConnectorHeader"


    // $ANTLR start "entryRuleConnectorExport"
    // InternalIDL.g:10085:1: entryRuleConnectorExport returns [EObject current=null] : iv_ruleConnectorExport= ruleConnectorExport EOF ;
    public final EObject entryRuleConnectorExport() throws RecognitionException {
        EObject current = null;
        int entryRuleConnectorExport_StartIndex = input.index();
        EObject iv_ruleConnectorExport = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 267) ) { return current; }
            // InternalIDL.g:10086:2: (iv_ruleConnectorExport= ruleConnectorExport EOF )
            // InternalIDL.g:10087:2: iv_ruleConnectorExport= ruleConnectorExport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConnectorExportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConnectorExport=ruleConnectorExport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConnectorExport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 267, entryRuleConnectorExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConnectorExport"


    // $ANTLR start "ruleConnectorExport"
    // InternalIDL.g:10094:1: ruleConnectorExport returns [EObject current=null] : ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_PortDecl_4= rulePortDecl otherlv_5= ';' ) | (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' ) | this_IDLComment_8= ruleIDLComment ) ;
    public final EObject ruleConnectorExport() throws RecognitionException {
        EObject current = null;
        int ruleConnectorExport_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_ProvidesDcl_0 = null;

        EObject this_UsesDcl_2 = null;

        EObject this_PortDecl_4 = null;

        EObject this_AttrDecl_6 = null;

        EObject this_IDLComment_8 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 268) ) { return current; }
            // InternalIDL.g:10097:28: ( ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_PortDecl_4= rulePortDecl otherlv_5= ';' ) | (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' ) | this_IDLComment_8= ruleIDLComment ) )
            // InternalIDL.g:10098:1: ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_PortDecl_4= rulePortDecl otherlv_5= ';' ) | (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' ) | this_IDLComment_8= ruleIDLComment )
            {
            // InternalIDL.g:10098:1: ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_PortDecl_4= rulePortDecl otherlv_5= ';' ) | (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' ) | this_IDLComment_8= ruleIDLComment )
            int alt152=5;
            switch ( input.LA(1) ) {
            case 120:
                {
                alt152=1;
                }
                break;
            case 121:
                {
                alt152=2;
                }
                break;
            case 137:
            case 138:
                {
                alt152=3;
                }
                break;
            case RULE_SL_COMMENT:
                {
                int LA152_4 = input.LA(2);

                if ( (synpred258_InternalIDL()) ) {
                    alt152=4;
                }
                else if ( (true) ) {
                    alt152=5;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 152, 4, input);

                    throw nvae;
                }
                }
                break;
            case 66:
            case 69:
                {
                alt152=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 152, 0, input);

                throw nvae;
            }

            switch (alt152) {
                case 1 :
                    // InternalIDL.g:10098:2: (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' )
                    {
                    // InternalIDL.g:10098:2: (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' )
                    // InternalIDL.g:10099:2: this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConnectorExportAccess().getProvidesDclParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ProvidesDcl_0=ruleProvidesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ProvidesDcl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:10115:6: (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' )
                    {
                    // InternalIDL.g:10115:6: (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' )
                    // InternalIDL.g:10116:2: this_UsesDcl_2= ruleUsesDcl otherlv_3= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConnectorExportAccess().getUsesDclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_UsesDcl_2=ruleUsesDcl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UsesDcl_2; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:10132:6: (this_PortDecl_4= rulePortDecl otherlv_5= ';' )
                    {
                    // InternalIDL.g:10132:6: (this_PortDecl_4= rulePortDecl otherlv_5= ';' )
                    // InternalIDL.g:10133:2: this_PortDecl_4= rulePortDecl otherlv_5= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConnectorExportAccess().getPortDeclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_PortDecl_4=rulePortDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PortDecl_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:10149:6: (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' )
                    {
                    // InternalIDL.g:10149:6: (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' )
                    // InternalIDL.g:10150:2: this_AttrDecl_6= ruleAttrDecl otherlv_7= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConnectorExportAccess().getAttrDeclParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_AttrDecl_6=ruleAttrDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_AttrDecl_6; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getConnectorExportAccess().getSemicolonKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalIDL.g:10167:2: this_IDLComment_8= ruleIDLComment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getConnectorExportAccess().getIDLCommentParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IDLComment_8=ruleIDLComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IDLComment_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 268, ruleConnectorExport_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConnectorExport"


    // $ANTLR start "entryRuleTemplateModule"
    // InternalIDL.g:10186:1: entryRuleTemplateModule returns [EObject current=null] : iv_ruleTemplateModule= ruleTemplateModule EOF ;
    public final EObject entryRuleTemplateModule() throws RecognitionException {
        EObject current = null;
        int entryRuleTemplateModule_StartIndex = input.index();
        EObject iv_ruleTemplateModule = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 269) ) { return current; }
            // InternalIDL.g:10187:2: (iv_ruleTemplateModule= ruleTemplateModule EOF )
            // InternalIDL.g:10188:2: iv_ruleTemplateModule= ruleTemplateModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateModuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateModule=ruleTemplateModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateModule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 269, entryRuleTemplateModule_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateModule"


    // $ANTLR start "ruleTemplateModule"
    // InternalIDL.g:10195:1: ruleTemplateModule returns [EObject current=null] : (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '<' ( (lv_parameters_3_0= ruleFormalParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleFormalParameter ) ) )* otherlv_6= '>' otherlv_7= '{' ( (lv_definitions_8_0= ruleTemplateDefinition ) )* otherlv_9= '}' ) ;
    public final EObject ruleTemplateModule() throws RecognitionException {
        EObject current = null;
        int ruleTemplateModule_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_definitions_8_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 270) ) { return current; }
            // InternalIDL.g:10198:28: ( (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '<' ( (lv_parameters_3_0= ruleFormalParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleFormalParameter ) ) )* otherlv_6= '>' otherlv_7= '{' ( (lv_definitions_8_0= ruleTemplateDefinition ) )* otherlv_9= '}' ) )
            // InternalIDL.g:10199:1: (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '<' ( (lv_parameters_3_0= ruleFormalParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleFormalParameter ) ) )* otherlv_6= '>' otherlv_7= '{' ( (lv_definitions_8_0= ruleTemplateDefinition ) )* otherlv_9= '}' )
            {
            // InternalIDL.g:10199:1: (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '<' ( (lv_parameters_3_0= ruleFormalParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleFormalParameter ) ) )* otherlv_6= '>' otherlv_7= '{' ( (lv_definitions_8_0= ruleTemplateDefinition ) )* otherlv_9= '}' )
            // InternalIDL.g:10199:3: otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '<' ( (lv_parameters_3_0= ruleFormalParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleFormalParameter ) ) )* otherlv_6= '>' otherlv_7= '{' ( (lv_definitions_8_0= ruleTemplateDefinition ) )* otherlv_9= '}'
            {
            otherlv_0=(Token)match(input,58,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTemplateModuleAccess().getModuleKeyword_0());
                  
            }
            // InternalIDL.g:10203:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:10204:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:10204:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:10205:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getTemplateModuleAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTemplateModuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,21,FOLLOW_110); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTemplateModuleAccess().getLessThanSignKeyword_2());
                  
            }
            // InternalIDL.g:10225:1: ( (lv_parameters_3_0= ruleFormalParameter ) )
            // InternalIDL.g:10226:1: (lv_parameters_3_0= ruleFormalParameter )
            {
            // InternalIDL.g:10226:1: (lv_parameters_3_0= ruleFormalParameter )
            // InternalIDL.g:10227:3: lv_parameters_3_0= ruleFormalParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateModuleAccess().getParametersFormalParameterParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            lv_parameters_3_0=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateModuleRule());
              	        }
                     		add(
                     			current, 
                     			"parameters",
                      		lv_parameters_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.FormalParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:10243:2: (otherlv_4= ',' ( (lv_parameters_5_0= ruleFormalParameter ) ) )*
            loop153:
            do {
                int alt153=2;
                int LA153_0 = input.LA(1);

                if ( (LA153_0==65) ) {
                    alt153=1;
                }


                switch (alt153) {
            	case 1 :
            	    // InternalIDL.g:10243:4: otherlv_4= ',' ( (lv_parameters_5_0= ruleFormalParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,65,FOLLOW_110); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getTemplateModuleAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    // InternalIDL.g:10247:1: ( (lv_parameters_5_0= ruleFormalParameter ) )
            	    // InternalIDL.g:10248:1: (lv_parameters_5_0= ruleFormalParameter )
            	    {
            	    // InternalIDL.g:10248:1: (lv_parameters_5_0= ruleFormalParameter )
            	    // InternalIDL.g:10249:3: lv_parameters_5_0= ruleFormalParameter
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTemplateModuleAccess().getParametersFormalParameterParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_78);
            	    lv_parameters_5_0=ruleFormalParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateModuleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"parameters",
            	              		lv_parameters_5_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.FormalParameter");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop153;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getTemplateModuleAccess().getGreaterThanSignKeyword_5());
                  
            }
            otherlv_7=(Token)match(input,59,FOLLOW_111); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_7, grammarAccess.getTemplateModuleAccess().getLeftCurlyBracketKeyword_6());
                  
            }
            // InternalIDL.g:10273:1: ( (lv_definitions_8_0= ruleTemplateDefinition ) )*
            loop154:
            do {
                int alt154=2;
                int LA154_0 = input.LA(1);

                if ( (LA154_0==RULE_SL_COMMENT||LA154_0==58||(LA154_0>=61 && LA154_0<=63)||LA154_0==90||(LA154_0>=93 && LA154_0<=97)||LA154_0==101||LA154_0==103||LA154_0==105||LA154_0==118||LA154_0==126||(LA154_0>=131 && LA154_0<=132)||LA154_0==136||LA154_0==139||LA154_0==142) ) {
                    alt154=1;
                }


                switch (alt154) {
            	case 1 :
            	    // InternalIDL.g:10274:1: (lv_definitions_8_0= ruleTemplateDefinition )
            	    {
            	    // InternalIDL.g:10274:1: (lv_definitions_8_0= ruleTemplateDefinition )
            	    // InternalIDL.g:10275:3: lv_definitions_8_0= ruleTemplateDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTemplateModuleAccess().getDefinitionsTemplateDefinitionParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_111);
            	    lv_definitions_8_0=ruleTemplateDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateModuleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"definitions",
            	              		lv_definitions_8_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.TemplateDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop154;
                }
            } while (true);

            otherlv_9=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_9, grammarAccess.getTemplateModuleAccess().getRightCurlyBracketKeyword_8());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 270, ruleTemplateModule_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTemplateModule"


    // $ANTLR start "entryRuleFormalParameter"
    // InternalIDL.g:10303:1: entryRuleFormalParameter returns [EObject current=null] : iv_ruleFormalParameter= ruleFormalParameter EOF ;
    public final EObject entryRuleFormalParameter() throws RecognitionException {
        EObject current = null;
        int entryRuleFormalParameter_StartIndex = input.index();
        EObject iv_ruleFormalParameter = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 271) ) { return current; }
            // InternalIDL.g:10304:2: (iv_ruleFormalParameter= ruleFormalParameter EOF )
            // InternalIDL.g:10305:2: iv_ruleFormalParameter= ruleFormalParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormalParameter=ruleFormalParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 271, entryRuleFormalParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFormalParameter"


    // $ANTLR start "ruleFormalParameter"
    // InternalIDL.g:10312:1: ruleFormalParameter returns [EObject current=null] : ( ( (lv_type_0_0= ruleFormalParameterType ) ) ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleFormalParameter() throws RecognitionException {
        EObject current = null;
        int ruleFormalParameter_StartIndex = input.index();
        Token lv_name_1_0=null;
        EObject lv_type_0_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 272) ) { return current; }
            // InternalIDL.g:10315:28: ( ( ( (lv_type_0_0= ruleFormalParameterType ) ) ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalIDL.g:10316:1: ( ( (lv_type_0_0= ruleFormalParameterType ) ) ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalIDL.g:10316:1: ( ( (lv_type_0_0= ruleFormalParameterType ) ) ( (lv_name_1_0= RULE_ID ) ) )
            // InternalIDL.g:10316:2: ( (lv_type_0_0= ruleFormalParameterType ) ) ( (lv_name_1_0= RULE_ID ) )
            {
            // InternalIDL.g:10316:2: ( (lv_type_0_0= ruleFormalParameterType ) )
            // InternalIDL.g:10317:1: (lv_type_0_0= ruleFormalParameterType )
            {
            // InternalIDL.g:10317:1: (lv_type_0_0= ruleFormalParameterType )
            // InternalIDL.g:10318:3: lv_type_0_0= ruleFormalParameterType
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getFormalParameterAccess().getTypeFormalParameterTypeParserRuleCall_0_0()); 
              	    
            }
            pushFollow(FOLLOW_6);
            lv_type_0_0=ruleFormalParameterType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getFormalParameterRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.FormalParameterType");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:10334:2: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:10335:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:10335:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:10336:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getFormalParameterAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFormalParameterRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 272, ruleFormalParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFormalParameter"


    // $ANTLR start "entryRuleFormalParameterType"
    // InternalIDL.g:10360:1: entryRuleFormalParameterType returns [EObject current=null] : iv_ruleFormalParameterType= ruleFormalParameterType EOF ;
    public final EObject entryRuleFormalParameterType() throws RecognitionException {
        EObject current = null;
        int entryRuleFormalParameterType_StartIndex = input.index();
        EObject iv_ruleFormalParameterType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 273) ) { return current; }
            // InternalIDL.g:10361:2: (iv_ruleFormalParameterType= ruleFormalParameterType EOF )
            // InternalIDL.g:10362:2: iv_ruleFormalParameterType= ruleFormalParameterType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFormalParameterTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFormalParameterType=ruleFormalParameterType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFormalParameterType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 273, entryRuleFormalParameterType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFormalParameterType"


    // $ANTLR start "ruleFormalParameterType"
    // InternalIDL.g:10369:1: ruleFormalParameterType returns [EObject current=null] : (this_TypenameParamType_0= ruleTypenameParamType | this_InterfaceParamType_1= ruleInterfaceParamType | this_ValuetypeParamType_2= ruleValuetypeParamType | this_EventParamType_3= ruleEventParamType | this_StructParamType_4= ruleStructParamType | this_UnionParamType_5= ruleUnionParamType | this_ExceptionParamType_6= ruleExceptionParamType | this_EnumParamType_7= ruleEnumParamType | this_SequenceParamType_8= ruleSequenceParamType | this_ConstParamType_9= ruleConstParamType | this_SequenceType_10= ruleSequenceType ) ;
    public final EObject ruleFormalParameterType() throws RecognitionException {
        EObject current = null;
        int ruleFormalParameterType_StartIndex = input.index();
        EObject this_TypenameParamType_0 = null;

        EObject this_InterfaceParamType_1 = null;

        EObject this_ValuetypeParamType_2 = null;

        EObject this_EventParamType_3 = null;

        EObject this_StructParamType_4 = null;

        EObject this_UnionParamType_5 = null;

        EObject this_ExceptionParamType_6 = null;

        EObject this_EnumParamType_7 = null;

        EObject this_SequenceParamType_8 = null;

        EObject this_ConstParamType_9 = null;

        EObject this_SequenceType_10 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 274) ) { return current; }
            // InternalIDL.g:10372:28: ( (this_TypenameParamType_0= ruleTypenameParamType | this_InterfaceParamType_1= ruleInterfaceParamType | this_ValuetypeParamType_2= ruleValuetypeParamType | this_EventParamType_3= ruleEventParamType | this_StructParamType_4= ruleStructParamType | this_UnionParamType_5= ruleUnionParamType | this_ExceptionParamType_6= ruleExceptionParamType | this_EnumParamType_7= ruleEnumParamType | this_SequenceParamType_8= ruleSequenceParamType | this_ConstParamType_9= ruleConstParamType | this_SequenceType_10= ruleSequenceType ) )
            // InternalIDL.g:10373:1: (this_TypenameParamType_0= ruleTypenameParamType | this_InterfaceParamType_1= ruleInterfaceParamType | this_ValuetypeParamType_2= ruleValuetypeParamType | this_EventParamType_3= ruleEventParamType | this_StructParamType_4= ruleStructParamType | this_UnionParamType_5= ruleUnionParamType | this_ExceptionParamType_6= ruleExceptionParamType | this_EnumParamType_7= ruleEnumParamType | this_SequenceParamType_8= ruleSequenceParamType | this_ConstParamType_9= ruleConstParamType | this_SequenceType_10= ruleSequenceType )
            {
            // InternalIDL.g:10373:1: (this_TypenameParamType_0= ruleTypenameParamType | this_InterfaceParamType_1= ruleInterfaceParamType | this_ValuetypeParamType_2= ruleValuetypeParamType | this_EventParamType_3= ruleEventParamType | this_StructParamType_4= ruleStructParamType | this_UnionParamType_5= ruleUnionParamType | this_ExceptionParamType_6= ruleExceptionParamType | this_EnumParamType_7= ruleEnumParamType | this_SequenceParamType_8= ruleSequenceParamType | this_ConstParamType_9= ruleConstParamType | this_SequenceType_10= ruleSequenceType )
            int alt155=11;
            alt155 = dfa155.predict(input);
            switch (alt155) {
                case 1 :
                    // InternalIDL.g:10374:2: this_TypenameParamType_0= ruleTypenameParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getTypenameParamTypeParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypenameParamType_0=ruleTypenameParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypenameParamType_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:10387:2: this_InterfaceParamType_1= ruleInterfaceParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getInterfaceParamTypeParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_InterfaceParamType_1=ruleInterfaceParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_InterfaceParamType_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 3 :
                    // InternalIDL.g:10400:2: this_ValuetypeParamType_2= ruleValuetypeParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getValuetypeParamTypeParserRuleCall_2()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ValuetypeParamType_2=ruleValuetypeParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ValuetypeParamType_2; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 4 :
                    // InternalIDL.g:10413:2: this_EventParamType_3= ruleEventParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getEventParamTypeParserRuleCall_3()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EventParamType_3=ruleEventParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EventParamType_3; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 5 :
                    // InternalIDL.g:10426:2: this_StructParamType_4= ruleStructParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getStructParamTypeParserRuleCall_4()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_StructParamType_4=ruleStructParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructParamType_4; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 6 :
                    // InternalIDL.g:10439:2: this_UnionParamType_5= ruleUnionParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getUnionParamTypeParserRuleCall_5()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_UnionParamType_5=ruleUnionParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_UnionParamType_5; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 7 :
                    // InternalIDL.g:10452:2: this_ExceptionParamType_6= ruleExceptionParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getExceptionParamTypeParserRuleCall_6()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ExceptionParamType_6=ruleExceptionParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExceptionParamType_6; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 8 :
                    // InternalIDL.g:10465:2: this_EnumParamType_7= ruleEnumParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getEnumParamTypeParserRuleCall_7()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_EnumParamType_7=ruleEnumParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_EnumParamType_7; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 9 :
                    // InternalIDL.g:10478:2: this_SequenceParamType_8= ruleSequenceParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getSequenceParamTypeParserRuleCall_8()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceParamType_8=ruleSequenceParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SequenceParamType_8; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 10 :
                    // InternalIDL.g:10491:2: this_ConstParamType_9= ruleConstParamType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getConstParamTypeParserRuleCall_9()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstParamType_9=ruleConstParamType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstParamType_9; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 11 :
                    // InternalIDL.g:10504:2: this_SequenceType_10= ruleSequenceType
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFormalParameterTypeAccess().getSequenceTypeParserRuleCall_10()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_SequenceType_10=ruleSequenceType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_SequenceType_10; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 274, ruleFormalParameterType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFormalParameterType"


    // $ANTLR start "entryRuleTypenameParamType"
    // InternalIDL.g:10523:1: entryRuleTypenameParamType returns [EObject current=null] : iv_ruleTypenameParamType= ruleTypenameParamType EOF ;
    public final EObject entryRuleTypenameParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleTypenameParamType_StartIndex = input.index();
        EObject iv_ruleTypenameParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 275) ) { return current; }
            // InternalIDL.g:10524:2: (iv_ruleTypenameParamType= ruleTypenameParamType EOF )
            // InternalIDL.g:10525:2: iv_ruleTypenameParamType= ruleTypenameParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypenameParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypenameParamType=ruleTypenameParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypenameParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 275, entryRuleTypenameParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTypenameParamType"


    // $ANTLR start "ruleTypenameParamType"
    // InternalIDL.g:10532:1: ruleTypenameParamType returns [EObject current=null] : ( () otherlv_1= 'typename' ) ;
    public final EObject ruleTypenameParamType() throws RecognitionException {
        EObject current = null;
        int ruleTypenameParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 276) ) { return current; }
            // InternalIDL.g:10535:28: ( ( () otherlv_1= 'typename' ) )
            // InternalIDL.g:10536:1: ( () otherlv_1= 'typename' )
            {
            // InternalIDL.g:10536:1: ( () otherlv_1= 'typename' )
            // InternalIDL.g:10536:2: () otherlv_1= 'typename'
            {
            // InternalIDL.g:10536:2: ()
            // InternalIDL.g:10537:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getTypenameParamTypeAccess().getTypenameParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getTypenameParamTypeAccess().getTypenameKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 276, ruleTypenameParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTypenameParamType"


    // $ANTLR start "entryRuleInterfaceParamType"
    // InternalIDL.g:10557:1: entryRuleInterfaceParamType returns [EObject current=null] : iv_ruleInterfaceParamType= ruleInterfaceParamType EOF ;
    public final EObject entryRuleInterfaceParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleInterfaceParamType_StartIndex = input.index();
        EObject iv_ruleInterfaceParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 277) ) { return current; }
            // InternalIDL.g:10558:2: (iv_ruleInterfaceParamType= ruleInterfaceParamType EOF )
            // InternalIDL.g:10559:2: iv_ruleInterfaceParamType= ruleInterfaceParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInterfaceParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleInterfaceParamType=ruleInterfaceParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInterfaceParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 277, entryRuleInterfaceParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleInterfaceParamType"


    // $ANTLR start "ruleInterfaceParamType"
    // InternalIDL.g:10566:1: ruleInterfaceParamType returns [EObject current=null] : ( () otherlv_1= 'interface' ) ;
    public final EObject ruleInterfaceParamType() throws RecognitionException {
        EObject current = null;
        int ruleInterfaceParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 278) ) { return current; }
            // InternalIDL.g:10569:28: ( ( () otherlv_1= 'interface' ) )
            // InternalIDL.g:10570:1: ( () otherlv_1= 'interface' )
            {
            // InternalIDL.g:10570:1: ( () otherlv_1= 'interface' )
            // InternalIDL.g:10570:2: () otherlv_1= 'interface'
            {
            // InternalIDL.g:10570:2: ()
            // InternalIDL.g:10571:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getInterfaceParamTypeAccess().getInterfaceParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getInterfaceParamTypeAccess().getInterfaceKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 278, ruleInterfaceParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleInterfaceParamType"


    // $ANTLR start "entryRuleValuetypeParamType"
    // InternalIDL.g:10591:1: entryRuleValuetypeParamType returns [EObject current=null] : iv_ruleValuetypeParamType= ruleValuetypeParamType EOF ;
    public final EObject entryRuleValuetypeParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleValuetypeParamType_StartIndex = input.index();
        EObject iv_ruleValuetypeParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 279) ) { return current; }
            // InternalIDL.g:10592:2: (iv_ruleValuetypeParamType= ruleValuetypeParamType EOF )
            // InternalIDL.g:10593:2: iv_ruleValuetypeParamType= ruleValuetypeParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuetypeParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValuetypeParamType=ruleValuetypeParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuetypeParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 279, entryRuleValuetypeParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleValuetypeParamType"


    // $ANTLR start "ruleValuetypeParamType"
    // InternalIDL.g:10600:1: ruleValuetypeParamType returns [EObject current=null] : ( () otherlv_1= 'valuetype' ) ;
    public final EObject ruleValuetypeParamType() throws RecognitionException {
        EObject current = null;
        int ruleValuetypeParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 280) ) { return current; }
            // InternalIDL.g:10603:28: ( ( () otherlv_1= 'valuetype' ) )
            // InternalIDL.g:10604:1: ( () otherlv_1= 'valuetype' )
            {
            // InternalIDL.g:10604:1: ( () otherlv_1= 'valuetype' )
            // InternalIDL.g:10604:2: () otherlv_1= 'valuetype'
            {
            // InternalIDL.g:10604:2: ()
            // InternalIDL.g:10605:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getValuetypeParamTypeAccess().getValuetypeParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getValuetypeParamTypeAccess().getValuetypeKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 280, ruleValuetypeParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleValuetypeParamType"


    // $ANTLR start "entryRuleEventParamType"
    // InternalIDL.g:10625:1: entryRuleEventParamType returns [EObject current=null] : iv_ruleEventParamType= ruleEventParamType EOF ;
    public final EObject entryRuleEventParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleEventParamType_StartIndex = input.index();
        EObject iv_ruleEventParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 281) ) { return current; }
            // InternalIDL.g:10626:2: (iv_ruleEventParamType= ruleEventParamType EOF )
            // InternalIDL.g:10627:2: iv_ruleEventParamType= ruleEventParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEventParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEventParamType=ruleEventParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEventParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 281, entryRuleEventParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEventParamType"


    // $ANTLR start "ruleEventParamType"
    // InternalIDL.g:10634:1: ruleEventParamType returns [EObject current=null] : ( () otherlv_1= 'eventtype' ) ;
    public final EObject ruleEventParamType() throws RecognitionException {
        EObject current = null;
        int ruleEventParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 282) ) { return current; }
            // InternalIDL.g:10637:28: ( ( () otherlv_1= 'eventtype' ) )
            // InternalIDL.g:10638:1: ( () otherlv_1= 'eventtype' )
            {
            // InternalIDL.g:10638:1: ( () otherlv_1= 'eventtype' )
            // InternalIDL.g:10638:2: () otherlv_1= 'eventtype'
            {
            // InternalIDL.g:10638:2: ()
            // InternalIDL.g:10639:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEventParamTypeAccess().getEventParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEventParamTypeAccess().getEventtypeKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 282, ruleEventParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEventParamType"


    // $ANTLR start "entryRuleStructParamType"
    // InternalIDL.g:10659:1: entryRuleStructParamType returns [EObject current=null] : iv_ruleStructParamType= ruleStructParamType EOF ;
    public final EObject entryRuleStructParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleStructParamType_StartIndex = input.index();
        EObject iv_ruleStructParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 283) ) { return current; }
            // InternalIDL.g:10660:2: (iv_ruleStructParamType= ruleStructParamType EOF )
            // InternalIDL.g:10661:2: iv_ruleStructParamType= ruleStructParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStructParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStructParamType=ruleStructParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStructParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 283, entryRuleStructParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleStructParamType"


    // $ANTLR start "ruleStructParamType"
    // InternalIDL.g:10668:1: ruleStructParamType returns [EObject current=null] : ( () otherlv_1= 'struct' ) ;
    public final EObject ruleStructParamType() throws RecognitionException {
        EObject current = null;
        int ruleStructParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 284) ) { return current; }
            // InternalIDL.g:10671:28: ( ( () otherlv_1= 'struct' ) )
            // InternalIDL.g:10672:1: ( () otherlv_1= 'struct' )
            {
            // InternalIDL.g:10672:1: ( () otherlv_1= 'struct' )
            // InternalIDL.g:10672:2: () otherlv_1= 'struct'
            {
            // InternalIDL.g:10672:2: ()
            // InternalIDL.g:10673:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getStructParamTypeAccess().getStructParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getStructParamTypeAccess().getStructKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 284, ruleStructParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleStructParamType"


    // $ANTLR start "entryRuleUnionParamType"
    // InternalIDL.g:10693:1: entryRuleUnionParamType returns [EObject current=null] : iv_ruleUnionParamType= ruleUnionParamType EOF ;
    public final EObject entryRuleUnionParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleUnionParamType_StartIndex = input.index();
        EObject iv_ruleUnionParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 285) ) { return current; }
            // InternalIDL.g:10694:2: (iv_ruleUnionParamType= ruleUnionParamType EOF )
            // InternalIDL.g:10695:2: iv_ruleUnionParamType= ruleUnionParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnionParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnionParamType=ruleUnionParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnionParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 285, entryRuleUnionParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleUnionParamType"


    // $ANTLR start "ruleUnionParamType"
    // InternalIDL.g:10702:1: ruleUnionParamType returns [EObject current=null] : ( () otherlv_1= 'union' ) ;
    public final EObject ruleUnionParamType() throws RecognitionException {
        EObject current = null;
        int ruleUnionParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 286) ) { return current; }
            // InternalIDL.g:10705:28: ( ( () otherlv_1= 'union' ) )
            // InternalIDL.g:10706:1: ( () otherlv_1= 'union' )
            {
            // InternalIDL.g:10706:1: ( () otherlv_1= 'union' )
            // InternalIDL.g:10706:2: () otherlv_1= 'union'
            {
            // InternalIDL.g:10706:2: ()
            // InternalIDL.g:10707:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getUnionParamTypeAccess().getUnionParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getUnionParamTypeAccess().getUnionKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 286, ruleUnionParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleUnionParamType"


    // $ANTLR start "entryRuleExceptionParamType"
    // InternalIDL.g:10727:1: entryRuleExceptionParamType returns [EObject current=null] : iv_ruleExceptionParamType= ruleExceptionParamType EOF ;
    public final EObject entryRuleExceptionParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleExceptionParamType_StartIndex = input.index();
        EObject iv_ruleExceptionParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 287) ) { return current; }
            // InternalIDL.g:10728:2: (iv_ruleExceptionParamType= ruleExceptionParamType EOF )
            // InternalIDL.g:10729:2: iv_ruleExceptionParamType= ruleExceptionParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExceptionParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExceptionParamType=ruleExceptionParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExceptionParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 287, entryRuleExceptionParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleExceptionParamType"


    // $ANTLR start "ruleExceptionParamType"
    // InternalIDL.g:10736:1: ruleExceptionParamType returns [EObject current=null] : ( () otherlv_1= 'exception' ) ;
    public final EObject ruleExceptionParamType() throws RecognitionException {
        EObject current = null;
        int ruleExceptionParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 288) ) { return current; }
            // InternalIDL.g:10739:28: ( ( () otherlv_1= 'exception' ) )
            // InternalIDL.g:10740:1: ( () otherlv_1= 'exception' )
            {
            // InternalIDL.g:10740:1: ( () otherlv_1= 'exception' )
            // InternalIDL.g:10740:2: () otherlv_1= 'exception'
            {
            // InternalIDL.g:10740:2: ()
            // InternalIDL.g:10741:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getExceptionParamTypeAccess().getExceptionParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getExceptionParamTypeAccess().getExceptionKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 288, ruleExceptionParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleExceptionParamType"


    // $ANTLR start "entryRuleEnumParamType"
    // InternalIDL.g:10761:1: entryRuleEnumParamType returns [EObject current=null] : iv_ruleEnumParamType= ruleEnumParamType EOF ;
    public final EObject entryRuleEnumParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleEnumParamType_StartIndex = input.index();
        EObject iv_ruleEnumParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 289) ) { return current; }
            // InternalIDL.g:10762:2: (iv_ruleEnumParamType= ruleEnumParamType EOF )
            // InternalIDL.g:10763:2: iv_ruleEnumParamType= ruleEnumParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEnumParamType=ruleEnumParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 289, entryRuleEnumParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumParamType"


    // $ANTLR start "ruleEnumParamType"
    // InternalIDL.g:10770:1: ruleEnumParamType returns [EObject current=null] : ( () otherlv_1= 'enum' ) ;
    public final EObject ruleEnumParamType() throws RecognitionException {
        EObject current = null;
        int ruleEnumParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 290) ) { return current; }
            // InternalIDL.g:10773:28: ( ( () otherlv_1= 'enum' ) )
            // InternalIDL.g:10774:1: ( () otherlv_1= 'enum' )
            {
            // InternalIDL.g:10774:1: ( () otherlv_1= 'enum' )
            // InternalIDL.g:10774:2: () otherlv_1= 'enum'
            {
            // InternalIDL.g:10774:2: ()
            // InternalIDL.g:10775:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getEnumParamTypeAccess().getEnumParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getEnumParamTypeAccess().getEnumKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 290, ruleEnumParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleEnumParamType"


    // $ANTLR start "entryRuleSequenceParamType"
    // InternalIDL.g:10795:1: entryRuleSequenceParamType returns [EObject current=null] : iv_ruleSequenceParamType= ruleSequenceParamType EOF ;
    public final EObject entryRuleSequenceParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleSequenceParamType_StartIndex = input.index();
        EObject iv_ruleSequenceParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 291) ) { return current; }
            // InternalIDL.g:10796:2: (iv_ruleSequenceParamType= ruleSequenceParamType EOF )
            // InternalIDL.g:10797:2: iv_ruleSequenceParamType= ruleSequenceParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSequenceParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSequenceParamType=ruleSequenceParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSequenceParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 291, entryRuleSequenceParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleSequenceParamType"


    // $ANTLR start "ruleSequenceParamType"
    // InternalIDL.g:10804:1: ruleSequenceParamType returns [EObject current=null] : ( () otherlv_1= 'sequence' ) ;
    public final EObject ruleSequenceParamType() throws RecognitionException {
        EObject current = null;
        int ruleSequenceParamType_StartIndex = input.index();
        Token otherlv_1=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 292) ) { return current; }
            // InternalIDL.g:10807:28: ( ( () otherlv_1= 'sequence' ) )
            // InternalIDL.g:10808:1: ( () otherlv_1= 'sequence' )
            {
            // InternalIDL.g:10808:1: ( () otherlv_1= 'sequence' )
            // InternalIDL.g:10808:2: () otherlv_1= 'sequence'
            {
            // InternalIDL.g:10808:2: ()
            // InternalIDL.g:10809:2: 
            {
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {

                      current = forceCreateModelElement(
                          grammarAccess.getSequenceParamTypeAccess().getSequenceParamTypeAction_0(),
                          current);
                  
            }

            }

            otherlv_1=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_1, grammarAccess.getSequenceParamTypeAccess().getSequenceKeyword_1());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 292, ruleSequenceParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleSequenceParamType"


    // $ANTLR start "entryRuleConstParamType"
    // InternalIDL.g:10829:1: entryRuleConstParamType returns [EObject current=null] : iv_ruleConstParamType= ruleConstParamType EOF ;
    public final EObject entryRuleConstParamType() throws RecognitionException {
        EObject current = null;
        int entryRuleConstParamType_StartIndex = input.index();
        EObject iv_ruleConstParamType = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 293) ) { return current; }
            // InternalIDL.g:10830:2: (iv_ruleConstParamType= ruleConstParamType EOF )
            // InternalIDL.g:10831:2: iv_ruleConstParamType= ruleConstParamType EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConstParamTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConstParamType=ruleConstParamType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConstParamType; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 293, entryRuleConstParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleConstParamType"


    // $ANTLR start "ruleConstParamType"
    // InternalIDL.g:10838:1: ruleConstParamType returns [EObject current=null] : (otherlv_0= 'const' this_ConstType_1= ruleConstType ) ;
    public final EObject ruleConstParamType() throws RecognitionException {
        EObject current = null;
        int ruleConstParamType_StartIndex = input.index();
        Token otherlv_0=null;
        EObject this_ConstType_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 294) ) { return current; }
            // InternalIDL.g:10841:28: ( (otherlv_0= 'const' this_ConstType_1= ruleConstType ) )
            // InternalIDL.g:10842:1: (otherlv_0= 'const' this_ConstType_1= ruleConstType )
            {
            // InternalIDL.g:10842:1: (otherlv_0= 'const' this_ConstType_1= ruleConstType )
            // InternalIDL.g:10842:3: otherlv_0= 'const' this_ConstType_1= ruleConstType
            {
            otherlv_0=(Token)match(input,105,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getConstParamTypeAccess().getConstKeyword_0());
                  
            }
            if ( state.backtracking==0 ) {
               
              	  /* */ 
              	
            }
            if ( state.backtracking==0 ) {
               
                      newCompositeNode(grammarAccess.getConstParamTypeAccess().getConstTypeParserRuleCall_1()); 
                  
            }
            pushFollow(FOLLOW_2);
            this_ConstType_1=ruleConstType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               
                      current = this_ConstType_1; 
                      afterParserOrEnumRuleCall();
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 294, ruleConstParamType_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleConstParamType"


    // $ANTLR start "entryRuleTemplateDefinition"
    // InternalIDL.g:10866:1: entryRuleTemplateDefinition returns [EObject current=null] : iv_ruleTemplateDefinition= ruleTemplateDefinition EOF ;
    public final EObject entryRuleTemplateDefinition() throws RecognitionException {
        EObject current = null;
        int entryRuleTemplateDefinition_StartIndex = input.index();
        EObject iv_ruleTemplateDefinition = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 295) ) { return current; }
            // InternalIDL.g:10867:2: (iv_ruleTemplateDefinition= ruleTemplateDefinition EOF )
            // InternalIDL.g:10868:2: iv_ruleTemplateDefinition= ruleTemplateDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateDefinition=ruleTemplateDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 295, entryRuleTemplateDefinition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateDefinition"


    // $ANTLR start "ruleTemplateDefinition"
    // InternalIDL.g:10875:1: ruleTemplateDefinition returns [EObject current=null] : ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | (this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';' ) | this_IDLComment_26= ruleIDLComment ) ;
    public final EObject ruleTemplateDefinition() throws RecognitionException {
        EObject current = null;
        int ruleTemplateDefinition_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject this_TypeDecl_0 = null;

        EObject this_ConstDecl_2 = null;

        EObject this_ExceptDecl_4 = null;

        EObject this_Interface_decl_6 = null;

        EObject this_FixedModule_8 = null;

        EObject this_StructType_10 = null;

        EObject this_NativeType_12 = null;

        EObject this_Event_14 = null;

        EObject this_ComponentDecl_16 = null;

        EObject this_HomeDecl_18 = null;

        EObject this_PortTypeDecl_20 = null;

        EObject this_Connector_22 = null;

        EObject this_TemplateModuleRef_24 = null;

        EObject this_IDLComment_26 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 296) ) { return current; }
            // InternalIDL.g:10878:28: ( ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | (this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';' ) | this_IDLComment_26= ruleIDLComment ) )
            // InternalIDL.g:10879:1: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | (this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';' ) | this_IDLComment_26= ruleIDLComment )
            {
            // InternalIDL.g:10879:1: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | (this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';' ) | this_IDLComment_26= ruleIDLComment )
            int alt156=14;
            alt156 = dfa156.predict(input);
            switch (alt156) {
                case 1 :
                    // InternalIDL.g:10879:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
                    {
                    // InternalIDL.g:10879:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
                    // InternalIDL.g:10880:2: this_TypeDecl_0= ruleTypeDecl otherlv_1= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getTypeDeclParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_TypeDecl_0=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypeDecl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:10896:6: (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' )
                    {
                    // InternalIDL.g:10896:6: (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' )
                    // InternalIDL.g:10897:2: this_ConstDecl_2= ruleConstDecl otherlv_3= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getConstDeclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ConstDecl_2=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstDecl_2; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:10913:6: (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' )
                    {
                    // InternalIDL.g:10913:6: (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' )
                    // InternalIDL.g:10914:2: this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getExceptDeclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ExceptDecl_4=ruleExceptDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExceptDecl_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:10930:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
                    {
                    // InternalIDL.g:10930:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
                    // InternalIDL.g:10931:2: this_Interface_decl_6= ruleInterface_decl otherlv_7= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getInterface_declParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Interface_decl_6=ruleInterface_decl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Interface_decl_6; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalIDL.g:10947:6: (this_FixedModule_8= ruleFixedModule otherlv_9= ';' )
                    {
                    // InternalIDL.g:10947:6: (this_FixedModule_8= ruleFixedModule otherlv_9= ';' )
                    // InternalIDL.g:10948:2: this_FixedModule_8= ruleFixedModule otherlv_9= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getFixedModuleParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_FixedModule_8=ruleFixedModule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FixedModule_8; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalIDL.g:10964:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
                    {
                    // InternalIDL.g:10964:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
                    // InternalIDL.g:10965:2: this_StructType_10= ruleStructType otherlv_11= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getStructTypeParserRuleCall_5_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_StructType_10=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructType_10; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_5_1());
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalIDL.g:10981:6: (this_NativeType_12= ruleNativeType otherlv_13= ';' )
                    {
                    // InternalIDL.g:10981:6: (this_NativeType_12= ruleNativeType otherlv_13= ';' )
                    // InternalIDL.g:10982:2: this_NativeType_12= ruleNativeType otherlv_13= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getNativeTypeParserRuleCall_6_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_NativeType_12=ruleNativeType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NativeType_12; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_13=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_6_1());
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalIDL.g:10998:6: (this_Event_14= ruleEvent otherlv_15= ';' )
                    {
                    // InternalIDL.g:10998:6: (this_Event_14= ruleEvent otherlv_15= ';' )
                    // InternalIDL.g:10999:2: this_Event_14= ruleEvent otherlv_15= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getEventParserRuleCall_7_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Event_14=ruleEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Event_14; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_15=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_7_1());
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalIDL.g:11015:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
                    {
                    // InternalIDL.g:11015:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
                    // InternalIDL.g:11016:2: this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getComponentDeclParserRuleCall_8_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ComponentDecl_16=ruleComponentDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentDecl_16; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_17=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_8_1());
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalIDL.g:11032:6: (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' )
                    {
                    // InternalIDL.g:11032:6: (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' )
                    // InternalIDL.g:11033:2: this_HomeDecl_18= ruleHomeDecl otherlv_19= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getHomeDeclParserRuleCall_9_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_HomeDecl_18=ruleHomeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_HomeDecl_18; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_19=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_19, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_9_1());
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalIDL.g:11049:6: (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' )
                    {
                    // InternalIDL.g:11049:6: (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' )
                    // InternalIDL.g:11050:2: this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getPortTypeDeclParserRuleCall_10_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_PortTypeDecl_20=rulePortTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PortTypeDecl_20; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_21=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_21, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_10_1());
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalIDL.g:11066:6: (this_Connector_22= ruleConnector otherlv_23= ';' )
                    {
                    // InternalIDL.g:11066:6: (this_Connector_22= ruleConnector otherlv_23= ';' )
                    // InternalIDL.g:11067:2: this_Connector_22= ruleConnector otherlv_23= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getConnectorParserRuleCall_11_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Connector_22=ruleConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Connector_22; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_23=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_23, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_11_1());
                          
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalIDL.g:11083:6: (this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';' )
                    {
                    // InternalIDL.g:11083:6: (this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';' )
                    // InternalIDL.g:11084:2: this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getTemplateModuleRefParserRuleCall_12_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_TemplateModuleRef_24=ruleTemplateModuleRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TemplateModuleRef_24; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_25=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_25, grammarAccess.getTemplateDefinitionAccess().getSemicolonKeyword_12_1());
                          
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalIDL.g:11101:2: this_IDLComment_26= ruleIDLComment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getTemplateDefinitionAccess().getIDLCommentParserRuleCall_13()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IDLComment_26=ruleIDLComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IDLComment_26; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 296, ruleTemplateDefinition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTemplateDefinition"


    // $ANTLR start "entryRuleFixedModule"
    // InternalIDL.g:11120:1: entryRuleFixedModule returns [EObject current=null] : iv_ruleFixedModule= ruleFixedModule EOF ;
    public final EObject entryRuleFixedModule() throws RecognitionException {
        EObject current = null;
        int entryRuleFixedModule_StartIndex = input.index();
        EObject iv_ruleFixedModule = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 297) ) { return current; }
            // InternalIDL.g:11121:2: (iv_ruleFixedModule= ruleFixedModule EOF )
            // InternalIDL.g:11122:2: iv_ruleFixedModule= ruleFixedModule EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFixedModuleRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFixedModule=ruleFixedModule();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFixedModule; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 297, entryRuleFixedModule_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFixedModule"


    // $ANTLR start "ruleFixedModule"
    // InternalIDL.g:11129:1: ruleFixedModule returns [EObject current=null] : (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_definitions_3_0= ruleFixedDefinition ) )* otherlv_4= '}' ) ;
    public final EObject ruleFixedModule() throws RecognitionException {
        EObject current = null;
        int ruleFixedModule_StartIndex = input.index();
        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_definitions_3_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 298) ) { return current; }
            // InternalIDL.g:11132:28: ( (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_definitions_3_0= ruleFixedDefinition ) )* otherlv_4= '}' ) )
            // InternalIDL.g:11133:1: (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_definitions_3_0= ruleFixedDefinition ) )* otherlv_4= '}' )
            {
            // InternalIDL.g:11133:1: (otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_definitions_3_0= ruleFixedDefinition ) )* otherlv_4= '}' )
            // InternalIDL.g:11133:3: otherlv_0= 'module' ( (lv_name_1_0= RULE_ID ) ) otherlv_2= '{' ( (lv_definitions_3_0= ruleFixedDefinition ) )* otherlv_4= '}'
            {
            otherlv_0=(Token)match(input,58,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getFixedModuleAccess().getModuleKeyword_0());
                  
            }
            // InternalIDL.g:11137:1: ( (lv_name_1_0= RULE_ID ) )
            // InternalIDL.g:11138:1: (lv_name_1_0= RULE_ID )
            {
            // InternalIDL.g:11138:1: (lv_name_1_0= RULE_ID )
            // InternalIDL.g:11139:3: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_1_0, grammarAccess.getFixedModuleAccess().getNameIDTerminalRuleCall_1_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getFixedModuleRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,59,FOLLOW_112); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getFixedModuleAccess().getLeftCurlyBracketKeyword_2());
                  
            }
            // InternalIDL.g:11159:1: ( (lv_definitions_3_0= ruleFixedDefinition ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==RULE_SL_COMMENT||LA157_0==58||(LA157_0>=61 && LA157_0<=63)||LA157_0==90||(LA157_0>=93 && LA157_0<=97)||LA157_0==101||LA157_0==103||LA157_0==105||LA157_0==118||LA157_0==126||(LA157_0>=131 && LA157_0<=132)||LA157_0==136||LA157_0==139) ) {
                    alt157=1;
                }


                switch (alt157) {
            	case 1 :
            	    // InternalIDL.g:11160:1: (lv_definitions_3_0= ruleFixedDefinition )
            	    {
            	    // InternalIDL.g:11160:1: (lv_definitions_3_0= ruleFixedDefinition )
            	    // InternalIDL.g:11161:3: lv_definitions_3_0= ruleFixedDefinition
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getFixedModuleAccess().getDefinitionsFixedDefinitionParserRuleCall_3_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_definitions_3_0=ruleFixedDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getFixedModuleRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"definitions",
            	              		lv_definitions_3_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.FixedDefinition");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);

            otherlv_4=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_4, grammarAccess.getFixedModuleAccess().getRightCurlyBracketKeyword_4());
                  
            }

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 298, ruleFixedModule_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFixedModule"


    // $ANTLR start "entryRuleFixedDefinition"
    // InternalIDL.g:11189:1: entryRuleFixedDefinition returns [EObject current=null] : iv_ruleFixedDefinition= ruleFixedDefinition EOF ;
    public final EObject entryRuleFixedDefinition() throws RecognitionException {
        EObject current = null;
        int entryRuleFixedDefinition_StartIndex = input.index();
        EObject iv_ruleFixedDefinition = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 299) ) { return current; }
            // InternalIDL.g:11190:2: (iv_ruleFixedDefinition= ruleFixedDefinition EOF )
            // InternalIDL.g:11191:2: iv_ruleFixedDefinition= ruleFixedDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFixedDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFixedDefinition=ruleFixedDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFixedDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 299, entryRuleFixedDefinition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleFixedDefinition"


    // $ANTLR start "ruleFixedDefinition"
    // InternalIDL.g:11198:1: ruleFixedDefinition returns [EObject current=null] : ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | this_IDLComment_24= ruleIDLComment ) ;
    public final EObject ruleFixedDefinition() throws RecognitionException {
        EObject current = null;
        int ruleFixedDefinition_StartIndex = input.index();
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        EObject this_TypeDecl_0 = null;

        EObject this_ConstDecl_2 = null;

        EObject this_ExceptDecl_4 = null;

        EObject this_Interface_decl_6 = null;

        EObject this_FixedModule_8 = null;

        EObject this_StructType_10 = null;

        EObject this_NativeType_12 = null;

        EObject this_Event_14 = null;

        EObject this_ComponentDecl_16 = null;

        EObject this_HomeDecl_18 = null;

        EObject this_PortTypeDecl_20 = null;

        EObject this_Connector_22 = null;

        EObject this_IDLComment_24 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 300) ) { return current; }
            // InternalIDL.g:11201:28: ( ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | this_IDLComment_24= ruleIDLComment ) )
            // InternalIDL.g:11202:1: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | this_IDLComment_24= ruleIDLComment )
            {
            // InternalIDL.g:11202:1: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | this_IDLComment_24= ruleIDLComment )
            int alt158=13;
            alt158 = dfa158.predict(input);
            switch (alt158) {
                case 1 :
                    // InternalIDL.g:11202:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
                    {
                    // InternalIDL.g:11202:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
                    // InternalIDL.g:11203:2: this_TypeDecl_0= ruleTypeDecl otherlv_1= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getTypeDeclParserRuleCall_0_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_TypeDecl_0=ruleTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypeDecl_0; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_1, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_0_1());
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:11219:6: (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' )
                    {
                    // InternalIDL.g:11219:6: (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' )
                    // InternalIDL.g:11220:2: this_ConstDecl_2= ruleConstDecl otherlv_3= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getConstDeclParserRuleCall_1_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ConstDecl_2=ruleConstDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstDecl_2; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_3, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_1_1());
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:11236:6: (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' )
                    {
                    // InternalIDL.g:11236:6: (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' )
                    // InternalIDL.g:11237:2: this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getExceptDeclParserRuleCall_2_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ExceptDecl_4=ruleExceptDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ExceptDecl_4; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_5, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_2_1());
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:11253:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
                    {
                    // InternalIDL.g:11253:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
                    // InternalIDL.g:11254:2: this_Interface_decl_6= ruleInterface_decl otherlv_7= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getInterface_declParserRuleCall_3_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Interface_decl_6=ruleInterface_decl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Interface_decl_6; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_7, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_3_1());
                          
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalIDL.g:11270:6: (this_FixedModule_8= ruleFixedModule otherlv_9= ';' )
                    {
                    // InternalIDL.g:11270:6: (this_FixedModule_8= ruleFixedModule otherlv_9= ';' )
                    // InternalIDL.g:11271:2: this_FixedModule_8= ruleFixedModule otherlv_9= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getFixedModuleParserRuleCall_4_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_FixedModule_8=ruleFixedModule();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_FixedModule_8; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_9=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_9, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_4_1());
                          
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalIDL.g:11287:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
                    {
                    // InternalIDL.g:11287:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
                    // InternalIDL.g:11288:2: this_StructType_10= ruleStructType otherlv_11= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getStructTypeParserRuleCall_5_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_StructType_10=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_StructType_10; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_11, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_5_1());
                          
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalIDL.g:11304:6: (this_NativeType_12= ruleNativeType otherlv_13= ';' )
                    {
                    // InternalIDL.g:11304:6: (this_NativeType_12= ruleNativeType otherlv_13= ';' )
                    // InternalIDL.g:11305:2: this_NativeType_12= ruleNativeType otherlv_13= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getNativeTypeParserRuleCall_6_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_NativeType_12=ruleNativeType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_NativeType_12; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_13=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_13, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_6_1());
                          
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalIDL.g:11321:6: (this_Event_14= ruleEvent otherlv_15= ';' )
                    {
                    // InternalIDL.g:11321:6: (this_Event_14= ruleEvent otherlv_15= ';' )
                    // InternalIDL.g:11322:2: this_Event_14= ruleEvent otherlv_15= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getEventParserRuleCall_7_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Event_14=ruleEvent();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Event_14; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_15=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_15, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_7_1());
                          
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalIDL.g:11338:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
                    {
                    // InternalIDL.g:11338:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
                    // InternalIDL.g:11339:2: this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getComponentDeclParserRuleCall_8_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_ComponentDecl_16=ruleComponentDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ComponentDecl_16; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_17=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_17, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_8_1());
                          
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalIDL.g:11355:6: (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' )
                    {
                    // InternalIDL.g:11355:6: (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' )
                    // InternalIDL.g:11356:2: this_HomeDecl_18= ruleHomeDecl otherlv_19= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getHomeDeclParserRuleCall_9_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_HomeDecl_18=ruleHomeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_HomeDecl_18; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_19=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_19, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_9_1());
                          
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalIDL.g:11372:6: (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' )
                    {
                    // InternalIDL.g:11372:6: (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' )
                    // InternalIDL.g:11373:2: this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getPortTypeDeclParserRuleCall_10_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_PortTypeDecl_20=rulePortTypeDecl();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_PortTypeDecl_20; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_21=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_21, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_10_1());
                          
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalIDL.g:11389:6: (this_Connector_22= ruleConnector otherlv_23= ';' )
                    {
                    // InternalIDL.g:11389:6: (this_Connector_22= ruleConnector otherlv_23= ';' )
                    // InternalIDL.g:11390:2: this_Connector_22= ruleConnector otherlv_23= ';'
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getConnectorParserRuleCall_11_0()); 
                          
                    }
                    pushFollow(FOLLOW_28);
                    this_Connector_22=ruleConnector();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_Connector_22; 
                              afterParserOrEnumRuleCall();
                          
                    }
                    otherlv_23=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                          	newLeafNode(otherlv_23, grammarAccess.getFixedDefinitionAccess().getSemicolonKeyword_11_1());
                          
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalIDL.g:11407:2: this_IDLComment_24= ruleIDLComment
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getFixedDefinitionAccess().getIDLCommentParserRuleCall_12()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_IDLComment_24=ruleIDLComment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_IDLComment_24; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 300, ruleFixedDefinition_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleFixedDefinition"


    // $ANTLR start "entryRuleTemplateModuleInst"
    // InternalIDL.g:11426:1: entryRuleTemplateModuleInst returns [EObject current=null] : iv_ruleTemplateModuleInst= ruleTemplateModuleInst EOF ;
    public final EObject entryRuleTemplateModuleInst() throws RecognitionException {
        EObject current = null;
        int entryRuleTemplateModuleInst_StartIndex = input.index();
        EObject iv_ruleTemplateModuleInst = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 301) ) { return current; }
            // InternalIDL.g:11427:2: (iv_ruleTemplateModuleInst= ruleTemplateModuleInst EOF )
            // InternalIDL.g:11428:2: iv_ruleTemplateModuleInst= ruleTemplateModuleInst EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateModuleInstRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateModuleInst=ruleTemplateModuleInst();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateModuleInst; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 301, entryRuleTemplateModuleInst_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateModuleInst"


    // $ANTLR start "ruleTemplateModuleInst"
    // InternalIDL.g:11435:1: ruleTemplateModuleInst returns [EObject current=null] : (otherlv_0= 'module' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_parameter_3_0= ruleActualParameter ) ) (otherlv_4= ',' ( (lv_parameter_5_0= ruleActualParameter ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) ( (lv_comments_8_0= ruleIDLComment ) )* ) ;
    public final EObject ruleTemplateModuleInst() throws RecognitionException {
        EObject current = null;
        int ruleTemplateModuleInst_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_name_7_0=null;
        EObject lv_type_1_0 = null;

        EObject lv_parameter_3_0 = null;

        EObject lv_parameter_5_0 = null;

        EObject lv_comments_8_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 302) ) { return current; }
            // InternalIDL.g:11438:28: ( (otherlv_0= 'module' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_parameter_3_0= ruleActualParameter ) ) (otherlv_4= ',' ( (lv_parameter_5_0= ruleActualParameter ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) ( (lv_comments_8_0= ruleIDLComment ) )* ) )
            // InternalIDL.g:11439:1: (otherlv_0= 'module' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_parameter_3_0= ruleActualParameter ) ) (otherlv_4= ',' ( (lv_parameter_5_0= ruleActualParameter ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) ( (lv_comments_8_0= ruleIDLComment ) )* )
            {
            // InternalIDL.g:11439:1: (otherlv_0= 'module' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_parameter_3_0= ruleActualParameter ) ) (otherlv_4= ',' ( (lv_parameter_5_0= ruleActualParameter ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) ( (lv_comments_8_0= ruleIDLComment ) )* )
            // InternalIDL.g:11439:3: otherlv_0= 'module' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_parameter_3_0= ruleActualParameter ) ) (otherlv_4= ',' ( (lv_parameter_5_0= ruleActualParameter ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) ( (lv_comments_8_0= ruleIDLComment ) )*
            {
            otherlv_0=(Token)match(input,58,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTemplateModuleInstAccess().getModuleKeyword_0());
                  
            }
            // InternalIDL.g:11443:1: ( (lv_type_1_0= ruleScopedName ) )
            // InternalIDL.g:11444:1: (lv_type_1_0= ruleScopedName )
            {
            // InternalIDL.g:11444:1: (lv_type_1_0= ruleScopedName )
            // InternalIDL.g:11445:3: lv_type_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getTypeScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_type_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,21,FOLLOW_113); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTemplateModuleInstAccess().getLessThanSignKeyword_2());
                  
            }
            // InternalIDL.g:11465:1: ( (lv_parameter_3_0= ruleActualParameter ) )
            // InternalIDL.g:11466:1: (lv_parameter_3_0= ruleActualParameter )
            {
            // InternalIDL.g:11466:1: (lv_parameter_3_0= ruleActualParameter )
            // InternalIDL.g:11467:3: lv_parameter_3_0= ruleActualParameter
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getParameterActualParameterParserRuleCall_3_0()); 
              	    
            }
            pushFollow(FOLLOW_78);
            lv_parameter_3_0=ruleActualParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
              	        }
                     		add(
                     			current, 
                     			"parameter",
                      		lv_parameter_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ActualParameter");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            // InternalIDL.g:11483:2: (otherlv_4= ',' ( (lv_parameter_5_0= ruleActualParameter ) ) )*
            loop159:
            do {
                int alt159=2;
                int LA159_0 = input.LA(1);

                if ( (LA159_0==65) ) {
                    alt159=1;
                }


                switch (alt159) {
            	case 1 :
            	    // InternalIDL.g:11483:4: otherlv_4= ',' ( (lv_parameter_5_0= ruleActualParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,65,FOLLOW_113); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getTemplateModuleInstAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    // InternalIDL.g:11487:1: ( (lv_parameter_5_0= ruleActualParameter ) )
            	    // InternalIDL.g:11488:1: (lv_parameter_5_0= ruleActualParameter )
            	    {
            	    // InternalIDL.g:11488:1: (lv_parameter_5_0= ruleActualParameter )
            	    // InternalIDL.g:11489:3: lv_parameter_5_0= ruleActualParameter
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getParameterActualParameterParserRuleCall_4_1_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_78);
            	    lv_parameter_5_0=ruleActualParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"parameter",
            	              		lv_parameter_5_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ActualParameter");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop159;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getTemplateModuleInstAccess().getGreaterThanSignKeyword_5());
                  
            }
            // InternalIDL.g:11509:1: ( (lv_name_7_0= RULE_ID ) )
            // InternalIDL.g:11510:1: (lv_name_7_0= RULE_ID )
            {
            // InternalIDL.g:11510:1: (lv_name_7_0= RULE_ID )
            // InternalIDL.g:11511:3: lv_name_7_0= RULE_ID
            {
            lv_name_7_0=(Token)match(input,RULE_ID,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_7_0, grammarAccess.getTemplateModuleInstAccess().getNameIDTerminalRuleCall_6_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTemplateModuleInstRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_7_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:11527:2: ( (lv_comments_8_0= ruleIDLComment ) )*
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( (LA160_0==RULE_SL_COMMENT) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalIDL.g:11528:1: (lv_comments_8_0= ruleIDLComment )
            	    {
            	    // InternalIDL.g:11528:1: (lv_comments_8_0= ruleIDLComment )
            	    // InternalIDL.g:11529:3: lv_comments_8_0= ruleIDLComment
            	    {
            	    if ( state.backtracking==0 ) {
            	       
            	      	        newCompositeNode(grammarAccess.getTemplateModuleInstAccess().getCommentsIDLCommentParserRuleCall_7_0()); 
            	      	    
            	    }
            	    pushFollow(FOLLOW_38);
            	    lv_comments_8_0=ruleIDLComment();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElementForParent(grammarAccess.getTemplateModuleInstRule());
            	      	        }
            	             		add(
            	             			current, 
            	             			"comments",
            	              		lv_comments_8_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.IDLComment");
            	      	        afterParserOrEnumRuleCall();
            	      	    
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 302, ruleTemplateModuleInst_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTemplateModuleInst"


    // $ANTLR start "entryRuleActualParameter"
    // InternalIDL.g:11553:1: entryRuleActualParameter returns [EObject current=null] : iv_ruleActualParameter= ruleActualParameter EOF ;
    public final EObject entryRuleActualParameter() throws RecognitionException {
        EObject current = null;
        int entryRuleActualParameter_StartIndex = input.index();
        EObject iv_ruleActualParameter = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 303) ) { return current; }
            // InternalIDL.g:11554:2: (iv_ruleActualParameter= ruleActualParameter EOF )
            // InternalIDL.g:11555:2: iv_ruleActualParameter= ruleActualParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActualParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActualParameter=ruleActualParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActualParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 303, entryRuleActualParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleActualParameter"


    // $ANTLR start "ruleActualParameter"
    // InternalIDL.g:11562:1: ruleActualParameter returns [EObject current=null] : (this_ConstExp_0= ruleConstExp | this_TypeSpec_1= ruleTypeSpec ) ;
    public final EObject ruleActualParameter() throws RecognitionException {
        EObject current = null;
        int ruleActualParameter_StartIndex = input.index();
        EObject this_ConstExp_0 = null;

        EObject this_TypeSpec_1 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 304) ) { return current; }
            // InternalIDL.g:11565:28: ( (this_ConstExp_0= ruleConstExp | this_TypeSpec_1= ruleTypeSpec ) )
            // InternalIDL.g:11566:1: (this_ConstExp_0= ruleConstExp | this_TypeSpec_1= ruleTypeSpec )
            {
            // InternalIDL.g:11566:1: (this_ConstExp_0= ruleConstExp | this_TypeSpec_1= ruleTypeSpec )
            int alt161=2;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_HEX_LITERAL:
            case RULE_CHARACTER_LITERAL:
            case RULE_FLOATING_PT_LITERAL:
            case RULE_INTEGER_LITERAL:
            case RULE_BOOLEAN_LITERAL:
            case 71:
            case 112:
            case 113:
            case 117:
                {
                alt161=1;
                }
                break;
            case 42:
                {
                int LA161_2 = input.LA(2);

                if ( (LA161_2==RULE_ID) ) {
                    int LA161_3 = input.LA(3);

                    if ( (synpred299_InternalIDL()) ) {
                        alt161=1;
                    }
                    else if ( (true) ) {
                        alt161=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 161, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 161, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA161_3 = input.LA(2);

                if ( (synpred299_InternalIDL()) ) {
                    alt161=1;
                }
                else if ( (true) ) {
                    alt161=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 161, 3, input);

                    throw nvae;
                }
                }
                break;
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 93:
            case 94:
            case 95:
            case 97:
            case 101:
            case 102:
            case 104:
                {
                alt161=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;
            }

            switch (alt161) {
                case 1 :
                    // InternalIDL.g:11567:2: this_ConstExp_0= ruleConstExp
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActualParameterAccess().getConstExpParserRuleCall_0()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_ConstExp_0=ruleConstExp();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_ConstExp_0; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;
                case 2 :
                    // InternalIDL.g:11580:2: this_TypeSpec_1= ruleTypeSpec
                    {
                    if ( state.backtracking==0 ) {
                       
                      	  /* */ 
                      	
                    }
                    if ( state.backtracking==0 ) {
                       
                              newCompositeNode(grammarAccess.getActualParameterAccess().getTypeSpecParserRuleCall_1()); 
                          
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeSpec_1=ruleTypeSpec();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {
                       
                              current = this_TypeSpec_1; 
                              afterParserOrEnumRuleCall();
                          
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 304, ruleActualParameter_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleActualParameter"


    // $ANTLR start "entryRuleTemplateModuleRef"
    // InternalIDL.g:11599:1: entryRuleTemplateModuleRef returns [EObject current=null] : iv_ruleTemplateModuleRef= ruleTemplateModuleRef EOF ;
    public final EObject entryRuleTemplateModuleRef() throws RecognitionException {
        EObject current = null;
        int entryRuleTemplateModuleRef_StartIndex = input.index();
        EObject iv_ruleTemplateModuleRef = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 305) ) { return current; }
            // InternalIDL.g:11600:2: (iv_ruleTemplateModuleRef= ruleTemplateModuleRef EOF )
            // InternalIDL.g:11601:2: iv_ruleTemplateModuleRef= ruleTemplateModuleRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTemplateModuleRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTemplateModuleRef=ruleTemplateModuleRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTemplateModuleRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 305, entryRuleTemplateModuleRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleTemplateModuleRef"


    // $ANTLR start "ruleTemplateModuleRef"
    // InternalIDL.g:11608:1: ruleTemplateModuleRef returns [EObject current=null] : (otherlv_0= 'alias' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_id_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_id_5_0= RULE_ID ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) ) ;
    public final EObject ruleTemplateModuleRef() throws RecognitionException {
        EObject current = null;
        int ruleTemplateModuleRef_StartIndex = input.index();
        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_id_3_0=null;
        Token otherlv_4=null;
        Token lv_id_5_0=null;
        Token otherlv_6=null;
        Token lv_name_7_0=null;
        EObject lv_type_1_0 = null;


         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 306) ) { return current; }
            // InternalIDL.g:11611:28: ( (otherlv_0= 'alias' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_id_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_id_5_0= RULE_ID ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) ) )
            // InternalIDL.g:11612:1: (otherlv_0= 'alias' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_id_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_id_5_0= RULE_ID ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) )
            {
            // InternalIDL.g:11612:1: (otherlv_0= 'alias' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_id_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_id_5_0= RULE_ID ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) ) )
            // InternalIDL.g:11612:3: otherlv_0= 'alias' ( (lv_type_1_0= ruleScopedName ) ) otherlv_2= '<' ( (lv_id_3_0= RULE_ID ) ) (otherlv_4= ',' ( (lv_id_5_0= RULE_ID ) ) )* otherlv_6= '>' ( (lv_name_7_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,142,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_0, grammarAccess.getTemplateModuleRefAccess().getAliasKeyword_0());
                  
            }
            // InternalIDL.g:11616:1: ( (lv_type_1_0= ruleScopedName ) )
            // InternalIDL.g:11617:1: (lv_type_1_0= ruleScopedName )
            {
            // InternalIDL.g:11617:1: (lv_type_1_0= ruleScopedName )
            // InternalIDL.g:11618:3: lv_type_1_0= ruleScopedName
            {
            if ( state.backtracking==0 ) {
               
              	        newCompositeNode(grammarAccess.getTemplateModuleRefAccess().getTypeScopedNameParserRuleCall_1_0()); 
              	    
            }
            pushFollow(FOLLOW_5);
            lv_type_1_0=ruleScopedName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElementForParent(grammarAccess.getTemplateModuleRefRule());
              	        }
                     		set(
                     			current, 
                     			"type",
                      		lv_type_1_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ScopedName");
              	        afterParserOrEnumRuleCall();
              	    
            }

            }


            }

            otherlv_2=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_2, grammarAccess.getTemplateModuleRefAccess().getLessThanSignKeyword_2());
                  
            }
            // InternalIDL.g:11638:1: ( (lv_id_3_0= RULE_ID ) )
            // InternalIDL.g:11639:1: (lv_id_3_0= RULE_ID )
            {
            // InternalIDL.g:11639:1: (lv_id_3_0= RULE_ID )
            // InternalIDL.g:11640:3: lv_id_3_0= RULE_ID
            {
            lv_id_3_0=(Token)match(input,RULE_ID,FOLLOW_78); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_id_3_0, grammarAccess.getTemplateModuleRefAccess().getIdIDTerminalRuleCall_3_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTemplateModuleRefRule());
              	        }
                     		addWithLastConsumed(
                     			current, 
                     			"id",
                      		lv_id_3_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }

            // InternalIDL.g:11656:2: (otherlv_4= ',' ( (lv_id_5_0= RULE_ID ) ) )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==65) ) {
                    alt162=1;
                }


                switch (alt162) {
            	case 1 :
            	    // InternalIDL.g:11656:4: otherlv_4= ',' ( (lv_id_5_0= RULE_ID ) )
            	    {
            	    otherlv_4=(Token)match(input,65,FOLLOW_6); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	          	newLeafNode(otherlv_4, grammarAccess.getTemplateModuleRefAccess().getCommaKeyword_4_0());
            	          
            	    }
            	    // InternalIDL.g:11660:1: ( (lv_id_5_0= RULE_ID ) )
            	    // InternalIDL.g:11661:1: (lv_id_5_0= RULE_ID )
            	    {
            	    // InternalIDL.g:11661:1: (lv_id_5_0= RULE_ID )
            	    // InternalIDL.g:11662:3: lv_id_5_0= RULE_ID
            	    {
            	    lv_id_5_0=(Token)match(input,RULE_ID,FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      			newLeafNode(lv_id_5_0, grammarAccess.getTemplateModuleRefAccess().getIdIDTerminalRuleCall_4_1_0()); 
            	      		
            	    }
            	    if ( state.backtracking==0 ) {

            	      	        if (current==null) {
            	      	            current = createModelElement(grammarAccess.getTemplateModuleRefRule());
            	      	        }
            	             		addWithLastConsumed(
            	             			current, 
            	             			"id",
            	              		lv_id_5_0, 
            	              		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
            	      	    
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);

            otherlv_6=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
            if ( state.backtracking==0 ) {

                  	newLeafNode(otherlv_6, grammarAccess.getTemplateModuleRefAccess().getGreaterThanSignKeyword_5());
                  
            }
            // InternalIDL.g:11682:1: ( (lv_name_7_0= RULE_ID ) )
            // InternalIDL.g:11683:1: (lv_name_7_0= RULE_ID )
            {
            // InternalIDL.g:11683:1: (lv_name_7_0= RULE_ID )
            // InternalIDL.g:11684:3: lv_name_7_0= RULE_ID
            {
            lv_name_7_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_name_7_0, grammarAccess.getTemplateModuleRefAccess().getNameIDTerminalRuleCall_6_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getTemplateModuleRefRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"name",
                      		lv_name_7_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.ID");
              	    
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 306, ruleTemplateModuleRef_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleTemplateModuleRef"


    // $ANTLR start "entryRuleIDLComment"
    // InternalIDL.g:11708:1: entryRuleIDLComment returns [EObject current=null] : iv_ruleIDLComment= ruleIDLComment EOF ;
    public final EObject entryRuleIDLComment() throws RecognitionException {
        EObject current = null;
        int entryRuleIDLComment_StartIndex = input.index();
        EObject iv_ruleIDLComment = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 307) ) { return current; }
            // InternalIDL.g:11709:2: (iv_ruleIDLComment= ruleIDLComment EOF )
            // InternalIDL.g:11710:2: iv_ruleIDLComment= ruleIDLComment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIDLCommentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIDLComment=ruleIDLComment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIDLComment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 307, entryRuleIDLComment_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "entryRuleIDLComment"


    // $ANTLR start "ruleIDLComment"
    // InternalIDL.g:11717:1: ruleIDLComment returns [EObject current=null] : ( (lv_body_0_0= RULE_SL_COMMENT ) ) ;
    public final EObject ruleIDLComment() throws RecognitionException {
        EObject current = null;
        int ruleIDLComment_StartIndex = input.index();
        Token lv_body_0_0=null;

         enterRule(); 
            
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 308) ) { return current; }
            // InternalIDL.g:11720:28: ( ( (lv_body_0_0= RULE_SL_COMMENT ) ) )
            // InternalIDL.g:11721:1: ( (lv_body_0_0= RULE_SL_COMMENT ) )
            {
            // InternalIDL.g:11721:1: ( (lv_body_0_0= RULE_SL_COMMENT ) )
            // InternalIDL.g:11722:1: (lv_body_0_0= RULE_SL_COMMENT )
            {
            // InternalIDL.g:11722:1: (lv_body_0_0= RULE_SL_COMMENT )
            // InternalIDL.g:11723:3: lv_body_0_0= RULE_SL_COMMENT
            {
            lv_body_0_0=(Token)match(input,RULE_SL_COMMENT,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(lv_body_0_0, grammarAccess.getIDLCommentAccess().getBodySL_COMMENTTerminalRuleCall_0()); 
              		
            }
            if ( state.backtracking==0 ) {

              	        if (current==null) {
              	            current = createModelElement(grammarAccess.getIDLCommentRule());
              	        }
                     		setWithLastConsumed(
                     			current, 
                     			"body",
                      		lv_body_0_0, 
                      		"com.zeligsoft.domain.omg.corba.dsl.IDL.SL_COMMENT");
              	    
            }

            }


            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 308, ruleIDLComment_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleIDLComment"


    // $ANTLR start "ruleParamDirection"
    // InternalIDL.g:11747:1: ruleParamDirection returns [Enumerator current=null] : ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) | (enumLiteral_3= 'return' ) ) ;
    public final Enumerator ruleParamDirection() throws RecognitionException {
        Enumerator current = null;
        int ruleParamDirection_StartIndex = input.index();
        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;

         enterRule(); 
        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 309) ) { return current; }
            // InternalIDL.g:11749:28: ( ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) | (enumLiteral_3= 'return' ) ) )
            // InternalIDL.g:11750:1: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) | (enumLiteral_3= 'return' ) )
            {
            // InternalIDL.g:11750:1: ( (enumLiteral_0= 'in' ) | (enumLiteral_1= 'out' ) | (enumLiteral_2= 'inout' ) | (enumLiteral_3= 'return' ) )
            int alt163=4;
            switch ( input.LA(1) ) {
            case 143:
                {
                alt163=1;
                }
                break;
            case 144:
                {
                alt163=2;
                }
                break;
            case 145:
                {
                alt163=3;
                }
                break;
            case 146:
                {
                alt163=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 163, 0, input);

                throw nvae;
            }

            switch (alt163) {
                case 1 :
                    // InternalIDL.g:11750:2: (enumLiteral_0= 'in' )
                    {
                    // InternalIDL.g:11750:2: (enumLiteral_0= 'in' )
                    // InternalIDL.g:11750:4: enumLiteral_0= 'in'
                    {
                    enumLiteral_0=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getParamDirectionAccess().getInEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_0, grammarAccess.getParamDirectionAccess().getInEnumLiteralDeclaration_0()); 
                          
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalIDL.g:11756:6: (enumLiteral_1= 'out' )
                    {
                    // InternalIDL.g:11756:6: (enumLiteral_1= 'out' )
                    // InternalIDL.g:11756:8: enumLiteral_1= 'out'
                    {
                    enumLiteral_1=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getParamDirectionAccess().getOutEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_1, grammarAccess.getParamDirectionAccess().getOutEnumLiteralDeclaration_1()); 
                          
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalIDL.g:11762:6: (enumLiteral_2= 'inout' )
                    {
                    // InternalIDL.g:11762:6: (enumLiteral_2= 'inout' )
                    // InternalIDL.g:11762:8: enumLiteral_2= 'inout'
                    {
                    enumLiteral_2=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getParamDirectionAccess().getInOutEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_2, grammarAccess.getParamDirectionAccess().getInOutEnumLiteralDeclaration_2()); 
                          
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalIDL.g:11768:6: (enumLiteral_3= 'return' )
                    {
                    // InternalIDL.g:11768:6: (enumLiteral_3= 'return' )
                    // InternalIDL.g:11768:8: enumLiteral_3= 'return'
                    {
                    enumLiteral_3=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                              current = grammarAccess.getParamDirectionAccess().getReturnEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                              newLeafNode(enumLiteral_3, grammarAccess.getParamDirectionAccess().getReturnEnumLiteralDeclaration_3()); 
                          
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {
               leaveRule(); 
            }
        }
         
            catch (RecognitionException re) { 
                recover(input,re); 
                appendSkippedTokens();
            } 
        finally {
            if ( state.backtracking>0 ) { memoize(input, 309, ruleParamDirection_StartIndex); }
        }
        return current;
    }
    // $ANTLR end "ruleParamDirection"

    // $ANTLR start synpred19_InternalIDL
    public final void synpred19_InternalIDL_fragment() throws RecognitionException {   
        EObject lv_value_4_0 = null;


        // InternalIDL.g:623:1: ( (lv_value_4_0= rulePreproc_If_Compare ) )
        // InternalIDL.g:623:1: (lv_value_4_0= rulePreproc_If_Compare )
        {
        // InternalIDL.g:623:1: (lv_value_4_0= rulePreproc_If_Compare )
        // InternalIDL.g:624:3: lv_value_4_0= rulePreproc_If_Compare
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPreproc_IfAccess().getValuePreproc_If_CompareParserRuleCall_3_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_value_4_0=rulePreproc_If_Compare();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalIDL

    // $ANTLR start synpred26_InternalIDL
    public final void synpred26_InternalIDL_fragment() throws RecognitionException {   
        EObject lv_exp_2_0 = null;


        // InternalIDL.g:952:1: ( (lv_exp_2_0= ruleConstExp ) )
        // InternalIDL.g:952:1: (lv_exp_2_0= ruleConstExp )
        {
        // InternalIDL.g:952:1: (lv_exp_2_0= ruleConstExp )
        // InternalIDL.g:953:3: lv_exp_2_0= ruleConstExp
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getPreproc_DefineAccess().getExpConstExpParserRuleCall_2_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_exp_2_0=ruleConstExp();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred26_InternalIDL

    // $ANTLR start synpred40_InternalIDL
    public final void synpred40_InternalIDL_fragment() throws RecognitionException {   
        Token this_ID_4=null;

        // InternalIDL.g:1730:6: (this_ID_4= RULE_ID )
        // InternalIDL.g:1730:6: this_ID_4= RULE_ID
        {
        this_ID_4=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred40_InternalIDL

    // $ANTLR start synpred41_InternalIDL
    public final void synpred41_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_Interface_or_Forward_Decl_0 = null;


        // InternalIDL.g:1888:2: ( (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' ) )
        // InternalIDL.g:1888:2: (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' )
        {
        // InternalIDL.g:1888:2: (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' )
        // InternalIDL.g:1889:2: this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_Interface_or_Forward_Decl_0=ruleInterface_or_Forward_Decl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred41_InternalIDL

    // $ANTLR start synpred42_InternalIDL
    public final void synpred42_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject this_ComponentForwardDecl_2 = null;


        // InternalIDL.g:1905:6: ( (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' ) )
        // InternalIDL.g:1905:6: (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' )
        {
        // InternalIDL.g:1905:6: (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' )
        // InternalIDL.g:1906:2: this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_ComponentForwardDecl_2=ruleComponentForwardDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred42_InternalIDL

    // $ANTLR start synpred44_InternalIDL
    public final void synpred44_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject this_Module_6 = null;


        // InternalIDL.g:1939:6: ( (this_Module_6= ruleModule otherlv_7= ';' ) )
        // InternalIDL.g:1939:6: (this_Module_6= ruleModule otherlv_7= ';' )
        {
        // InternalIDL.g:1939:6: (this_Module_6= ruleModule otherlv_7= ';' )
        // InternalIDL.g:1940:2: this_Module_6= ruleModule otherlv_7= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_Module_6=ruleModule();

        state._fsp--;
        if (state.failed) return ;
        otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred44_InternalIDL

    // $ANTLR start synpred46_InternalIDL
    public final void synpred46_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        EObject this_StructType_10 = null;


        // InternalIDL.g:1973:6: ( (this_StructType_10= ruleStructType otherlv_11= ';' ) )
        // InternalIDL.g:1973:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
        {
        // InternalIDL.g:1973:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
        // InternalIDL.g:1974:2: this_StructType_10= ruleStructType otherlv_11= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_StructType_10=ruleStructType();

        state._fsp--;
        if (state.failed) return ;
        otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred46_InternalIDL

    // $ANTLR start synpred47_InternalIDL
    public final void synpred47_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject this_TypeDecl_12 = null;


        // InternalIDL.g:1990:6: ( (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' ) )
        // InternalIDL.g:1990:6: (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' )
        {
        // InternalIDL.g:1990:6: (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' )
        // InternalIDL.g:1991:2: this_TypeDecl_12= ruleTypeDecl otherlv_13= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_TypeDecl_12=ruleTypeDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_13=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred47_InternalIDL

    // $ANTLR start synpred50_InternalIDL
    public final void synpred50_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject this_Event_17 = null;


        // InternalIDL.g:2037:6: ( (this_Event_17= ruleEvent otherlv_18= ';' ) )
        // InternalIDL.g:2037:6: (this_Event_17= ruleEvent otherlv_18= ';' )
        {
        // InternalIDL.g:2037:6: (this_Event_17= ruleEvent otherlv_18= ';' )
        // InternalIDL.g:2038:2: this_Event_17= ruleEvent otherlv_18= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_Event_17=ruleEvent();

        state._fsp--;
        if (state.failed) return ;
        otherlv_18=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalIDL

    // $ANTLR start synpred51_InternalIDL
    public final void synpred51_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        EObject this_ComponentDecl_19 = null;


        // InternalIDL.g:2054:6: ( (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' ) )
        // InternalIDL.g:2054:6: (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' )
        {
        // InternalIDL.g:2054:6: (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' )
        // InternalIDL.g:2055:2: this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_ComponentDecl_19=ruleComponentDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_20=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred51_InternalIDL

    // $ANTLR start synpred55_InternalIDL
    public final void synpred55_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_28=null;
        EObject this_TemplateModule_27 = null;


        // InternalIDL.g:2122:6: ( (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' ) )
        // InternalIDL.g:2122:6: (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' )
        {
        // InternalIDL.g:2122:6: (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' )
        // InternalIDL.g:2123:2: this_TemplateModule_27= ruleTemplateModule otherlv_28= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_TemplateModule_27=ruleTemplateModule();

        state._fsp--;
        if (state.failed) return ;
        otherlv_28=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred55_InternalIDL

    // $ANTLR start synpred56_InternalIDL
    public final void synpred56_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_30=null;
        EObject this_TemplateModuleInst_29 = null;


        // InternalIDL.g:2139:6: ( (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' ) )
        // InternalIDL.g:2139:6: (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' )
        {
        // InternalIDL.g:2139:6: (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' )
        // InternalIDL.g:2140:2: this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_TemplateModuleInst_29=ruleTemplateModuleInst();

        state._fsp--;
        if (state.failed) return ;
        otherlv_30=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred56_InternalIDL

    // $ANTLR start synpred69_InternalIDL
    public final void synpred69_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_AttrDecl_0 = null;


        // InternalIDL.g:2641:2: ( (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' ) )
        // InternalIDL.g:2641:2: (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' )
        {
        // InternalIDL.g:2641:2: (this_AttrDecl_0= ruleAttrDecl otherlv_1= ';' )
        // InternalIDL.g:2642:2: this_AttrDecl_0= ruleAttrDecl otherlv_1= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_AttrDecl_0=ruleAttrDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred69_InternalIDL

    // $ANTLR start synpred70_InternalIDL
    public final void synpred70_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject this_OpDecl_2 = null;


        // InternalIDL.g:2658:6: ( (this_OpDecl_2= ruleOpDecl otherlv_3= ';' ) )
        // InternalIDL.g:2658:6: (this_OpDecl_2= ruleOpDecl otherlv_3= ';' )
        {
        // InternalIDL.g:2658:6: (this_OpDecl_2= ruleOpDecl otherlv_3= ';' )
        // InternalIDL.g:2659:2: this_OpDecl_2= ruleOpDecl otherlv_3= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_OpDecl_2=ruleOpDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_3=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred70_InternalIDL

    // $ANTLR start synpred79_InternalIDL
    public final void synpred79_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token lv_names_9_0=null;

        // InternalIDL.g:2922:8: (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )
        // InternalIDL.g:2922:8: otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) )
        {
        otherlv_8=(Token)match(input,65,FOLLOW_6); if (state.failed) return ;
        // InternalIDL.g:2926:1: ( (lv_names_9_0= RULE_ID ) )
        // InternalIDL.g:2927:1: (lv_names_9_0= RULE_ID )
        {
        // InternalIDL.g:2927:1: (lv_names_9_0= RULE_ID )
        // InternalIDL.g:2928:3: lv_names_9_0= RULE_ID
        {
        lv_names_9_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred79_InternalIDL

    // $ANTLR start synpred80_InternalIDL
    public final void synpred80_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token lv_names_9_0=null;

        // InternalIDL.g:2922:6: ( (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )
        // InternalIDL.g:2922:6: (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )*
        {
        // InternalIDL.g:2922:6: (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )*
        loop169:
        do {
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==65) ) {
                alt169=1;
            }


            switch (alt169) {
        	case 1 :
        	    // InternalIDL.g:2922:8: otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) )
        	    {
        	    otherlv_8=(Token)match(input,65,FOLLOW_6); if (state.failed) return ;
        	    // InternalIDL.g:2926:1: ( (lv_names_9_0= RULE_ID ) )
        	    // InternalIDL.g:2927:1: (lv_names_9_0= RULE_ID )
        	    {
        	    // InternalIDL.g:2927:1: (lv_names_9_0= RULE_ID )
        	    // InternalIDL.g:2928:3: lv_names_9_0= RULE_ID
        	    {
        	    lv_names_9_0=(Token)match(input,RULE_ID,FOLLOW_114); if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop169;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred80_InternalIDL

    // $ANTLR start synpred84_InternalIDL
    public final void synpred84_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token lv_names_15_0=null;

        // InternalIDL.g:2990:6: ( (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )* )
        // InternalIDL.g:2990:6: (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )*
        {
        // InternalIDL.g:2990:6: (otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) ) )*
        loop171:
        do {
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==65) ) {
                alt171=1;
            }


            switch (alt171) {
        	case 1 :
        	    // InternalIDL.g:2990:8: otherlv_14= ',' ( (lv_names_15_0= RULE_ID ) )
        	    {
        	    otherlv_14=(Token)match(input,65,FOLLOW_6); if (state.failed) return ;
        	    // InternalIDL.g:2994:1: ( (lv_names_15_0= RULE_ID ) )
        	    // InternalIDL.g:2995:1: (lv_names_15_0= RULE_ID )
        	    {
        	    // InternalIDL.g:2995:1: (lv_names_15_0= RULE_ID )
        	    // InternalIDL.g:2996:3: lv_names_15_0= RULE_ID
        	    {
        	    lv_names_15_0=(Token)match(input,RULE_ID,FOLLOW_114); if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop171;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred84_InternalIDL

    // $ANTLR start synpred88_InternalIDL
    public final void synpred88_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token lv_names_8_0=null;

        // InternalIDL.g:3136:8: (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )
        // InternalIDL.g:3136:8: otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) )
        {
        otherlv_7=(Token)match(input,65,FOLLOW_6); if (state.failed) return ;
        // InternalIDL.g:3140:1: ( (lv_names_8_0= RULE_ID ) )
        // InternalIDL.g:3141:1: (lv_names_8_0= RULE_ID )
        {
        // InternalIDL.g:3141:1: (lv_names_8_0= RULE_ID )
        // InternalIDL.g:3142:3: lv_names_8_0= RULE_ID
        {
        lv_names_8_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred88_InternalIDL

    // $ANTLR start synpred89_InternalIDL
    public final void synpred89_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token lv_names_8_0=null;

        // InternalIDL.g:3136:6: ( (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )* )
        // InternalIDL.g:3136:6: (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )*
        {
        // InternalIDL.g:3136:6: (otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) ) )*
        loop172:
        do {
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==65) ) {
                alt172=1;
            }


            switch (alt172) {
        	case 1 :
        	    // InternalIDL.g:3136:8: otherlv_7= ',' ( (lv_names_8_0= RULE_ID ) )
        	    {
        	    otherlv_7=(Token)match(input,65,FOLLOW_6); if (state.failed) return ;
        	    // InternalIDL.g:3140:1: ( (lv_names_8_0= RULE_ID ) )
        	    // InternalIDL.g:3141:1: (lv_names_8_0= RULE_ID )
        	    {
        	    // InternalIDL.g:3141:1: (lv_names_8_0= RULE_ID )
        	    // InternalIDL.g:3142:3: lv_names_8_0= RULE_ID
        	    {
        	    lv_names_8_0=(Token)match(input,RULE_ID,FOLLOW_114); if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop172;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred89_InternalIDL

    // $ANTLR start synpred92_InternalIDL
    public final void synpred92_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token lv_names_12_0=null;

        // InternalIDL.g:3181:6: ( (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )* )
        // InternalIDL.g:3181:6: (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )*
        {
        // InternalIDL.g:3181:6: (otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) ) )*
        loop173:
        do {
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==65) ) {
                alt173=1;
            }


            switch (alt173) {
        	case 1 :
        	    // InternalIDL.g:3181:8: otherlv_11= ',' ( (lv_names_12_0= RULE_ID ) )
        	    {
        	    otherlv_11=(Token)match(input,65,FOLLOW_6); if (state.failed) return ;
        	    // InternalIDL.g:3185:1: ( (lv_names_12_0= RULE_ID ) )
        	    // InternalIDL.g:3186:1: (lv_names_12_0= RULE_ID )
        	    {
        	    // InternalIDL.g:3186:1: (lv_names_12_0= RULE_ID )
        	    // InternalIDL.g:3187:3: lv_names_12_0= RULE_ID
        	    {
        	    lv_names_12_0=(Token)match(input,RULE_ID,FOLLOW_114); if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop173;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred92_InternalIDL

    // $ANTLR start synpred109_InternalIDL
    public final void synpred109_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_name_3_0=null;

        // InternalIDL.g:3892:4: (otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) ) )
        // InternalIDL.g:3892:4: otherlv_2= '::' ( (lv_name_3_0= RULE_ID ) )
        {
        otherlv_2=(Token)match(input,42,FOLLOW_6); if (state.failed) return ;
        // InternalIDL.g:3896:1: ( (lv_name_3_0= RULE_ID ) )
        // InternalIDL.g:3897:1: (lv_name_3_0= RULE_ID )
        {
        // InternalIDL.g:3897:1: (lv_name_3_0= RULE_ID )
        // InternalIDL.g:3898:3: lv_name_3_0= RULE_ID
        {
        lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred109_InternalIDL

    // $ANTLR start synpred161_InternalIDL
    public final void synpred161_InternalIDL_fragment() throws RecognitionException {   
        EObject lv_comments_2_0 = null;


        // InternalIDL.g:6164:1: ( (lv_comments_2_0= ruleIDLComment ) )
        // InternalIDL.g:6164:1: (lv_comments_2_0= ruleIDLComment )
        {
        // InternalIDL.g:6164:1: (lv_comments_2_0= ruleIDLComment )
        // InternalIDL.g:6165:3: lv_comments_2_0= ruleIDLComment
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_comments_2_0=ruleIDLComment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred161_InternalIDL

    // $ANTLR start synpred164_InternalIDL
    public final void synpred164_InternalIDL_fragment() throws RecognitionException {   
        EObject lv_comments_6_0 = null;


        // InternalIDL.g:6222:1: ( (lv_comments_6_0= ruleIDLComment ) )
        // InternalIDL.g:6222:1: (lv_comments_6_0= ruleIDLComment )
        {
        // InternalIDL.g:6222:1: (lv_comments_6_0= ruleIDLComment )
        // InternalIDL.g:6223:3: lv_comments_6_0= ruleIDLComment
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getCaseAccess().getCommentsIDLCommentParserRuleCall_5_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_comments_6_0=ruleIDLComment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred164_InternalIDL

    // $ANTLR start synpred183_InternalIDL
    public final void synpred183_InternalIDL_fragment() throws RecognitionException {   
        Token lv_op_1_0=null;
        EObject lv_rhs_2_0 = null;


        // InternalIDL.g:7254:3: ( ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) ) )
        // InternalIDL.g:7254:3: ( (lv_op_1_0= '|' ) ) ( (lv_rhs_2_0= ruleOrExpr ) )
        {
        // InternalIDL.g:7254:3: ( (lv_op_1_0= '|' ) )
        // InternalIDL.g:7255:1: (lv_op_1_0= '|' )
        {
        // InternalIDL.g:7255:1: (lv_op_1_0= '|' )
        // InternalIDL.g:7256:3: lv_op_1_0= '|'
        {
        lv_op_1_0=(Token)match(input,107,FOLLOW_10); if (state.failed) return ;

        }


        }

        // InternalIDL.g:7269:2: ( (lv_rhs_2_0= ruleOrExpr ) )
        // InternalIDL.g:7270:1: (lv_rhs_2_0= ruleOrExpr )
        {
        // InternalIDL.g:7270:1: (lv_rhs_2_0= ruleOrExpr )
        // InternalIDL.g:7271:3: lv_rhs_2_0= ruleOrExpr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getOrExprAccess().getRhsOrExprParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_rhs_2_0=ruleOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred183_InternalIDL

    // $ANTLR start synpred184_InternalIDL
    public final void synpred184_InternalIDL_fragment() throws RecognitionException {   
        Token lv_op_1_0=null;
        EObject lv_rhs_2_0 = null;


        // InternalIDL.g:7326:3: ( ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) ) )
        // InternalIDL.g:7326:3: ( (lv_op_1_0= '^' ) ) ( (lv_rhs_2_0= ruleXOrExpr ) )
        {
        // InternalIDL.g:7326:3: ( (lv_op_1_0= '^' ) )
        // InternalIDL.g:7327:1: (lv_op_1_0= '^' )
        {
        // InternalIDL.g:7327:1: (lv_op_1_0= '^' )
        // InternalIDL.g:7328:3: lv_op_1_0= '^'
        {
        lv_op_1_0=(Token)match(input,108,FOLLOW_10); if (state.failed) return ;

        }


        }

        // InternalIDL.g:7341:2: ( (lv_rhs_2_0= ruleXOrExpr ) )
        // InternalIDL.g:7342:1: (lv_rhs_2_0= ruleXOrExpr )
        {
        // InternalIDL.g:7342:1: (lv_rhs_2_0= ruleXOrExpr )
        // InternalIDL.g:7343:3: lv_rhs_2_0= ruleXOrExpr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getXOrExprAccess().getRhsXOrExprParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_rhs_2_0=ruleXOrExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred184_InternalIDL

    // $ANTLR start synpred185_InternalIDL
    public final void synpred185_InternalIDL_fragment() throws RecognitionException {   
        Token lv_op_1_0=null;
        EObject lv_rhs_2_0 = null;


        // InternalIDL.g:7398:3: ( ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) ) )
        // InternalIDL.g:7398:3: ( (lv_op_1_0= '&' ) ) ( (lv_rhs_2_0= ruleAndExpr ) )
        {
        // InternalIDL.g:7398:3: ( (lv_op_1_0= '&' ) )
        // InternalIDL.g:7399:1: (lv_op_1_0= '&' )
        {
        // InternalIDL.g:7399:1: (lv_op_1_0= '&' )
        // InternalIDL.g:7400:3: lv_op_1_0= '&'
        {
        lv_op_1_0=(Token)match(input,109,FOLLOW_10); if (state.failed) return ;

        }


        }

        // InternalIDL.g:7413:2: ( (lv_rhs_2_0= ruleAndExpr ) )
        // InternalIDL.g:7414:1: (lv_rhs_2_0= ruleAndExpr )
        {
        // InternalIDL.g:7414:1: (lv_rhs_2_0= ruleAndExpr )
        // InternalIDL.g:7415:3: lv_rhs_2_0= ruleAndExpr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getAndExprAccess().getRhsAndExprParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_rhs_2_0=ruleAndExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred185_InternalIDL

    // $ANTLR start synpred187_InternalIDL
    public final void synpred187_InternalIDL_fragment() throws RecognitionException {   
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        EObject lv_rhs_3_0 = null;


        // InternalIDL.g:7470:3: ( ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) ) )
        // InternalIDL.g:7470:3: ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) ) ( (lv_rhs_3_0= ruleShiftExpr ) )
        {
        // InternalIDL.g:7470:3: ( ( (lv_op_1_0= '<<' ) ) | ( (lv_op_2_0= '>>' ) ) )
        int alt179=2;
        int LA179_0 = input.LA(1);

        if ( (LA179_0==110) ) {
            alt179=1;
        }
        else if ( (LA179_0==111) ) {
            alt179=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 179, 0, input);

            throw nvae;
        }
        switch (alt179) {
            case 1 :
                // InternalIDL.g:7470:4: ( (lv_op_1_0= '<<' ) )
                {
                // InternalIDL.g:7470:4: ( (lv_op_1_0= '<<' ) )
                // InternalIDL.g:7471:1: (lv_op_1_0= '<<' )
                {
                // InternalIDL.g:7471:1: (lv_op_1_0= '<<' )
                // InternalIDL.g:7472:3: lv_op_1_0= '<<'
                {
                lv_op_1_0=(Token)match(input,110,FOLLOW_10); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalIDL.g:7486:6: ( (lv_op_2_0= '>>' ) )
                {
                // InternalIDL.g:7486:6: ( (lv_op_2_0= '>>' ) )
                // InternalIDL.g:7487:1: (lv_op_2_0= '>>' )
                {
                // InternalIDL.g:7487:1: (lv_op_2_0= '>>' )
                // InternalIDL.g:7488:3: lv_op_2_0= '>>'
                {
                lv_op_2_0=(Token)match(input,111,FOLLOW_10); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalIDL.g:7501:3: ( (lv_rhs_3_0= ruleShiftExpr ) )
        // InternalIDL.g:7502:1: (lv_rhs_3_0= ruleShiftExpr )
        {
        // InternalIDL.g:7502:1: (lv_rhs_3_0= ruleShiftExpr )
        // InternalIDL.g:7503:3: lv_rhs_3_0= ruleShiftExpr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getShiftExprAccess().getRhsShiftExprParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_rhs_3_0=ruleShiftExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred187_InternalIDL

    // $ANTLR start synpred189_InternalIDL
    public final void synpred189_InternalIDL_fragment() throws RecognitionException {   
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        EObject lv_rhs_3_0 = null;


        // InternalIDL.g:7558:3: ( ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) ) )
        // InternalIDL.g:7558:3: ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) ) ( (lv_rhs_3_0= ruleAddExpr ) )
        {
        // InternalIDL.g:7558:3: ( ( (lv_op_1_0= '+' ) ) | ( (lv_op_2_0= '-' ) ) )
        int alt180=2;
        int LA180_0 = input.LA(1);

        if ( (LA180_0==112) ) {
            alt180=1;
        }
        else if ( (LA180_0==113) ) {
            alt180=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 180, 0, input);

            throw nvae;
        }
        switch (alt180) {
            case 1 :
                // InternalIDL.g:7558:4: ( (lv_op_1_0= '+' ) )
                {
                // InternalIDL.g:7558:4: ( (lv_op_1_0= '+' ) )
                // InternalIDL.g:7559:1: (lv_op_1_0= '+' )
                {
                // InternalIDL.g:7559:1: (lv_op_1_0= '+' )
                // InternalIDL.g:7560:3: lv_op_1_0= '+'
                {
                lv_op_1_0=(Token)match(input,112,FOLLOW_10); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalIDL.g:7574:6: ( (lv_op_2_0= '-' ) )
                {
                // InternalIDL.g:7574:6: ( (lv_op_2_0= '-' ) )
                // InternalIDL.g:7575:1: (lv_op_2_0= '-' )
                {
                // InternalIDL.g:7575:1: (lv_op_2_0= '-' )
                // InternalIDL.g:7576:3: lv_op_2_0= '-'
                {
                lv_op_2_0=(Token)match(input,113,FOLLOW_10); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalIDL.g:7589:3: ( (lv_rhs_3_0= ruleAddExpr ) )
        // InternalIDL.g:7590:1: (lv_rhs_3_0= ruleAddExpr )
        {
        // InternalIDL.g:7590:1: (lv_rhs_3_0= ruleAddExpr )
        // InternalIDL.g:7591:3: lv_rhs_3_0= ruleAddExpr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getAddExprAccess().getRhsAddExprParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_rhs_3_0=ruleAddExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred189_InternalIDL

    // $ANTLR start synpred192_InternalIDL
    public final void synpred192_InternalIDL_fragment() throws RecognitionException {   
        Token lv_op_1_0=null;
        Token lv_op_2_0=null;
        Token lv_op_3_0=null;
        EObject lv_rhs_4_0 = null;


        // InternalIDL.g:7646:3: ( ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) ) )
        // InternalIDL.g:7646:3: ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) ) ( (lv_rhs_4_0= ruleMultExpr ) )
        {
        // InternalIDL.g:7646:3: ( ( (lv_op_1_0= '*' ) ) | ( (lv_op_2_0= '/' ) ) | ( (lv_op_3_0= '%' ) ) )
        int alt181=3;
        switch ( input.LA(1) ) {
        case 114:
            {
            alt181=1;
            }
            break;
        case 115:
            {
            alt181=2;
            }
            break;
        case 116:
            {
            alt181=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 181, 0, input);

            throw nvae;
        }

        switch (alt181) {
            case 1 :
                // InternalIDL.g:7646:4: ( (lv_op_1_0= '*' ) )
                {
                // InternalIDL.g:7646:4: ( (lv_op_1_0= '*' ) )
                // InternalIDL.g:7647:1: (lv_op_1_0= '*' )
                {
                // InternalIDL.g:7647:1: (lv_op_1_0= '*' )
                // InternalIDL.g:7648:3: lv_op_1_0= '*'
                {
                lv_op_1_0=(Token)match(input,114,FOLLOW_10); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalIDL.g:7662:6: ( (lv_op_2_0= '/' ) )
                {
                // InternalIDL.g:7662:6: ( (lv_op_2_0= '/' ) )
                // InternalIDL.g:7663:1: (lv_op_2_0= '/' )
                {
                // InternalIDL.g:7663:1: (lv_op_2_0= '/' )
                // InternalIDL.g:7664:3: lv_op_2_0= '/'
                {
                lv_op_2_0=(Token)match(input,115,FOLLOW_10); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalIDL.g:7678:6: ( (lv_op_3_0= '%' ) )
                {
                // InternalIDL.g:7678:6: ( (lv_op_3_0= '%' ) )
                // InternalIDL.g:7679:1: (lv_op_3_0= '%' )
                {
                // InternalIDL.g:7679:1: (lv_op_3_0= '%' )
                // InternalIDL.g:7680:3: lv_op_3_0= '%'
                {
                lv_op_3_0=(Token)match(input,116,FOLLOW_10); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalIDL.g:7693:3: ( (lv_rhs_4_0= ruleMultExpr ) )
        // InternalIDL.g:7694:1: (lv_rhs_4_0= ruleMultExpr )
        {
        // InternalIDL.g:7694:1: (lv_rhs_4_0= ruleMultExpr )
        // InternalIDL.g:7695:3: lv_rhs_4_0= ruleMultExpr
        {
        if ( state.backtracking==0 ) {
           
          	        newCompositeNode(grammarAccess.getMultExprAccess().getRhsMultExprParserRuleCall_1_1_0()); 
          	    
        }
        pushFollow(FOLLOW_2);
        lv_rhs_4_0=ruleMultExpr();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred192_InternalIDL

    // $ANTLR start synpred213_InternalIDL
    public final void synpred213_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        EObject this_AttrDecl_10 = null;


        // InternalIDL.g:8257:6: ( (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' ) )
        // InternalIDL.g:8257:6: (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' )
        {
        // InternalIDL.g:8257:6: (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' )
        // InternalIDL.g:8258:2: this_AttrDecl_10= ruleAttrDecl otherlv_11= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_AttrDecl_10=ruleAttrDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred213_InternalIDL

    // $ANTLR start synpred228_InternalIDL
    public final void synpred228_InternalIDL_fragment() throws RecognitionException {   
        EObject this_Export_0 = null;


        // InternalIDL.g:9027:2: (this_Export_0= ruleExport )
        // InternalIDL.g:9027:2: this_Export_0= ruleExport
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_2);
        this_Export_0=ruleExport();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred228_InternalIDL

    // $ANTLR start synpred229_InternalIDL
    public final void synpred229_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject this_FactoryDcl_1 = null;


        // InternalIDL.g:9039:6: ( (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' ) )
        // InternalIDL.g:9039:6: (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' )
        {
        // InternalIDL.g:9039:6: (this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';' )
        // InternalIDL.g:9040:2: this_FactoryDcl_1= ruleFactoryDcl otherlv_2= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_FactoryDcl_1=ruleFactoryDcl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_2=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred229_InternalIDL

    // $ANTLR start synpred250_InternalIDL
    public final void synpred250_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject this_AttrDecl_4 = null;


        // InternalIDL.g:9823:6: ( (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' ) )
        // InternalIDL.g:9823:6: (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' )
        {
        // InternalIDL.g:9823:6: (this_AttrDecl_4= ruleAttrDecl otherlv_5= ';' )
        // InternalIDL.g:9824:2: this_AttrDecl_4= ruleAttrDecl otherlv_5= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_AttrDecl_4=ruleAttrDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_5=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred250_InternalIDL

    // $ANTLR start synpred258_InternalIDL
    public final void synpred258_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject this_AttrDecl_6 = null;


        // InternalIDL.g:10149:6: ( (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' ) )
        // InternalIDL.g:10149:6: (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' )
        {
        // InternalIDL.g:10149:6: (this_AttrDecl_6= ruleAttrDecl otherlv_7= ';' )
        // InternalIDL.g:10150:2: this_AttrDecl_6= ruleAttrDecl otherlv_7= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_AttrDecl_6=ruleAttrDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred258_InternalIDL

    // $ANTLR start synpred271_InternalIDL
    public final void synpred271_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_TypeDecl_0 = null;


        // InternalIDL.g:10879:2: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) )
        // InternalIDL.g:10879:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
        {
        // InternalIDL.g:10879:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
        // InternalIDL.g:10880:2: this_TypeDecl_0= ruleTypeDecl otherlv_1= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_TypeDecl_0=ruleTypeDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred271_InternalIDL

    // $ANTLR start synpred274_InternalIDL
    public final void synpred274_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject this_Interface_decl_6 = null;


        // InternalIDL.g:10930:6: ( (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) )
        // InternalIDL.g:10930:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
        {
        // InternalIDL.g:10930:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
        // InternalIDL.g:10931:2: this_Interface_decl_6= ruleInterface_decl otherlv_7= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_Interface_decl_6=ruleInterface_decl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred274_InternalIDL

    // $ANTLR start synpred276_InternalIDL
    public final void synpred276_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        EObject this_StructType_10 = null;


        // InternalIDL.g:10964:6: ( (this_StructType_10= ruleStructType otherlv_11= ';' ) )
        // InternalIDL.g:10964:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
        {
        // InternalIDL.g:10964:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
        // InternalIDL.g:10965:2: this_StructType_10= ruleStructType otherlv_11= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_StructType_10=ruleStructType();

        state._fsp--;
        if (state.failed) return ;
        otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred276_InternalIDL

    // $ANTLR start synpred278_InternalIDL
    public final void synpred278_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        EObject this_Event_14 = null;


        // InternalIDL.g:10998:6: ( (this_Event_14= ruleEvent otherlv_15= ';' ) )
        // InternalIDL.g:10998:6: (this_Event_14= ruleEvent otherlv_15= ';' )
        {
        // InternalIDL.g:10998:6: (this_Event_14= ruleEvent otherlv_15= ';' )
        // InternalIDL.g:10999:2: this_Event_14= ruleEvent otherlv_15= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_Event_14=ruleEvent();

        state._fsp--;
        if (state.failed) return ;
        otherlv_15=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred278_InternalIDL

    // $ANTLR start synpred279_InternalIDL
    public final void synpred279_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        EObject this_ComponentDecl_16 = null;


        // InternalIDL.g:11015:6: ( (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) )
        // InternalIDL.g:11015:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
        {
        // InternalIDL.g:11015:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
        // InternalIDL.g:11016:2: this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_ComponentDecl_16=ruleComponentDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_17=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred279_InternalIDL

    // $ANTLR start synpred285_InternalIDL
    public final void synpred285_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject this_TypeDecl_0 = null;


        // InternalIDL.g:11202:2: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) )
        // InternalIDL.g:11202:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
        {
        // InternalIDL.g:11202:2: (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' )
        // InternalIDL.g:11203:2: this_TypeDecl_0= ruleTypeDecl otherlv_1= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_TypeDecl_0=ruleTypeDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_1=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred285_InternalIDL

    // $ANTLR start synpred288_InternalIDL
    public final void synpred288_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject this_Interface_decl_6 = null;


        // InternalIDL.g:11253:6: ( (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) )
        // InternalIDL.g:11253:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
        {
        // InternalIDL.g:11253:6: (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' )
        // InternalIDL.g:11254:2: this_Interface_decl_6= ruleInterface_decl otherlv_7= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_Interface_decl_6=ruleInterface_decl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_7=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred288_InternalIDL

    // $ANTLR start synpred290_InternalIDL
    public final void synpred290_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        EObject this_StructType_10 = null;


        // InternalIDL.g:11287:6: ( (this_StructType_10= ruleStructType otherlv_11= ';' ) )
        // InternalIDL.g:11287:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
        {
        // InternalIDL.g:11287:6: (this_StructType_10= ruleStructType otherlv_11= ';' )
        // InternalIDL.g:11288:2: this_StructType_10= ruleStructType otherlv_11= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_StructType_10=ruleStructType();

        state._fsp--;
        if (state.failed) return ;
        otherlv_11=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred290_InternalIDL

    // $ANTLR start synpred292_InternalIDL
    public final void synpred292_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        EObject this_Event_14 = null;


        // InternalIDL.g:11321:6: ( (this_Event_14= ruleEvent otherlv_15= ';' ) )
        // InternalIDL.g:11321:6: (this_Event_14= ruleEvent otherlv_15= ';' )
        {
        // InternalIDL.g:11321:6: (this_Event_14= ruleEvent otherlv_15= ';' )
        // InternalIDL.g:11322:2: this_Event_14= ruleEvent otherlv_15= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_Event_14=ruleEvent();

        state._fsp--;
        if (state.failed) return ;
        otherlv_15=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred292_InternalIDL

    // $ANTLR start synpred293_InternalIDL
    public final void synpred293_InternalIDL_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        EObject this_ComponentDecl_16 = null;


        // InternalIDL.g:11338:6: ( (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) )
        // InternalIDL.g:11338:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
        {
        // InternalIDL.g:11338:6: (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' )
        // InternalIDL.g:11339:2: this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';'
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_28);
        this_ComponentDecl_16=ruleComponentDecl();

        state._fsp--;
        if (state.failed) return ;
        otherlv_17=(Token)match(input,57,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred293_InternalIDL

    // $ANTLR start synpred299_InternalIDL
    public final void synpred299_InternalIDL_fragment() throws RecognitionException {   
        EObject this_ConstExp_0 = null;


        // InternalIDL.g:11567:2: (this_ConstExp_0= ruleConstExp )
        // InternalIDL.g:11567:2: this_ConstExp_0= ruleConstExp
        {
        if ( state.backtracking==0 ) {
           
          	  /* */ 
          	
        }
        pushFollow(FOLLOW_2);
        this_ConstExp_0=ruleConstExp();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred299_InternalIDL

    // Delegated rules

    public final boolean synpred276_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred285_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred285_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred293_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred293_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred258_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred258_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred271_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred271_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred292_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred292_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred89_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred89_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred56_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred56_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred26_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred26_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred161_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred161_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred84_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred84_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred80_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred80_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred288_InternalIDL() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred288_InternalIDL_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA13 dfa13 = new DFA13(this);
    protected DFA16 dfa16 = new DFA16(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA32 dfa32 = new DFA32(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA156 dfa156 = new DFA156(this);
    protected DFA158 dfa158 = new DFA158(this);
    static final String dfa_1s = "\16\uffff";
    static final String dfa_2s = "\1\uffff\1\3\14\uffff";
    static final String dfa_3s = "\1\47\1\4\3\uffff\1\54\10\uffff";
    static final String dfa_4s = "\1\47\1\u008b\3\uffff\1\57\10\uffff";
    static final String dfa_5s = "\2\uffff\1\2\1\13\1\12\1\uffff\1\10\1\1\1\7\1\11\1\3\1\6\1\5\1\4";
    static final String dfa_6s = "\16\uffff}>";
    static final String[] dfa_7s = {
            "\1\1",
            "\2\3\5\uffff\1\3\10\uffff\1\3\3\uffff\5\3\6\uffff\5\3\1\7\1\2\1\3\1\5\4\uffff\1\10\1\3\1\6\1\11\1\4\1\uffff\2\3\2\uffff\1\3\1\uffff\4\3\2\uffff\1\3\2\uffff\1\3\3\uffff\2\3\1\uffff\17\3\2\uffff\5\3\3\uffff\1\3\1\uffff\1\3\1\uffff\1\3\14\uffff\1\3\1\uffff\2\3\1\uffff\4\3\2\uffff\4\3\1\uffff\6\3",
            "",
            "",
            "",
            "\1\12\1\15\1\14\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "1024:1: (this_Preproc_Pragma_Prefix_0= rulePreproc_Pragma_Prefix | this_Preproc_Pragma_Conn_Type_1= rulePreproc_Pragma_Conn_Type | this_Preproc_Pragma_Ciao_Lem_2= rulePreproc_Pragma_Ciao_Lem | this_Preproc_Pragma_Ciao_Ami4ccm_Interface_3= rulePreproc_Pragma_Ciao_Ami4ccm_Interface | this_Preproc_Pragma_Ciao_Ami4ccm_Receptacle_4= rulePreproc_Pragma_Ciao_Ami4ccm_Receptacle | this_Preproc_Pragma_Ciao_Ami4ccm_Idl_5= rulePreproc_Pragma_Ciao_Ami4ccm_Idl | this_Preproc_Pragma_Ndds_6= rulePreproc_Pragma_Ndds | this_Preproc_Pragma_Component_7= rulePreproc_Pragma_Component | this_Preproc_Pragma_Home_8= rulePreproc_Pragma_Home | this_Preproc_Pragma_DDS4CCM_Impl_9= rulePreproc_Pragma_DDS4CCM_Impl | this_Preproc_Pragma_Misc_10= rulePreproc_Pragma_Misc )";
        }
    }
    static final String dfa_8s = "\51\uffff";
    static final String dfa_9s = "\1\13\1\0\2\uffff\1\0\1\uffff\1\0\1\uffff\3\0\23\uffff\1\0\12\uffff";
    static final String dfa_10s = "\1\u008b\1\0\2\uffff\1\0\1\uffff\1\0\1\uffff\3\0\23\uffff\1\0\12\uffff";
    static final String dfa_11s = "\2\uffff\1\1\2\uffff\1\3\1\uffff\1\5\3\uffff\1\7\2\uffff\1\10\1\11\14\uffff\1\12\2\uffff\1\14\1\15\1\16\1\2\1\13\1\4\1\17\1\20\1\6\1\21";
    static final String dfa_12s = "\1\uffff\1\0\2\uffff\1\1\1\uffff\1\2\1\uffff\1\3\1\4\1\5\23\uffff\1\6\12\uffff}>";
    static final String[] dfa_13s = {
            "\1\36\10\uffff\1\17\3\uffff\5\17\6\uffff\5\17\16\uffff\2\17\2\uffff\1\6\2\uffff\1\1\2\2\32\uffff\1\7\2\uffff\1\10\1\11\1\12\2\13\3\uffff\1\13\1\uffff\1\16\1\uffff\1\5\14\uffff\1\4\7\uffff\1\37\4\uffff\2\34\3\uffff\1\40\2\uffff\1\41",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA16 extends DFA {

        public DFA16(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 16;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "1888:1: ( (this_Interface_or_Forward_Decl_0= ruleInterface_or_Forward_Decl otherlv_1= ';' ) | (this_ComponentForwardDecl_2= ruleComponentForwardDecl otherlv_3= ';' ) | (this_ConstDecl_4= ruleConstDecl otherlv_5= ';' ) | (this_Module_6= ruleModule otherlv_7= ';' ) | (this_ExceptDecl_8= ruleExceptDecl otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_TypeDecl_12= ruleTypeDecl otherlv_13= ';' ) | (this_NativeType_14= ruleNativeType otherlv_15= ';' ) | this_Preproc_16= rulePreproc | (this_Event_17= ruleEvent otherlv_18= ';' ) | (this_ComponentDecl_19= ruleComponentDecl otherlv_20= ';' ) | (this_HomeDecl_21= ruleHomeDecl otherlv_22= ';' ) | (this_PortTypeDecl_23= rulePortTypeDecl otherlv_24= ';' ) | (this_Connector_25= ruleConnector otherlv_26= ';' ) | (this_TemplateModule_27= ruleTemplateModule otherlv_28= ';' ) | (this_TemplateModuleInst_29= ruleTemplateModuleInst otherlv_30= ';' ) | this_IDLComment_31= ruleIDLComment )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA16_1 = input.LA(1);

                         
                        int index16_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred41_InternalIDL()) ) {s = 2;}

                        else if ( (synpred50_InternalIDL()) ) {s = 28;}

                         
                        input.seek(index16_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA16_4 = input.LA(1);

                         
                        int index16_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred42_InternalIDL()) ) {s = 34;}

                        else if ( (synpred51_InternalIDL()) ) {s = 35;}

                         
                        input.seek(index16_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA16_6 = input.LA(1);

                         
                        int index16_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalIDL()) ) {s = 36;}

                        else if ( (synpred55_InternalIDL()) ) {s = 37;}

                        else if ( (synpred56_InternalIDL()) ) {s = 38;}

                         
                        input.seek(index16_6);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA16_8 = input.LA(1);

                         
                        int index16_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalIDL()) ) {s = 39;}

                        else if ( (synpred47_InternalIDL()) ) {s = 11;}

                         
                        input.seek(index16_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA16_9 = input.LA(1);

                         
                        int index16_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalIDL()) ) {s = 39;}

                        else if ( (synpred47_InternalIDL()) ) {s = 11;}

                         
                        input.seek(index16_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA16_10 = input.LA(1);

                         
                        int index16_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred46_InternalIDL()) ) {s = 39;}

                        else if ( (synpred47_InternalIDL()) ) {s = 11;}

                         
                        input.seek(index16_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA16_30 = input.LA(1);

                         
                        int index16_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred51_InternalIDL()) ) {s = 35;}

                        else if ( (true) ) {s = 40;}

                         
                        input.seek(index16_30);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 16, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\4\uffff";
    static final String dfa_15s = "\2\13\2\uffff";
    static final String dfa_16s = "\2\105\2\uffff";
    static final String dfa_17s = "\2\uffff\1\1\1\2";
    static final String dfa_18s = "\4\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\66\uffff\1\2\2\uffff\1\3",
            "\1\1\66\uffff\1\2\2\uffff\1\3",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "2772:1: (this_AttrSpec_0= ruleAttrSpec | this_ReadOnlyAttrSpec_1= ruleReadOnlyAttrSpec )";
        }
    }
    static final String dfa_20s = "\12\uffff";
    static final String dfa_21s = "\1\6\11\uffff";
    static final String dfa_22s = "\1\13\2\107\4\0\3\uffff";
    static final String dfa_23s = "\1\104\2\107\4\0\3\uffff";
    static final String dfa_24s = "\7\uffff\1\1\1\2\1\3";
    static final String dfa_25s = "\1\uffff\1\1\1\5\1\0\1\3\1\2\1\4\3\uffff}>";
    static final String[] dfa_26s = {
            "\1\4\55\uffff\1\5\7\uffff\1\3\1\uffff\1\1\1\2",
            "\1\7",
            "\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[] dfa_21 = DFA.unpackEncodedString(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[][] dfa_26 = unpackEncodedStringArray(dfa_26s);

    class DFA32 extends DFA {

        public DFA32(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 32;
            this.eot = dfa_20;
            this.eof = dfa_21;
            this.min = dfa_22;
            this.max = dfa_23;
            this.accept = dfa_24;
            this.special = dfa_25;
            this.transition = dfa_26;
        }
        public String getDescription() {
            return "2876:2: ( ( (otherlv_4= 'getraises' ( (lv_getRaises_5_0= ruleAttrRaisesExpr ) ) ) | (otherlv_6= 'setraises' ( (lv_setRaises_7_0= ruleAttrRaisesExpr ) ) ) ) | (otherlv_8= ',' ( (lv_names_9_0= RULE_ID ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA32_3 = input.LA(1);

                         
                        int index32_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalIDL()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index32_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA32_1 = input.LA(1);

                         
                        int index32_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA32_1==71) ) {s = 7;}

                        else if ( (synpred80_InternalIDL()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index32_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA32_5 = input.LA(1);

                         
                        int index32_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalIDL()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index32_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA32_4 = input.LA(1);

                         
                        int index32_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalIDL()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index32_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA32_6 = input.LA(1);

                         
                        int index32_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred80_InternalIDL()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index32_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA32_2 = input.LA(1);

                         
                        int index32_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA32_2==71) ) {s = 7;}

                        else if ( (synpred80_InternalIDL()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index32_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 32, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_27s = "\13\uffff";
    static final String dfa_28s = "\2\uffff\1\3\10\uffff";
    static final String dfa_29s = "\1\114\1\uffff\1\5\10\uffff";
    static final String dfa_30s = "\1\127\1\uffff\1\116\10\uffff";
    static final String dfa_31s = "\1\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11";
    static final String dfa_32s = "\13\uffff}>";
    static final String[] dfa_33s = {
            "\2\1\1\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12",
            "",
            "\1\3\20\uffff\1\3\52\uffff\1\3\13\uffff\1\1\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_27 = DFA.unpackEncodedString(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_27;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3935:1: (this_FloatingPtType_0= ruleFloatingPtType | this_IntegerType_1= ruleIntegerType | this_CharType_2= ruleCharType | this_WideCharType_3= ruleWideCharType | this_BooleanType_4= ruleBooleanType | this_OctetType_5= ruleOctetType | this_AnyType_6= ruleAnyType | this_ObjectType_7= ruleObjectType | this_ValueBaseType_8= ruleValueBaseType )";
        }
    }
    static final String dfa_34s = "\14\uffff";
    static final String dfa_35s = "\11\uffff\2\13\1\uffff";
    static final String dfa_36s = "\1\135\1\uffff\2\137\2\5\3\uffff\2\13\1\uffff";
    static final String dfa_37s = "\1\145\1\uffff\2\141\2\5\3\uffff\1\73\1\142\1\uffff";
    static final String dfa_38s = "\1\uffff\1\1\4\uffff\1\4\1\2\1\3\2\uffff\1\5";
    static final String dfa_39s = "\14\uffff}>";
    static final String[] dfa_40s = {
            "\1\2\1\3\1\4\1\1\1\5\3\uffff\1\6",
            "",
            "\1\7\1\uffff\1\10",
            "\1\7\1\uffff\1\10",
            "\1\11",
            "\1\12",
            "",
            "",
            "",
            "\1\7\55\uffff\1\13\1\uffff\1\7",
            "\1\10\55\uffff\1\13\50\uffff\1\10",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "5455:1: ( (otherlv_0= 'typedef' this_TypeDeclarator_1= ruleTypeDeclarator ) | this_StructType_2= ruleStructType | this_UnionType_3= ruleUnionType | this_EnumType_4= ruleEnumType | this_ConstrForwardDecl_5= ruleConstrForwardDecl )";
        }
    }
    static final String dfa_41s = "\2\uffff\1\1\11\uffff";
    static final String dfa_42s = "\1\5\1\uffff\1\5\11\uffff";
    static final String dfa_43s = "\1\150\1\uffff\1\116\11\uffff";
    static final String dfa_44s = "\1\uffff\1\1\1\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String[] dfa_45s = {
            "\1\12\44\uffff\1\12\41\uffff\2\6\1\2\2\1\1\3\1\4\1\5\1\13\3\uffff\1\7\1\10\16\uffff\1\11",
            "",
            "\1\1\107\uffff\1\6\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_34;
            this.eof = dfa_41;
            this.min = dfa_42;
            this.max = dfa_43;
            this.accept = dfa_44;
            this.special = dfa_39;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "7019:1: (this_IntegerType_0= ruleIntegerType | this_CharType_1= ruleCharType | this_WideCharType_2= ruleWideCharType | this_BooleanType_3= ruleBooleanType | this_FloatingPtType_4= ruleFloatingPtType | this_StringType_5= ruleStringType | this_WideStringType_6= ruleWideStringType | this_FixedPtConstType_7= ruleFixedPtConstType | this_ScopedName_8= ruleScopedName | this_OctetType_9= ruleOctetType )";
        }
    }
    static final String dfa_46s = "\1\13\5\uffff\1\0\4\uffff";
    static final String dfa_47s = "\1\u008a\5\uffff\1\0\4\uffff";
    static final String dfa_48s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\1\10\1\11";
    static final String dfa_49s = "\6\uffff\1\0\4\uffff}>";
    static final String[] dfa_50s = {
            "\1\6\10\uffff\1\11\3\uffff\5\11\6\uffff\5\11\16\uffff\2\11\12\uffff\1\7\2\uffff\1\7\62\uffff\1\1\1\2\1\uffff\1\4\1\3\1\5\13\uffff\2\10",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[][] dfa_50 = unpackEncodedStringArray(dfa_50s);

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_27;
            this.eof = dfa_27;
            this.min = dfa_46;
            this.max = dfa_47;
            this.accept = dfa_48;
            this.special = dfa_49;
            this.transition = dfa_50;
        }
        public String getDescription() {
            return "8172:1: ( (this_ProvidesDcl_0= ruleProvidesDcl otherlv_1= ';' ) | (this_UsesDcl_2= ruleUsesDcl otherlv_3= ';' ) | (this_EmitDcl_4= ruleEmitDcl otherlv_5= ';' ) | (this_PublishesDcl_6= rulePublishesDcl otherlv_7= ';' ) | (this_ConsumesDcl_8= ruleConsumesDcl otherlv_9= ';' ) | (this_AttrDecl_10= ruleAttrDecl otherlv_11= ';' ) | (this_PortDecl_12= rulePortDecl otherlv_13= ';' ) | this_Preproc_14= rulePreproc | this_IDLComment_15= ruleIDLComment )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_6 = input.LA(1);

                         
                        int index117_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred213_InternalIDL()) ) {s = 7;}

                        else if ( (true) ) {s = 10;}

                         
                        input.seek(index117_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_51s = "\15\uffff";
    static final String dfa_52s = "\11\uffff\1\14\3\uffff";
    static final String dfa_53s = "\1\77\10\uffff\1\5\3\uffff";
    static final String dfa_54s = "\1\u008d\10\uffff\1\25\3\uffff";
    static final String dfa_55s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\uffff\1\12\1\13\1\11";
    static final String dfa_56s = "\15\uffff}>";
    static final String[] dfa_57s = {
            "\1\2\32\uffff\1\7\4\uffff\1\5\1\uffff\1\6\3\uffff\1\10\1\11\2\uffff\1\12\32\uffff\1\4\7\uffff\1\1\1\3",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\14\17\uffff\1\13",
            "",
            "",
            ""
    };

    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[][] dfa_57 = unpackEncodedStringArray(dfa_57s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_51;
            this.eof = dfa_52;
            this.min = dfa_53;
            this.max = dfa_54;
            this.accept = dfa_55;
            this.special = dfa_56;
            this.transition = dfa_57;
        }
        public String getDescription() {
            return "10373:1: (this_TypenameParamType_0= ruleTypenameParamType | this_InterfaceParamType_1= ruleInterfaceParamType | this_ValuetypeParamType_2= ruleValuetypeParamType | this_EventParamType_3= ruleEventParamType | this_StructParamType_4= ruleStructParamType | this_UnionParamType_5= ruleUnionParamType | this_ExceptionParamType_6= ruleExceptionParamType | this_EnumParamType_7= ruleEnumParamType | this_SequenceParamType_8= ruleSequenceParamType | this_ConstParamType_9= ruleConstParamType | this_SequenceType_10= ruleSequenceType )";
        }
    }
    static final String dfa_58s = "\30\uffff";
    static final String dfa_59s = "\1\13\1\uffff\3\0\4\uffff\1\0\6\uffff\1\0\7\uffff";
    static final String dfa_60s = "\1\u008e\1\uffff\3\0\4\uffff\1\0\6\uffff\1\0\7\uffff";
    static final String dfa_61s = "\1\uffff\1\1\5\uffff\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\15\1\6\1\16";
    static final String dfa_62s = "\2\uffff\1\0\1\1\1\2\4\uffff\1\3\6\uffff\1\4\7\uffff}>";
    static final String[] dfa_63s = {
            "\1\20\56\uffff\1\14\2\uffff\1\11\2\12\32\uffff\1\10\2\uffff\1\2\1\3\1\4\2\1\3\uffff\1\1\1\uffff\1\15\1\uffff\1\7\14\uffff\1\21\7\uffff\1\22\4\uffff\2\16\3\uffff\1\23\2\uffff\1\24\2\uffff\1\25",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA156 extends DFA {

        public DFA156(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 156;
            this.eot = dfa_58;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "10879:1: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | (this_TemplateModuleRef_24= ruleTemplateModuleRef otherlv_25= ';' ) | this_IDLComment_26= ruleIDLComment )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA156_2 = input.LA(1);

                         
                        int index156_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred271_InternalIDL()) ) {s = 1;}

                        else if ( (synpred276_InternalIDL()) ) {s = 22;}

                         
                        input.seek(index156_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA156_3 = input.LA(1);

                         
                        int index156_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred271_InternalIDL()) ) {s = 1;}

                        else if ( (synpred276_InternalIDL()) ) {s = 22;}

                         
                        input.seek(index156_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA156_4 = input.LA(1);

                         
                        int index156_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred271_InternalIDL()) ) {s = 1;}

                        else if ( (synpred276_InternalIDL()) ) {s = 22;}

                         
                        input.seek(index156_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA156_9 = input.LA(1);

                         
                        int index156_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalIDL()) ) {s = 10;}

                        else if ( (synpred278_InternalIDL()) ) {s = 14;}

                         
                        input.seek(index156_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA156_16 = input.LA(1);

                         
                        int index156_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred279_InternalIDL()) ) {s = 17;}

                        else if ( (true) ) {s = 23;}

                         
                        input.seek(index156_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 156, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\27\uffff";
    static final String dfa_65s = "\1\13\1\uffff\3\0\4\uffff\1\0\6\uffff\1\0\6\uffff";
    static final String dfa_66s = "\1\u008b\1\uffff\3\0\4\uffff\1\0\6\uffff\1\0\6\uffff";
    static final String dfa_67s = "\1\uffff\1\1\5\uffff\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\7\1\10\2\uffff\1\11\1\12\1\13\1\14\1\6\1\15";
    static final String dfa_68s = "\2\uffff\1\0\1\1\1\2\4\uffff\1\3\6\uffff\1\4\6\uffff}>";
    static final String[] dfa_69s = {
            "\1\20\56\uffff\1\14\2\uffff\1\11\2\12\32\uffff\1\10\2\uffff\1\2\1\3\1\4\2\1\3\uffff\1\1\1\uffff\1\15\1\uffff\1\7\14\uffff\1\21\7\uffff\1\22\4\uffff\2\16\3\uffff\1\23\2\uffff\1\24",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[][] dfa_69 = unpackEncodedStringArray(dfa_69s);

    class DFA158 extends DFA {

        public DFA158(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 158;
            this.eot = dfa_64;
            this.eof = dfa_64;
            this.min = dfa_65;
            this.max = dfa_66;
            this.accept = dfa_67;
            this.special = dfa_68;
            this.transition = dfa_69;
        }
        public String getDescription() {
            return "11202:1: ( (this_TypeDecl_0= ruleTypeDecl otherlv_1= ';' ) | (this_ConstDecl_2= ruleConstDecl otherlv_3= ';' ) | (this_ExceptDecl_4= ruleExceptDecl otherlv_5= ';' ) | (this_Interface_decl_6= ruleInterface_decl otherlv_7= ';' ) | (this_FixedModule_8= ruleFixedModule otherlv_9= ';' ) | (this_StructType_10= ruleStructType otherlv_11= ';' ) | (this_NativeType_12= ruleNativeType otherlv_13= ';' ) | (this_Event_14= ruleEvent otherlv_15= ';' ) | (this_ComponentDecl_16= ruleComponentDecl otherlv_17= ';' ) | (this_HomeDecl_18= ruleHomeDecl otherlv_19= ';' ) | (this_PortTypeDecl_20= rulePortTypeDecl otherlv_21= ';' ) | (this_Connector_22= ruleConnector otherlv_23= ';' ) | this_IDLComment_24= ruleIDLComment )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA158_2 = input.LA(1);

                         
                        int index158_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalIDL()) ) {s = 1;}

                        else if ( (synpred290_InternalIDL()) ) {s = 21;}

                         
                        input.seek(index158_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA158_3 = input.LA(1);

                         
                        int index158_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalIDL()) ) {s = 1;}

                        else if ( (synpred290_InternalIDL()) ) {s = 21;}

                         
                        input.seek(index158_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA158_4 = input.LA(1);

                         
                        int index158_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred285_InternalIDL()) ) {s = 1;}

                        else if ( (synpred290_InternalIDL()) ) {s = 21;}

                         
                        input.seek(index158_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA158_9 = input.LA(1);

                         
                        int index158_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred288_InternalIDL()) ) {s = 10;}

                        else if ( (synpred292_InternalIDL()) ) {s = 14;}

                         
                        input.seek(index158_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA158_16 = input.LA(1);

                         
                        int index158_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred293_InternalIDL()) ) {s = 17;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index158_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 158, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0xE5C000F81F100800L,0x404002A3E4000000L,0x0000000000000918L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0xE4C000F81F100802L,0x404002A3E4000000L,0x0000000000000918L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x00000400600007F0L,0x0023000000000080L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x00000400600007F2L,0x0023000000000080L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000780600002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000040000000020L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0002000000000032L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0800000000000800L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0xF4C000F81F100800L,0x404002A3E4000000L,0x0000000000000918L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x10C004F81F100820L,0x00000223E7FFF624L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000802L,0x0000000000000001L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000802L,0x0000000000000002L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000040000000820L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000802L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x00C004F81F100822L,0x00000223E7FFF624L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000004L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000040000000020L,0x0000000003FFF000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000000000000802L,0x000000000000001AL});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000020L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000802L,0x0000000000000042L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000102L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000040000000820L,0x0000000003FFF600L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000840L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000100L,0x0000000000078000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000000L,0x0000000000078000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000040000000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000200002L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x1000040000000820L,0x00000162E3FFF000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x1000040000000020L,0x00000162E3FFF000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000040000000820L,0x00000162E3FFF000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000800L,0x0000000400000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000040000000020L,0x00000020000BC000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000800L,0x0000001800000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000802L,0x0000001800000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000040000000820L,0x0000017AE3FFF000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000820L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x1000000000000800L,0x0000000000000002L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x1000000000000800L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000040000000020L,0x0000014003FFF000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000400000L,0x0000000000000002L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000040000000020L,0x00000100031FF000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000002L,0x0000080000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000002L,0x0000200000000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000002L,0x0000C00000000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000002L,0x0003000000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000002L,0x001C000000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000800L,0x0040000000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0800000000000000L,0x0080000000000001L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0800000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x10C000F81F100800L,0x3B00000000000024L,0x0000000000000600L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000040000000020L,0x0400000000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x8080000000000001L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000000L,0x8080000000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000002L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0800000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x10C004F81F100820L,0x00000223E7FFF624L,0x0000000000000006L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000040000000020L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0800000000000000L,0x0080000000000002L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x10C004F81F100820L,0x00000223E7FFF624L,0x00000000000000C0L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000800L,0x0300000000000024L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x1000000000000800L,0x0300000000000024L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x1000000000000800L,0x0300000000000024L,0x0000000000000600L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x8000000000000000L,0x0000026284000000L,0x0000000000003010L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0xF400000000000800L,0x404002A3E4000000L,0x0000000000004918L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0xF400000000000800L,0x404002A3E4000000L,0x0000000000000918L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x00000400600007F0L,0x00230162E3FFF080L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000002L});

}