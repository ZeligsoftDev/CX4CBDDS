«REM»

 Copyright 2018 ADLINK Technology Limited.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

«ENDREM»

«IMPORT uml»
«EXTENSION extensions::DeploymentUtilsFuncs»
«EXTENSION extensions::FileNames»
«EXTENSION extensions::FunctionNames»
«EXTENSION extensions::SimpleCounter»


«DEFINE CREATE_FILES FOR ZeligsoftDeployment::DeploymentPart»
«FILE "cfgs/"+ getNamedElementName((ZeligsoftDeployment::Deployment)this.owner)+"/"+getMySWPlatformName(this)+"/pjt/"+"linkscript.cmd"»	
/* COPYRIGHT-ENEA-SRC-R1 *
 **************************************************************************
 * Copyright (C) 2007 by Enea Software AB.
 * All rights reserved.
 *
 * This Software is furnished under a software license agreement and
 * may be used only in accordance with the terms of such agreement.
 * Any other use or reproduction is prohibited. No title to and
 * ownership of the Software is hereby transferred.
 *
 * PROPRIETARY NOTICE
 * This Software consists of confidential information.
 * Trade secret law and copyright law protect this Software.
 * The above notice of copyright on this Software does not indicate
 * any actual or intended publication of such Software.
 **************************************************************************
 * COPYRIGHT-END
 */

-a
-x
-heap 0xF00

_RTDX_interrupt_mask = ~0;

/* L2 (1MB)
 *   768kB RAM
 *   256kB cache (used or not)
 *
 * External DDR2 RAM (256MB) 
 */
MEMORY { 
	VECTORS:	origin = 0x00800000	length=0x00000200
	ZCE1:		origin = 0x00800200	length=0x00000100
	ZCE2:		origin = 0x00800300	length=0x00004500
	INT_RAM:	origin = 0x00804800	length=0x000FB000
	EXT_RAM:	origin = 0x80000000     length=0x05555555
}

SECTIONS {
	.vector0:	load = 0x00800000
	.vector1:	load = 0x00800020
	.vector2:	load = 0x00800040
	.vector3:	load = 0x00800060
	.vector4:	load = 0x00800080
	.vector5:	load = 0x008000A0
	.vector6:	load = 0x008000C0
	.vector7:	load = 0x008000E0
	.vector8:	load = 0x00800100
	.vector9:	load = 0x00800120
	.vector10:	load = 0x00800140
	.vector11:	load = 0x00800160
	.vector12:	load = 0x00800180
	.vector13:	load = 0x008001A0
	.vector14:	load = 0x008001C0
	.vector15:	load = 0x008001E0

	odo_int_handler >	INT_RAM
	oseck_ramlog	>	INT_RAM
	.text		>	INT_RAM
	.rtdx_text	>	INT_RAM
	.rtdx_data	>	INT_RAM
	.far:		{ ___far__=.;	 *(.far)   ___efar__=.;	  } > INT_RAM
	.const:		{ ___const__=.;	 *(.const) ___econst__=.; } > INT_RAM
	.data:		>	INT_RAM
	.bss:		>	INT_RAM
	.stack		>	INT_RAM
	.switch		>	INT_RAM
	.sysmem		>	INT_RAM
	.cinit		>	INT_RAM
	.pinit		>	INT_RAM
	.cio		>	INT_RAM
	.oseck_linx_rx	>	INT_RAM
	.oseck_linx_tx	>	INT_RAM
	.oseck_dma_area	>	INT_RAM
	.pool0		>	INT_RAM
	.pool1		>	INT_RAM
	.pool2		>	INT_RAM
	.pool3		>	INT_RAM
	.pool4		>	INT_RAM
	.pool5		>	INT_RAM
	.pool6		>	INT_RAM
	.pool7		>	INT_RAM
	.pool8		>	INT_RAM
	.pool9		>	INT_RAM
	.pool10		>	INT_RAM
	.pool11		>	INT_RAM
	.pool12		>	INT_RAM
	.pool13		>	INT_RAM
	.pool14		>	INT_RAM
	.pool15		>	INT_RAM
	.zce1		>	ZCE1
	.zce2		>	ZCE2
}
«ENDFILE»
«ENDDEFINE»