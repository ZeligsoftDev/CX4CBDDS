/**
 * Copyright 2018 ADLINK Technology Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

import uml;


/**
 * Component Source file name functions
 */
String getComponentSourceFileName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentSourceFileName(org.eclipse.uml2.uml.Type);


String getComponentUsrSourceFileName(Component component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentUsrSourceFileName(org.eclipse.uml2.uml.Component)
;

String getComponentContainerSourceFileName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentContainerSourceFileName(org.eclipse.uml2.uml.Type)
;

String getConfiguratorSourceFileName(Property component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getConfiguratorSourceFileName(org.eclipse.uml2.uml.Property)
;
 
/**
 * Component Header file name functions
 */
String getComponentHeaderFileName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentHeaderFileName(org.eclipse.uml2.uml.Type)
;

String getComponentUsrHeaderFileName(Component component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentUsrHeaderFileName(org.eclipse.uml2.uml.Component)
;

String getComponentForwardDeclaresHeaderFileName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentForwardDeclaresHeaderFileName(org.eclipse.uml2.uml.Type)
;

String getComponentContainerHeaderFileName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentContainerHeaderFileName(org.eclipse.uml2.uml.Type)
;

String getComponentContainerIdsHeaderFileName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentContainerIdsHeaderFileName(org.eclipse.uml2.uml.Type)
;

String getConfiguratorHeaderFileName(Property component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getConfiguratorHeaderFileName(org.eclipse.uml2.uml.Property)
;

/**
 * Component Object file name
 **/
String getComponentWorkerStructName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentWorkerStructName(org.eclipse.uml2.uml.Type)
;

String getComponentContainerStructName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentContainerStructName(org.eclipse.uml2.uml.Type)
;

String getComponentUsrObjectFileName(Component component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentUsrObjectFileName(org.eclipse.uml2.uml.Component)
;

String getInterfaceProvidesObjectFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceProvidesObjectFileName(org.eclipse.uml2.uml.Interface)
;

String getInterfaceRequiresObjectFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceRequiresObjectFileName(org.eclipse.uml2.uml.Interface)
;

String getInterfaceBaseObjectFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceBaseObjectFileName(org.eclipse.uml2.uml.Interface)
;

String getConfiguratorStructName(Property component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getConfiguratorStructName(org.eclipse.uml2.uml.Property)
;

String getComponentIdFileName(Type component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentIdFileName(org.eclipse.uml2.uml.Type)
;
/**
 * Component Executable file name
 */
String getComponentExecFileName(Component component) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentExecutableFileName(org.eclipse.uml2.uml.Component)
;


/**
 * Interface file name functions
 */
String getInterfaceBaseDefFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceBaseDefFileName(org.eclipse.uml2.uml.Interface)
;
String getInterfaceProvidesDefFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceProvidesDefFileName(org.eclipse.uml2.uml.Interface)
;

String getInterfaceProvidesSourceFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceProvidesSourceFileName(org.eclipse.uml2.uml.Interface)
;

String getInterfaceRequiresDefFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceRequiresDefFileName(org.eclipse.uml2.uml.Interface)
;

String getInterfaceRequiresSourceFileName(Interface intf) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getInterfaceRequiresSourceFileName(org.eclipse.uml2.uml.Interface)
;

/**
 * Component port id functions
 */
String getComponentPortId(Type component, Port port) :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getComponentPortId(org.eclipse.uml2.uml.Type, org.eclipse.uml2.uml.Port)
;

List[String] getAllFilenames() :
JAVA com.zeligsoft.base.zml.codegeneration.xtend.utils.FileNames.getAllFilenames()
;
