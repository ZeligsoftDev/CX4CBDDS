
import langc;

extension langc::element;
extension langc::expr;
extension langc::name;
extension langc::type;

List testSimple() :
    { struct(), accessExpr() }
;

LinkableArtifact testLA() :
    let la = linkableArtifact( 'la' ) :
        la.rootElements.add( accessingVar() )
     -> la
;

cached ElementAccess accessExpr() : struct().name.access();
cached Struct struct() : struct( structName() );

private cached FolderName folder() : folder( 'folder' );
private cached FileName file() : folder().child( 'file' );
private cached Name structName() : file().child( 'structName' );

cached VariableDeclaration accessingVar() :
    let v = variable( struct(), file().child( 'accessingVar' ) ) :
        v.setInitializer( accessedVar().access() )
     -> v
;

cached VariableDeclaration accessedVar() :
    variable( struct(), file().child( 'accessedVar' ) )
;
