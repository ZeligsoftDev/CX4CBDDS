
«IMPORT langc»
«EXTENSION generator::extend_util»
«EXTENSION generator::filepartitioner»
«EXTENSION langc::element»

«DEFINE System(String destProjectName) FOR System»

    «initializeGenerator( destProjectName )»

    «EXPAND SubSystem(destProjectName) FOREACH subSystems»
    «EXPAND manifestfile::ManifestFile FOR this»

    «REM»In the future this information may be kept (within the session) for incremental
         generation.  For now its a waste of memory, so clear it all.«ENDREM»
    «resetBindings()»

    «finalizeGenerator()»
«ENDDEFINE»

«DEFINE SubSystem(String destProjectName) FOR SubSystem»
    «FOREACH files AS file»
        «EXPAND ElementList(destProjectName) FOR file»
    «ENDFOREACH»
«ENDDEFINE»

«DEFINE ElementList(String destProjectName) FOR ElementList»
    «resolveDependencies()»
    «generate_old(destProjectName)»
«REM»
    «EXPAND headerfile::HeaderFile»
    «EXPAND implfile::ImplementationFile»
«ENDREM»
«ENDDEFINE»

«REM»           Dependencies            «ENDREM»

«DEFINE Include(Name context) FOR DependencyList»
«EXPAND Include(context) FOREACH dependencies.typeSelect(UserInclude).sortBy(e|e.filename)»
«EXPAND Include(context) FOREACH dependencies.typeSelect(DependencyBlob).sortBy(e|e.text)»
«EXPAND Include(context) FOREACH dependencies.typeSelect(SystemInclude).sortBy(e|e.filename)»
«ENDDEFINE»

«DEFINE Include(Name context) FOR Dependency»GEN-Dependency-GEN«ENDDEFINE»

«DEFINE Include(Name context) FOR SystemInclude-»
#include <«filename»>
«ENDDEFINE»

«DEFINE Include(Name context) FOR UserInclude-»
«IF filename != context»#include "«filename.includePath()»"«ENDIF»
«ENDDEFINE»

«DEFINE Include(Name context) FOR DependencyBlob-»
«text»
«ENDDEFINE»

«REM»           Declarations            «ENDREM»

«DEFINE Decl FOR UserElement»DECL-UserElement-DECL«ENDDEFINE»
«DEFINE Decl FOR NamedElement»DECL-NamedElement-DECL '«name»'«ENDDEFINE»

«DEFINE Decl FOR FunctionImplementation»«ENDDEFINE»
