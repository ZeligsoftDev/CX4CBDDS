
import langc;

extension langc::name;

cached FolderName baseFolder()      : folder( 'basefolder' );
cached FolderName apiFolder()       : baseFolder().subfolder( 'include' ); 
cached FolderName zeligsoftFolder() : baseFolder().subfolder( 'zeligsoft' );

cached FolderName apiFolder1()      : apiFolder().subfolder( 'subsystem1' ); 
cached FolderName apiFolder2()      : apiFolder().subfolder( 'subsystem2' ); 

cached FileName utilFilename()   : baseFolder().child( 'util' );
cached FileName bufferFilename() : zeligsoftFolder().child( 'buffer' );
cached FileName useEnumeratorFilename() : zeligsoftFolder().child( 'useEnumerator' );

cached Name statusName()       : utilFilename().child( 'Status' );
cached Name statusOkName()     : utilFilename().child( 'ZRET_OK' );
cached Name statusFailName()   : utilFilename().child( 'ZRET_FAIL' );
cached Name statusNoRoomName() : utilFilename().child( 'ZRET_NO_ROOM' );
cached Name statusNoDataName() : utilFilename().child( 'ZRET_NO_DATA' );

cached Name bufferName()         : bufferFilename().child( 'Buffer' );
cached Name bufferPtrName()      : bufferFilename().child( 'BufferPtr' );
cached Name bufferCapacityName() : bufferName().child( 'capacity' );
cached Name bufferLenName()      : bufferName().child( 'len' );
cached Name bufferBuffName()     : bufferName().child( 'buff' );
cached Name bufferBuff2Name()    : bufferName().child( 'buff2' );
cached Name bufferFieldName()    : bufferName().child( 'field' );

cached Name bufferAvailName() : bufferFilename().child( 'ZBUFF_AVAIL' );
cached Name bufferUsedName()  : bufferFilename().child( 'ZBUFF_USED' );
cached Name bufferMQueueVarName() : bufferMQueueFunction().child( 'mq' );

cached Name bufferInitName()      : bufferFilename().child( 'zbuff_initialize' );
cached Name bufferInitBuffParam() : bufferInitName().child( 'buff' );
cached Name bufferInitCapacityParam() : bufferInitName().child( 'capacity' );

cached Name bufferMQueueMacroName() : bufferFilename().child( 'MQ_NAME' );

cached Name bufferMQueueFunction()  : bufferFilename().child( 'zbuff_mqueue_samples' );
cached Name bufferMQueueBuffParam() : bufferMQueueFunction().child( 'buff' );
cached Name bufferMQueueFunction2() : bufferFilename().child( 'zbuff_mqueue_sample2' );
cached Name bufferMQueueBuffName()  : bufferMQueueFunction2().child( 'buff' );
cached Name bufferMQueueQVar1Name()  : bufferMQueueFunction2().child( 'mq1' );
cached Name bufferMQueueQVar2Name()  : bufferMQueueFunction2().child( 'mq2' );

cached Name bufferSwitchFunction() : bufferFilename().child( 'zbuff_switch_sample' );
cached Name bufferSwitchParam()    : bufferSwitchFunction().child( 'status' );

cached Name bufferAddrFunction() : bufferFilename().child( 'zbuff_addr_sample' );
cached Name bufferAddrIntParam() : bufferSwitchFunction().child( 'i' );
cached Name bufferAddrPtrParam() : bufferSwitchFunction().child( 'p' );

cached Name bufferParensFunctionName() : bufferFilename().child( 'zbuff_parens_sample' );
cached Name bufferParensVarName()      : bufferParensFunctionName().child( 'var' );

cached Name useEnumeratorFuncName() : useEnumeratorFilename().child( 'useEnumeratorFunc' );

cached Name bufferArrayFunctionName() : bufferFilename().child( 'zbuff_array_sample' );

cached Name bufferBlobFunctionName() : bufferFilename().child( 'zbuff_blob_sample' );
