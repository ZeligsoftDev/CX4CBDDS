package LogService.LogPackage;


/**
* LogService/LogPackage/AdministrativeStateType.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LogService.idl
* Monday, May 4, 2009 2:19:36 PM EDT
*/


/* The AdministrativeStateType denotes the active logging state of
				   an
				   operational Log. When set to UNLOCKED the Log will accept records
				   for storage, per its operational parameters. When set to LOCKED the
				   Log will not accept new log records and records can be read or
				   deleted only. */
public class AdministrativeStateType implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 2;
  private static LogService.LogPackage.AdministrativeStateType[] __array = new LogService.LogPackage.AdministrativeStateType [__size];

  public static final int _LOCKED = 0;
  public static final LogService.LogPackage.AdministrativeStateType LOCKED = new LogService.LogPackage.AdministrativeStateType(_LOCKED);
  public static final int _UNLOCKED = 1;
  public static final LogService.LogPackage.AdministrativeStateType UNLOCKED = new LogService.LogPackage.AdministrativeStateType(_UNLOCKED);

  public int value ()
  {
    return __value;
  }

  public static LogService.LogPackage.AdministrativeStateType from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected AdministrativeStateType (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class AdministrativeStateType
