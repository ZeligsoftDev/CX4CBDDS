package LogService.LogPackage;


/**
* LogService/LogPackage/OperationalStateType.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LogService.idl
* Monday, May 4, 2009 2:19:36 PM EDT
*/


/* The enumeration OperationalStateType defines the Log states of
				   operation. When the Log is ENABLED it is fully functional and is
				   available for use by log producer and log consumer clients. A Log
				   that
				   is DISABLED has encountered a runtime problem and is not available
				   for use by log producers or log consumers. The internal error
				   conditions
				   that cause the Log to set the operational state to ENABLED or
				   DISABLED
				   are implementation specific. */
public class OperationalStateType implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 2;
  private static LogService.LogPackage.OperationalStateType[] __array = new LogService.LogPackage.OperationalStateType [__size];

  public static final int _DISABLED = 0;
  public static final LogService.LogPackage.OperationalStateType DISABLED = new LogService.LogPackage.OperationalStateType(_DISABLED);
  public static final int _ENABLED = 1;
  public static final LogService.LogPackage.OperationalStateType ENABLED = new LogService.LogPackage.OperationalStateType(_ENABLED);

  public int value ()
  {
    return __value;
  }

  public static LogService.LogPackage.OperationalStateType from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected OperationalStateType (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class OperationalStateType
