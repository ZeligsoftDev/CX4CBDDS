package LogService.LogPackage;


/**
* LogService/LogPackage/LogFullActionTypeHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LogService.idl
* Monday, May 4, 2009 2:19:36 PM EDT
*/


/* This type specifies the action that the Log should take when its
				   internal buffers
				   become full of data, leaving no room for new records to be written.
				   Wrap indicates that the Log
				   will overwrite the oldest LogRecords with the newest records, as
				   they are written to the Log.
				   Halt indicates that the Log will stop logging when full. */
abstract public class LogFullActionTypeHelper
{
  private static String  _id = "IDL:LogService/Log/LogFullActionType:1.0";

  public static void insert (org.omg.CORBA.Any a, LogService.LogPackage.LogFullActionType that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static LogService.LogPackage.LogFullActionType extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (LogService.LogPackage.LogFullActionTypeHelper.id (), "LogFullActionType", new String[] { "WRAP", "HALT"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static LogService.LogPackage.LogFullActionType read (org.omg.CORBA.portable.InputStream istream)
  {
    return LogService.LogPackage.LogFullActionType.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, LogService.LogPackage.LogFullActionType value)
  {
    ostream.write_long (value.value ());
  }

}
