package LogService.LogPackage;


/**
* LogService/LogPackage/OperationalStateTypeHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LogService.idl
* Monday, May 4, 2009 2:19:36 PM EDT
*/


/* The enumeration OperationalStateType defines the Log states of
				   operation. When the Log is ENABLED it is fully functional and is
				   available for use by log producer and log consumer clients. A Log
				   that
				   is DISABLED has encountered a runtime problem and is not available
				   for use by log producers or log consumers. The internal error
				   conditions
				   that cause the Log to set the operational state to ENABLED or
				   DISABLED
				   are implementation specific. */
abstract public class OperationalStateTypeHelper
{
  private static String  _id = "IDL:LogService/Log/OperationalStateType:1.0";

  public static void insert (org.omg.CORBA.Any a, LogService.LogPackage.OperationalStateType that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static LogService.LogPackage.OperationalStateType extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (LogService.LogPackage.OperationalStateTypeHelper.id (), "OperationalStateType", new String[] { "DISABLED", "ENABLED"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static LogService.LogPackage.OperationalStateType read (org.omg.CORBA.portable.InputStream istream)
  {
    return LogService.LogPackage.OperationalStateType.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, LogService.LogPackage.OperationalStateType value)
  {
    ostream.write_long (value.value ());
  }

}
