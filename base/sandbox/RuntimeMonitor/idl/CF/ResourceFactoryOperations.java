package CF;


/**
* CF/ResourceFactoryOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CF.idl
* Monday, May 4, 2009 2:19:35 PM EDT
*/


/* A ResourceFactory can be used to create and tear down a Resource. */
public interface ResourceFactoryOperations 
{

  /* The readonly identifier attribute contains the unique identifier
               for a ResourceFactory instance.  */
  String identifier ();

  /* The createResource operation provides the capability to create
              Resources in the same process space as the ResourceFactory or
              to return a Resource that has already been created. This behavior
              is an alternative approach to the Device's execute operation for
              creating a Resource. */
  CF.Resource createResource (String resourceId, CF.DataType[] qualifiers) throws CF.ResourceFactoryPackage.CreateResourceFailure;

  /* In CORBA there is client side and server side representation of
               a Resource.  This operation provides the mechanism of releasing
               the Resource in the CORBA environment on the server side when
               all clients are through with a specific Resource. The client
               still has to release its client side reference of the Resource. */
  void releaseResource (String resourceId) throws CF.ResourceFactoryPackage.InvalidResourceId;

  /* In CORBA there is client side and server side representation of
               a ResourceFactory.  This operation provides the mechanism for
               releasing the ResourceFactory from the CORBA environment on the
               server side.  The client has the responsibility to release its
               client side reference of the ResourceFactory. */
  void shutdown () throws CF.ResourceFactoryPackage.ShutdownFailure;
} // interface ResourceFactoryOperations
