package CF;


/**
* CF/_ApplicationFactoryStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CF.idl
* Monday, May 4, 2009 2:19:35 PM EDT
*/


/* The ApplicationFactory interface class provides an interface to
         request the creation of a specific type of Application in the domain.
		     The Software Profile determines the type of Application that is created
         by the ApplicationFactory. */
public class _ApplicationFactoryStub extends org.omg.CORBA.portable.ObjectImpl implements CF.ApplicationFactory
{


  /* The name attribute contains the name of the type of Application
               that can be instantiated by the ApplicationFactory. */
  public String name ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_name", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return name (        );
            } finally {
                _releaseReply ($in);
            }
  } // name


  /* The readonly identifier attribute contains the unique identifier
               for an ApplicationFactory instance. The identifier is identical to
               the softwareassembly element id attribute of the
               ApplicationFactory's Software Assembly Descriptor file.  */
  public String identifier ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_identifier", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return identifier (        );
            } finally {
                _releaseReply ($in);
            }
  } // identifier


  /* This attribute contains the application software profile that 
               the factory uses when creating an application.  The string value
               contains a profile element with a file reference to the SAD */
  public String softwareProfile ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_softwareProfile", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return softwareProfile (        );
            } finally {
                _releaseReply ($in);
            }
  } // softwareProfile


  /* The create operation is used to create an Application within the
               system domain. */
  public CF.Application create (String name, CF.DataType[] initConfiguration, CF.DeviceAssignmentType[] deviceAssignments) throws CF.ApplicationFactoryPackage.CreateApplicationError, CF.ApplicationFactoryPackage.CreateApplicationRequestError, CF.ApplicationFactoryPackage.InvalidInitConfiguration
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("create", true);
                $out.write_string (name);
                CF.PropertiesHelper.write ($out, initConfiguration);
                CF.DeviceAssignmentSequenceHelper.write ($out, deviceAssignments);
                $in = _invoke ($out);
                CF.Application $result = CF.ApplicationHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CF/ApplicationFactory/CreateApplicationError:1.0"))
                    throw CF.ApplicationFactoryPackage.CreateApplicationErrorHelper.read ($in);
                else if (_id.equals ("IDL:CF/ApplicationFactory/CreateApplicationRequestError:1.0"))
                    throw CF.ApplicationFactoryPackage.CreateApplicationRequestErrorHelper.read ($in);
                else if (_id.equals ("IDL:CF/ApplicationFactory/InvalidInitConfiguration:1.0"))
                    throw CF.ApplicationFactoryPackage.InvalidInitConfigurationHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return create (name, initConfiguration, deviceAssignments        );
            } finally {
                _releaseReply ($in);
            }
  } // create

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CF/ApplicationFactory:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _ApplicationFactoryStub
