package CF;


/**
* CF/DeviceOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CF.idl
* Monday, May 4, 2009 2:19:35 PM EDT
*/


/* The Device interface defines additional capabilities and attributes 
	     for any logical Device in the domain.  */
public interface DeviceOperations  extends CF.ResourceOperations
{

  /* The readonly usageState attribute contains the Device's usage state
               The usageState indicates whether or not a device is actively in use
               at a specific instant, and if so, whether or not it has spare
               capacity for allocation at that instant. */
  CF.DevicePackage.UsageType usageState ();

  /* The administrative state indicates the permission to use or
               prohibition against using the device.  The adminState attribute
               contains the device's admin state value. */
  CF.DevicePackage.AdminType adminState ();

  /* The administrative state indicates the permission to use or
               prohibition against using the device.  The adminState attribute
               contains the device's admin state value. */
  void adminState (CF.DevicePackage.AdminType newAdminState);

  /* The operationalState attribute contains the device's operational
               state.  The operational state indicates
               whether or not the device is functioning. */
  CF.DevicePackage.OperationalType operationalState ();

  /* The softwareProfile attribute is the XML description for this
              logical Device.  The softwareProfile attribute contains 
              a profile DTD element with a file reference to the SPD profile
              file. */
  String softwareProfile ();

  /* The label attribute is the meaningful name given to a Device. */
  String label ();

  /* The compositeDevice attribute contains the object reference 
               of the AggregateDevice with which this Device is associated 
               or a nil CORBA object reference if no association exists.   */
  CF.AggregateDevice compositeDevice ();

  /* The allocateCapacity operation provides the mechanism 
               to request and allocate capacity from the Device. */
  boolean allocateCapacity (CF.DataType[] capacities) throws CF.DevicePackage.InvalidCapacity, CF.DevicePackage.InvalidState;

  /* The deallocateCapacity operation provides the mechanism to return
               capacities back to the Device, making them available to other
               users. */
  void deallocateCapacity (CF.DataType[] capacities) throws CF.DevicePackage.InvalidCapacity, CF.DevicePackage.InvalidState;
} // interface DeviceOperations
