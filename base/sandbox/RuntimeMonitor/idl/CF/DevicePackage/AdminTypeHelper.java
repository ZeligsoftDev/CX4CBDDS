package CF.DevicePackage;


/**
* CF/DevicePackage/AdminTypeHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CF.idl
* Monday, May 4, 2009 2:19:35 PM EDT
*/


/* This enumeration type defines a Device's administrative states.
             The administrative state indicates the permission to use or
             prohibition against using the Device.  */
abstract public class AdminTypeHelper
{
  private static String  _id = "IDL:CF/Device/AdminType:1.0";

  public static void insert (org.omg.CORBA.Any a, CF.DevicePackage.AdminType that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static CF.DevicePackage.AdminType extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      __typeCode = org.omg.CORBA.ORB.init ().create_enum_tc (CF.DevicePackage.AdminTypeHelper.id (), "AdminType", new String[] { "LOCKED", "SHUTTING_DOWN", "UNLOCKED"} );
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static CF.DevicePackage.AdminType read (org.omg.CORBA.portable.InputStream istream)
  {
    return CF.DevicePackage.AdminType.from_int (istream.read_long ());
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, CF.DevicePackage.AdminType value)
  {
    ostream.write_long (value.value ());
  }

}
