package CF;


/**
* CF/_PropertySetStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CF.idl
* Monday, May 4, 2009 2:19:35 PM EDT
*/


/* The PropertySet interface defines configure and query operations
         to access component properties/attributes.  */
public class _PropertySetStub extends org.omg.CORBA.portable.ObjectImpl implements CF.PropertySet
{


  /* The purpose of this operation is to allow id/value pair
               configuration properties to be assigned to components
               implementing this interface. */
  public void configure (CF.DataType[] configProperties) throws CF.PropertySetPackage.InvalidConfiguration, CF.PropertySetPackage.PartialConfiguration
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("configure", true);
                CF.PropertiesHelper.write ($out, configProperties);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CF/PropertySet/InvalidConfiguration:1.0"))
                    throw CF.PropertySetPackage.InvalidConfigurationHelper.read ($in);
                else if (_id.equals ("IDL:CF/PropertySet/PartialConfiguration:1.0"))
                    throw CF.PropertySetPackage.PartialConfigurationHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                configure (configProperties        );
            } finally {
                _releaseReply ($in);
            }
  } // configure


  /* The purpose of this operation is to allow a component to be queried
               to retrieve its properties. */
  public void query (CF.PropertiesHolder configProperties) throws CF.UnknownProperties
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("query", true);
                CF.PropertiesHelper.write ($out, configProperties.value);
                $in = _invoke ($out);
                configProperties.value = CF.PropertiesHelper.read ($in);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CF/UnknownProperties:1.0"))
                    throw CF.UnknownPropertiesHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                query (configProperties        );
            } finally {
                _releaseReply ($in);
            }
  } // query

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CF/PropertySet:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _PropertySetStub
