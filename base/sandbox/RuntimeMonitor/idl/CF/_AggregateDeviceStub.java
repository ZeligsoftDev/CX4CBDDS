package CF;


/**
* CF/_AggregateDeviceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CF.idl
* Monday, May 4, 2009 2:19:34 PM EDT
*/


/* The AggregateDevice interface provides aggregate behavior that can be
         used to add and remove Devices from a parent device.  This interface
         can be provided via inheritance or as a "provides port". Child devices
         use this interface to add or remove themselves from parent device when
         being created or torn-down. */
public class _AggregateDeviceStub extends org.omg.CORBA.portable.ObjectImpl implements CF.AggregateDevice
{


  /* The readonly devices attribute contains a list of devices that
               have been added to this device or a sequence length of zero if
               the device has no aggregation relationships with other devices. */
  public CF.Device[] devices ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("_get_devices", true);
                $in = _invoke ($out);
                CF.Device $result[] = CF.DeviceSequenceHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return devices (        );
            } finally {
                _releaseReply ($in);
            }
  } // devices


  /* The addDevice operation provides the mechanism to associate
               a device with another device. */
  public void addDevice (CF.Device associatedDevice) throws CF.InvalidObjectReference
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addDevice", true);
                CF.DeviceHelper.write ($out, associatedDevice);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CF/InvalidObjectReference:1.0"))
                    throw CF.InvalidObjectReferenceHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addDevice (associatedDevice        );
            } finally {
                _releaseReply ($in);
            }
  } // addDevice


  /* The removeDevice operation provides the mechanism to disassociate
               a device from another device. */
  public void removeDevice (CF.Device associatedDevice) throws CF.InvalidObjectReference
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeDevice", true);
                CF.DeviceHelper.write ($out, associatedDevice);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:CF/InvalidObjectReference:1.0"))
                    throw CF.InvalidObjectReferenceHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                removeDevice (associatedDevice        );
            } finally {
                _releaseReply ($in);
            }
  } // removeDevice

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CF/AggregateDevice:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _AggregateDeviceStub
