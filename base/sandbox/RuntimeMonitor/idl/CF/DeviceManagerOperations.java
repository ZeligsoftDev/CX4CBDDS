package CF;


/**
* CF/DeviceManagerOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CF.idl
* Monday, May 4, 2009 2:19:35 PM EDT
*/


/* The DeviceManager interface is used to manage a set of
         logical Devices and services. */
public interface DeviceManagerOperations  extends CF.PropertySetOperations, CF.PortSupplierOperations
{

  /* The deviceConfigurationProfile attribute contains the 
               DeviceManager's profile, a profile element with a file
               reference to the DeviceManager's Device Configuration Descriptor
               (DCD) profile. */
  String deviceConfigurationProfile ();

  /* The fileSys attribute contains the FileSystem associated
               with this DeviceManager or a nil CORBA object reference 
               if no FileSystem is associated with this DeviceManager.  */
  CF.FileSystem fileSys ();

  /* The identifier attribute contains the instance-unique
               identifier for a DeviceManager.  The identifier is identical to
               the deviceconfiguration element id attribute of the DeviceManager's
               Device Configuration Descriptor (DCD) file.  */
  String identifier ();

  /* The label attribute contains the DeviceManager's label.  The label
               attribute is the meaningful name given to a DeviceManager. */
  String label ();

  /* The registeredDevices attribute contains a list of Devices that
               have registered with this DeviceManager or a sequence of length
               zero if no Devices have registered with the DeviceManager.  */
  CF.Device[] registeredDevices ();

  /* The registeredServices attribute contains a list of Services that
               have registered with this DeviceManager or a sequence of length
               zero if no Services have registered with the DeviceManager.     */
  CF.DeviceManagerPackage.ServiceType[] registeredServices ();

  /* The registerDevice operation provides the mechanism to register a
               Device with a DeviceManager. */
  void registerDevice (CF.Device registeringDevice) throws CF.InvalidObjectReference;

  /* This operation unregisters a Device from a DeviceManager. */
  void unregisterDevice (CF.Device registeredDevice) throws CF.InvalidObjectReference;

  /* The shutdown operation provides the mechanism to terminate
               a DeviceManager, unregistering it from the DomainManager. */
  void shutdown ();

  /* The registerService operation provides mechanisms to register
               a Service with a DeviceManager and its DomainManager. */
  void registerService (org.omg.CORBA.Object registeringService, String name) throws CF.InvalidObjectReference;

  /* This operation provides mechanisms to unregister a Service from
               a DeviceManager and its DomainManager. */
  void unregisterService (org.omg.CORBA.Object unregisteringService, String name) throws CF.InvalidObjectReference;

  /* The getComponentImplementationId operation returns the SPD
               implementation ID that the DeviceManager interface used
               to create a component. */
  String getComponentImplementationId (String componentInstantiationId);
} // interface DeviceManagerOperations
