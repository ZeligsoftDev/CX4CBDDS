/**
 * Copyright (c) 2008-2009 Zeligsoft Inc.
 *
 * All rights reserved. 
 *  
 * THIS PROGRAM IS THE UNPUBLISHED, PROPRIETARY PROPERTY OF ZELIGSOFT INC. AND
 * IS TO BE MAINTAINED IN STRICT CONFIDENCE.  UNAUTHORIZED REPRODUCTION, 
 * DISTRIBUTION OR DISCLOSURE OF THIS PROGRAM, OR ANY PROGRAM DERIVED FROM IT,
 * IS STRICTLY PROHIBITED.
 *
 */
import uml;
import zdlgen;
import ZDL;

/**
 * Helper extension to query whether an element is to be included in the
 * generated model library.  These do not include DomainInstantiation and
 * instance specifications of DomainConcepts.
 */
Boolean isLibraryElement(Element self) :
    ! (DomainInstantiation.isInstance(self)
            || self.isDomainConceptInstance()
            || self.isDomainLink());

Boolean isLibraryElement(Object self) :
    true;
    
String getModelLibraryPackageName() :
	(String) GLOBALVAR modelLibraryPackageName
;
    
/**
 * Queries whether an element in the ZDL model library is an instance specification
 * of a DomainConcept.
 */
private Boolean isDomainConceptInstance(Element self) :
    InstanceSpecification.isInstance(self) &&
        ((InstanceSpecification) self).classifier.exists(c|DomainConcept.isInstance(c));

/**
 * Queries whether an element in the ZDL model library is an instance specification
 * of a DomainReference.
 */
private Boolean isDomainLink(Element self) :
    InstanceSpecification.isInstance(self) &&
        ((InstanceSpecification) self).classifier.exists(c|DomainReference.isInstance(c));