/**
 * Copyright 2018 ADLINK Technology Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
import CORBADomain::IDL;

extension com::zeligsoft::domain::omg::corba::codegen::xtend::mainTransform;
extension com::zeligsoft::domain::omg::ccm::generator::extensions::mainTransform;
extension com::zeligsoft::domain::omg::ccm::generator::extensions::scopedNames;

around com::zeligsoft::domain::omg::ccm::generator::extensions::baseIDL::toScopedName(*) :
	let newScopedName = new idl::ScopedName :
		newScopedName.name.add(getScopedNameFromNamedElement((uml::NamedElement)ctx.paramValues.first())) ->
		newScopedName;
		
around com::zeligsoft::domain::omg::corba::codegen::xtend::mainTransform::visitContained(CORBAModule module) :
	createModule(module);

private create idl::Module createModule(CORBAModule module) :
	setName(module.name) ->
	this.definitions.addAll(module.zdlAsPackage().packagedElement.visitContained()) ->
	this.comments.addAll(module.zdlAsPackage().ownedComment.visitContained()); 	
