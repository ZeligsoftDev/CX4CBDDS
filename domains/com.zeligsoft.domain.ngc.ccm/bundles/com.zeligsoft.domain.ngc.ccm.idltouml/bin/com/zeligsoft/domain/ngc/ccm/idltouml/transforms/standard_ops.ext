/**
 * Copyright 2018 ADLINK Technology Limited.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

 
extension com::zeligsoft::domain::ngc::ccm::idltouml::transforms::utils::tao_idl_utils;

/*****************************************************************************
 **
 **
 ** Add a default constructor to a class
 **
 **
 ****************************************************************************/
 create uml::Operation add_default_constructor(uml::Class container, String name, uml::VisibilityKind visibility) :
 	this.setName(name) ->
 	this.setVisibility(visibility) ->
 	container.ownedOperation.add(this) ->
 	this.addGeneratedTag() ->
 	this;
 	
/*****************************************************************************
 **
 **
 ** Add a destructor to a class
 **
 **
 ****************************************************************************/
 create uml::Operation add_destructor(uml::Class container, String name, uml::VisibilityKind visibility) :
 	this.setName("~" + name) ->
 	this.setVisibility(visibility) ->
 	container.ownedOperation.add(this) ->
 	this.addGeneratedTag() ->
 	this; 
 	
/*****************************************************************************
 **
 **
 ** Add a copy contructor to a class
 **
 **
 ****************************************************************************/
 create uml::Operation add_copy_constructor(uml::Class container, String name, uml::VisibilityKind visibility) :
 	this.setName(name) ->
 	this.setVisibility(visibility) ->
 	add_copy_constructor__parameter(this, container) ->
 	container.ownedOperation.add(this) ->
 	this.addGeneratedTag() ->
 	this; 
 	
private create uml::Parameter add_copy_constructor__parameter(uml::Operation container, uml::Class type) :
	this.setName("c") ->
	this.setType(type) ->
	container.ownedParameter.add(this) ->
	this.addGeneratedTag() ->
	this;