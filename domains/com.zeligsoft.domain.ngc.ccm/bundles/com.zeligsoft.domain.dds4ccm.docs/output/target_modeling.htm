<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
 <meta name="generator" content="Adobe RoboHelp 9">
<title>Target Modeling</title>
<link rel="StyleSheet" href="helpstyle.css" type="text/css">
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
</style>
<script type="text/javascript" language="javascript1.2" src="whmsg.js"></script>
<script type="text/javascript" language="javascript" src="whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="whlang.js"></script>
<script type="text/javascript" language="javascript1.2" src="whtopic.js"></script>

</head>

<body><script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.gbWhTopic)
{
	var strUrl = document.location.href;
	var bc = 0;
	var n = strUrl.toLowerCase().indexOf("bc-");
	if(n != -1)
	{
		document.location.href = strUrl.substring(0, n);
		bc = strUrl.substring(n+3);
	}

	if (window.addTocInfo)
	{
	addTocInfo("CX Online Help\nTutorials\nTutorial 4: Target Modeling");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(0);

	
	

	if (window.setRelStartPage)
	{
	setRelStartPage("index.htm");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();

//-->
//]]></script>
<h1>Tutorial 4: Target Modeling</h1>
<p>This tutorial builds on and assumes you have completed Tutorial 1: <a href="getting_started.htm">Getting Started</a> and Tutorial 2: <a href="top-down_design.htm">Top-Down_Design</a>.</p>
<p>In this tutorial, you will learn how to model a target environment or 
 domain.</p>
<p>You can view a video of this tutorial <a href="http://www.zeligsoft.com/files/CX_Videos/CX4CBDDS/CX4CBDDS-Target/CX4CBDDS-Target.html" 
											 title="Target Modeling video" 
											 target="_blank">here</a>. 
 &#160;Depending on your screen size, you may want to close the Contents 
 frame.</p>
<h2><a name="Model the Target"></a>Model the Target</h2>
<p>Targets provide the processing and network resource for running applications. 
 A specific target or domain is composed of nodes (computers), interconnects 
 (networks and busses), processors (GPPs, DSPs, etc.), and processes.</p>
<p>In this tutorial, you will model a simple dual processor system.</p>
<h3>Create a Package</h3>
<p>We will use a new package to organize our platform elements.</p>
<p>To create a package, follow these steps:</p>
<ol type="1">
	<li class="p"><p>Right-click <span style="font-weight: bold;"><b>DiningPhilosophers</b></span> 
	 model and from the context menu, select <span style="font-weight: bold;"><b>Add 
	 CX &gt; Package</b></span>.<br>
	The tool creates the package in the model.</p></li>
	<li class="p"><p>Rename package <span style="font-weight: bold;"><b>targets</b></span>.</p></li>
	<li class="p"><p>Save your model.</p></li>
</ol>
<h3>Create a Domain</h3>
<p>Domains represent complete target environments (for deployment and execution).</p>
<p>To create a domain, follow these steps:</p>
<ol type="1">
	<li class="p"><p>Right-click <span style="font-weight: bold;"><b>targets</b></span> 
	 and from the context menu, select <span style="font-weight: bold;"><b>Add 
	 CX &gt; Domain</b></span>.<br>
	The tool creates a structure diagram.</p></li>
	<li class="p"><p>Rename the domain and structure diagram &#160;<span 
	 style="font-weight: bold;"><b>DualProcessorSystem</b></span>.</p></li>
	<li class="p"><p>Save your model.</p></li>
</ol>
<h3>Create a Node</h3>
<p><a href="keyconcepts.html#Node">Nodes</a> represent processing resources 
 which are basically processor that can execute component software.</p>
<p>To create a node, follow these steps:</p>
<ol type="1">
	<li class="p"><p>Right-click <span style="font-weight: bold;"><b>targets</b></span> 
	 and from the context menu, select <span style="font-weight: bold;"><b>Add 
	 CX &gt; Node</b></span>.<br>
	The tool creates a node.</p></li>
	<li class="p"><p>Rename the node <span style="font-weight: bold;"><b>x86</b></span>.</p></li>
	<li class="p"><p>Drag-and-drop two x86 nodes onto the <span style="font-weight: bold;"><b>DualProcessorSystem</b></span> 
	 structure diagram.</p></li>
	<li class="p"><p>Save your model.</p></li>
</ol>
<h3>Create Interconnect</h3>
<p><a href="keyconcepts.html#Interconnects">Interconnects</a> define connection 
 mechanisms and protocols.</p>
<p>To create an interconnect, follow these steps:</p>
<ol type="1">
	<li class="p"><p>Right-click <span style="font-weight: bold;"><b>Targets</b></span> 
	 and from the context menu, select <span style="font-weight: bold;"><b>Add 
	 CX &gt; Interconnect</b></span>.</p></li>
	<li class="p"><p>Rename the Interconnect <span style="font-weight: bold;"><b>TCPIP</b></span>.</p></li>
	<li class="p"><p>Drag-and-drop <span style="font-weight: bold;"><b>TCPIP</b></span> 
	 onto the <span style="font-weight: bold;"><b>DualProcessorSystem</b></span> 
	 structure diagram.</p></li>
	<li class="p"><p>Name TCPIP <span style="font-weight: bold;"><b>bus</b></span>.</p></li>
	<li class="p"><p>Save your model.</p></li>
</ol>
<h3>Connect Processors to Bus</h3>
<p>To connect the processors to the bus, follow these steps:</p>
<ol type="1">
	<li class="p"><p>From the Palette, drag a <span style="font-weight: bold;"><b>Target 
	 Assembly Connection</b></span> onto the <span style="font-weight: bold;"><b>DualProcessorSystem</b></span> 
	 structure diagram and connect an x86 to the bus.</p></li>
	<li class="p"><p>Repeat for the remaining x86.</p></li>
	<li class="p"><p>Save your model.</p></li>
</ol>
<h3>Create Container Process</h3>
<p>A container process allows you to model and manage the processes on 
 each node. &#160;For this example, you just need a simple type of Container 
 Process.</p>
<p>To create a container process, follow these steps:</p>
<ol type="1">
	<li class="p"><p>Right-click <span style="font-weight: bold;"><b>Targets</b></span> 
	 and from the context menu, select <span style="font-weight: bold;"><b>Add 
	 CX &gt; Container Process</b></span>.</p></li>
	<li class="p"><p>Rename the Container Process <span style="font-weight: bold;"><b>Process</b></span>.</p></li>
	<li class="p"><p>Save your model.</p></li>
</ol>
<h2>Tutorial Summary</h2>
<p>In this tutorial you learned about modeling target environments (domains).</p>
<p>&#160;</p>
<p>&#160;</p>
<p>&#160;</p>
<div class="runningfooter" id="dochomefooter">
	<a href="mailto:support@prismtech.com" shape="rect" style="color: #0000ff; 
		 text-decoration: underline; ">Provide feedback</a><br style="clear: none;">
	
	<hr align="center">
	<br>Copyright <sup>©</sup> 2011 PrismTech Ltd. All rights 
	 reserved. 
</div>
<script type="text/javascript" language="javascript1.2">//<![CDATA[
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);


highlightSearch();
//-->
//]]></script>
</body>
</html>
