<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 sp2 U (http://www.altova.com) by Tim McGuire (private) -->
<?xml-stylesheet type="text/xsl" href="C:\Temp\ReleaseNotes_xml_to_html\out_release_html.xslt"?>
<root>
	<!--releaseNote-->
	<releaseNote outputFile="ReleaseNote.html" title="CX 3.2.1 Release Notes">
		<h1>CX Release Notes</h1>
		<p>
			<strong>Version: </strong>3.2.1</p>
		<p>
			<strong>Release Date: </strong>September 2010</p>
		<!--toolDescription-->
		<toolDescription>
			<p><pn>productname</pn><sup>TM</sup> is a component-oriented engineering (COE) development tool essential for the design of re-usable software 
			components. CX provides the design, development 
			and maintenance support for system structure, and inter-component communication and control, allowing developers to minimize software complexity 
			and rapidly adapt software to new platforms. CX's powerful visual system representation uses a UML 2.0 interface to give cross-functional and 
			geographically-dispersed team members critical insight into system structure.</p>
			<p>CX is built on top of the IBM Rational Software Modeler (RSM) and utilizes and extends many of its capabilities and functionality.</p>
			<p>CX enables developers to model, configure, integrate, and validate applications through a UML 2.0 interface. 
			Using CX you can verify your 
			model and generate the complete set of artifacts for your domain, reducing development time. </p>
		</toolDescription>
		<systemrequirements>
		<h2>System Requirements</h2>
			<table summary="System Requirements">
				<tr>
					<td><strong>Operating System</strong></td>
					<td><strong>Software</strong></td>
					<td><strong>Hardware</strong></td>
				</tr>
				<tr>
					<td>Linux, Windows 2000, Windows 2003, Windows 2008,
					</td>
					<td>Microsoft Windows XP Professional (x32 / x64), Microsoft Windows Server 2003 Standard / Enterprise Edition (x32 / x64), / Enterprise Ultimate 
(x32 / x64), Microsoft Windows Server 2008 Standard / Enterprise Edition (x32 / x64), Red Hat Enterprise Linux Version 4.0 AS / ES 
(x32), Red Hat Enterprise Linux Version 5.0 AS / ES (x32), Red Hat Enterprise Linux Desktop Version 4.0 (x32), Red Hat 
Enterprise Linux Desktop Version 5.0 (x32), SUSE Linux Enterprise Server (SLES) Version 9 (x32), SUSE Linux Enterprise Server (
SLES) Version 10 (x32), SUSE Linux Enterprise Desktop (SLED) 9 (x32), SUSE Linux Enterprise Desktop (SLED) 10 (x32), Citrix 
Presentation Server 4.x, VMWare environment
					</td>
					<td>Intel Pentium III 800 MHz or higher recommended; Display, minimum requirements: 1024 x 768; 1GB RAM minimum; 2GB RAM 
					recommended; Required disk space: 1.3GB installed with 500MB for temporary space; Linux is supported on x86 
					architecture only
					</td>
				</tr>
			</table>
		<h2>Additional Requirements</h2>
		<table summary="Additional Requirements">
				<tr>
					<td><strong>Linux based systems:</strong></td>
					<td>libstdc++.so.5 and GNU Make 3.81 is required</td>
				</tr>
				<tr>
					<td><strong>Unit test generation feature:</strong></td>
					<td>idlj from the Sun JDK (version 1.5 or greater) and a TargetLoader implementation is required</td>
				</tr>
			</table>
		</systemrequirements>
		<installationInstructions>
			
			<h3>Installation</h3>
			<p>The <pn>productname</pn> installation is completed using an installation wizard. Follow the instructions below to install 
			<pn>productname</pn>.</p>
			<ol>

			<li>
			If the host platform is Linux, it is recommended that installation and licensing be performed as root. This will make Spectra CX available to all users of the machine on which it is installed. Furthermore, sometimes the install will fail when being performed as a user. If this happens, run the uninstall.sh script, switch to an account with root privileges and repeat the install.
			</li>

			<li>You can download CX from the <cn>companyName</cn> web site. To do this, you need to contact support at <a href="mailto:support@prismtech.com">support@prismtech.com</a> and they will provide you with the URL to download from. If you are installing from a DVD, you will need to copy and uncompress the contents to the hard drive first. You cannot install by running off of the DVD as this will prevent the log file from being written. To install CX do the following:
			</li>

		


			<ul>
			<li>Browse to either installer_linux or installer_win32 depending on your platform type.</li>
			<li>On Windows, double-click <strong>install.bat</strong>.</li>
			<li>On Linux, execute the <strong>install.sh</strong> script.</li>
			</ul>
			<p>The Installation Wizard is opened.</p>
			<li>Browse to the installation directory.</li>
			<p>On Windows, the default installation directory is C:\Program Files\SpectraCX\CX. This directory is automatically selected for you. .</p>
			<p>If you have a previous installation of <pn>productname</pn>, you must first uninstall it by running unistall.bat or uninstall.sh depending on the platform type.</p>
			<p>On Linux, you must install as the root user or as a member of the root user group,. The default installation directory is
			 /opt/SpectraCX/CX.</p>
			 <p>Click <strong>Next</strong>.</p>
			 <li>Select features to install. The following are required:</li>
			 <ul>
			 <li>Base Components</li>
			 <li><pn>productname</pn> Workbench</li>
			 </ul>
			 <p>Expand <strong><pn>productname</pn> Support for Embedded Domains</strong> and select <strong>Software Communications Architecture</strong>.</p>
			 <p>Click <strong>Next</strong>.</p>
			 <li>Identify locations of the SDP Folder and the SDP Shared Cache Folder.</li>
			 <p>On Windows, the installation wizard looks for the Eclipse cache and if one is found in C:\Program Files\SpectraCX\SDPShared 
			 (in case of a previous <pn>productname</pn> install) or C:\Program Files\IBM\SDPShared (in case of previous IBM software installation), this location 
			 is used and you cannot change this option.</p>
			 <p>If any other IBM software was previously installed using the 
			 IBM Installation Manager, the same SDP Shared cache folder must be selected that was used by the pre-existing software.</p>
			 <p>On Linux, the default location is:</p>
			 <ul>
			 <li>For root users: /opt/SpectraCX/SDPShared/ and /opt/IBM/SDPShared/.</li>
			 
			 </ul>
			 <p>Click <strong>Next</strong>.</p>
			 <li>Accept the license terms and click <strong>Next</strong>.</li>
			 <li>Review the Installation Summary, enable the appropriate launcher icon and click <strong>Finish</strong> to start the installation process.</li>
			 <p>When installing CX as an administrative user, the application-menu launcher is created for all users on the system but 
			 the desktop launcher icon is created on the actual user's own desktop only. When installing as an unprivileged user, the applications 
			 menu launcher is created only for that user. Installation on Linux requires the user to be logged on as root.</p>
			 
			 <p>A window is displayed to indicate that the installation of <pn>productname</pn> is complete.</p>
			 </ol>


   
			   
		</installationInstructions>
		<contact>
			<support>
			<h3>Contact <cn>companyname</cn></h3>
				<p>Product support: <a href="mailto:support@prismtech.com"><ps>productSupport</ps></a>.</p>
				
<p> General enquiries: <a href="mailto:info@prismtech.com"> info@prismtech.com</a></p>
<p> Web: <a href="mailto:wwwprismtech.com"> www.prismtech.com</a></p>

<h3>European Headquarters </h3>
<strong>
<p>PrismTech Limited</p>
<p>PrismTech House, </p>
<p>5th Avenue Business Park, </p>
<p>Gateshead, Tyne and Wear, </p>
<p>NE11 0NG, </p> 
<p>United Kingdom</p>
Tel: +44 (0) 191-4979900
Fax: +44 (0) 191-4979901
</strong>
<h3>USA Corporate Headquarters - PrismTech Corporation</h3>
<strong>
<p>400 TradeCenter,  </p>
<p>Suite 5900, </p>
<p>Woburn, MA </p>
<p>01801, </p>
<p>USA</p>
<p>Tel: (1) 781-569-5819</p> 
</strong>
				
				
				
				
				<!-- <p>Phone:<phone>1 800 ZELIGSW (+1 800 935 4479)</phone></p>
				<hours start="0900" stop="1700" zone="ET"/> -->
			</support>
		</contact>
		<licensing>
			<h3>Information and Support</h3>
			
			 
			 <h3>Product Licensing</h3>
			 <p>CX requires two licenses to run: an RSM license is required for the base tool and a CX license is required to access the CX specific functionality. The first time CX is installed a 30 day trial RSM license will be installed. To make the installation permanent, you will require a permanent RSM license which can be acquired from support.</p>
			 
<h3>Importing the RSM license</h3>
<p>When the 30 day trial RSM license has expired, you will be presented with a dialog which indicates that there is no license key for Rational Software modeler Product Plug-in available.</p> 
<p>On Linux, you must be running as root to install the RSM license.</p>
<li>Click <strong>Manage Licenses</strong>.</li>
<li>Select Rational Software modeler and click Apply License. This will start the IBM installation manager.</li>
<li>Select Import product activation Kit</li>
<li>Click <strong>Next</strong>.</li>
<li>Browse to the RSM license jar file supplied by support.</li>
<li>Click <strong>Next</strong> and accept.</li> 
<p>The RSM license can also be installed by following the above steps after invoking the IBM installation manager directly and not as a result of starting CX.</p>

			 
			<h3>Importing the <pn>productname</pn> License</h3>
			<p>The <pn>productname</pn> license is called companyname.lic. This file is emailed to you. There are 
			two license types available: trial and permanent. </p>
			<p>The first time you launch <pn>productname</pn> you are prompted to import a license:</p>
			<ol>
			<li>Click <strong>Manage Licenses</strong>.</li>
			<li>Click <strong>Import License File</strong> and browse to the .lic file provided by <cn>companyname</cn>.</li>
			<li>Click <strong>OK</strong>, review the list of features to be licensed and then click <strong>Restart Workbench</strong>.</li>
			</ol>
			<p>If you imported a trial license, you can view the time remaining with the license or import a permanent license. 
			From the <strong>Help</strong> menu, select <strong>Manage <pn>productName</pn> Licenses</strong>. The Manage Licenses window opens and follow the 
			procedure as described above.</p>
			<p>If your CX trial license expires, the next time you open <pn>productname</pn>, you are prompted to import a license as described above.</p>
		</licensing>
		<uninstall>
		<h3>Uninstalling <pn>productname</pn></h3>
		<p>Note that when you uninstall <pn>productname</pn>, you also uninstall RSM.</p>
		<p>To uninstall <pn>productname</pn>, do the following:</p>
		<ol>
		<li>On Windows, run <strong>uninstall.bat</strong> or on Linux, execute <strong>uninstall.sh</strong>.</li>
		<li>Click <strong>Finish</strong> and click <strong>Yes</strong> to uninstall the software.</li>
		</ol>
		</uninstall>
		
		<newFeatures>
		<h3>New features in 3.2</h3>

		<h4>IDL pre-processor support</h4>
		<ul>
		<li>IDL import now supports a full pre-processor</li>
		<li>IDL generation now generates the IDL file and any files it includes</li>
		</ul>

		<h4> JUnit test generation </h4>
		<p> JUnits tests are generated for LifeCycle, PortSupplier, PropertySet, Resource and Device interfaces. </p>
 
		<h4>Added a validator for SCA XML and DTD files.</h4>
		<p>The validator currently supports 77 rules which apply to the SCA 2.2.2 specification. The validator is invoked by choosing 'Validate' from the Project Explorer's context menu. The validation results can be viewed in the 'SCA XML Problems' view.</p>


		<h4>Spectra CX code generation now produces code that conforms to the minimal CORBA rules.</h4>
		<ol>
		<li>All variables are initialized before use.</li>
		<li>No use of explicitly declared memory locations of addresses.</li>
		<li>Global variables are not used.</li> 
		<li>All register references, constant loop counters etc., use symbolic names.</li> 
		</ol>




		</newFeatures>

		<knownIssues>
		<h3>Known Issues</h3>
		
			<id val="0">
			<h4>SpectraCX displays a small window on startup on Linux</h4>
			<p> 
			If SpectraCX cannot find xulrunner , then when starting SpectraCX, you will see a small window. To address this problem, you need to make sure xulrunner is installed and then modify the <strong>cx.ini </strong> file in <strong>/opt/SpectraCX/CX/cx.ini </strong> to have the line 
			</p>

			<p>
				  <strong> -Dorg.eclipse.swt.browser.XULRunnerPath=/usr/lib/&lt;xul dir name&gt;/xulrunner </strong>
			</p> 
			<p>
			at the end. Compatible versions of XULRunner are 1.8.x - 1.9.0.x.

			</p>
			</id>




			<id val="331">
			<h4>Installing on SE Linux</h4>
			
			<p>The installation of Spectra CX will fail if SELinux is set to enforcing. If
			installation is attempted the user is likely to see a dialogue appearing
			stating:</p>
			<p><strong>"JVM terminated. Exit code = -1".</strong></p>
			<p>In Gnome the user may also
			receive a notification from the Gnome menu bar stating:</p>
			<p><strong>"SELinux AVC denial, click icon to view".</strong></p>
			
			<p>To install CX follow this procedure run the following commands in a terminal as root:</p>
			<pre>
				$ /usr/sbin/setenforce 0
				$ &lt;Spectra CX install directory&gt;/install.sh
				$ /usr/sbin/setenforce 1
				$ chcon -R -t textrel_shlib_t '/opt/SpectraCX' (Note for versions prior to 3.2 the directory is /opt/Zeligsoft)
				$ chcon -R -t textrel_shlib_t '/opt/IBM'
			</pre>

			</id>

			<id val="353">
			<h4>SCA XML import limitations</h4>
			<p>The following constructs are not currently supported by the SCA XML import facility:</p>
			<ul>
			<li>softpkg/implref</li>
			<li>hostcollocation import</li>
			<li>structsequence import</li>
			</ul>
			</id>

			<id val="370">
			<h4>XML import does not preserve FSP and external port types</h4>
			<p> XML import does not assign a port type to a FSP (free standing ports) or an
				external port during XML
				import. As a result, a model with connectors from components to FSP and
				external ports will
				not properly validate until the user sets the port types after import.
			</p>
			</id>




			<id val="314">
			<h4>Model element names should not contain spaces</h4>
			<p>SpectraCX allows model element names to contain spaces. This can result in incorrect code being generated. Model developers should avoid using spaces in model element names. In the future, this restriction will be enforced by the tool.</p>
			</id>



			<id val="191">
			<h4>Changes to IDL file location not saved with readonly library</h4>
			The IDL files contained in the CF_IDL library in the tool support a file location field. This should be treated as readonly and not modified and should be left set to the default value of <strong>$(CF_FILE_LOCATION)</strong>. If the user wants to use their own external IDL, add a variable in Windows->preferences-workspace->linked resources to point to their external IDL file location i.e. <strong>USERIDL_FILE_LOCATION</strong> and set the user IDL file location to the variable i.e. <strong>$(USERIDL_FILE_LOCATION)</strong>. Changing the location field in the readonly CF_IDL library will not be persisted and will be lost when Spectra CX is restated or shutdown.</id>


			<id val="212">
			<h4>Generated code conforms to minimum CORBA specification</h4>
			All generated code conforms to the minimum CORBA specification
			with the exception of the entry point code for all components where the ORB
			shutdown operation is used. All supported ORBs support this operation so this
			is not believed to be an issue.
			</id>

			

			<id val="14070">
			<h4>IDL operation length exceeds 80 characters</h4>
			If an operation raises a large number of exceptions during IDL generation, it is possible that the line length can
			exceed 80 characters. If lines exceed 80 characters, IDL generation will fail.</id>


		
			
			
			<id val="14342">
			<h4>CDT 5.0.1 is not supported</h4>
			When running CX on Windows and with CDT 5.0.1, code generation will not work. To prevent this problem, 
			use CDT 5.0.0.</id>
			
			<id val="14363">
			<h4>Line break required in IDL file</h4>
			If the last line of the IDL file terminates with a comment, you will receive a parser error. To work around this, ensure
			a line break is included at the end of the last line.
			</id>

			<id val="14737">
			<h4>NamingService and ResourceFactory-ref collision</h4>
			Only the NamingService or the ResourceFactory-ref can be generated. If both of these properties
			are defined, the ResourceFactory-ref takes precedence and only it will be generated.</id>
			

			<id val="57">
			<h4>Support for SCA 2.2</h4>
			Spectra CX 3.2 by default supports SCA 2.2.2. For support of SCA 2.2, please contact PrismTech at <a href="mailto:support@prismtech.com"><ps>productSupport</ps></a>.
			</id>

   

                <id val="142">
			<h4>IDL Generation does not work for multiple selections</h4>
			<p>   
				 If multiple IDLFile elements are selected in the Project Explorer, the user
				 can run the CX Generate &gt; Generate IDL action. However, it only generates one
				 of the selected IDL files. The user needs to select one IDLFile at a time and generate. This will be addressed in a future release.
			 </p>
		</id>



	<id val="180">
	<h4>Save model changes before importing IDL</h4>
      <p>   
			If you have unsaved model changes when you start an IDL import, you will either have to lose the model changes or abandon the IDL import. Prior
			to performing an IDL import, save the model you are working on.
      </p>
	</id>


<id val="175">
	<h4>Build Succeeds but binary is not created</h4>
      <p>   
		If an executable implementation binary file name is missing the file extension defined in its build configuration tools extension_exe field, it will look like the build
		succeeded but the binary file will not exist. For example if a Windows build configuration has its extension_exe defined as .exe and the implementation binary file name is 
		missing the .exe extension, the binary will not be created. 

		Note: If using the Component Creation wizard, the default behavior is to name
		the implementation file name the same as the component name without a file extension.
      </p>
	</id>


<id val="175">
	<h4>Installation Fails if installation directory path has unexpected characters.</h4>
      <p>   
			CX installation will fail if the install path has unexpected characters. For instance, if
			the CX installer is unzipped to a directory whose path contains the character
			&#199;, the installation may fail. The log file in &lt;Installer_dir&gt;/configuration
			will indicate something like:
			
			<pre>
			00:00.65 ERROR [Thread:main]
			com.ibm.cic.agent.internal.application.HeadlessApplication run
			Octet 2 incorrect dans la s?quence UTF-8 ?   3-octets.
			</pre>
      </p>
	</id>




<id val="175">
	<h4>Build fails with make versions earlier than 3.81</h4>
      <p>   

		    When building CX generated code, GNU make 3.81 or later is required. Often the
		    version of make shipped with RTOS's, such as LynxOS and VxWorks, is too old.
				</p>
				<p>
			This requirement is due to a known bug in make 3.80 which affects our Makefiles.
			When $(eval) evaluates a line that is over 193 characters, make crashes with a
			"Virtual Memory	Exhausted" error. This bug was fixed in make 3.81. 
				</p>
				<p>
			On Windows systems CX is bundled with MinGW make version 3.81 which is automatically
			used when building from within CX.
				</p>
				<p>
			On Linux systems users may find that the host operating	system comes with make 3.81 or
			greater. If this is the case users should use the host operating systems make instead
			of the version shipped with the RTOS. This can be achieved by ensuring the host operating
			systems make is first on the path. If the host operating system does not come with a
			compatible version of make users should download and install GNU make version 3.81 or later.
      </p>
	</id>




 <id val="166">
			<h4>Cannot create an application with 2 or more components</h4>
      <p>   
		When using Spectra CX generated devices for the Spectra Operating Environment,
		add an execparam to the DomainManager with name and id set to
		THREADPOOL_NO_POOL, with a value of 1. This instructs the ApplicationFactory
		not to use a thread pool for its operations. Without this option applications
		with more than one component will fail to be created.
	  </p>
			<pre>
			&lt;simple id="THREADPOOL_NO_POOL" type="long" name="THREADPOOL_NO_POOL" mode="readwrite"&gt;
				&lt;value&gt;1&lt;/value&gt;
				&lt;kind kindtype="execparam"/&gt;
			&lt;/simple&gt;
			</pre>
</id>

 <id val="220">
			<h4>Install on Linux fails with tar error</h4>
    <p>  
			If the version of tar installed on Linux is earlier than 1.14, then the install will fail. This is because with version 1.15, the strip-path option was renamed to strip-components. The installer expects a version of tar which supports strip-components. If you encounter this problem, the work around is to put a newer version of tar on the path where the operating system expects to find commands. The install package contains a version of tar at<strong> &lt;install dir&gt;/misc/tar-1.22.tar.gz </strong>.  The tar file is gzipped and tarred itself. You must extract the tar executable and then make sure it is put on the path so that it is picked up before the older version of tar.
</p>
</id>


 <id val="221">
			
			<h4>Install never terminates</h4>
    <p>  
			Sometimes the install will hang and not terminate. One part of the install process goes out to the network looking for newer, compatible versions of Eclipse  plugins. Slow or unreliable network performance can cause this operation to hang. If this happens, the workaround is to disconnect from the network, terminate the install and try again. You will need to run the uninstall script first as the failed install will have left behind artifacts which lead the installer to believe that CX has already been installed.
</p>
</id>

 <id val="236">
			
			<h4>Installing on Ubuntu 8.0.4 requires a non-default version of libstdc++</h4>
    <p>  
	When installing Spectra CX on a fresh Ubuntu 8.0.4 machine, the user must first
run the following:
</p>
<pre>
$ sudo apt-get install libstdc++5
</pre>
<p>
This command will install version 5 of the standard C++ library, as required by
the Spectra CX installation process.

</p>
</id>


<id val="402">
				<h4>Test generation fails when referencing external IDL files</h4>
				<p> 
					<p>
					The ant build scripts currently generated by the test generator do not
					currently support the referencing of external IDL files. If tests are generated
					in such a case the generated test code will likely fail due to the referenced
					IDL not being compiled.
					</p>
					<p>
					As a workaround users may modify the <strong>build.xml</strong> file to include the relevant IDL
					when invoking the IDL compiler. This can be achieved by adding extra <strong>&lt;arg
					value="-i"&gt;</strong> and <strong>&lt;fileset&gt;</strong> sections. Please note however that this <strong>build.xml</strong>
					file will be overwritten each time test code is regenerated.
					</p>
				</p>
</id>




 <id val="391">
			
			<h4>DMD XML File Generation</h4>
<p>
In CX 3.1.2 the DMD.xml file was generated by right clicking on the
DomainManager and selecting CX Generate Descriptor(s). In CX 3.2 the DMD.xml
file can be generated as before or directly by right clicking on the Domain
element and selecting CX Generate Descriptor(s).
</p>
				<p>
Users migrating from CX 3.1.2 to 3.2 will also need to update their models.
Users should remove the deprecated DMDProperties object from their models and
replace it with a Domain object. Note deleting the DMDProperties object will
also remove any relationships that have been modeled. Users will need to recreate these
relationships.
				</p>
</id>


<id val="497">			
<h4>Build configuration migration</h4>
<p>
When upgrading a build configuration plugin to a newer version, associations
between build configurations and implementations within Spectra CX models may
be lost. To re-establish these references users should edit the build
configuration for each implementation and re-select the appropriate
configuration.
</p>

<p>
This issue only affects users upgrading from build configurations issued for
Spectra CX 3.2.0 or older. Future upgrades will not be affected by this issue.
</p>
</id>


<id val="392">			
<h4>Build Configuration Copy Binary Issue</h4>
<p>
Build configurations have the option to copy an existing binary instead of generating source 
code and compiling a binary. This copy is currently done during descriptor generation and the 
external binaries are copied to the generated source folder.
</p>
<p>
Performing a 'make clean' on a generated source project deletes the obj folder which contains 
all generated and non-generated (copied) binaries. The problem is that a subsequent 'make all' 
will not reinstate all those binaries because the non-generated ones are copied by doing a 'CX Generate >
Descriptor(s)' on components that use a Binary Configuration. Therefore, after doing a make clean 
the user must go back to the model and regenerate descriptors for all components that have Binary Configurations.
</p>

</id>


<id val="489">			
<h4>Spectra CX Licensing Issue</h4>
<p>
In some circumstances when CX is missing a Spectra CX license, the user may be allowed to start CX with 
just the IBM Rational Software Modeler (RSM) license. However when the user tries to open a CX model it may 
fail with no indication why. The solution is to apply the Spectra CX license and restart CX.
</p>
</id>




</knownIssues>
	</releaseNote>
</root>
