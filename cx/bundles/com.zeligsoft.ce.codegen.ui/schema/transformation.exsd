<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.zeligsoft.cx.codegen.ui" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.zeligsoft.cx.codegen.ui" id="transformation" name="Transformation Mapping Registry"/>
      </appInfo>
      <documentation>
         This extension point is used to contribute to the Zeligsoft Generate menu dynamically.  Extentions are required to provide mappings for ZDLConcepts to both a workflow resource and a label. When a ZDLConcept is mapped to multiple workflows, the UI will present an option to execute all workflows for the ZDLConcept or a particular workflow.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
         <documentation>
            This extension point is used to contributte to the Zeligsoft Generate menu dynamically.  Extentions are required to provide mappings for ZDLConcepts to both a workflow resource and a label. When a ZDLConcept is mapped to multiple workflows, the UI will present an option to execute all workflows for the ZDLConcept.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="concept" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="concept">
      <annotation>
         <documentation>
            This element provides the mapping for 1 ZDLConcept to one or more transformation workflows.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="workflow" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="type" type="string">
            <annotation>
               <documentation>
                  The fully qualified name of a ZDLConcept or Element type id (e.g., com.ibm.xtools.uml.package)
                  This takes precedence over umlType when both are set.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="umlType" type="string">
            <annotation>
               <documentation>
                  The fully qualified name of a UML Concept or Element type id (e.g., com.ibm.xtools.uml.model)
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="workflow">
      <annotation>
         <documentation>
            The associated workflows for the parent concept.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="label" type="string" use="required">
            <annotation>
               <documentation>
                  The display label for the transformation.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="path" type="string" use="required">
            <annotation>
               <documentation>
                  The path, relative to the root of the plug-in, or an absolute location URL of the transformation workflow.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="validationFactory" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":com.zeligsoft.cx.codegen.editor.IValidationFactory"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="cancelOnValidationError" type="boolean">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="overrideId" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="licenser" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="com.zeligsoft.cx.codegen.ui.providers.UIProviderLicenser:"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="checkShouldGenerateCode" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":com.zeligsoft.cx.codegen.editor.ICheckCodeShouldGenerate"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="visibilityTest" type="string">
            <annotation>
               <documentation>
                  The optional visibility test class used to determine the conditions under which the workflow item should be shown and included as part of the &quot;Generate &gt; All&quot; workflow. Must implement IFilter.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.jface.viewers.IFilter"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         Below is an example of this extension point&apos;s useage:
&lt;pre&gt;
     &lt;extension
           point=&quot;com.zeligsoft.cx.codegen.ui.transformation&quot;&gt;
        &lt;concept
              type=&quot;MyDomain::MyBlock::MyConcept&quot;&gt;
           &lt;workflow
                 path=&quot;workflows/concept_transform.oaw&quot;
                 label=&quot;Concept Code&quot;&gt;
           &lt;/workflow&gt;
           &lt;workflow
                 path=&quot;workflows/concept_desc_transform.oaw&quot;
                 label=&quot;Concept Descriptors&quot;&gt;
           &lt;/workflow&gt;           
        &lt;/concept&gt;
     &lt;/extension&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>


</schema>
