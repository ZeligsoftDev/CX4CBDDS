�REM�

 Copyright 2018 ADLINK Technology Limited.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

�ENDREM�

�IMPORT uml�

�EXTENSION extensions::BuildEnvFuncs�
�EXTENSION extensions::SCABuildEnvFuncs�

�DEFINE generateBuildFragments FOR Property�

�FILE "blds/"+getBuildEnvName(this)+".mk"�

�EXPAND templates::copyright::generate FOR this�

HOST_�getBuildEnvName(this)�= �getHostOS(this)�

BLDENVS += �getBuildEnvName(this)�
 
# important target information
OS_�getBuildEnvName(this)�= �getTargetOS(this)�
PROCESSOR_�getBuildEnvName(this)�= �getTargetProcessor(this)�
TOOLCHAIN_�getBuildEnvName(this)�= �getTargetToolChain(this)�
CF_�getBuildEnvName(this)�= �getCoreFramework(this)�
ORB_�getBuildEnvName(this)�= �getORB(this)�

TARGET_�getBuildEnvName(this)�= $(OS_�getBuildEnvName(this)�)_$(PROCESSOR_�getBuildEnvName(this)�)_$(TOOLCHAIN_�getBuildEnvName(this)�)_$(CF_�getBuildEnvName(this)�)_$(ORB_�getBuildEnvName(this)�)

# target specific file details
# file extensions and prefixes
OBJEXT_�getBuildEnvName(this)�= �getObjectFileExtension(this)�
EXEEXT_�getBuildEnvName(this)�= �getExecutableFileExtension(this)�
LIBEXT_�getBuildEnvName(this)�= �getLibraryFileExtension(this)�
LIBPREFIX_�getBuildEnvName(this)�= �getLibraryFilePrefix(this)�


# command options
OBJOPT_�getBuildEnvName(this)�= �getCompilerObjectOutputOption(this)�
INCOPT_�getBuildEnvName(this)�= �getCompilerIncludeOption(this)�
IDLOUTOPT_�getBuildEnvName(this)�= �getIDLCompilerOutputOption(this)�
IDLINCOPT_�getBuildEnvName(this)�= �getIDLCompilerIncludeOption(this)�
LIBOUTOPT_�getBuildEnvName(this)�= �getArchiverOutputOption(this)�
LDOUTOPT_�getBuildEnvName(this)�= �getLinkerOutputOption(this)�
LDLIBOPT_�getBuildEnvName(this)�= �getLinkerLibaryOption(this)�
LDLIBPATHOPT_�getBuildEnvName(this)�= �getLinkerLibraryPathOption(this)�


# core framework
CF_DEFINES_�getBuildEnvName(this)�= �getCoreFrameworkDefines(this)�

CF_INCLUDES_�getBuildEnvName(this)�= �getCoreFrameworkIncludes(this)�

CF_LIBRARIES_�getBuildEnvName(this)�= �getCoreFrameworkLibraries(this)�

CF_LIBPATHS_�getBuildEnvName(this)�= �getCoreFrameworkLibraryPaths(this)�

# ORB
ORB_DEFINES_�getBuildEnvName(this)�= �getORBDefines(this)�

ORB_INCLUDES_�getBuildEnvName(this)�= �getORBIncludes(this)�

ORB_LIBRARIES_�getBuildEnvName(this)�= �getORBLibraries(this)�

ORB_LIBPATHS_�getBuildEnvName(this)�= �getORBLibraryPaths(this)�

# compiler			
CC_�getBuildEnvName(this)�= �getCompiler(this)�

DEFINES_�getBuildEnvName(this)�= �getDefines(this)�

UNDEFINES_�getBuildEnvName(this)�= �getUndefines(this)�

INCLUDES_�getBuildEnvName(this)�= �getIncludePaths(this)�

CFLAGS_�getBuildEnvName(this)�= �getCFlags(this)�

CPPFLAGS_�getBuildEnvName(this)�=  �getCPPFlags(this)� \
   $(foreach def,$(DEFINES_�getBuildEnvName(this)�),�getCompilerDefineOption(this)�"$(def)") \
   $(foreach un, $(UNDEFINES_�getBuildEnvName(this)�),�getCompilerUndefineOption(this)�"$(und)") \
   $(foreach cfd,$(CF_DEFINES_�getBuildEnvName(this)�),�getCompilerDefineOption(this)�"$(cfd)") \
   $(foreach orbd, $(ORB_DEFINES_�getBuildEnvName(this)�),�getCompilerDefineOption(this)�"$(orbd)") \
   $(foreach dir,$(INCLUDES_�getBuildEnvName(this)�),�getCompilerIncludeOption(this)�"$(subst |, ,$(dir))") \
   $(foreach cfi,$(CF_INCLUDES_�getBuildEnvName(this)�),�getCompilerIncludeOption(this)�"$(subst |, ,$(cfi))") \
   $(foreach orbi,$(ORB_INCLUDES_�getBuildEnvName(this)�),�getCompilerIncludeOption(this)�"$(subst |, ,$(orbi))")

# linker
LD_�getBuildEnvName(this)�= �getLinker(this)�

LIBS_�getBuildEnvName(this)�= �getLibraries(this)�

LIBPATHS_�getBuildEnvName(this)�= �getLibraryDirectories(this)�

LDFLAGS_�getBuildEnvName(this)�= �getLinkerFlags(this)� \
   $(foreach dir,$(LIBPATHS_�getBuildEnvName(this)�),�getLinkerLibraryPathOption(this)�"$(subst |, ,$(dir))") \
   $(foreach dir2,$(CF_LIBPATHS_�getBuildEnvName(this)�),�getLinkerLibraryPathOption(this)�"$(subst |, ,$(dir2))") \
   $(foreach dir3,$(ORB_LIBPATHS_�getBuildEnvName(this)�),�getLinkerLibraryPathOption(this)�"$(subst |, ,$(dir3))") \
   $(foreach lib,$(LIBS_�getBuildEnvName(this)�),�getLinkerLibaryOption(this)�"$(subst |, ,$(lib))") \
   $(foreach lib1,$(CF_LIBRARIES_�getBuildEnvName(this)�),�getLinkerLibaryOption(this)�"$(subst |, ,$(lib1))") \
   $(foreach lib2,$(ORB_LIBRARIES_�getBuildEnvName(this)�),�getLinkerLibaryOption(this)�"$(subst |, ,$(lib2))")
   
# archiver
AR_�getBuildEnvName(this)�= �getArchiver(this)�

ARFLAGS_�getBuildEnvName(this)�= �getArchiverOptions(this)�	

IDLCOMPILER_�getBuildEnvName(this)� = �getIDLCompiler(this)�
IDLINCLUDES_�getBuildEnvName(this)� = �getIDLCompilerIncludePaths(this)�

IDLFLAGS_�getBuildEnvName(this)�=  �getIDLCompilerOptons(this)� \
   $(foreach dir,$(IDLINCLUDES_�getBuildEnvName(this)�),�getIDLCompilerIncludeOption(this)�"$(subst |, ,$(dir))")


�ENDFILE�
�ENDDEFINE�
