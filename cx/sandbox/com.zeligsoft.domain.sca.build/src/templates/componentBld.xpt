�REM�

 Copyright 2018 ADLINK Technology Limited.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

�ENDREM�

�IMPORT emf�
�IMPORT uml�
�IMPORT Standard�
�IMPORT SCADomain�
�IMPORT ZeligsoftDeployment�
�IMPORT ZML�

�EXTENSION extensions::BuildEnvFuncs�
�EXTENSION extensions::SCABuildEnvFuncs�

�REM�
	Generate dependecy files for the Component
�ENDREM�
�DEFINE generateAll FOR Component�

	�EXPAND generateDependencyFile FOR this�
	�EXPAND generateIDLDependencyFiles FOR this�
	�EXPAND generatePortDependencyFiles FOR this�
	�EXPAND generateBuildFragments FOR this�	
	
�ENDDEFINE�



�REM�
	Generate the dependecy file for the given component.
�ENDREM�
�DEFINE generateDependencyFile FOR Component�
�FILE "deps/comps/"+getName(this)+".dep"�


�FOREACH getSCAImplementations(this) AS artifact�

�IF hasSCABuild((Artifact)artifact)�
�LET getSCABuildEnvironment((Artifact)artifact) AS be�

ifeq ($(HOST_�getBuildEnvName((Property)be)�),$(LOCALHOST))
	
# dependencies for component: �getName(this)�, implementation:  �getName(artifact)�
�addSCAMakeTarget(this, getName(this)+"."+getName(artifact))� 

	�REM� MISSING CORE FRAMEWORK IDL �ENDREM�
�getName(this)�.�getName(artifact)� : obj/�getBuildEnvName(be)�/idl/�getLibraryFilePrefix(be)�LogService�getLibraryFileExtension(be)�

	�REM� get all relevent IDL files for this component �ENDREM�
	�FOREACH getSCAIDLTargetFiles(this) AS idl�
�getName(this)�.�getName(artifact)� : obj/�getBuildEnvName(be)�/idl/�getIDLTarget(be, (EObject)idl)�	
	�ENDFOREACH�
	
	�REM� add the target for this implementation to the "all" for this component �ENDREM�
�getName(this)�.�getName(artifact)� : obj/�getBuildEnvName(be)�/comps/�getSCATargetName((Artifact)artifact)�
	
	�REM� Add component dependencies �ENDREM�
	�FOREACH getObjectDependencies(this,"comps/"+getName(this)) AS obj�
obj/�getBuildEnvName(be)�/comps/�getSCATargetName((Artifact)artifact)� : obj/�getBuildEnvName(be)�/�obj��getObjectFileExtension(be)�
	�ENDFOREACH�
		
	�REM� Add dependencies for generated port code �ENDREM�
	�FOREACH getSCAIDLInterfaces(this) AS interface�
		�IF hasSCAGeneratedSource("ports", (Interface)interface)�
obj/�getBuildEnvName(be)�/comps/�getSCATargetName((Artifact)artifact)� : obj/�getBuildEnvName(be)�/ports/�getLibraryFilePrefix(be)��getFullInterfaceName((Interface)interface)��getLibraryFileExtension(be)�		
		�ENDIF�
	�ENDFOREACH�
		
	�REM� get all relevent IDL files for this component �ENDREM�
	�FOREACH getSCAIDLTargetFiles(this) AS idl�
obj/�getBuildEnvName(be)�/comps/�getSCATargetName((Artifact)artifact)� : obj/�getBuildEnvName(be)�/idl/�getIDLTarget(be, (EObject)idl)�
	�ENDFOREACH�
			
	�REM� KLUDGE - MISSING CORE FRAMEWORK IDL �ENDREM�
obj/�getBuildEnvName(be)�/comps/�getSCATargetName((Artifact)artifact)� : obj/�getBuildEnvName(be)�/idl/�getLibraryFilePrefix(be)�LogService�getLibraryFileExtension(be)�
		
	�REM� Add dependency to the generated framework library �ENDREM�
obj/�getBuildEnvName(be)�/comps/�getSCATargetName((Artifact)artifact)� : obj/�getBuildEnvName(be)�/framework/�getLibraryFilePrefix(be)�framework�getLibraryFileExtension(be)�				
		
	�REM� Adding the source directories to the include paths  �ENDREM�
	�FOREACH getSourceDirectories(this,"comps/"+getName(this)) AS dir�
CPPFLAGS_�getBuildEnvName(be)� += �getCompilerIncludeOption(be)��dir�
	�ENDFOREACH�

endif

�ENDLET�
�ENDIF�
�ENDFOREACH�

�ENDFILE�
�ENDDEFINE�




�REM�
	Generate the dependecy files for the IDL files corresponding to the given component.
�ENDREM�
�DEFINE generateIDLDependencyFiles FOR Component�
	
	�REM� temporary until we can find all the idl files 	�ENDREM�
	�EXPAND idlBld::generateDefaultIDLDependencyFiles FOR this�
	
	�REM� idl file dependencies �ENDREM�
	�FOREACH getSCAIDLInterfaces(this) AS interface�
			�EXPAND idlBld::generateIDLDependencyFile FOR (EObject)interface�
	�ENDFOREACH�
		
�ENDDEFINE�




�REM�
	Generate the dependecy files for the Ports corresponding to the given component.
�ENDREM�
�DEFINE generatePortDependencyFiles FOR Component�

	�FOREACH getSCAPorts(this) AS port�	
    	�FOREACH ((Port)port).provided.union(((Port)port).required) AS interface�
			�IF hasSCAGeneratedSource("ports", (Interface)interface)�    	
 				�EXPAND portBld::generatePortDependencyFile( (Port)port ) FOR interface�
 			�ENDIF�
	    �ENDFOREACH�
	�ENDFOREACH�
�ENDDEFINE�




�REM�
	Generate the build fragments for each build environment in the given component.
�ENDREM�
�DEFINE generateBuildFragments FOR Component�

	�FOREACH getSCAImplementations(this) AS artifact�
		
		�IF hasSCABuild((Artifact)artifact)�
			�EXPAND templates::build::generateBuildFragments FOR getSCABuildEnvironment((Artifact)artifact)�
		�ENDIF�
	�ENDFOREACH�
	
�ENDDEFINE�
	