�REM�

 Copyright 2018 ADLINK Technology Limited.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

�ENDREM�

�IMPORT emf�
�IMPORT uml�
�IMPORT Standard�
�IMPORT SCADomain�
�IMPORT ZeligsoftDeployment�
�IMPORT ZML�

�EXTENSION extensions::BuildEnvFuncs�
�EXTENSION extensions::SCABuildEnvFuncs�


�REM�
	Generate the dependecy file for the IDL file for the given interface.
�ENDREM�
�DEFINE generateIDLDependencyFile FOR EObject�
�FILE "deps/common/"+getIDLName(this)+".dep"�

CPPFLAGS_$(BLDENV) += $(INCOPT_$(BLDENV))$(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�

$(OBJDIR)/$(BLDENV)/$(IDLDIR)/$(LIBREFIX_$(BLDENV))�getIDLName(this)�$(LIBEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�$(OBJEXT_$(BLDENV))
$(OBJDIR)/$(BLDENV)/$(IDLDIR)/$(LIBREFIX_$(BLDENV))�getIDLName(this)�$(LIBEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�_s$(OBJEXT_$(BLDENV))

$(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�$(OBJEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�.cpp
$(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�_s$(OBJEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�_s.cpp

$(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�.cpp : �getIDLDirectory(this)�/�getIDLName(this)�.idl
$(OBJDIR)/$(BLDENV)/$(IDLDIR)�getIDLDirectory(this)�/�getIDLName(this)�_s.cpp : �getIDLDirectory(this)�/�getIDLName(this)�.idl

�FOREACH getSCADependentIDLFiles(this) AS idl�
	�EXPAND generateIDLDependencyFile FOR (EObject)idl�
�ENDFOREACH�

�ENDFILE�
�ENDDEFINE�

�REM�
	Generate the default dependecy file for the IDL file for the given port.
�ENDREM�
�DEFINE generateDefaultIDLDependencyFiles FOR Object�

�FILE "deps/common/LogService.dep"�

CPPFLAGS_$(BLDENV) += $(INCOPT_$(BLDENV))$(OBJDIR)/$(BLDENV)/$(IDLDIR)/CoreFramework/IDL/CF22_TAO13A

$(OBJDIR)/$(BLDENV)/$(IDLDIR)/$(LIBREFIX_$(BLDENV))LogService$(LIBEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)$(CF_FILE_LOCATION)/LogService$(OBJEXT_$(BLDENV))
$(OBJDIR)/$(BLDENV)/$(IDLDIR)/$(LIBRsEFIX_$(BLDENV))LogService$(LIBEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)/CoreFramework/IDL/CF22_TAO13A/LogService_s$(OBJEXT_$(BLDENV))

$(OBJDIR)/$(BLDENV)/$(IDLDIR)$(CF_FILE_LOCATION)/LogService$(OBJEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)$(CF_FILE_LOCATION)/LogService.cpp
$(OBJDIR)/$(BLDENV)/$(IDLDIR)$(CF_FILE_LOCATION)/LogService_s$(OBJEXT_$(BLDENV)) : $(OBJDIR)/$(BLDENV)/$(IDLDIR)$(CF_FILE_LOCATION)/LogService_s.cpp

$(OBJDIR)/$(BLDENV)/$(IDLDIR)$(CF_FILE_LOCATION)/LogService.cpp : $(CF_FILE_LOCATION)/LogService.idl
$(OBJDIR)/$(BLDENV)/$(IDLDIR)$(CF_FILE_LOCATION)/LogService_s.cpp : $(CF_FILE_LOCATION)/LogService.idl
�ENDFILE�
�ENDDEFINE�
