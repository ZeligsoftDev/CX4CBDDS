grammar org.eclipse.xtext.ui.codetemplates.Codetemplates hidden(WS)

generate templates "http://www.eclipse.org/xtext/codetemplate/Codetemplates"
import "http://www.eclipse.org/2008/Xtext" as xtext
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Codetemplates:
  'templates' 'for' language=[xtext::Grammar|FQN] ':'
  templates+=Codetemplate*;
  
Codetemplate:
  name=ValidID '(' id=ID ',' description = STRING ')' 'for' 
  		(context=[xtext::AbstractRule|ValidID] | keywordContext=STRING) 
    body = TemplateBodyWithQuotes
  ; 
  
TemplateBodyWithQuotes returns TemplateBody hidden():
	WS? '>>' // EOL
	TemplateBody
	'<<' // BOL
;  

TemplateBody hidden(): {TemplateBody}
 	parts+=Literal?
    (parts+=VariableOrDollar parts+=Literal?)*
;

TemplatePart:
  Literal | VariableOrDollar
;

VariableOrDollar returns TemplatePart hidden():
  Variable | Dollar;

Variable hidden(): 
	'${' WS* 
	(
		 name=ValidID
	   | (name=ValidID WS*)? ':' WS* type = ValidID (WS* expectingParameters?='(' WS* (parameters+=(STRING|FQN) ( WS* ',' WS* parameters+=(STRING|FQN))* WS*)? ')')? 
	) 
	WS* '}'
;

ValidID hidden():
  ID | 'for' | 'templates'
;

FQN hidden(): ValidID ('.' ValidID)*;

Literal hidden():
  value = LiteralValue
;

LiteralValue hidden():
  (WS | ANY_OTHER | ID | '\\<<')+ // needs to be escaped at BOL
;

Dollar hidden():
  {Dollar} (escaped?='$$' | '$') 
;
  
terminal ID  		: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

terminal STRING	: 
			"'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
		; 

terminal WS			: (' '|'\t'|'\r'|'\n')+;

terminal ANY_OTHER: .;