/*
 * generated by Xtext
 */
grammar InternalAppliedStereotypeProperty;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.papyrus.uml.textedit.stereotypeproperty.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.papyrus.uml.textedit.stereotypeproperty.xtext.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.papyrus.uml.textedit.stereotypeproperty.xtext.services.AppliedStereotypePropertyGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private AppliedStereotypePropertyGrammarAccess grammarAccess;
 	
    public InternalAppliedStereotypePropertyParser(TokenStream input, AppliedStereotypePropertyGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AppliedStereotypePropertyRule";	
   	}
   	
   	@Override
   	protected AppliedStereotypePropertyGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAppliedStereotypePropertyRule
entryRuleAppliedStereotypePropertyRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAppliedStereotypePropertyRuleRule()); }
	 iv_ruleAppliedStereotypePropertyRule=ruleAppliedStereotypePropertyRule 
	 { $current=$iv_ruleAppliedStereotypePropertyRule.current; } 
	 EOF 
;

// Rule AppliedStereotypePropertyRule
ruleAppliedStereotypePropertyRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getAppliedStereotypePropertyRuleAccess().getValueExpressionValueRuleParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleExpressionValueRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAppliedStereotypePropertyRuleRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.eclipse.papyrus.uml.textedit.stereotypeproperty.xtext.AppliedStereotypeProperty.ExpressionValueRule");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleExpressionValueRule
entryRuleExpressionValueRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionValueRuleRule()); }
	 iv_ruleExpressionValueRule=ruleExpressionValueRule 
	 { $current=$iv_ruleExpressionValueRule.current; } 
	 EOF 
;

// Rule ExpressionValueRule
ruleExpressionValueRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getExpressionValueRuleAccess().getEqualsSignKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionValueRuleAccess().getExpressionSequenceElementParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleSequenceElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionValueRuleRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SequenceElement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;







// Entry rule entryRuleStereotypeAnnotation
entryRuleStereotypeAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStereotypeAnnotationRule()); }
	 iv_ruleStereotypeAnnotation=ruleStereotypeAnnotation 
	 { $current=$iv_ruleStereotypeAnnotation.current; } 
	 EOF 
;

// Rule StereotypeAnnotation
ruleStereotypeAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStereotypeAnnotationAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_stereotypeName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStereotypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"stereotypeName",
        		lv_stereotypeName_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStereotypeAnnotationAccess().getLeftParenthesisKeyword_2_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getStereotypeAnnotationAccess().getNamesQualifiedNameListParserRuleCall_2_1_0_0()); 
	    }
		lv_names_3_0=ruleQualifiedNameList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStereotypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"names",
        		lv_names_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedNameList");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesTaggedValueListParserRuleCall_2_1_1_0()); 
	    }
		lv_taggedValues_4_0=ruleTaggedValueList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStereotypeAnnotationRule());
	        }
       		set(
       			$current, 
       			"taggedValues",
        		lv_taggedValues_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TaggedValueList");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStereotypeAnnotationAccess().getRightParenthesisKeyword_2_2());
    }
)?)
;





// Entry rule entryRuleTaggedValueList
entryRuleTaggedValueList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaggedValueListRule()); }
	 iv_ruleTaggedValueList=ruleTaggedValueList 
	 { $current=$iv_ruleTaggedValueList.current; } 
	 EOF 
;

// Rule TaggedValueList
ruleTaggedValueList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_0_0()); 
	    }
		lv_taggedValue_0_0=ruleTaggedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaggedValueListRule());
	        }
       		add(
       			$current, 
       			"taggedValue",
        		lv_taggedValue_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TaggedValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTaggedValueListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_1_1_0()); 
	    }
		lv_taggedValue_2_0=ruleTaggedValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaggedValueListRule());
	        }
       		add(
       			$current, 
       			"taggedValue",
        		lv_taggedValue_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TaggedValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTaggedValue
entryRuleTaggedValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTaggedValueRule()); }
	 iv_ruleTaggedValue=ruleTaggedValue 
	 { $current=$iv_ruleTaggedValue.current; } 
	 EOF 
;

// Rule TaggedValue
ruleTaggedValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTaggedValueAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaggedValueRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTaggedValueAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
((
(
		lv_value_2_0=RULE_BOOLEAN_VALUE
		{
			newLeafNode(lv_value_2_0, grammarAccess.getTaggedValueAccess().getValueBOOLEAN_VALUETerminalRuleCall_2_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaggedValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.BOOLEAN_VALUE");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getTaggedValueAccess().getOperatorNumericUnaryOperatorParserRuleCall_2_1_0_0()); 
	    }
		lv_operator_3_0=ruleNumericUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTaggedValueRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NumericUnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_value_4_0=RULE_NATURAL_VALUE
		{
			newLeafNode(lv_value_4_0, grammarAccess.getTaggedValueAccess().getValueNATURAL_VALUETerminalRuleCall_2_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaggedValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NATURAL_VALUE");
	    }

)
))
    |(
(
		lv_value_5_0=	'*' 
    {
        newLeafNode(lv_value_5_0, grammarAccess.getTaggedValueAccess().getValueAsteriskKeyword_2_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaggedValueRule());
	        }
       		setWithLastConsumed($current, "value", lv_value_5_0, "*");
	    }

)
)
    |(
(
		lv_value_6_0=RULE_STRING
		{
			newLeafNode(lv_value_6_0, grammarAccess.getTaggedValueAccess().getValueSTRINGTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTaggedValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.STRING");
	    }

)
)))
;





// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceDeclarationRule()); }
	 iv_ruleNamespaceDeclaration=ruleNamespaceDeclaration 
	 { $current=$iv_ruleNamespaceDeclaration.current; } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='namespace' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNamespaceDeclarationAccess().getQualifiedNameParserRuleCall_1()); 
    }
    this_QualifiedName_1=ruleQualifiedName
    { 
        $current = $this_QualifiedName_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportDeclarationRule()); }
	 iv_ruleImportDeclaration=ruleImportDeclaration 
	 { $current=$iv_ruleImportDeclaration.current; } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getImportDeclarationAccess().getPackageImportReferenceParserRuleCall_0_0()); 
    }
    this_PackageImportReference_0=rulePackageImportReference
    { 
        $current = $this_PackageImportReference_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getImportDeclarationAccess().getElementImportReferenceParserRuleCall_0_1()); 
    }
    this_ElementImportReference_1=ruleElementImportReference
    { 
        $current = $this_ElementImportReference_1.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleElementImportReference
entryRuleElementImportReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getElementImportReferenceRule()); }
	 iv_ruleElementImportReference=ruleElementImportReference 
	 { $current=$iv_ruleElementImportReference.current; } 
	 EOF 
;

// Rule ElementImportReference
ruleElementImportReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getElementImportReferenceAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_0_0()); 
	    }
		lv_visibility_0_0=ruleImportVisibilityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementImportReferenceRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ImportVisibilityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getElementImportReferenceAccess().getImportKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementImportReferenceAccess().getReferentNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_referentName_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementImportReferenceRule());
	        }
       		set(
       			$current, 
       			"referentName",
        		lv_referentName_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='as' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getElementImportReferenceAccess().getAsKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getElementImportReferenceAccess().getAliasNameParserRuleCall_3_1_0()); 
	    }
		lv_alias_4_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getElementImportReferenceRule());
	        }
       		set(
       			$current, 
       			"alias",
        		lv_alias_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRulePackageImportReference
entryRulePackageImportReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageImportReferenceRule()); }
	 iv_rulePackageImportReference=rulePackageImportReference 
	 { $current=$iv_rulePackageImportReference.current; } 
	 EOF 
;

// Rule PackageImportReference
rulePackageImportReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageImportReferenceAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_0_0()); 
	    }
		lv_visibility_0_0=ruleImportVisibilityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageImportReferenceRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ImportVisibilityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='import' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPackageImportReferenceAccess().getImportKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageImportReferenceAccess().getReferentNamePackageImportQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_referentName_2_0=rulePackageImportQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageImportReferenceRule());
	        }
       		set(
       			$current, 
       			"referentName",
        		lv_referentName_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PackageImportQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePackageImportQualifiedName
entryRulePackageImportQualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageImportQualifiedNameRule()); }
	 iv_rulePackageImportQualifiedName=rulePackageImportQualifiedName 
	 { $current=$iv_rulePackageImportQualifiedName.current; } 
	 EOF 
;

// Rule PackageImportQualifiedName
rulePackageImportQualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_0_0()); 
	    }
		lv_nameBinding_0_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageImportQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(((	otherlv_1='::' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPackageImportQualifiedNameAccess().getColonColonKeyword_1_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_0_1_0()); 
	    }
		lv_nameBinding_2_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageImportQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_3='::' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPackageImportQualifiedNameAccess().getColonColonKeyword_1_0_1());
    }
	otherlv_4='*' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPackageImportQualifiedNameAccess().getAsteriskKeyword_1_0_2());
    }
)
    |((	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPackageImportQualifiedNameAccess().getFullStopKeyword_1_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_0_1_0()); 
	    }
		lv_nameBinding_6_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageImportQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='.' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPackageImportQualifiedNameAccess().getFullStopKeyword_1_1_1());
    }
	otherlv_8='*' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPackageImportQualifiedNameAccess().getAsteriskKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleImportVisibilityIndicator
entryRuleImportVisibilityIndicator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getImportVisibilityIndicatorRule()); } 
	 iv_ruleImportVisibilityIndicator=ruleImportVisibilityIndicator 
	 { $current=$iv_ruleImportVisibilityIndicator.current.getText(); }  
	 EOF 
;

// Rule ImportVisibilityIndicator
ruleImportVisibilityIndicator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getImportVisibilityIndicatorAccess().getPublicKeyword_0()); 
    }

    |
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getImportVisibilityIndicatorAccess().getPrivateKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleNamespaceDefinition
entryRuleNamespaceDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamespaceDefinitionRule()); }
	 iv_ruleNamespaceDefinition=ruleNamespaceDefinition 
	 { $current=$iv_ruleNamespaceDefinition.current; } 
	 EOF 
;

// Rule NamespaceDefinition
ruleNamespaceDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNamespaceDefinitionAccess().getPackageDefinitionParserRuleCall_0()); 
    }
    this_PackageDefinition_0=rulePackageDefinition
    { 
        $current = $this_PackageDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNamespaceDefinitionAccess().getClassifierDefinitionParserRuleCall_1()); 
    }
    this_ClassifierDefinition_1=ruleClassifierDefinition
    { 
        $current = $this_ClassifierDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleVisibilityIndicator
entryRuleVisibilityIndicator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getVisibilityIndicatorRule()); } 
	 iv_ruleVisibilityIndicator=ruleVisibilityIndicator 
	 { $current=$iv_ruleVisibilityIndicator.current.getText(); }  
	 EOF 
;

// Rule VisibilityIndicator
ruleVisibilityIndicator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getVisibilityIndicatorAccess().getImportVisibilityIndicatorParserRuleCall_0()); 
    }
    this_ImportVisibilityIndicator_0=ruleImportVisibilityIndicator    {
		$current.merge(this_ImportVisibilityIndicator_0);
    }

    { 
        afterParserOrEnumRuleCall();
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getVisibilityIndicatorAccess().getProtectedKeyword_1()); 
    }
)
    ;





// Entry rule entryRulePackageDefinition
entryRulePackageDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageDefinitionRule()); }
	 iv_rulePackageDefinition=rulePackageDefinition 
	 { $current=$iv_rulePackageDefinition.current; } 
	 EOF 
;

// Rule PackageDefinition
rulePackageDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionAccess().getNameNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPackageDefinitionAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionAccess().getOwnedMemberPackagedElementParserRuleCall_3_0()); 
	    }
		lv_ownedMember_3_0=rulePackagedElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PackagedElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPackageDefinitionAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRulePackageDefinitionOrStub
entryRulePackageDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageDefinitionOrStubRule()); }
	 iv_rulePackageDefinitionOrStub=rulePackageDefinitionOrStub 
	 { $current=$iv_rulePackageDefinitionOrStub.current; } 
	 EOF 
;

// Rule PackageDefinitionOrStub
rulePackageDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='package' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPackageDefinitionOrStubAccess().getPackageKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionOrStubAccess().getNameNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionOrStubRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)((
(
		lv_isStub_2_0=	';' 
    {
        newLeafNode(lv_isStub_2_0, grammarAccess.getPackageDefinitionOrStubAccess().getIsStubSemicolonKeyword_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackageDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPackageDefinitionOrStubAccess().getLeftCurlyBracketKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageDefinitionOrStubAccess().getOwnedMemberPackagedElementParserRuleCall_2_1_1_0()); 
	    }
		lv_ownedMember_4_0=rulePackagedElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PackagedElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPackageDefinitionOrStubAccess().getRightCurlyBracketKeyword_2_1_2());
    }
)))
;





// Entry rule entryRulePackagedElement
entryRulePackagedElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackagedElementRule()); }
	 iv_rulePackagedElement=rulePackagedElement 
	 { $current=$iv_rulePackagedElement.current; } 
	 EOF 
;

// Rule PackagedElement
rulePackagedElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getPackagedElementAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPackagedElementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPackagedElementAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotation_1_0=ruleStereotypeAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackagedElementRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StereotypeAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getPackagedElementAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_2_0()); 
	    }
		lv_visibility_2_0=ruleImportVisibilityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackagedElementRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ImportVisibilityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPackagedElementAccess().getDefinitionPackagedElementDefinitionParserRuleCall_3_0()); 
	    }
		lv_definition_3_0=rulePackagedElementDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackagedElementRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PackagedElementDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRulePackagedElementDefinition
entryRulePackagedElementDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackagedElementDefinitionRule()); }
	 iv_rulePackagedElementDefinition=rulePackagedElementDefinition 
	 { $current=$iv_rulePackagedElementDefinition.current; } 
	 EOF 
;

// Rule PackagedElementDefinition
rulePackagedElementDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPackagedElementDefinitionAccess().getPackageDefinitionOrStubParserRuleCall_0()); 
    }
    this_PackageDefinitionOrStub_0=rulePackageDefinitionOrStub
    { 
        $current = $this_PackageDefinitionOrStub_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPackagedElementDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_1()); 
    }
    this_ClassifierDefinitionOrStub_1=ruleClassifierDefinitionOrStub
    { 
        $current = $this_ClassifierDefinitionOrStub_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClassifierDefinition
entryRuleClassifierDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassifierDefinitionRule()); }
	 iv_ruleClassifierDefinition=ruleClassifierDefinition 
	 { $current=$iv_ruleClassifierDefinition.current; } 
	 EOF 
;

// Rule ClassifierDefinition
ruleClassifierDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionAccess().getClassDefinitionParserRuleCall_0()); 
    }
    this_ClassDefinition_0=ruleClassDefinition
    { 
        $current = $this_ClassDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionAccess().getActiveClassDefinitionParserRuleCall_1()); 
    }
    this_ActiveClassDefinition_1=ruleActiveClassDefinition
    { 
        $current = $this_ActiveClassDefinition_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionAccess().getDataTypeDefinitionParserRuleCall_2()); 
    }
    this_DataTypeDefinition_2=ruleDataTypeDefinition
    { 
        $current = $this_DataTypeDefinition_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionAccess().getEnumerationDefinitionParserRuleCall_3()); 
    }
    this_EnumerationDefinition_3=ruleEnumerationDefinition
    { 
        $current = $this_EnumerationDefinition_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionAccess().getAssociationDefinitionParserRuleCall_4()); 
    }
    this_AssociationDefinition_4=ruleAssociationDefinition
    { 
        $current = $this_AssociationDefinition_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionAccess().getSignalDefinitionParserRuleCall_5()); 
    }
    this_SignalDefinition_5=ruleSignalDefinition
    { 
        $current = $this_SignalDefinition_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionAccess().getActivityDefinitionParserRuleCall_6()); 
    }
    this_ActivityDefinition_6=ruleActivityDefinition
    { 
        $current = $this_ActivityDefinition_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClassifierDefinitionOrStub
entryRuleClassifierDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassifierDefinitionOrStubRule()); }
	 iv_ruleClassifierDefinitionOrStub=ruleClassifierDefinitionOrStub 
	 { $current=$iv_ruleClassifierDefinitionOrStub.current; } 
	 EOF 
;

// Rule ClassifierDefinitionOrStub
ruleClassifierDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionOrStubAccess().getClassDefinitionOrStubParserRuleCall_0()); 
    }
    this_ClassDefinitionOrStub_0=ruleClassDefinitionOrStub
    { 
        $current = $this_ClassDefinitionOrStub_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionOrStubAccess().getActiveClassDefinitionOrStubParserRuleCall_1()); 
    }
    this_ActiveClassDefinitionOrStub_1=ruleActiveClassDefinitionOrStub
    { 
        $current = $this_ActiveClassDefinitionOrStub_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionOrStubAccess().getDataTypeDefinitionOrStubParserRuleCall_2()); 
    }
    this_DataTypeDefinitionOrStub_2=ruleDataTypeDefinitionOrStub
    { 
        $current = $this_DataTypeDefinitionOrStub_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionOrStubAccess().getEnumerationDefinitionOrStubParserRuleCall_3()); 
    }
    this_EnumerationDefinitionOrStub_3=ruleEnumerationDefinitionOrStub
    { 
        $current = $this_EnumerationDefinitionOrStub_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionOrStubAccess().getAssociationDefinitionOrStubParserRuleCall_4()); 
    }
    this_AssociationDefinitionOrStub_4=ruleAssociationDefinitionOrStub
    { 
        $current = $this_AssociationDefinitionOrStub_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionOrStubAccess().getSignalDefinitionOrStubParserRuleCall_5()); 
    }
    this_SignalDefinitionOrStub_5=ruleSignalDefinitionOrStub
    { 
        $current = $this_SignalDefinitionOrStub_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassifierDefinitionOrStubAccess().getActivityDefinitionOrStubParserRuleCall_6()); 
    }
    this_ActivityDefinitionOrStub_6=ruleActivityDefinitionOrStub
    { 
        $current = $this_ActivityDefinitionOrStub_6.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleClassifierTemplateParameter
entryRuleClassifierTemplateParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassifierTemplateParameterRule()); }
	 iv_ruleClassifierTemplateParameter=ruleClassifierTemplateParameter 
	 { $current=$iv_ruleClassifierTemplateParameter.current; } 
	 EOF 
;

// Rule ClassifierTemplateParameter
ruleClassifierTemplateParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getClassifierTemplateParameterAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassifierTemplateParameterRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassifierTemplateParameterAccess().getDefinitionClassifierTemplateParameterDefinitionParserRuleCall_1_0()); 
	    }
		lv_definition_1_0=ruleClassifierTemplateParameterDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifierTemplateParameterRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameterDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassifierTemplateParameterDefinition
entryRuleClassifierTemplateParameterDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassifierTemplateParameterDefinitionRule()); }
	 iv_ruleClassifierTemplateParameterDefinition=ruleClassifierTemplateParameterDefinition 
	 { $current=$iv_ruleClassifierTemplateParameterDefinition.current; } 
	 EOF 
;

// Rule ClassifierTemplateParameterDefinition
ruleClassifierTemplateParameterDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifierTemplateParameterDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='specializes' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializesKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializationTemplateParameterConstraintParserRuleCall_1_1_0()); 
	    }
		lv_specialization_2_0=ruleTemplateParameterConstraint		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifierTemplateParameterDefinitionRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TemplateParameterConstraint");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleTemplateParameterConstraint
entryRuleTemplateParameterConstraint returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateParameterConstraintRule()); }
	 iv_ruleTemplateParameterConstraint=ruleTemplateParameterConstraint 
	 { $current=$iv_ruleTemplateParameterConstraint.current; } 
	 EOF 
;

// Rule TemplateParameterConstraint
ruleTemplateParameterConstraint returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateParameterConstraintAccess().getNameQualifiedNameParserRuleCall_0()); 
	    }
		lv_name_0_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateParameterConstraintRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSpecializationClause
entryRuleSpecializationClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecializationClauseRule()); }
	 iv_ruleSpecializationClause=ruleSpecializationClause 
	 { $current=$iv_ruleSpecializationClause.current; } 
	 EOF 
;

// Rule SpecializationClause
ruleSpecializationClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='specializes' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSpecializationClauseAccess().getSpecializesKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSpecializationClauseAccess().getQualifiedNameListParserRuleCall_1()); 
    }
    this_QualifiedNameList_1=ruleQualifiedNameList
    { 
        $current = $this_QualifiedNameList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDeclarationRule()); }
	 iv_ruleClassDeclaration=ruleClassDeclaration 
	 { $current=$iv_ruleClassDeclaration.current; } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassDeclarationRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?	otherlv_1='class' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassDeclarationAccess().getClassKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassDeclarationAccess().getLessThanSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); 
	    }
		lv_ownedMember_4_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getClassDeclarationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); 
	    }
		lv_ownedMember_6_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getClassDeclarationAccess().getGreaterThanSignKeyword_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); 
	    }
		lv_specialization_8_0=ruleSpecializationClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SpecializationClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleClassDefinition
entryRuleClassDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDefinitionRule()); }
	 iv_ruleClassDefinition=ruleClassDefinition 
	 { $current=$iv_ruleClassDefinition.current; } 
	 EOF 
;

// Rule ClassDefinition
ruleClassDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassDefinitionAccess().getClassDeclarationParserRuleCall_0()); 
    }
    this_ClassDeclaration_0=ruleClassDeclaration
    { 
        $current = $this_ClassDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassDefinitionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDefinitionAccess().getOwnedMemberClassMemberParserRuleCall_2_0()); 
	    }
		lv_ownedMember_2_0=ruleClassMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassDefinitionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleClassDefinitionOrStub
entryRuleClassDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassDefinitionOrStubRule()); }
	 iv_ruleClassDefinitionOrStub=ruleClassDefinitionOrStub 
	 { $current=$iv_ruleClassDefinitionOrStub.current; } 
	 EOF 
;

// Rule ClassDefinitionOrStub
ruleClassDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassDefinitionOrStubAccess().getClassDeclarationParserRuleCall_0()); 
    }
    this_ClassDeclaration_0=ruleClassDeclaration
    { 
        $current = $this_ClassDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassDefinitionOrStubAccess().getOwnedMemberClassMemberParserRuleCall_1_1_1_0()); 
	    }
		lv_ownedMember_3_0=ruleClassMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleClassMember
entryRuleClassMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassMemberRule()); }
	 iv_ruleClassMember=ruleClassMember 
	 { $current=$iv_ruleClassMember.current; } 
	 EOF 
;

// Rule ClassMember
ruleClassMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getClassMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getClassMemberRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotation_1_0=ruleStereotypeAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StereotypeAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberAccess().getVisibilityVisibilityIndicatorParserRuleCall_2_0()); 
	    }
		lv_visibility_2_0=ruleVisibilityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.VisibilityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassMemberAccess().getDefinitionClassMemberDefinitionParserRuleCall_3_0()); 
	    }
		lv_definition_3_0=ruleClassMemberDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassMemberRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassMemberDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassMemberDefinition
entryRuleClassMemberDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassMemberDefinitionRule()); }
	 iv_ruleClassMemberDefinition=ruleClassMemberDefinition 
	 { $current=$iv_ruleClassMemberDefinition.current; } 
	 EOF 
;

// Rule ClassMemberDefinition
ruleClassMemberDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassMemberDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_0()); 
    }
    this_ClassifierDefinitionOrStub_0=ruleClassifierDefinitionOrStub
    { 
        $current = $this_ClassifierDefinitionOrStub_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassMemberDefinitionAccess().getFeatureDefinitionOrStubParserRuleCall_1()); 
    }
    this_FeatureDefinitionOrStub_1=ruleFeatureDefinitionOrStub
    { 
        $current = $this_FeatureDefinitionOrStub_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleActiveClassDeclaration
entryRuleActiveClassDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActiveClassDeclarationRule()); }
	 iv_ruleActiveClassDeclaration=ruleActiveClassDeclaration 
	 { $current=$iv_ruleActiveClassDeclaration.current; } 
	 EOF 
;

// Rule ActiveClassDeclaration
ruleActiveClassDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActiveClassDeclarationRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?	otherlv_1='active' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActiveClassDeclarationAccess().getActiveKeyword_1());
    }
	otherlv_2='class' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActiveClassDeclarationAccess().getClassKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDeclarationAccess().getNameNameParserRuleCall_3_0()); 
	    }
		lv_name_3_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='<' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActiveClassDeclarationAccess().getLessThanSignKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_4_1_0()); 
	    }
		lv_ownedMember_5_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActiveClassDeclarationAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_4_2_1_0()); 
	    }
		lv_ownedMember_7_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_7_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getActiveClassDeclarationAccess().getGreaterThanSignKeyword_4_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_5_0()); 
	    }
		lv_specialization_9_0=ruleSpecializationClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDeclarationRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_9_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SpecializationClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleActiveClassDefinition
entryRuleActiveClassDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActiveClassDefinitionRule()); }
	 iv_ruleActiveClassDefinition=ruleActiveClassDefinition 
	 { $current=$iv_ruleActiveClassDefinition.current; } 
	 EOF 
;

// Rule ActiveClassDefinition
ruleActiveClassDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActiveClassDefinitionAccess().getActiveClassDeclarationParserRuleCall_0()); 
    }
    this_ActiveClassDeclaration_0=ruleActiveClassDeclaration
    { 
        $current = $this_ActiveClassDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getActiveClassDefinitionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDefinitionAccess().getOwnedMemberActiveClassMemberParserRuleCall_2_0()); 
	    }
		lv_ownedMember_2_0=ruleActiveClassMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ActiveClassMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getActiveClassDefinitionAccess().getRightCurlyBracketKeyword_3());
    }
(	otherlv_4='do' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActiveClassDefinitionAccess().getDoKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDefinitionAccess().getClassifierBehaviorBehaviorClauseParserRuleCall_4_1_0()); 
	    }
		lv_classifierBehavior_5_0=ruleBehaviorClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDefinitionRule());
	        }
       		set(
       			$current, 
       			"classifierBehavior",
        		lv_classifierBehavior_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.BehaviorClause");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleActiveClassDefinitionOrStub
entryRuleActiveClassDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActiveClassDefinitionOrStubRule()); }
	 iv_ruleActiveClassDefinitionOrStub=ruleActiveClassDefinitionOrStub 
	 { $current=$iv_ruleActiveClassDefinitionOrStub.current; } 
	 EOF 
;

// Rule ActiveClassDefinitionOrStub
ruleActiveClassDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassDeclarationParserRuleCall_0()); 
    }
    this_ActiveClassDeclaration_0=ruleActiveClassDeclaration
    { 
        $current = $this_ActiveClassDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getActiveClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActiveClassDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActiveClassDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDefinitionOrStubAccess().getOwnedMemberActiveClassMemberParserRuleCall_1_1_1_0()); 
	    }
		lv_ownedMember_3_0=ruleActiveClassMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ActiveClassMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActiveClassDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2());
    }
(	otherlv_5='do' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getActiveClassDefinitionOrStubAccess().getDoKeyword_1_1_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassDefinitionOrStubAccess().getClassifierBehaviorBehaviorClauseParserRuleCall_1_1_3_1_0()); 
	    }
		lv_classifierBehavior_6_0=ruleBehaviorClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassDefinitionOrStubRule());
	        }
       		set(
       			$current, 
       			"classifierBehavior",
        		lv_classifierBehavior_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.BehaviorClause");
	        afterParserOrEnumRuleCall();
	    }

)
))?)))
;





// Entry rule entryRuleBehaviorClause
entryRuleBehaviorClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBehaviorClauseRule()); }
	 iv_ruleBehaviorClause=ruleBehaviorClause 
	 { $current=$iv_ruleBehaviorClause.current; } 
	 EOF 
;

// Rule BehaviorClause
ruleBehaviorClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorClauseAccess().getBodyBlockParserRuleCall_0_0()); 
	    }
		lv_body_0_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorClauseRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorClauseAccess().getNameNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorClauseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleActiveClassMember
entryRuleActiveClassMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActiveClassMemberRule()); }
	 iv_ruleActiveClassMember=ruleActiveClassMember 
	 { $current=$iv_ruleActiveClassMember.current; } 
	 EOF 
;

// Rule ActiveClassMember
ruleActiveClassMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getActiveClassMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActiveClassMemberRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotation_1_0=ruleStereotypeAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassMemberRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StereotypeAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassMemberAccess().getVisibilityVisibilityIndicatorParserRuleCall_2_0()); 
	    }
		lv_visibility_2_0=ruleVisibilityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassMemberRule());
	        }
       		set(
       			$current, 
       			"visibility",
        		lv_visibility_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.VisibilityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getActiveClassMemberAccess().getDefinitionActiveClassMemberDefinitionParserRuleCall_3_0()); 
	    }
		lv_definition_3_0=ruleActiveClassMemberDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActiveClassMemberRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ActiveClassMemberDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleActiveClassMemberDefinition
entryRuleActiveClassMemberDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActiveClassMemberDefinitionRule()); }
	 iv_ruleActiveClassMemberDefinition=ruleActiveClassMemberDefinition 
	 { $current=$iv_ruleActiveClassMemberDefinition.current; } 
	 EOF 
;

// Rule ActiveClassMemberDefinition
ruleActiveClassMemberDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActiveClassMemberDefinitionAccess().getClassMemberDefinitionParserRuleCall_0()); 
    }
    this_ClassMemberDefinition_0=ruleClassMemberDefinition
    { 
        $current = $this_ClassMemberDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActiveClassMemberDefinitionAccess().getActiveFeatureDefinitionOrStubParserRuleCall_1()); 
    }
    this_ActiveFeatureDefinitionOrStub_1=ruleActiveFeatureDefinitionOrStub
    { 
        $current = $this_ActiveFeatureDefinitionOrStub_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDataTypeDeclaration
entryRuleDataTypeDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeDeclarationRule()); }
	 iv_ruleDataTypeDeclaration=ruleDataTypeDeclaration 
	 { $current=$iv_ruleDataTypeDeclaration.current; } 
	 EOF 
;

// Rule DataTypeDeclaration
ruleDataTypeDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeDeclarationRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?	otherlv_1='datatype' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getNameNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeDeclarationAccess().getLessThanSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); 
	    }
		lv_ownedMember_4_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataTypeDeclarationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); 
	    }
		lv_ownedMember_6_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataTypeDeclarationAccess().getGreaterThanSignKeyword_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); 
	    }
		lv_specialization_8_0=ruleSpecializationClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDeclarationRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SpecializationClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeDefinitionRule()); }
	 iv_ruleDataTypeDefinition=ruleDataTypeDefinition 
	 { $current=$iv_ruleDataTypeDefinition.current; } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDeclarationParserRuleCall_0()); 
    }
    this_DataTypeDeclaration_0=ruleDataTypeDeclaration
    { 
        $current = $this_DataTypeDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataTypeDefinitionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); 
	    }
		lv_ownedMember_2_0=ruleStructuredMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StructuredMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataTypeDefinitionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleDataTypeDefinitionOrStub
entryRuleDataTypeDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataTypeDefinitionOrStubRule()); }
	 iv_ruleDataTypeDefinitionOrStub=ruleDataTypeDefinitionOrStub 
	 { $current=$iv_ruleDataTypeDefinitionOrStub.current; } 
	 EOF 
;

// Rule DataTypeDefinitionOrStub
ruleDataTypeDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDataTypeDefinitionOrStubAccess().getDataTypeDeclarationParserRuleCall_0()); 
    }
    this_DataTypeDeclaration_0=ruleDataTypeDeclaration
    { 
        $current = $this_DataTypeDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getDataTypeDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataTypeDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataTypeDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataTypeDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); 
	    }
		lv_ownedMember_3_0=ruleStructuredMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataTypeDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StructuredMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataTypeDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleStructuredMember
entryRuleStructuredMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStructuredMemberRule()); }
	 iv_ruleStructuredMember=ruleStructuredMember 
	 { $current=$iv_ruleStructuredMember.current; } 
	 EOF 
;

// Rule StructuredMember
ruleStructuredMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getStructuredMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredMemberRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStructuredMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotation_1_0=ruleStereotypeAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructuredMemberRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StereotypeAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		lv_visibility_2_0=	'public' 
    {
        newLeafNode(lv_visibility_2_0, grammarAccess.getStructuredMemberAccess().getVisibilityPublicKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStructuredMemberRule());
	        }
       		setWithLastConsumed($current, "visibility", lv_visibility_2_0, "public");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getStructuredMemberAccess().getDefinitionPropertyDefinitionParserRuleCall_3_0()); 
	    }
		lv_definition_3_0=rulePropertyDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStructuredMemberRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PropertyDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAssociationDeclaration
entryRuleAssociationDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssociationDeclarationRule()); }
	 iv_ruleAssociationDeclaration=ruleAssociationDeclaration 
	 { $current=$iv_ruleAssociationDeclaration.current; } 
	 EOF 
;

// Rule AssociationDeclaration
ruleAssociationDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationDeclarationRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?	otherlv_1='assoc' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationDeclarationAccess().getNameNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAssociationDeclarationAccess().getLessThanSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); 
	    }
		lv_ownedMember_4_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAssociationDeclarationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); 
	    }
		lv_ownedMember_6_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAssociationDeclarationAccess().getGreaterThanSignKeyword_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); 
	    }
		lv_specialization_8_0=ruleSpecializationClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationDeclarationRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SpecializationClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleAssociationDefinition
entryRuleAssociationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssociationDefinitionRule()); }
	 iv_ruleAssociationDefinition=ruleAssociationDefinition 
	 { $current=$iv_ruleAssociationDefinition.current; } 
	 EOF 
;

// Rule AssociationDefinition
ruleAssociationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationParserRuleCall_0()); 
    }
    this_AssociationDeclaration_0=ruleAssociationDeclaration
    { 
        $current = $this_AssociationDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAssociationDefinitionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); 
	    }
		lv_ownedMember_2_0=ruleStructuredMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StructuredMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAssociationDefinitionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleAssociationDefinitionOrStub
entryRuleAssociationDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssociationDefinitionOrStubRule()); }
	 iv_ruleAssociationDefinitionOrStub=ruleAssociationDefinitionOrStub 
	 { $current=$iv_ruleAssociationDefinitionOrStub.current; } 
	 EOF 
;

// Rule AssociationDefinitionOrStub
ruleAssociationDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDeclarationParserRuleCall_0()); 
    }
    this_AssociationDeclaration_0=ruleAssociationDeclaration
    { 
        $current = $this_AssociationDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getAssociationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAssociationDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAssociationDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAssociationDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); 
	    }
		lv_ownedMember_3_0=ruleStructuredMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssociationDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StructuredMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAssociationDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleEnumerationDeclaration
entryRuleEnumerationDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationDeclarationRule()); }
	 iv_ruleEnumerationDeclaration=ruleEnumerationDeclaration 
	 { $current=$iv_ruleEnumerationDeclaration.current; } 
	 EOF 
;

// Rule EnumerationDeclaration
ruleEnumerationDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='enum' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getEnumerationDeclarationAccess().getEnumKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationDeclarationAccess().getNameNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_2_0()); 
	    }
		lv_specialization_2_0=ruleSpecializationClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationDeclarationRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SpecializationClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleEnumerationDefinition
entryRuleEnumerationDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationDefinitionRule()); }
	 iv_ruleEnumerationDefinition=ruleEnumerationDefinition 
	 { $current=$iv_ruleEnumerationDefinition.current; } 
	 EOF 
;

// Rule EnumerationDefinition
ruleEnumerationDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEnumerationDefinitionAccess().getEnumerationDeclarationParserRuleCall_0()); 
    }
    this_EnumerationDeclaration_0=ruleEnumerationDeclaration
    { 
        $current = $this_EnumerationDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEnumerationDefinitionAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_2_0_0()); 
	    }
		lv_ownedMember_2_0=ruleEnumerationLiteralName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.EnumerationLiteralName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getEnumerationDefinitionAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_2_1_1_0()); 
	    }
		lv_ownedMember_4_0=ruleEnumerationLiteralName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.EnumerationLiteralName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getEnumerationDefinitionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleEnumerationDefinitionOrStub
entryRuleEnumerationDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationDefinitionOrStubRule()); }
	 iv_ruleEnumerationDefinitionOrStub=ruleEnumerationDefinitionOrStub 
	 { $current=$iv_ruleEnumerationDefinitionOrStub.current; } 
	 EOF 
;

// Rule EnumerationDefinitionOrStub
ruleEnumerationDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationDeclarationParserRuleCall_0()); 
    }
    this_EnumerationDeclaration_0=ruleEnumerationDeclaration
    { 
        $current = $this_EnumerationDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getEnumerationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getEnumerationDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_1_1_1_0_0()); 
	    }
		lv_ownedMember_3_0=ruleEnumerationLiteralName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.EnumerationLiteralName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getEnumerationDefinitionOrStubAccess().getCommaKeyword_1_1_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_1_1_1_1_1_0()); 
	    }
		lv_ownedMember_5_0=ruleEnumerationLiteralName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.EnumerationLiteralName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getEnumerationDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleEnumerationLiteralName
entryRuleEnumerationLiteralName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralNameRule()); }
	 iv_ruleEnumerationLiteralName=ruleEnumerationLiteralName 
	 { $current=$iv_ruleEnumerationLiteralName.current; } 
	 EOF 
;

// Rule EnumerationLiteralName
ruleEnumerationLiteralName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getEnumerationLiteralNameAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEnumerationLiteralNameRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationLiteralNameAccess().getDefinitionEnumerationLiteralNameDefinitionParserRuleCall_1_0()); 
	    }
		lv_definition_1_0=ruleEnumerationLiteralNameDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationLiteralNameRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.EnumerationLiteralNameDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEnumerationLiteralNameDefinition
entryRuleEnumerationLiteralNameDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEnumerationLiteralNameDefinitionRule()); }
	 iv_ruleEnumerationLiteralNameDefinition=ruleEnumerationLiteralNameDefinition 
	 { $current=$iv_ruleEnumerationLiteralNameDefinition.current; } 
	 EOF 
;

// Rule EnumerationLiteralNameDefinition
ruleEnumerationLiteralNameDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getEnumerationLiteralNameDefinitionAccess().getNameNameParserRuleCall_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEnumerationLiteralNameDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleSignalDeclaration
entryRuleSignalDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalDeclarationRule()); }
	 iv_ruleSignalDeclaration=ruleSignalDeclaration 
	 { $current=$iv_ruleSignalDeclaration.current; } 
	 EOF 
;

// Rule SignalDeclaration
ruleSignalDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSignalDeclarationRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?	otherlv_1='signal' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSignalDeclarationAccess().getSignalKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalDeclarationAccess().getNameNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='<' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSignalDeclarationAccess().getLessThanSignKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); 
	    }
		lv_ownedMember_4_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSignalDeclarationAccess().getCommaKeyword_3_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); 
	    }
		lv_ownedMember_6_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSignalDeclarationAccess().getGreaterThanSignKeyword_3_3());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); 
	    }
		lv_specialization_8_0=ruleSpecializationClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalDeclarationRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SpecializationClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSignalDefinition
entryRuleSignalDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalDefinitionRule()); }
	 iv_ruleSignalDefinition=ruleSignalDefinition 
	 { $current=$iv_ruleSignalDefinition.current; } 
	 EOF 
;

// Rule SignalDefinition
ruleSignalDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSignalDefinitionAccess().getSignalDeclarationParserRuleCall_0()); 
    }
    this_SignalDeclaration_0=ruleSignalDeclaration
    { 
        $current = $this_SignalDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSignalDefinitionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); 
	    }
		lv_ownedMember_2_0=ruleStructuredMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalDefinitionRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StructuredMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSignalDefinitionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleSignalDefinitionOrStub
entryRuleSignalDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalDefinitionOrStubRule()); }
	 iv_ruleSignalDefinitionOrStub=ruleSignalDefinitionOrStub 
	 { $current=$iv_ruleSignalDefinitionOrStub.current; } 
	 EOF 
;

// Rule SignalDefinitionOrStub
ruleSignalDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSignalDefinitionOrStubAccess().getSignalDeclarationParserRuleCall_0()); 
    }
    this_SignalDeclaration_0=ruleSignalDeclaration
    { 
        $current = $this_SignalDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getSignalDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSignalDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSignalDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); 
	    }
		lv_ownedMember_3_0=ruleStructuredMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StructuredMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSignalDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleActivityDeclaration
entryRuleActivityDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActivityDeclarationRule()); }
	 iv_ruleActivityDeclaration=ruleActivityDeclaration 
	 { $current=$iv_ruleActivityDeclaration.current; } 
	 EOF 
;

// Rule ActivityDeclaration
ruleActivityDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='activity' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getActivityDeclarationAccess().getActivityKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDeclarationAccess().getNameNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='<' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getActivityDeclarationAccess().getLessThanSignKeyword_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_2_1_0()); 
	    }
		lv_ownedMember_3_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getActivityDeclarationAccess().getCommaKeyword_2_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_2_2_1_0()); 
	    }
		lv_ownedMember_5_0=ruleClassifierTemplateParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassifierTemplateParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_6='>' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getActivityDeclarationAccess().getGreaterThanSignKeyword_2_3());
    }
)?	otherlv_7='(' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getActivityDeclarationAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_4_0_0()); 
	    }
		lv_ownedMember_8_0=ruleFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.FormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getActivityDeclarationAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_4_1_1_0()); 
	    }
		lv_ownedMember_10_0=ruleFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_10_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.FormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11=')' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getActivityDeclarationAccess().getRightParenthesisKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDeclarationAccess().getOwnedMemberReturnParameterParserRuleCall_6_0()); 
	    }
		lv_ownedMember_12_0=ruleReturnParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_12_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ReturnParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleActivityDefinition
entryRuleActivityDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActivityDefinitionRule()); }
	 iv_ruleActivityDefinition=ruleActivityDefinition 
	 { $current=$iv_ruleActivityDefinition.current; } 
	 EOF 
;

// Rule ActivityDefinition
ruleActivityDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActivityDefinitionAccess().getActivityDeclarationParserRuleCall_0()); 
    }
    this_ActivityDeclaration_0=ruleActivityDeclaration
    { 
        $current = $this_ActivityDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDefinitionAccess().getBodyBlockParserRuleCall_1_0()); 
	    }
		lv_body_1_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDefinitionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleActivityDefinitionOrStub
entryRuleActivityDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActivityDefinitionOrStubRule()); }
	 iv_ruleActivityDefinitionOrStub=ruleActivityDefinitionOrStub 
	 { $current=$iv_ruleActivityDefinitionOrStub.current; } 
	 EOF 
;

// Rule ActivityDefinitionOrStub
ruleActivityDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActivityDefinitionOrStubAccess().getActivityDeclarationParserRuleCall_0()); 
    }
    this_ActivityDeclaration_0=ruleActivityDeclaration
    { 
        $current = $this_ActivityDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getActivityDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getActivityDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getActivityDefinitionOrStubAccess().getBodyBlockParserRuleCall_1_1_0()); 
	    }
		lv_body_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getActivityDefinitionOrStubRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleFormalParameter
entryRuleFormalParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalParameterRule()); }
	 iv_ruleFormalParameter=ruleFormalParameter 
	 { $current=$iv_ruleFormalParameter.current; } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getFormalParameterAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFormalParameterRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); 
	    }
		lv_annotation_1_0=ruleStereotypeAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterRule());
	        }
       		add(
       			$current, 
       			"annotation",
        		lv_annotation_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StereotypeAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterAccess().getDefinitionFormalParameterDefinitionParserRuleCall_2_0()); 
	    }
		lv_definition_2_0=ruleFormalParameterDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.FormalParameterDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleFormalParameterDefinition
entryRuleFormalParameterDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFormalParameterDefinitionRule()); }
	 iv_ruleFormalParameterDefinition=ruleFormalParameterDefinition 
	 { $current=$iv_ruleFormalParameterDefinition.current; } 
	 EOF 
;

// Rule FormalParameterDefinition
ruleFormalParameterDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterDefinitionAccess().getDirectionParameterDirectionParserRuleCall_0_0()); 
	    }
		lv_direction_0_0=ruleParameterDirection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterDefinitionRule());
	        }
       		set(
       			$current, 
       			"direction",
        		lv_direction_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ParameterDirection");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterDefinitionAccess().getNameNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterDefinitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFormalParameterDefinitionAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFormalParameterDefinitionAccess().getTypePartTypePartParserRuleCall_3_0()); 
	    }
		lv_typePart_3_0=ruleTypePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFormalParameterDefinitionRule());
	        }
       		set(
       			$current, 
       			"typePart",
        		lv_typePart_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TypePart");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleReturnParameter
entryRuleReturnParameter returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnParameterRule()); }
	 iv_ruleReturnParameter=ruleReturnParameter 
	 { $current=$iv_ruleReturnParameter.current; } 
	 EOF 
;

// Rule ReturnParameter
ruleReturnParameter returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnParameterAccess().getDefinitionReturnParameterDefinitionParserRuleCall_0()); 
	    }
		lv_definition_0_0=ruleReturnParameterDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnParameterRule());
	        }
       		set(
       			$current, 
       			"definition",
        		lv_definition_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ReturnParameterDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleReturnParameterDefinition
entryRuleReturnParameterDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnParameterDefinitionRule()); }
	 iv_ruleReturnParameterDefinition=ruleReturnParameterDefinition 
	 { $current=$iv_ruleReturnParameterDefinition.current; } 
	 EOF 
;

// Rule ReturnParameterDefinition
ruleReturnParameterDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0=':' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReturnParameterDefinitionAccess().getColonKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnParameterDefinitionAccess().getTypePartTypePartParserRuleCall_1_0()); 
	    }
		lv_typePart_1_0=ruleTypePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnParameterDefinitionRule());
	        }
       		set(
       			$current, 
       			"typePart",
        		lv_typePart_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TypePart");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParameterDirection
entryRuleParameterDirection returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getParameterDirectionRule()); } 
	 iv_ruleParameterDirection=ruleParameterDirection 
	 { $current=$iv_ruleParameterDirection.current.getText(); }  
	 EOF 
;

// Rule ParameterDirection
ruleParameterDirection returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='in' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterDirectionAccess().getInKeyword_0()); 
    }

    |
	kw='out' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterDirectionAccess().getOutKeyword_1()); 
    }

    |
	kw='inout' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getParameterDirectionAccess().getInoutKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleFeatureDefinitionOrStub
entryRuleFeatureDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureDefinitionOrStubRule()); }
	 iv_ruleFeatureDefinitionOrStub=ruleFeatureDefinitionOrStub 
	 { $current=$iv_ruleFeatureDefinitionOrStub.current; } 
	 EOF 
;

// Rule FeatureDefinitionOrStub
ruleFeatureDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureDefinitionOrStubAccess().getAttributeDefinitionParserRuleCall_0()); 
    }
    this_AttributeDefinition_0=ruleAttributeDefinition
    { 
        $current = $this_AttributeDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getFeatureDefinitionOrStubAccess().getOperationDefinitionOrStubParserRuleCall_1()); 
    }
    this_OperationDefinitionOrStub_1=ruleOperationDefinitionOrStub
    { 
        $current = $this_OperationDefinitionOrStub_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleActiveFeatureDefinitionOrStub
entryRuleActiveFeatureDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getActiveFeatureDefinitionOrStubRule()); }
	 iv_ruleActiveFeatureDefinitionOrStub=ruleActiveFeatureDefinitionOrStub 
	 { $current=$iv_ruleActiveFeatureDefinitionOrStub.current; } 
	 EOF 
;

// Rule ActiveFeatureDefinitionOrStub
ruleActiveFeatureDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getReceptionDefinitionParserRuleCall_0()); 
    }
    this_ReceptionDefinition_0=ruleReceptionDefinition
    { 
        $current = $this_ReceptionDefinition_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getSignalReceptionDefinitionOrStubParserRuleCall_1()); 
    }
    this_SignalReceptionDefinitionOrStub_1=ruleSignalReceptionDefinitionOrStub
    { 
        $current = $this_SignalReceptionDefinitionOrStub_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyDefinitionRule()); }
	 iv_rulePropertyDefinition=rulePropertyDefinition 
	 { $current=$iv_rulePropertyDefinition.current; } 
	 EOF 
;

// Rule PropertyDefinition
rulePropertyDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyDefinitionAccess().getPropertyDeclarationParserRuleCall_0()); 
    }
    this_PropertyDeclaration_0=rulePropertyDeclaration
    { 
        $current = $this_PropertyDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeDefinitionRule()); }
	 iv_ruleAttributeDefinition=ruleAttributeDefinition 
	 { $current=$iv_ruleAttributeDefinition.current; } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getPropertyDeclarationParserRuleCall_0()); 
    }
    this_PropertyDeclaration_0=rulePropertyDeclaration
    { 
        $current = $this_PropertyDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getInitializerAttributeInitializerParserRuleCall_1_0()); 
	    }
		lv_initializer_1_0=ruleAttributeInitializer		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		set(
       			$current, 
       			"initializer",
        		lv_initializer_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AttributeInitializer");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleAttributeInitializer
entryRuleAttributeInitializer returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeInitializerRule()); }
	 iv_ruleAttributeInitializer=ruleAttributeInitializer 
	 { $current=$iv_ruleAttributeInitializer.current; } 
	 EOF 
;

// Rule AttributeInitializer
ruleAttributeInitializer returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='=' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAttributeInitializerAccess().getEqualsSignKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAttributeInitializerAccess().getInitializationExpressionParserRuleCall_1()); 
    }
    this_InitializationExpression_1=ruleInitializationExpression
    { 
        $current = $this_InitializationExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPropertyDeclarationRule()); }
	 iv_rulePropertyDeclaration=rulePropertyDeclaration 
	 { $current=$iv_rulePropertyDeclaration.current; } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1());
    }
(
(
		lv_isComposite_2_0=	'compose' 
    {
        newLeafNode(lv_isComposite_2_0, grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropertyDeclarationRule());
	        }
       		setWithLastConsumed($current, "isComposite", true, "compose");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyDeclarationAccess().getTypePartTypePartParserRuleCall_3_0()); 
	    }
		lv_typePart_3_0=ruleTypePart		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyDeclarationRule());
	        }
       		set(
       			$current, 
       			"typePart",
        		lv_typePart_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TypePart");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTypePart
entryRuleTypePart returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypePartRule()); }
	 iv_ruleTypePart=ruleTypePart 
	 { $current=$iv_ruleTypePart.current; } 
	 EOF 
;

// Rule TypePart
ruleTypePart returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		lv_isAny_0_0=	'any' 
    {
        newLeafNode(lv_isAny_0_0, grammarAccess.getTypePartAccess().getIsAnyAnyKeyword_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed($current, "isAny", true, "any");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePartAccess().getTypeNameQualifiedNameParserRuleCall_0_1_0()); 
	    }
		lv_typeName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePartRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))((	otherlv_2='[' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTypePartAccess().getLeftSquareBracketKeyword_1_0_0());
    }
((
(
		lv_isMultiplicity_3_0=	']' 
    {
        newLeafNode(lv_isMultiplicity_3_0, grammarAccess.getTypePartAccess().getIsMultiplicityRightSquareBracketKeyword_1_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed($current, "isMultiplicity", true, "]");
	    }

)
)
    |(((
(
		lv_lowerBound_4_0=RULE_NATURAL_VALUE
		{
			newLeafNode(lv_lowerBound_4_0, grammarAccess.getTypePartAccess().getLowerBoundNATURAL_VALUETerminalRuleCall_1_0_1_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NATURAL_VALUE");
	    }

)
)	otherlv_5='..' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTypePartAccess().getFullStopFullStopKeyword_1_0_1_1_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getTypePartAccess().getUpperBoundUnlimitedNaturalLiteralParserRuleCall_1_0_1_1_1_0()); 
	    }
		lv_upperBound_6_0=ruleUnlimitedNaturalLiteral		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypePartRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.UnlimitedNaturalLiteral");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7=']' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypePartAccess().getRightSquareBracketKeyword_1_0_1_1_2());
    }
)))?(((
(
		lv_isOrdered_8_0=	'ordered' 
    {
        newLeafNode(lv_isOrdered_8_0, grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed($current, "isOrdered", true, "ordered");
	    }

)
)(
(
		lv_isNonunique_9_0=	'nonunique' 
    {
        newLeafNode(lv_isNonunique_9_0, grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed($current, "isNonunique", true, "nonunique");
	    }

)
)?)
    |((
(
		lv_isNonunique_10_0=	'nonunique' 
    {
        newLeafNode(lv_isNonunique_10_0, grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed($current, "isNonunique", true, "nonunique");
	    }

)
)(
(
		lv_isOrdered_11_0=	'ordered' 
    {
        newLeafNode(lv_isOrdered_11_0, grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed($current, "isOrdered", true, "ordered");
	    }

)
)?)
    |(
(
		lv_isSequence_12_0=	'sequence' 
    {
        newLeafNode(lv_isSequence_12_0, grammarAccess.getTypePartAccess().getIsSequenceSequenceKeyword_1_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypePartRule());
	        }
       		setWithLastConsumed($current, "isSequence", true, "sequence");
	    }

)
))?)?)
;





// Entry rule entryRuleUnlimitedNaturalLiteral
entryRuleUnlimitedNaturalLiteral returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnlimitedNaturalLiteralRule()); } 
	 iv_ruleUnlimitedNaturalLiteral=ruleUnlimitedNaturalLiteral 
	 { $current=$iv_ruleUnlimitedNaturalLiteral.current.getText(); }  
	 EOF 
;

// Rule UnlimitedNaturalLiteral
ruleUnlimitedNaturalLiteral returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_NATURAL_VALUE_0=RULE_NATURAL_VALUE    {
		$current.merge(this_NATURAL_VALUE_0);
    }

    { 
    newLeafNode(this_NATURAL_VALUE_0, grammarAccess.getUnlimitedNaturalLiteralAccess().getNATURAL_VALUETerminalRuleCall_0()); 
    }

    |
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnlimitedNaturalLiteralAccess().getAsteriskKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleOperationDeclaration
entryRuleOperationDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationDeclarationRule()); }
	 iv_ruleOperationDeclaration=ruleOperationDeclaration 
	 { $current=$iv_ruleOperationDeclaration.current; } 
	 EOF 
;

// Rule OperationDeclaration
ruleOperationDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isAbstract_0_0=	'abstract' 
    {
        newLeafNode(lv_isAbstract_0_0, grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationDeclarationRule());
	        }
       		setWithLastConsumed($current, "isAbstract", true, "abstract");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationDeclarationAccess().getNameNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getOperationDeclarationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getOperationDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_3_0_0()); 
	    }
		lv_ownedMember_3_0=ruleFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.FormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getOperationDeclarationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_3_1_1_0()); 
	    }
		lv_ownedMember_5_0=ruleFormalParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.FormalParameter");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getOperationDeclarationAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationDeclarationAccess().getOwnedMemberReturnParameterParserRuleCall_5_0()); 
	    }
		lv_ownedMember_7_0=ruleReturnParameter		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationDeclarationRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_7_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ReturnParameter");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationDeclarationAccess().getRedefinitionRedefinitionClauseParserRuleCall_6_0()); 
	    }
		lv_redefinition_8_0=ruleRedefinitionClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationDeclarationRule());
	        }
       		set(
       			$current, 
       			"redefinition",
        		lv_redefinition_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.RedefinitionClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleOperationDefinitionOrStub
entryRuleOperationDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOperationDefinitionOrStubRule()); }
	 iv_ruleOperationDefinitionOrStub=ruleOperationDefinitionOrStub 
	 { $current=$iv_ruleOperationDefinitionOrStub.current; } 
	 EOF 
;

// Rule OperationDefinitionOrStub
ruleOperationDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOperationDefinitionOrStubAccess().getOperationDeclarationParserRuleCall_0()); 
    }
    this_OperationDeclaration_0=ruleOperationDeclaration
    { 
        $current = $this_OperationDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getOperationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getOperationDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getOperationDefinitionOrStubAccess().getBodyBlockParserRuleCall_1_1_0()); 
	    }
		lv_body_2_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOperationDefinitionOrStubRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleRedefinitionClause
entryRuleRedefinitionClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRedefinitionClauseRule()); }
	 iv_ruleRedefinitionClause=ruleRedefinitionClause 
	 { $current=$iv_ruleRedefinitionClause.current; } 
	 EOF 
;

// Rule RedefinitionClause
ruleRedefinitionClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='redefines' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRedefinitionClauseAccess().getRedefinesKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRedefinitionClauseAccess().getQualifiedNameListParserRuleCall_1()); 
    }
    this_QualifiedNameList_1=ruleQualifiedNameList
    { 
        $current = $this_QualifiedNameList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleReceptionDefinition
entryRuleReceptionDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReceptionDefinitionRule()); }
	 iv_ruleReceptionDefinition=ruleReceptionDefinition 
	 { $current=$iv_ruleReceptionDefinition.current; } 
	 EOF 
;

// Rule ReceptionDefinition
ruleReceptionDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='receive' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReceptionDefinitionAccess().getReceiveKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReceptionDefinitionAccess().getSignalNameQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_signalName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReceptionDefinitionRule());
	        }
       		set(
       			$current, 
       			"signalName",
        		lv_signalName_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReceptionDefinitionAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleSignalReceptionDeclaration
entryRuleSignalReceptionDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalReceptionDeclarationRule()); }
	 iv_ruleSignalReceptionDeclaration=ruleSignalReceptionDeclaration 
	 { $current=$iv_ruleSignalReceptionDeclaration.current; } 
	 EOF 
;

// Rule SignalReceptionDeclaration
ruleSignalReceptionDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='receive' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSignalReceptionDeclarationAccess().getReceiveKeyword_0());
    }
	otherlv_1='signal' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSignalReceptionDeclarationAccess().getSignalKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalReceptionDeclarationAccess().getNameNameParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalReceptionDeclarationRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_3_0()); 
	    }
		lv_specialization_3_0=ruleSpecializationClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalReceptionDeclarationRule());
	        }
       		set(
       			$current, 
       			"specialization",
        		lv_specialization_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SpecializationClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSignalReceptionDefinitionOrStub
entryRuleSignalReceptionDefinitionOrStub returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSignalReceptionDefinitionOrStubRule()); }
	 iv_ruleSignalReceptionDefinitionOrStub=ruleSignalReceptionDefinitionOrStub 
	 { $current=$iv_ruleSignalReceptionDefinitionOrStub.current; } 
	 EOF 
;

// Rule SignalReceptionDefinitionOrStub
ruleSignalReceptionDefinitionOrStub returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSignalReceptionDeclarationParserRuleCall_0()); 
    }
    this_SignalReceptionDeclaration_0=ruleSignalReceptionDeclaration
    { 
        $current = $this_SignalReceptionDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }
((
(
		lv_isStub_1_0=	';' 
    {
        newLeafNode(lv_isStub_1_0, grammarAccess.getSignalReceptionDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSignalReceptionDefinitionOrStubRule());
	        }
       		setWithLastConsumed($current, "isStub", true, ";");
	    }

)
)
    |(	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSignalReceptionDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); 
	    }
		lv_ownedMember_3_0=ruleStructuredMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignalReceptionDefinitionOrStubRule());
	        }
       		add(
       			$current, 
       			"ownedMember",
        		lv_ownedMember_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.StructuredMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSignalReceptionDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2());
    }
)))
;





// Entry rule entryRuleName
entryRuleName returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameRule()); } 
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current.getText(); }  
	 EOF 
;

// Rule Name
ruleName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); 
    }

    |    this_UNRESTRICTED_NAME_1=RULE_UNRESTRICTED_NAME    {
		$current.merge(this_UNRESTRICTED_NAME_1);
    }

    { 
    newLeafNode(this_UNRESTRICTED_NAME_1, grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleQualifiedName
entryRuleQualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameRule()); }
	 iv_ruleQualifiedName=ruleQualifiedName 
	 { $current=$iv_ruleQualifiedName.current; } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getQualifiedNameAccess().getUnqualifiedNameParserRuleCall_0()); 
    }
    this_UnqualifiedName_0=ruleUnqualifiedName
    { 
        $current = $this_UnqualifiedName_0.current; 
        afterParserOrEnumRuleCall();
    }
((	otherlv_1='::' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_1_0()); 
	    }
		lv_nameBinding_2_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))+
    |(	otherlv_3='.' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_1_0()); 
	    }
		lv_nameBinding_4_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))+)?)
;





// Entry rule entryRulePotentiallyAmbiguousQualifiedName
entryRulePotentiallyAmbiguousQualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPotentiallyAmbiguousQualifiedNameRule()); }
	 iv_rulePotentiallyAmbiguousQualifiedName=rulePotentiallyAmbiguousQualifiedName 
	 { $current=$iv_rulePotentiallyAmbiguousQualifiedName.current; } 
	 EOF 
;

// Rule PotentiallyAmbiguousQualifiedName
rulePotentiallyAmbiguousQualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getUnqualifiedNameParserRuleCall_0()); 
    }
    this_UnqualifiedName_0=ruleUnqualifiedName
    { 
        $current = $this_UnqualifiedName_0.current; 
        afterParserOrEnumRuleCall();
    }
((	otherlv_1='::' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getColonColonKeyword_1_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_1_0()); 
	    }
		lv_nameBinding_2_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPotentiallyAmbiguousQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))+
    |((
(
		lv_isAmbiguous_3_0=	'.' 
    {
        newLeafNode(lv_isAmbiguous_3_0, grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getIsAmbiguousFullStopKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPotentiallyAmbiguousQualifiedNameRule());
	        }
       		setWithLastConsumed($current, "isAmbiguous", true, ".");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_1_0()); 
	    }
		lv_nameBinding_4_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPotentiallyAmbiguousQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='.' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getFullStopKeyword_1_1_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_2_1_0()); 
	    }
		lv_nameBinding_6_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPotentiallyAmbiguousQualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))*))?)
;









// Entry rule entryRuleUnqualifiedName
entryRuleUnqualifiedName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnqualifiedNameRule()); }
	 iv_ruleUnqualifiedName=ruleUnqualifiedName 
	 { $current=$iv_ruleUnqualifiedName.current; } 
	 EOF 
;

// Rule UnqualifiedName
ruleUnqualifiedName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getUnqualifiedNameAccess().getNameBindingNameBindingParserRuleCall_0()); 
	    }
		lv_nameBinding_0_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnqualifiedNameRule());
	        }
       		add(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleNameBinding
entryRuleNameBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameBindingRule()); }
	 iv_ruleNameBinding=ruleNameBinding 
	 { $current=$iv_ruleNameBinding.current; } 
	 EOF 
;

// Rule NameBinding
ruleNameBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNameBindingAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameBindingRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNameBindingAccess().getBindingTemplateBindingParserRuleCall_1_0()); 
	    }
		lv_binding_1_0=ruleTemplateBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameBindingRule());
	        }
       		set(
       			$current, 
       			"binding",
        		lv_binding_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TemplateBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleTemplateBinding
entryRuleTemplateBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateBindingRule()); }
	 iv_ruleTemplateBinding=ruleTemplateBinding 
	 { $current=$iv_ruleTemplateBinding.current; } 
	 EOF 
;

// Rule TemplateBinding
ruleTemplateBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTemplateBindingAccess().getLessThanSignKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateBindingAccess().getNamedTemplateBindingParserRuleCall_1_0()); 
    }
    this_NamedTemplateBinding_1=ruleNamedTemplateBinding
    { 
        $current = $this_NamedTemplateBinding_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTemplateBindingAccess().getPositionalTemplateBindingParserRuleCall_1_1()); 
    }
    this_PositionalTemplateBinding_2=rulePositionalTemplateBinding
    { 
        $current = $this_PositionalTemplateBinding_2.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_3='>' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTemplateBindingAccess().getGreaterThanSignKeyword_2());
    }
)
;





// Entry rule entryRulePositionalTemplateBinding
entryRulePositionalTemplateBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPositionalTemplateBindingRule()); }
	 iv_rulePositionalTemplateBinding=rulePositionalTemplateBinding 
	 { $current=$iv_rulePositionalTemplateBinding.current; } 
	 EOF 
;

// Rule PositionalTemplateBinding
rulePositionalTemplateBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_argumentName_0_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPositionalTemplateBindingRule());
	        }
       		add(
       			$current, 
       			"argumentName",
        		lv_argumentName_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPositionalTemplateBindingAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameQualifiedNameParserRuleCall_1_1_0()); 
	    }
		lv_argumentName_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPositionalTemplateBindingRule());
	        }
       		add(
       			$current, 
       			"argumentName",
        		lv_argumentName_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNamedTemplateBinding
entryRuleNamedTemplateBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedTemplateBindingRule()); }
	 iv_ruleNamedTemplateBinding=ruleNamedTemplateBinding 
	 { $current=$iv_ruleNamedTemplateBinding.current; } 
	 EOF 
;

// Rule NamedTemplateBinding
ruleNamedTemplateBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionTemplateParameterSubstitutionParserRuleCall_0_0()); 
	    }
		lv_substitution_0_0=ruleTemplateParameterSubstitution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedTemplateBindingRule());
	        }
       		add(
       			$current, 
       			"substitution",
        		lv_substitution_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TemplateParameterSubstitution");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedTemplateBindingAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionTemplateParameterSubstitutionParserRuleCall_1_1_0()); 
	    }
		lv_substitution_2_0=ruleTemplateParameterSubstitution		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedTemplateBindingRule());
	        }
       		add(
       			$current, 
       			"substitution",
        		lv_substitution_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.TemplateParameterSubstitution");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTemplateParameterSubstitution
entryRuleTemplateParameterSubstitution returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTemplateParameterSubstitutionRule()); }
	 iv_ruleTemplateParameterSubstitution=ruleTemplateParameterSubstitution 
	 { $current=$iv_ruleTemplateParameterSubstitution.current; } 
	 EOF 
;

// Rule TemplateParameterSubstitution
ruleTemplateParameterSubstitution returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateParameterSubstitutionAccess().getParameterNameNameParserRuleCall_0_0()); 
	    }
		lv_parameterName_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionRule());
	        }
       		set(
       			$current, 
       			"parameterName",
        		lv_parameterName_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTemplateParameterSubstitutionAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTemplateParameterSubstitutionAccess().getArgumentNameQualifiedNameParserRuleCall_2_0()); 
	    }
		lv_argumentName_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTemplateParameterSubstitutionRule());
	        }
       		set(
       			$current, 
       			"argumentName",
        		lv_argumentName_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); 
    }
    this_AssignmentExpression_0=ruleAssignmentExpression
    { 
        $current = $this_AssignmentExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_1()); 
    }
    this_ConditionalExpression_1=ruleConditionalExpression
    { 
        $current = $this_ConditionalExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrimaryExpressionRule()); }
	 iv_rulePrimaryExpression=rulePrimaryExpression 
	 { $current=$iv_rulePrimaryExpression.current; } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0()); 
    }
    this_BaseExpression_0=ruleBaseExpression
    { 
        $current = $this_BaseExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getFeatureReferenceExpressionAction_1_0_0(),
            $current);
    }
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameBindingNameBindingParserRuleCall_1_0_2_0()); 
	    }
		lv_nameBinding_3_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getFeatureInvocationExpressionTargetAction_1_0_3(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTupleTupleParserRuleCall_1_0_4_0()); 
	    }
		lv_tuple_5_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getFeatureReferenceExpressionAction_1_1_0(),
            $current);
    }
)	otherlv_7='.' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getNameBindingNameBindingParserRuleCall_1_1_2_0()); 
	    }
		lv_nameBinding_8_0=ruleNameBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"nameBinding",
        		lv_nameBinding_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NameBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getPropertyAccessExpressionFeatureReferenceAction_1_1_3(),
            $current);
    }
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getExtentOrExpressionNonNameExpressionAction_1_2_0(),
            $current);
    }
)	otherlv_11='->' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_1());
    }
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getSequenceOperationExpressionPrimaryAction_1_2_2_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getOperationQualifiedNameParserRuleCall_1_2_2_0_1_0()); 
	    }
		lv_operation_13_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operation",
        		lv_operation_13_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getTupleTupleParserRuleCall_1_2_2_0_2_0()); 
	    }
		lv_tuple_14_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_14_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getSequenceReductionExpressionPrimaryAction_1_2_2_1_0(),
            $current);
    }
)	otherlv_16='reduce' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getPrimaryExpressionAccess().getReduceKeyword_1_2_2_1_1());
    }
(
(
		lv_isOrdered_17_0=	'ordered' 
    {
        newLeafNode(lv_isOrdered_17_0, grammarAccess.getPrimaryExpressionAccess().getIsOrderedOrderedKeyword_1_2_2_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed($current, "isOrdered", true, "ordered");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getBehaviorNameQualifiedNameParserRuleCall_1_2_2_1_3_0()); 
	    }
		lv_behaviorName_18_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"behaviorName",
        		lv_behaviorName_18_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getSequenceExpansionExpressionPrimaryAction_1_2_2_2_0(),
            $current);
    }
)(
(
		lv_operation_20_0=RULE_ID
		{
			newLeafNode(lv_operation_20_0, grammarAccess.getPrimaryExpressionAccess().getOperationIDTerminalRuleCall_1_2_2_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPrimaryExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_20_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getVariableNameParserRuleCall_1_2_2_2_2_0()); 
	    }
		lv_variable_21_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_21_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_22='(' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_2_2_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getArgumentExpressionParserRuleCall_1_2_2_2_4_0()); 
	    }
		lv_argument_23_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"argument",
        		lv_argument_23_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_24=')' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2_2_2_5());
    }
)))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPrimaryExpressionAccess().getSequenceAccessExpressionPrimaryAction_1_3_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrimaryExpressionAccess().getIndexIndexParserRuleCall_1_3_1_0()); 
	    }
		lv_index_26_0=ruleIndex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrimaryExpressionRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_26_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Index");
	        afterParserOrEnumRuleCall();
	    }

)
)))*)
;





// Entry rule entryRuleBaseExpression
entryRuleBaseExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBaseExpressionRule()); }
	 iv_ruleBaseExpression=ruleBaseExpression 
	 { $current=$iv_ruleBaseExpression.current; } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_0()); 
    }
    this_LiteralExpression_0=ruleLiteralExpression
    { 
        $current = $this_LiteralExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getThisExpressionParserRuleCall_1()); 
    }
    this_ThisExpression_1=ruleThisExpression
    { 
        $current = $this_ThisExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getSuperInvocationExpressionParserRuleCall_2()); 
    }
    this_SuperInvocationExpression_2=ruleSuperInvocationExpression
    { 
        $current = $this_SuperInvocationExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getInstanceCreationOrSequenceConstructionExpressionParserRuleCall_3()); 
    }
    this_InstanceCreationOrSequenceConstructionExpression_3=ruleInstanceCreationOrSequenceConstructionExpression
    { 
        $current = $this_InstanceCreationOrSequenceConstructionExpression_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getClassExtentExpressionParserRuleCall_4()); 
    }
    this_ClassExtentExpression_4=ruleClassExtentExpression
    { 
        $current = $this_ClassExtentExpression_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getLinkOperationExpressionParserRuleCall_5()); 
    }
    this_LinkOperationExpression_5=ruleLinkOperationExpression
    { 
        $current = $this_LinkOperationExpression_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getSequenceConstructionExpressionParserRuleCall_6()); 
    }
    this_SequenceConstructionExpression_6=ruleSequenceConstructionExpression
    { 
        $current = $this_SequenceConstructionExpression_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getSequenceOperationOrReductionOrExpansionExpressionParserRuleCall_7()); 
    }
    this_SequenceOperationOrReductionOrExpansionExpression_7=ruleSequenceOperationOrReductionOrExpansionExpression
    { 
        $current = $this_SequenceOperationOrReductionOrExpansionExpression_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getBehaviorInvocationExpressionParserRuleCall_8()); 
    }
    this_BehaviorInvocationExpression_8=ruleBehaviorInvocationExpression
    { 
        $current = $this_BehaviorInvocationExpression_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getNameExpressionParserRuleCall_9()); 
    }
    this_NameExpression_9=ruleNameExpression
    { 
        $current = $this_NameExpression_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getBaseExpressionAccess().getParenthesizedExpressionParserRuleCall_10()); 
    }
    this_ParenthesizedExpression_10=ruleParenthesizedExpression
    { 
        $current = $this_ParenthesizedExpression_10.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLiteralExpressionRule()); }
	 iv_ruleLiteralExpression=ruleLiteralExpression 
	 { $current=$iv_ruleLiteralExpression.current; } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0()); 
    }
    this_BooleanLiteralExpression_0=ruleBooleanLiteralExpression
    { 
        $current = $this_BooleanLiteralExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_1()); 
    }
    this_NaturalLiteralExpression_1=ruleNaturalLiteralExpression
    { 
        $current = $this_NaturalLiteralExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getUnboundedLiteralExpressionParserRuleCall_2()); 
    }
    this_UnboundedLiteralExpression_2=ruleUnboundedLiteralExpression
    { 
        $current = $this_UnboundedLiteralExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_3()); 
    }
    this_StringLiteralExpression_3=ruleStringLiteralExpression
    { 
        $current = $this_StringLiteralExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBooleanLiteralExpression
entryRuleBooleanLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralExpressionRule()); }
	 iv_ruleBooleanLiteralExpression=ruleBooleanLiteralExpression 
	 { $current=$iv_ruleBooleanLiteralExpression.current; } 
	 EOF 
;

// Rule BooleanLiteralExpression
ruleBooleanLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_image_0_0=RULE_BOOLEAN_VALUE
		{
			newLeafNode(lv_image_0_0, grammarAccess.getBooleanLiteralExpressionAccess().getImageBOOLEAN_VALUETerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"image",
        		lv_image_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.BOOLEAN_VALUE");
	    }

)
)
;





// Entry rule entryRuleNaturalLiteralExpression
entryRuleNaturalLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNaturalLiteralExpressionRule()); }
	 iv_ruleNaturalLiteralExpression=ruleNaturalLiteralExpression 
	 { $current=$iv_ruleNaturalLiteralExpression.current; } 
	 EOF 
;

// Rule NaturalLiteralExpression
ruleNaturalLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_image_0_0=RULE_NATURAL_VALUE
		{
			newLeafNode(lv_image_0_0, grammarAccess.getNaturalLiteralExpressionAccess().getImageNATURAL_VALUETerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNaturalLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"image",
        		lv_image_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NATURAL_VALUE");
	    }

)
)
;





// Entry rule entryRuleUnboundedLiteralExpression
entryRuleUnboundedLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnboundedLiteralExpressionRule()); }
	 iv_ruleUnboundedLiteralExpression=ruleUnboundedLiteralExpression 
	 { $current=$iv_ruleUnboundedLiteralExpression.current; } 
	 EOF 
;

// Rule UnboundedLiteralExpression
ruleUnboundedLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getUnboundedLiteralExpressionAccess().getUnboundedLiteralExpressionAction_0(),
            $current);
    }
)	otherlv_1='*' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getUnboundedLiteralExpressionAccess().getAsteriskKeyword_1());
    }
)
;





// Entry rule entryRuleStringLiteralExpression
entryRuleStringLiteralExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringLiteralExpressionRule()); }
	 iv_ruleStringLiteralExpression=ruleStringLiteralExpression 
	 { $current=$iv_ruleStringLiteralExpression.current; } 
	 EOF 
;

// Rule StringLiteralExpression
ruleStringLiteralExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_image_0_0=RULE_STRING
		{
			newLeafNode(lv_image_0_0, grammarAccess.getStringLiteralExpressionAccess().getImageSTRINGTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getStringLiteralExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"image",
        		lv_image_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.STRING");
	    }

)
)
;





// Entry rule entryRuleNameExpression
entryRuleNameExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameExpressionRule()); }
	 iv_ruleNameExpression=ruleNameExpression 
	 { $current=$iv_ruleNameExpression.current; } 
	 EOF 
;

// Rule NameExpression
ruleNameExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNameExpressionAccess().getNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0()); 
	    }
		lv_name_0_0=rulePotentiallyAmbiguousQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameExpressionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PotentiallyAmbiguousQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleThisExpression
entryRuleThisExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getThisExpressionRule()); }
	 iv_ruleThisExpression=ruleThisExpression 
	 { $current=$iv_ruleThisExpression.current; } 
	 EOF 
;

// Rule ThisExpression
ruleThisExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getThisExpressionAccess().getFeatureInvocationExpressionAction_0_0(),
            $current);
    }
)	otherlv_1='this' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getThisExpressionAccess().getThisKeyword_0_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getThisExpressionAccess().getTupleTupleParserRuleCall_0_2_0()); 
	    }
		lv_tuple_2_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getThisExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getThisExpressionAccess().getThisExpressionAction_1_0(),
            $current);
    }
)	otherlv_4='this' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getThisExpressionAccess().getThisKeyword_1_1());
    }
))
;





// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParenthesizedExpressionRule()); }
	 iv_ruleParenthesizedExpression=ruleParenthesizedExpression 
	 { $current=$iv_ruleParenthesizedExpression.current; } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleBehaviorInvocationExpression
entryRuleBehaviorInvocationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBehaviorInvocationExpressionRule()); }
	 iv_ruleBehaviorInvocationExpression=ruleBehaviorInvocationExpression 
	 { $current=$iv_ruleBehaviorInvocationExpression.current; } 
	 EOF 
;

// Rule BehaviorInvocationExpression
ruleBehaviorInvocationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorInvocationExpressionAccess().getTargetPotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_target_0_0=rulePotentiallyAmbiguousQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorInvocationExpressionRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PotentiallyAmbiguousQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBehaviorInvocationExpressionAccess().getTupleTupleParserRuleCall_1_0()); 
	    }
		lv_tuple_1_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBehaviorInvocationExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleTuple
entryRuleTuple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTupleRule()); }
	 iv_ruleTuple=ruleTuple 
	 { $current=$iv_ruleTuple.current; } 
	 EOF 
;

// Rule Tuple
ruleTuple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTupleAccess().getNamedTupleExpressionListParserRuleCall_1_0()); 
    }
    this_NamedTupleExpressionList_1=ruleNamedTupleExpressionList
    { 
        $current = $this_NamedTupleExpressionList_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTupleAccess().getPositionalTupleExpressionListParserRuleCall_1_1()); 
    }
    this_PositionalTupleExpressionList_2=rulePositionalTupleExpressionList
    { 
        $current = $this_PositionalTupleExpressionList_2.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTupleAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRulePositionalTupleExpressionList
entryRulePositionalTupleExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPositionalTupleExpressionListRule()); }
	 iv_rulePositionalTupleExpressionList=rulePositionalTupleExpressionList 
	 { $current=$iv_rulePositionalTupleExpressionList.current; } 
	 EOF 
;

// Rule PositionalTupleExpressionList
rulePositionalTupleExpressionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getPositionalTupleExpressionListAccess().getPositionalTupleAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_0_0()); 
	    }
		lv_expression_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPositionalTupleExpressionListRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPositionalTupleExpressionListAccess().getCommaKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPositionalTupleExpressionListRule());
	        }
       		add(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleNamedTupleExpressionList
entryRuleNamedTupleExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedTupleExpressionListRule()); }
	 iv_ruleNamedTupleExpressionList=ruleNamedTupleExpressionList 
	 { $current=$iv_ruleNamedTupleExpressionList.current; } 
	 EOF 
;

// Rule NamedTupleExpressionList
ruleNamedTupleExpressionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_0_0()); 
	    }
		lv_namedExpression_0_0=ruleNamedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedTupleExpressionListRule());
	        }
       		add(
       			$current, 
       			"namedExpression",
        		lv_namedExpression_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NamedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedTupleExpressionListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_1_1_0()); 
	    }
		lv_namedExpression_2_0=ruleNamedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedTupleExpressionListRule());
	        }
       		add(
       			$current, 
       			"namedExpression",
        		lv_namedExpression_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NamedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNamedExpression
entryRuleNamedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedExpressionRule()); }
	 iv_ruleNamedExpression=ruleNamedExpression 
	 { $current=$iv_ruleNamedExpression.current; } 
	 EOF 
;

// Rule NamedExpression
ruleNamedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNamedExpressionAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedExpressionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='=>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNamedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNamedExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSuperInvocationExpression
entryRuleSuperInvocationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSuperInvocationExpressionRule()); }
	 iv_ruleSuperInvocationExpression=ruleSuperInvocationExpression 
	 { $current=$iv_ruleSuperInvocationExpression.current; } 
	 EOF 
;

// Rule SuperInvocationExpression
ruleSuperInvocationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='super' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSuperInvocationExpressionAccess().getSuperKeyword_0());
    }
(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSuperInvocationExpressionAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSuperInvocationExpressionAccess().getTargetQualifiedNameParserRuleCall_1_1_0()); 
	    }
		lv_target_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSuperInvocationExpressionRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))?(
(
		{ 
	        newCompositeNode(grammarAccess.getSuperInvocationExpressionAccess().getTupleTupleParserRuleCall_2_0()); 
	    }
		lv_tuple_3_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSuperInvocationExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInstanceCreationOrSequenceConstructionExpression
entryRuleInstanceCreationOrSequenceConstructionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule()); }
	 iv_ruleInstanceCreationOrSequenceConstructionExpression=ruleInstanceCreationOrSequenceConstructionExpression 
	 { $current=$iv_ruleInstanceCreationOrSequenceConstructionExpression.current; } 
	 EOF 
;

// Rule InstanceCreationOrSequenceConstructionExpression
ruleInstanceCreationOrSequenceConstructionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='new' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getNewKeyword_0());
    }
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getSequenceConstructionExpressionAction_1_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_1_0()); 
	    }
		lv_typeName_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_1_0_2_0()); 
	    }
		lv_hasMultiplicity_3_0=ruleMultiplicityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"hasMultiplicity",
        		true, 
        		"org.eclipse.papyrus.uml.alf.Alf.MultiplicityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getElementsSequenceElementsParserRuleCall_1_0_4_0()); 
	    }
		lv_elements_5_0=ruleSequenceElements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"elements",
        		lv_elements_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SequenceElements");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_0_5());
    }
)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getInstanceCreationExpressionAction_1_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getConstructorQualifiedNameParserRuleCall_1_1_1_0()); 
	    }
		lv_constructor_8_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"constructor",
        		lv_constructor_8_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleTupleParserRuleCall_1_1_2_0()); 
	    }
		lv_tuple_9_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_9_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))))
;





// Entry rule entryRuleLinkOperationExpression
entryRuleLinkOperationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkOperationExpressionRule()); }
	 iv_ruleLinkOperationExpression=ruleLinkOperationExpression 
	 { $current=$iv_ruleLinkOperationExpression.current; } 
	 EOF 
;

// Rule LinkOperationExpression
ruleLinkOperationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getLinkOperationExpressionAccess().getAssociationNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_associationName_0_0=rulePotentiallyAmbiguousQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkOperationExpressionRule());
	        }
       		set(
       			$current, 
       			"associationName",
        		lv_associationName_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PotentiallyAmbiguousQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinkOperationExpressionAccess().getFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkOperationExpressionAccess().getOperationLinkOperationParserRuleCall_2_0()); 
	    }
		lv_operation_2_0=ruleLinkOperation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkOperationExpressionRule());
	        }
       		set(
       			$current, 
       			"operation",
        		lv_operation_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.LinkOperation");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkOperationExpressionAccess().getTupleLinkOperationTupleParserRuleCall_3_0()); 
	    }
		lv_tuple_3_0=ruleLinkOperationTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkOperationExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.LinkOperationTuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLinkOperation
entryRuleLinkOperation returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkOperationRule()); } 
	 iv_ruleLinkOperation=ruleLinkOperation 
	 { $current=$iv_ruleLinkOperation.current.getText(); }  
	 EOF 
;

// Rule LinkOperation
ruleLinkOperation returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='createLink' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkOperationAccess().getCreateLinkKeyword_0()); 
    }

    |
	kw='destroyLink' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkOperationAccess().getDestroyLinkKeyword_1()); 
    }

    |
	kw='clearAssoc' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getLinkOperationAccess().getClearAssocKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleLinkOperationTuple
entryRuleLinkOperationTuple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkOperationTupleRule()); }
	 iv_ruleLinkOperationTuple=ruleLinkOperationTuple 
	 { $current=$iv_ruleLinkOperationTuple.current; } 
	 EOF 
;

// Rule LinkOperationTuple
ruleLinkOperationTuple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkOperationTupleAccess().getLeftParenthesisKeyword_0());
    }
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLinkOperationTupleAccess().getIndexedNamedTupleExpressionListParserRuleCall_1_0()); 
    }
    this_IndexedNamedTupleExpressionList_1=ruleIndexedNamedTupleExpressionList
    { 
        $current = $this_IndexedNamedTupleExpressionList_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListParserRuleCall_1_1()); 
    }
    this_PositionalTupleExpressionList_2=rulePositionalTupleExpressionList
    { 
        $current = $this_PositionalTupleExpressionList_2.current; 
        afterParserOrEnumRuleCall();
    }
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinkOperationTupleAccess().getRightParenthesisKeyword_2());
    }
)
;





// Entry rule entryRuleIndexedNamedTupleExpressionList
entryRuleIndexedNamedTupleExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexedNamedTupleExpressionListRule()); }
	 iv_ruleIndexedNamedTupleExpressionList=ruleIndexedNamedTupleExpressionList 
	 { $current=$iv_ruleIndexedNamedTupleExpressionList.current; } 
	 EOF 
;

// Rule IndexedNamedTupleExpressionList
ruleIndexedNamedTupleExpressionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionIndexedNamedExpressionParserRuleCall_0_0()); 
	    }
		lv_namedExpression_0_0=ruleIndexedNamedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexedNamedTupleExpressionListRule());
	        }
       		add(
       			$current, 
       			"namedExpression",
        		lv_namedExpression_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.IndexedNamedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIndexedNamedTupleExpressionListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionIndexedNamedExpressionParserRuleCall_1_1_0()); 
	    }
		lv_namedExpression_2_0=ruleIndexedNamedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexedNamedTupleExpressionListRule());
	        }
       		add(
       			$current, 
       			"namedExpression",
        		lv_namedExpression_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.IndexedNamedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleIndexedNamedExpression
entryRuleIndexedNamedExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexedNamedExpressionRule()); }
	 iv_ruleIndexedNamedExpression=ruleIndexedNamedExpression 
	 { $current=$iv_ruleIndexedNamedExpression.current; } 
	 EOF 
;

// Rule IndexedNamedExpression
ruleIndexedNamedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIndexedNamedExpressionAccess().getNameNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexedNamedExpressionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexedNamedExpressionAccess().getIndexIndexParserRuleCall_1_0()); 
	    }
		lv_index_1_0=ruleIndex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexedNamedExpressionRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Index");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_2='=>' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIndexedNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIndexedNamedExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); 
	    }
		lv_expression_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIndexedNamedExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleClassExtentExpression
entryRuleClassExtentExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassExtentExpressionRule()); }
	 iv_ruleClassExtentExpression=ruleClassExtentExpression 
	 { $current=$iv_ruleClassExtentExpression.current; } 
	 EOF 
;

// Rule ClassExtentExpression
ruleClassExtentExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getClassExtentExpressionAccess().getClassNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_className_0_0=rulePotentiallyAmbiguousQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassExtentExpressionRule());
	        }
       		set(
       			$current, 
       			"className",
        		lv_className_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PotentiallyAmbiguousQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getClassExtentExpressionAccess().getFullStopKeyword_1());
    }
	otherlv_2='allInstances' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getClassExtentExpressionAccess().getAllInstancesKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClassExtentExpressionAccess().getLeftParenthesisKeyword_3());
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getClassExtentExpressionAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleSequenceConstructionExpression
entryRuleSequenceConstructionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceConstructionExpressionRule()); }
	 iv_ruleSequenceConstructionExpression=ruleSequenceConstructionExpression 
	 { $current=$iv_ruleSequenceConstructionExpression.current; } 
	 EOF 
;

// Rule SequenceConstructionExpression
ruleSequenceConstructionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((((
(
		lv_isAny_0_0=	'any' 
    {
        newLeafNode(lv_isAny_0_0, grammarAccess.getSequenceConstructionExpressionAccess().getIsAnyAnyKeyword_0_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceConstructionExpressionRule());
	        }
       		setWithLastConsumed($current, "isAny", true, "any");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getTypeNameQualifiedNameParserRuleCall_0_0_1_0()); 
	    }
		lv_typeName_1_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_1_0()); 
	    }
		lv_hasMultiplicity_2_0=ruleMultiplicityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"hasMultiplicity",
        		true, 
        		"org.eclipse.papyrus.uml.alf.Alf.MultiplicityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceConstructionExpressionAccess().getElementsSequenceElementsParserRuleCall_0_3_0()); 
	    }
		lv_elements_4_0=ruleSequenceElements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceConstructionExpressionRule());
	        }
       		set(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SequenceElements");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_4());
    }
)
    |(
(
		lv_hasMultiplicity_6_0=	'null' 
    {
        newLeafNode(lv_hasMultiplicity_6_0, grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityNullKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceConstructionExpressionRule());
	        }
       		setWithLastConsumed($current, "hasMultiplicity", true, "null");
	    }

)
))
;





// Entry rule entryRuleMultiplicityIndicator
entryRuleMultiplicityIndicator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicityIndicatorRule()); } 
	 iv_ruleMultiplicityIndicator=ruleMultiplicityIndicator 
	 { $current=$iv_ruleMultiplicityIndicator.current.getText(); }  
	 EOF 
;

// Rule MultiplicityIndicator
ruleMultiplicityIndicator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='[' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicityIndicatorAccess().getLeftSquareBracketKeyword_0()); 
    }

	kw=']' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicityIndicatorAccess().getRightSquareBracketKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleSequenceElements
entryRuleSequenceElements returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceElementsRule()); }
	 iv_ruleSequenceElements=ruleSequenceElements 
	 { $current=$iv_ruleSequenceElements.current; } 
	 EOF 
;

// Rule SequenceElements
ruleSequenceElements returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSequenceElementsAccess().getSequenceRangeParserRuleCall_0()); 
    }
    this_SequenceRange_0=ruleSequenceRange
    { 
        $current = $this_SequenceRange_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSequenceElementsAccess().getSequenceExpressionListParserRuleCall_1()); 
    }
    this_SequenceExpressionList_1=ruleSequenceExpressionList
    { 
        $current = $this_SequenceExpressionList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSequenceRange
entryRuleSequenceRange returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceRangeRule()); }
	 iv_ruleSequenceRange=ruleSequenceRange 
	 { $current=$iv_ruleSequenceRange.current; } 
	 EOF 
;

// Rule SequenceRange
ruleSequenceRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceRangeAccess().getRangeLowerExpressionParserRuleCall_0_0()); 
	    }
		lv_rangeLower_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceRangeRule());
	        }
       		set(
       			$current, 
       			"rangeLower",
        		lv_rangeLower_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1='..' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceRangeAccess().getFullStopFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceRangeAccess().getRangeUpperExpressionParserRuleCall_2_0()); 
	    }
		lv_rangeUpper_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceRangeRule());
	        }
       		set(
       			$current, 
       			"rangeUpper",
        		lv_rangeUpper_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSequenceExpressionList
entryRuleSequenceExpressionList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceExpressionListRule()); }
	 iv_ruleSequenceExpressionList=ruleSequenceExpressionList 
	 { $current=$iv_ruleSequenceExpressionList.current; } 
	 EOF 
;

// Rule SequenceExpressionList
ruleSequenceExpressionList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceExpressionListAccess().getElementSequenceElementParserRuleCall_0_0()); 
	    }
		lv_element_0_0=ruleSequenceElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceExpressionListRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SequenceElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceExpressionListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceExpressionListAccess().getElementSequenceElementParserRuleCall_1_1_0()); 
	    }
		lv_element_2_0=ruleSequenceElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceExpressionListRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SequenceElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceExpressionListAccess().getCommaKeyword_2());
    }
)?)
;





// Entry rule entryRuleSequenceElement
entryRuleSequenceElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceElementRule()); }
	 iv_ruleSequenceElement=ruleSequenceElement 
	 { $current=$iv_ruleSequenceElement.current; } 
	 EOF 
;

// Rule SequenceElement
ruleSequenceElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSequenceElementAccess().getExpressionParserRuleCall_0()); 
    }
    this_Expression_0=ruleExpression
    { 
        $current = $this_Expression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSequenceElementAccess().getSequenceInitializationExpressionParserRuleCall_1()); 
    }
    this_SequenceInitializationExpression_1=ruleSequenceInitializationExpression
    { 
        $current = $this_SequenceInitializationExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSequenceInitializationExpression
entryRuleSequenceInitializationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceInitializationExpressionRule()); }
	 iv_ruleSequenceInitializationExpression=ruleSequenceInitializationExpression 
	 { $current=$iv_ruleSequenceInitializationExpression.current; } 
	 EOF 
;

// Rule SequenceInitializationExpression
ruleSequenceInitializationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='new' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSequenceInitializationExpressionAccess().getNewKeyword_0());
    }
)?	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSequenceInitializationExpressionAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceInitializationExpressionAccess().getElementsSequenceElementsParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleSequenceElements		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceInitializationExpressionRule());
	        }
       		set(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SequenceElements");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSequenceInitializationExpressionAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleIndex
entryRuleIndex returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIndexRule()); }
	 iv_ruleIndex=ruleIndex 
	 { $current=$iv_ruleIndex.current; } 
	 EOF 
;

// Rule Index
ruleIndex returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='[' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=']' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2());
    }
)
;





// Entry rule entryRuleSequenceOperationOrReductionOrExpansionExpression
entryRuleSequenceOperationOrReductionOrExpansionExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule()); }
	 iv_ruleSequenceOperationOrReductionOrExpansionExpression=ruleSequenceOperationOrReductionOrExpansionExpression 
	 { $current=$iv_ruleSequenceOperationOrReductionOrExpansionExpression.current; } 
	 EOF 
;

// Rule SequenceOperationOrReductionOrExpansionExpression
ruleSequenceOperationOrReductionOrExpansionExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getExtentOrExpressionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getNamePotentiallyAmbiguousQualifiedNameParserRuleCall_1_0()); 
	    }
		lv_name_1_0=rulePotentiallyAmbiguousQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PotentiallyAmbiguousQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='->' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2());
    }
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceOperationExpressionPrimaryAction_3_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationQualifiedNameParserRuleCall_3_0_1_0()); 
	    }
		lv_operation_4_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		set(
       			$current, 
       			"operation",
        		lv_operation_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getTupleTupleParserRuleCall_3_0_2_0()); 
	    }
		lv_tuple_5_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceReductionExpressionPrimaryAction_3_1_0(),
            $current);
    }
)	otherlv_7='reduce' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getReduceKeyword_3_1_1());
    }
(
(
		lv_isOrdered_8_0=	'ordered' 
    {
        newLeafNode(lv_isOrdered_8_0, grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getIsOrderedOrderedKeyword_3_1_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		setWithLastConsumed($current, "isOrdered", true, "ordered");
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getBehaviorNameQualifiedNameParserRuleCall_3_1_3_0()); 
	    }
		lv_behaviorName_9_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		set(
       			$current, 
       			"behaviorName",
        		lv_behaviorName_9_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceExpansionExpressionPrimaryAction_3_2_0(),
            $current);
    }
)(
(
		lv_operation_11_0=RULE_ID
		{
			newLeafNode(lv_operation_11_0, grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationIDTerminalRuleCall_3_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"operation",
        		lv_operation_11_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getVariableNameParserRuleCall_3_2_2_0()); 
	    }
		lv_variable_12_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_12_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getLeftParenthesisKeyword_3_2_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getArgumentExpressionParserRuleCall_3_2_4_0()); 
	    }
		lv_argument_14_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule());
	        }
       		set(
       			$current, 
       			"argument",
        		lv_argument_14_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getRightParenthesisKeyword_3_2_5());
    }
)))
;





// Entry rule entryRulePrefixExpression
entryRulePrefixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPrefixExpressionRule()); }
	 iv_rulePrefixExpression=rulePrefixExpression 
	 { $current=$iv_rulePrefixExpression.current; } 
	 EOF 
;

// Rule PrefixExpression
rulePrefixExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPrefixExpressionAccess().getOperatorAffixOperatorParserRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleAffixOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrefixExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AffixOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPrefixExpressionAccess().getOperandLeftHandSideParserRuleCall_1_0()); 
	    }
		lv_operand_1_0=ruleLeftHandSide		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPrefixExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.LeftHandSide");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAffixOperator
entryRuleAffixOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAffixOperatorRule()); } 
	 iv_ruleAffixOperator=ruleAffixOperator 
	 { $current=$iv_ruleAffixOperator.current.getText(); }  
	 EOF 
;

// Rule AffixOperator
ruleAffixOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='++' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAffixOperatorAccess().getPlusSignPlusSignKeyword_0()); 
    }

    |
	kw='--' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAffixOperatorAccess().getHyphenMinusHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current; } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getPostfixOrCastExpressionParserRuleCall_0()); 
    }
    this_PostfixOrCastExpression_0=rulePostfixOrCastExpression
    { 
        $current = $this_PostfixOrCastExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getUnaryExpressionAccess().getNonPostfixNonCastUnaryExpressionParserRuleCall_1()); 
    }
    this_NonPostfixNonCastUnaryExpression_1=ruleNonPostfixNonCastUnaryExpression
    { 
        $current = $this_NonPostfixNonCastUnaryExpression_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePostfixOrCastExpression
entryRulePostfixOrCastExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixOrCastExpressionRule()); }
	 iv_rulePostfixOrCastExpression=rulePostfixOrCastExpression 
	 { $current=$iv_rulePostfixOrCastExpression.current; } 
	 EOF 
;

// Rule PostfixOrCastExpression
rulePostfixOrCastExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPostfixOrCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); 
    }
    this_PostfixExpression_0=rulePostfixExpression
    { 
        $current = $this_PostfixExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPostfixOrCastExpressionAccess().getCastExpressionParserRuleCall_1()); 
    }
    this_CastExpression_1=ruleCastExpression
    { 
        $current = $this_CastExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPostfixOrCastExpressionAccess().getPrimaryExpressionParserRuleCall_2()); 
    }
    this_PrimaryExpression_2=rulePrimaryExpression
    { 
        $current = $this_PrimaryExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePostfixExpression
entryRulePostfixExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPostfixExpressionRule()); }
	 iv_rulePostfixExpression=rulePostfixExpression 
	 { $current=$iv_rulePostfixExpression.current; } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOperandLeftHandSideParserRuleCall_0_0()); 
	    }
		lv_operand_0_0=ruleLeftHandSide		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.LeftHandSide");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPostfixExpressionAccess().getOperatorAffixOperatorParserRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleAffixOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPostfixExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AffixOperator");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNonPostfixNonCastUnaryExpression
entryRuleNonPostfixNonCastUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonPostfixNonCastUnaryExpressionRule()); }
	 iv_ruleNonPostfixNonCastUnaryExpression=ruleNonPostfixNonCastUnaryExpression 
	 { $current=$iv_ruleNonPostfixNonCastUnaryExpression.current; } 
	 EOF 
;

// Rule NonPostfixNonCastUnaryExpression
ruleNonPostfixNonCastUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getPrefixExpressionParserRuleCall_0()); 
    }
    this_PrefixExpression_0=rulePrefixExpression
    { 
        $current = $this_PrefixExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getNumericUnaryExpressionParserRuleCall_1()); 
    }
    this_NumericUnaryExpression_1=ruleNumericUnaryExpression
    { 
        $current = $this_NumericUnaryExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBooleanUnaryExpressionParserRuleCall_2()); 
    }
    this_BooleanUnaryExpression_2=ruleBooleanUnaryExpression
    { 
        $current = $this_BooleanUnaryExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBitStringUnaryExpressionParserRuleCall_3()); 
    }
    this_BitStringUnaryExpression_3=ruleBitStringUnaryExpression
    { 
        $current = $this_BitStringUnaryExpression_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getIsolationExpressionParserRuleCall_4()); 
    }
    this_IsolationExpression_4=ruleIsolationExpression
    { 
        $current = $this_IsolationExpression_4.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBooleanUnaryExpression
entryRuleBooleanUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBooleanUnaryExpressionRule()); }
	 iv_ruleBooleanUnaryExpression=ruleBooleanUnaryExpression 
	 { $current=$iv_ruleBooleanUnaryExpression.current; } 
	 EOF 
;

// Rule BooleanUnaryExpression
ruleBooleanUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operator_0_0=	'!' 
    {
        newLeafNode(lv_operator_0_0, grammarAccess.getBooleanUnaryExpressionAccess().getOperatorExclamationMarkKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanUnaryExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_0_0, "!");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBooleanUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); 
	    }
		lv_operand_1_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBooleanUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBitStringUnaryExpression
entryRuleBitStringUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBitStringUnaryExpressionRule()); }
	 iv_ruleBitStringUnaryExpression=ruleBitStringUnaryExpression 
	 { $current=$iv_ruleBitStringUnaryExpression.current; } 
	 EOF 
;

// Rule BitStringUnaryExpression
ruleBitStringUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operator_0_0=	'~' 
    {
        newLeafNode(lv_operator_0_0, grammarAccess.getBitStringUnaryExpressionAccess().getOperatorTildeKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBitStringUnaryExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_0_0, "~");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getBitStringUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); 
	    }
		lv_operand_1_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBitStringUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumericUnaryExpression
entryRuleNumericUnaryExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumericUnaryExpressionRule()); }
	 iv_ruleNumericUnaryExpression=ruleNumericUnaryExpression 
	 { $current=$iv_ruleNumericUnaryExpression.current; } 
	 EOF 
;

// Rule NumericUnaryExpression
ruleNumericUnaryExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumericUnaryExpressionAccess().getOperatorNumericUnaryOperatorParserRuleCall_0_0()); 
	    }
		lv_operator_0_0=ruleNumericUnaryOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NumericUnaryOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); 
	    }
		lv_operand_1_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericUnaryExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleNumericUnaryOperator
entryRuleNumericUnaryOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumericUnaryOperatorRule()); } 
	 iv_ruleNumericUnaryOperator=ruleNumericUnaryOperator 
	 { $current=$iv_ruleNumericUnaryOperator.current.getText(); }  
	 EOF 
;

// Rule NumericUnaryOperator
ruleNumericUnaryOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumericUnaryOperatorAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getNumericUnaryOperatorAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleIsolationExpression
entryRuleIsolationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIsolationExpressionRule()); }
	 iv_ruleIsolationExpression=ruleIsolationExpression 
	 { $current=$iv_ruleIsolationExpression.current; } 
	 EOF 
;

// Rule IsolationExpression
ruleIsolationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_operator_0_0=	'$' 
    {
        newLeafNode(lv_operator_0_0, grammarAccess.getIsolationExpressionAccess().getOperatorDollarSignKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIsolationExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_0_0, "\$");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getIsolationExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); 
	    }
		lv_operand_1_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIsolationExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCastExpression
entryRuleCastExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCastExpressionRule()); }
	 iv_ruleCastExpression=ruleCastExpression 
	 { $current=$iv_ruleCastExpression.current; } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_0());
    }
((
(
		lv_isAny_1_0=	'any' 
    {
        newLeafNode(lv_isAny_1_0, grammarAccess.getCastExpressionAccess().getIsAnyAnyKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCastExpressionRule());
	        }
       		setWithLastConsumed($current, "isAny", true, "any");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getCastExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_1_0()); 
	    }
		lv_typeName_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCastExpressionAccess().getOperandCastCompletionParserRuleCall_3_0()); 
	    }
		lv_operand_4_0=ruleCastCompletion		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCastExpressionRule());
	        }
       		set(
       			$current, 
       			"operand",
        		lv_operand_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.CastCompletion");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCastCompletion
entryRuleCastCompletion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCastCompletionRule()); }
	 iv_ruleCastCompletion=ruleCastCompletion 
	 { $current=$iv_ruleCastCompletion.current; } 
	 EOF 
;

// Rule CastCompletion
ruleCastCompletion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCastCompletionAccess().getPostfixOrCastExpressionParserRuleCall_0()); 
    }
    this_PostfixOrCastExpression_0=rulePostfixOrCastExpression
    { 
        $current = $this_PostfixOrCastExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCastCompletionAccess().getBooleanUnaryExpressionParserRuleCall_1()); 
    }
    this_BooleanUnaryExpression_1=ruleBooleanUnaryExpression
    { 
        $current = $this_BooleanUnaryExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCastCompletionAccess().getBitStringUnaryExpressionParserRuleCall_2()); 
    }
    this_BitStringUnaryExpression_2=ruleBitStringUnaryExpression
    { 
        $current = $this_BitStringUnaryExpression_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getCastCompletionAccess().getIsolationExpressionParserRuleCall_3()); 
    }
    this_IsolationExpression_3=ruleIsolationExpression
    { 
        $current = $this_IsolationExpression_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	 iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression 
	 { $current=$iv_ruleMultiplicativeExpression.current; } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
    }
    this_UnaryExpression_0=ruleUnaryExpression
    { 
        $current = $this_UnaryExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getMultiplicativeExpressionAccess().getArithmeticExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleMultiplicativeOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.MultiplicativeOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getOperand2UnaryExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleUnaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.UnaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMultiplicativeOperator
entryRuleMultiplicativeOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultiplicativeOperatorRule()); } 
	 iv_ruleMultiplicativeOperator=ruleMultiplicativeOperator 
	 { $current=$iv_ruleMultiplicativeOperator.current.getText(); }  
	 EOF 
;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); 
    }

    |
	kw='/' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); 
    }

    |
	kw='%' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	 iv_ruleAdditiveExpression=ruleAdditiveExpression 
	 { $current=$iv_ruleAdditiveExpression.current; } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); 
    }
    this_MultiplicativeExpression_0=ruleMultiplicativeExpression
    { 
        $current = $this_MultiplicativeExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAdditiveExpressionAccess().getArithmeticExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleAdditiveOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AdditiveOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getOperand2MultiplicativeExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleMultiplicativeExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.MultiplicativeExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAdditiveOperator
entryRuleAdditiveOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAdditiveOperatorRule()); } 
	 iv_ruleAdditiveOperator=ruleAdditiveOperator 
	 { $current=$iv_ruleAdditiveOperator.current.getText(); }  
	 EOF 
;

// Rule AdditiveOperator
ruleAdditiveOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); 
    }

    |
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleShiftExpression
entryRuleShiftExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getShiftExpressionRule()); }
	 iv_ruleShiftExpression=ruleShiftExpression 
	 { $current=$iv_ruleShiftExpression.current; } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); 
    }
    this_AdditiveExpression_0=ruleAdditiveExpression
    { 
        $current = $this_AdditiveExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getShiftExpressionAccess().getShiftExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOperatorShiftOperatorParserRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleShiftOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ShiftOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getShiftExpressionAccess().getOperand2AdditiveExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleAdditiveExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getShiftExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AdditiveExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleShiftOperator
entryRuleShiftOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getShiftOperatorRule()); } 
	 iv_ruleShiftOperator=ruleShiftOperator 
	 { $current=$iv_ruleShiftOperator.current.getText(); }  
	 EOF 
;

// Rule ShiftOperator
ruleShiftOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getLessThanSignLessThanSignKeyword_0()); 
    }

    |
	kw='>>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); 
    }

    |
	kw='>>>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getShiftOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	 iv_ruleRelationalExpression=ruleRelationalExpression 
	 { $current=$iv_ruleRelationalExpression.current; } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); 
    }
    this_ShiftExpression_0=ruleShiftExpression
    { 
        $current = $this_ShiftExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRelationalExpressionAccess().getRelationalExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleRelationalOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.RelationalOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationalExpressionAccess().getOperand2ShiftExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleShiftExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ShiftExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getRelationalOperatorRule()); } 
	 iv_ruleRelationalOperator=ruleRelationalOperator 
	 { $current=$iv_ruleRelationalOperator.current.getText(); }  
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='<' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); 
    }

    |
	kw='>' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); 
    }

    |
	kw='<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); 
    }

    |
	kw='>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassificationExpressionRule()); }
	 iv_ruleClassificationExpression=ruleClassificationExpression 
	 { $current=$iv_ruleClassificationExpression.current; } 
	 EOF 
;

// Rule ClassificationExpression
ruleClassificationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0()); 
    }
    this_RelationalExpression_0=ruleRelationalExpression
    { 
        $current = $this_RelationalExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getClassificationExpressionAccess().getClassificationExpressionOperandAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleClassificationOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassificationOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassificationExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_2_0()); 
	    }
		lv_typeName_3_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassificationExpressionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleClassificationOperator
entryRuleClassificationOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassificationOperatorRule()); } 
	 iv_ruleClassificationOperator=ruleClassificationOperator 
	 { $current=$iv_ruleClassificationOperator.current.getText(); }  
	 EOF 
;

// Rule ClassificationOperator
ruleClassificationOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='instanceof' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0()); 
    }

    |
	kw='hastype' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	 iv_ruleEqualityExpression=ruleEqualityExpression 
	 { $current=$iv_ruleEqualityExpression.current; } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0()); 
    }
    this_ClassificationExpression_0=ruleClassificationExpression
    { 
        $current = $this_ClassificationExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getEqualityExpressionAccess().getEqualityExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0()); 
	    }
		lv_operator_2_0=ruleEqualityOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.EqualityOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEqualityExpressionAccess().getOperand2ClassificationExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleClassificationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassificationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEqualityOperatorRule()); } 
	 iv_ruleEqualityOperator=ruleEqualityOperator 
	 { $current=$iv_ruleEqualityOperator.current.getText(); }  
	 EOF 
;

// Rule EqualityOperator
ruleEqualityOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='==' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); 
    }

    |
	kw='!=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	 iv_ruleAndExpression=ruleAndExpression 
	 { $current=$iv_ruleAndExpression.current; } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); 
    }
    this_EqualityExpression_0=ruleEqualityExpression
    { 
        $current = $this_EqualityExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAndExpressionAccess().getLogicalExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		lv_operator_2_0=	'&' 
    {
        newLeafNode(lv_operator_2_0, grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAndExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_0, "&");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAndExpressionAccess().getOperand2EqualityExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleEqualityExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAndExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.EqualityExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExclusiveOrExpressionRule()); }
	 iv_ruleExclusiveOrExpression=ruleExclusiveOrExpression 
	 { $current=$iv_ruleExclusiveOrExpression.current; } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); 
    }
    this_AndExpression_0=ruleAndExpression
    { 
        $current = $this_AndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExclusiveOrExpressionAccess().getLogicalExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		lv_operator_2_0=	'^' 
    {
        newLeafNode(lv_operator_2_0, grammarAccess.getExclusiveOrExpressionAccess().getOperatorCircumflexAccentKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getExclusiveOrExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_0, "^");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExclusiveOrExpressionAccess().getOperand2AndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExclusiveOrExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInclusiveOrExpressionRule()); }
	 iv_ruleInclusiveOrExpression=ruleInclusiveOrExpression 
	 { $current=$iv_ruleInclusiveOrExpression.current; } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); 
    }
    this_ExclusiveOrExpression_0=ruleExclusiveOrExpression
    { 
        $current = $this_ExclusiveOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getInclusiveOrExpressionAccess().getLogicalExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		lv_operator_2_0=	'|' 
    {
        newLeafNode(lv_operator_2_0, grammarAccess.getInclusiveOrExpressionAccess().getOperatorVerticalLineKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInclusiveOrExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_0, "|");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getInclusiveOrExpressionAccess().getOperand2ExclusiveOrExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleExclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInclusiveOrExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ExclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalAndExpressionRule()); }
	 iv_ruleConditionalAndExpression=ruleConditionalAndExpression 
	 { $current=$iv_ruleConditionalAndExpression.current; } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); 
    }
    this_InclusiveOrExpression_0=ruleInclusiveOrExpression
    { 
        $current = $this_InclusiveOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionalAndExpressionAccess().getConditionalLogicalExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		lv_operator_2_0=	'&&' 
    {
        newLeafNode(lv_operator_2_0, grammarAccess.getConditionalAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalAndExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_0, "&&");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalAndExpressionAccess().getOperand2InclusiveOrExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleInclusiveOrExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalAndExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.InclusiveOrExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalOrExpressionRule()); }
	 iv_ruleConditionalOrExpression=ruleConditionalOrExpression 
	 { $current=$iv_ruleConditionalOrExpression.current; } 
	 EOF 
;

// Rule ConditionalOrExpression
ruleConditionalOrExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); 
    }
    this_ConditionalAndExpression_0=ruleConditionalAndExpression
    { 
        $current = $this_ConditionalAndExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionalOrExpressionAccess().getConditionalLogicalExpressionOperand1Action_1_0(),
            $current);
    }
)(
(
		lv_operator_2_0=	'||' 
    {
        newLeafNode(lv_operator_2_0, grammarAccess.getConditionalOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConditionalOrExpressionRule());
	        }
       		setWithLastConsumed($current, "operator", lv_operator_2_0, "||");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalOrExpressionAccess().getOperand2ConditionalAndExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleConditionalAndExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalOrExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ConditionalAndExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConditionalExpressionRule()); }
	 iv_ruleConditionalExpression=ruleConditionalExpression 
	 { $current=$iv_ruleConditionalExpression.current; } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getConditionalOrExpressionParserRuleCall_0()); 
    }
    this_ConditionalOrExpression_0=ruleConditionalOrExpression
    { 
        $current = $this_ConditionalOrExpression_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getConditionalExpressionAccess().getConditionalTestExpressionOperand1Action_1_0(),
            $current);
    }
)	otherlv_2='?' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperand2ExpressionParserRuleCall_1_2_0()); 
	    }
		lv_operand2_3_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"operand2",
        		lv_operand2_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConditionalExpressionAccess().getOperand3ConditionalExpressionParserRuleCall_1_4_0()); 
	    }
		lv_operand3_5_0=ruleConditionalExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConditionalExpressionRule());
	        }
       		set(
       			$current, 
       			"operand3",
        		lv_operand3_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ConditionalExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentExpressionRule()); }
	 iv_ruleAssignmentExpression=ruleAssignmentExpression 
	 { $current=$iv_ruleAssignmentExpression.current; } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getLeftHandSideLeftHandSideParserRuleCall_0_0()); 
	    }
		lv_leftHandSide_0_0=ruleLeftHandSide		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"leftHandSide",
        		lv_leftHandSide_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.LeftHandSide");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignmentOperatorParserRuleCall_1_0()); 
	    }
		lv_operator_1_0=ruleAssignmentOperator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"operator",
        		lv_operator_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AssignmentOperator");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAssignmentExpressionAccess().getRightHandSideExpressionParserRuleCall_2_0()); 
	    }
		lv_rightHandSide_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAssignmentExpressionRule());
	        }
       		set(
       			$current, 
       			"rightHandSide",
        		lv_rightHandSide_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLeftHandSide
entryRuleLeftHandSide returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLeftHandSideRule()); }
	 iv_ruleLeftHandSide=ruleLeftHandSide 
	 { $current=$iv_ruleLeftHandSide.current; } 
	 EOF 
;

// Rule LeftHandSide
ruleLeftHandSide returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLeftHandSideAccess().getNameLeftHandSideParserRuleCall_0()); 
    }
    this_NameLeftHandSide_0=ruleNameLeftHandSide
    { 
        $current = $this_NameLeftHandSide_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getLeftHandSideAccess().getFeatureLeftHandSideParserRuleCall_1()); 
    }
    this_FeatureLeftHandSide_1=ruleFeatureLeftHandSide
    { 
        $current = $this_FeatureLeftHandSide_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNameLeftHandSide
entryRuleNameLeftHandSide returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNameLeftHandSideRule()); }
	 iv_ruleNameLeftHandSide=ruleNameLeftHandSide 
	 { $current=$iv_ruleNameLeftHandSide.current; } 
	 EOF 
;

// Rule NameLeftHandSide
ruleNameLeftHandSide returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNameLeftHandSideAccess().getTargetPotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_target_0_0=rulePotentiallyAmbiguousQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameLeftHandSideRule());
	        }
       		set(
       			$current, 
       			"target",
        		lv_target_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PotentiallyAmbiguousQualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getNameLeftHandSideAccess().getIndexIndexParserRuleCall_1_0()); 
	    }
		lv_index_1_0=ruleIndex		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNameLeftHandSideRule());
	        }
       		set(
       			$current, 
       			"index",
        		lv_index_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Index");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleFeatureLeftHandSide
entryRuleFeatureLeftHandSide returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFeatureLeftHandSideRule()); }
	 iv_ruleFeatureLeftHandSide=ruleFeatureLeftHandSide 
	 { $current=$iv_ruleFeatureLeftHandSide.current; } 
	 EOF 
;

// Rule FeatureLeftHandSide
ruleFeatureLeftHandSide returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getFeatureLeftHandSideAccess().getExpressionPrimaryExpressionParserRuleCall_0()); 
	    }
		lv_expression_0_0=rulePrimaryExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFeatureLeftHandSideRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.PrimaryExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAssignmentOperatorRule()); } 
	 iv_ruleAssignmentOperator=ruleAssignmentOperator 
	 { $current=$iv_ruleAssignmentOperator.current.getText(); }  
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); 
    }

    |
	kw='+=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); 
    }

    |
	kw='-=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); 
    }

    |
	kw='*=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); 
    }

    |
	kw='/=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); 
    }

    |
	kw='%=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); 
    }

    |
	kw='&=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_6()); 
    }

    |
	kw='|=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_7()); 
    }

    |
	kw='^=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_8()); 
    }

    |
	kw='<<=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_9()); 
    }

    |
	kw='>>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_10()); 
    }

    |
	kw='>>>=' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_11()); 
    }
)
    ;







// Entry rule entryRuleDocumentedStatement
entryRuleDocumentedStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentedStatementRule()); }
	 iv_ruleDocumentedStatement=ruleDocumentedStatement 
	 { $current=$iv_ruleDocumentedStatement.current; } 
	 EOF 
;

// Rule DocumentedStatement
ruleDocumentedStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getDocumentedStatementAccess().getAnnotatedStatementParserRuleCall()); 
    }
    this_AnnotatedStatement_0=ruleAnnotatedStatement
    { 
        $current = $this_AnnotatedStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	 iv_ruleStatement=ruleStatement 
	 { $current=$iv_ruleStatement.current; } 
	 EOF 
;

// Rule Statement
ruleStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getInLineStatementParserRuleCall_0()); 
    }
    this_InLineStatement_0=ruleInLineStatement
    { 
        $current = $this_InLineStatement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_1()); 
    }
    this_BlockStatement_1=ruleBlockStatement
    { 
        $current = $this_BlockStatement_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_2()); 
    }
    this_EmptyStatement_2=ruleEmptyStatement
    { 
        $current = $this_EmptyStatement_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getLocalNameDeclarationStatementParserRuleCall_3()); 
    }
    this_LocalNameDeclarationStatement_3=ruleLocalNameDeclarationStatement
    { 
        $current = $this_LocalNameDeclarationStatement_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_4()); 
    }
    this_ExpressionStatement_4=ruleExpressionStatement
    { 
        $current = $this_ExpressionStatement_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_5()); 
    }
    this_IfStatement_5=ruleIfStatement
    { 
        $current = $this_IfStatement_5.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_6()); 
    }
    this_SwitchStatement_6=ruleSwitchStatement
    { 
        $current = $this_SwitchStatement_6.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_7()); 
    }
    this_WhileStatement_7=ruleWhileStatement
    { 
        $current = $this_WhileStatement_7.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getForStatementParserRuleCall_8()); 
    }
    this_ForStatement_8=ruleForStatement
    { 
        $current = $this_ForStatement_8.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_9()); 
    }
    this_DoStatement_9=ruleDoStatement
    { 
        $current = $this_DoStatement_9.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_10()); 
    }
    this_BreakStatement_10=ruleBreakStatement
    { 
        $current = $this_BreakStatement_10.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_11()); 
    }
    this_ReturnStatement_11=ruleReturnStatement
    { 
        $current = $this_ReturnStatement_11.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getAcceptStatementParserRuleCall_12()); 
    }
    this_AcceptStatement_12=ruleAcceptStatement
    { 
        $current = $this_AcceptStatement_12.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getStatementAccess().getClassifyStatementParserRuleCall_13()); 
    }
    this_ClassifyStatement_13=ruleClassifyStatement
    { 
        $current = $this_ClassifyStatement_13.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	 iv_ruleBlock=ruleBlock 
	 { $current=$iv_ruleBlock.current; } 
	 EOF 
;

// Rule Block
ruleBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBlockAccess().getBlockAction_0(),
            $current);
    }
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockAccess().getStatementDocumentedStatementParserRuleCall_2_0()); 
	    }
		lv_statement_2_0=ruleDocumentedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockRule());
	        }
       		add(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DocumentedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleAnnotatedStatement
entryRuleAnnotatedStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotatedStatementRule()); }
	 iv_ruleAnnotatedStatement=ruleAnnotatedStatement 
	 { $current=$iv_ruleAnnotatedStatement.current; } 
	 EOF 
;

// Rule AnnotatedStatement
ruleAnnotatedStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_documentation_0_0=RULE_DOCUMENTATION_COMMENT
		{
			newLeafNode(lv_documentation_0_0, grammarAccess.getAnnotatedStatementAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotatedStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"documentation",
        		lv_documentation_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DOCUMENTATION_COMMENT");
	    }

)
)?(
(
		lv_annotation_1_0=RULE_STATEMENT_ANNOTATION
		{
			newLeafNode(lv_annotation_1_0, grammarAccess.getAnnotatedStatementAccess().getAnnotationSTATEMENT_ANNOTATIONTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotatedStatementRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"annotation",
        		lv_annotation_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.STATEMENT_ANNOTATION");
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotatedStatementAccess().getStatementStatementParserRuleCall_2_0()); 
	    }
		lv_statement_2_0=ruleStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotatedStatementRule());
	        }
       		set(
       			$current, 
       			"statement",
        		lv_statement_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Statement");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleInLineStatement
entryRuleInLineStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInLineStatementRule()); }
	 iv_ruleInLineStatement=ruleInLineStatement 
	 { $current=$iv_ruleInLineStatement.current; } 
	 EOF 
;

// Rule InLineStatement
ruleInLineStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_code_0_0=RULE_INLINE_STATEMENT
		{
			newLeafNode(lv_code_0_0, grammarAccess.getInLineStatementAccess().getCodeINLINE_STATEMENTTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInLineStatementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"code",
        		lv_code_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.INLINE_STATEMENT");
	    }

)
)
;





// Entry rule entryRuleBlockStatement
entryRuleBlockStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBlockStatementRule()); }
	 iv_ruleBlockStatement=ruleBlockStatement 
	 { $current=$iv_ruleBlockStatement.current; } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getBlockStatementAccess().getBlockBlockParserRuleCall_0()); 
	    }
		lv_block_0_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBlockStatementRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEmptyStatementRule()); }
	 iv_ruleEmptyStatement=ruleEmptyStatement 
	 { $current=$iv_ruleEmptyStatement.current; } 
	 EOF 
;

// Rule EmptyStatement
ruleEmptyStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0(),
            $current);
    }
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleLocalNameDeclarationStatement
entryRuleLocalNameDeclarationStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLocalNameDeclarationStatementRule()); }
	 iv_ruleLocalNameDeclarationStatement=ruleLocalNameDeclarationStatement 
	 { $current=$iv_ruleLocalNameDeclarationStatement.current; } 
	 EOF 
;

// Rule LocalNameDeclarationStatement
ruleLocalNameDeclarationStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((	otherlv_0='let' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLocalNameDeclarationStatementAccess().getLetKeyword_0_0_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_0_0_1_0()); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLocalNameDeclarationStatementAccess().getColonKeyword_0_0_2());
    }
((
(
		lv_isAny_3_0=	'any' 
    {
        newLeafNode(lv_isAny_3_0, grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		setWithLastConsumed($current, "isAny", true, "any");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameQualifiedNameParserRuleCall_0_0_3_1_0()); 
	    }
		lv_typeName_4_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_0_4_0()); 
	    }
		lv_hasMultiplicity_5_0=ruleMultiplicityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"hasMultiplicity",
        		true, 
        		"org.eclipse.papyrus.uml.alf.Alf.MultiplicityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(((
(
		lv_isAny_6_0=	'any' 
    {
        newLeafNode(lv_isAny_6_0, grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		setWithLastConsumed($current, "isAny", true, "any");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameQualifiedNameParserRuleCall_0_1_0_1_0()); 
	    }
		lv_typeName_7_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_7_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_1_1_0()); 
	    }
		lv_hasMultiplicity_8_0=ruleMultiplicityIndicator		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"hasMultiplicity",
        		true, 
        		"org.eclipse.papyrus.uml.alf.Alf.MultiplicityIndicator");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_0_1_2_0()); 
	    }
		lv_name_9_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_9_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_10='=' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getLocalNameDeclarationStatementAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLocalNameDeclarationStatementAccess().getExpressionInitializationExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_11_0=ruleInitializationExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLocalNameDeclarationStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_11_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.InitializationExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_12=';' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLocalNameDeclarationStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleInitializationExpression
entryRuleInitializationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInitializationExpressionRule()); }
	 iv_ruleInitializationExpression=ruleInitializationExpression 
	 { $current=$iv_ruleInitializationExpression.current; } 
	 EOF 
;

// Rule InitializationExpression
ruleInitializationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInitializationExpressionAccess().getExpressionParserRuleCall_0()); 
    }
    this_Expression_0=ruleExpression
    { 
        $current = $this_Expression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInitializationExpressionAccess().getSequenceInitializationExpressionParserRuleCall_1()); 
    }
    this_SequenceInitializationExpression_1=ruleSequenceInitializationExpression
    { 
        $current = $this_SequenceInitializationExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getInitializationExpressionAccess().getInstanceInitializationExpressionParserRuleCall_2()); 
    }
    this_InstanceInitializationExpression_2=ruleInstanceInitializationExpression
    { 
        $current = $this_InstanceInitializationExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleInstanceInitializationExpression
entryRuleInstanceInitializationExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstanceInitializationExpressionRule()); }
	 iv_ruleInstanceInitializationExpression=ruleInstanceInitializationExpression 
	 { $current=$iv_ruleInstanceInitializationExpression.current; } 
	 EOF 
;

// Rule InstanceInitializationExpression
ruleInstanceInitializationExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='new' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstanceInitializationExpressionAccess().getNewKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstanceInitializationExpressionAccess().getTupleTupleParserRuleCall_1_0()); 
	    }
		lv_tuple_1_0=ruleTuple		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstanceInitializationExpressionRule());
	        }
       		set(
       			$current, 
       			"tuple",
        		lv_tuple_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Tuple");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionStatementRule()); }
	 iv_ruleExpressionStatement=ruleExpressionStatement 
	 { $current=$iv_ruleExpressionStatement.current; } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); 
	    }
		lv_expression_0_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1());
    }
)
;





// Entry rule entryRuleIfStatement
entryRuleIfStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIfStatementRule()); }
	 iv_ruleIfStatement=ruleIfStatement 
	 { $current=$iv_ruleIfStatement.current; } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='if' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getIfStatementAccess().getIfKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getNonFinalClausesConcurrentClausesParserRuleCall_1_0()); 
	    }
		lv_nonFinalClauses_1_0=ruleConcurrentClauses		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		add(
       			$current, 
       			"nonFinalClauses",
        		lv_nonFinalClauses_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ConcurrentClauses");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_2='else' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getIfStatementAccess().getElseKeyword_2_0());
    }
	otherlv_3='if' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getIfStatementAccess().getIfKeyword_2_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getNonFinalClausesConcurrentClausesParserRuleCall_2_2_0()); 
	    }
		lv_nonFinalClauses_4_0=ruleConcurrentClauses		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		add(
       			$current, 
       			"nonFinalClauses",
        		lv_nonFinalClauses_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ConcurrentClauses");
	        afterParserOrEnumRuleCall();
	    }

)
))*(	otherlv_5='else' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getIfStatementAccess().getElseKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIfStatementAccess().getFinalClauseBlockParserRuleCall_3_1_0()); 
	    }
		lv_finalClause_6_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIfStatementRule());
	        }
       		set(
       			$current, 
       			"finalClause",
        		lv_finalClause_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleConcurrentClauses
entryRuleConcurrentClauses returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConcurrentClausesRule()); }
	 iv_ruleConcurrentClauses=ruleConcurrentClauses 
	 { $current=$iv_ruleConcurrentClauses.current; } 
	 EOF 
;

// Rule ConcurrentClauses
ruleConcurrentClauses returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getConcurrentClausesAccess().getClauseNonFinalClauseParserRuleCall_0_0()); 
	    }
		lv_clause_0_0=ruleNonFinalClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcurrentClausesRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NonFinalClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='or' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getConcurrentClausesAccess().getOrKeyword_1_0());
    }
	otherlv_2='if' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConcurrentClausesAccess().getIfKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConcurrentClausesAccess().getClauseNonFinalClauseParserRuleCall_1_2_0()); 
	    }
		lv_clause_3_0=ruleNonFinalClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConcurrentClausesRule());
	        }
       		add(
       			$current, 
       			"clause",
        		lv_clause_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NonFinalClause");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleNonFinalClause
entryRuleNonFinalClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonFinalClauseRule()); }
	 iv_ruleNonFinalClause=ruleNonFinalClause 
	 { $current=$iv_ruleNonFinalClause.current; } 
	 EOF 
;

// Rule NonFinalClause
ruleNonFinalClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='(' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNonFinalClauseAccess().getLeftParenthesisKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonFinalClauseAccess().getConditionExpressionParserRuleCall_1_0()); 
	    }
		lv_condition_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonFinalClauseRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNonFinalClauseAccess().getRightParenthesisKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonFinalClauseAccess().getBodyBlockParserRuleCall_3_0()); 
	    }
		lv_body_3_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonFinalClauseRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchStatementRule()); }
	 iv_ruleSwitchStatement=ruleSwitchStatement 
	 { $current=$iv_ruleSwitchStatement.current; } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='switch' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getNonDefaultClauseSwitchClauseParserRuleCall_5_0()); 
	    }
		lv_nonDefaultClause_5_0=ruleSwitchClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
	        }
       		add(
       			$current, 
       			"nonDefaultClause",
        		lv_nonDefaultClause_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SwitchClause");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchStatementAccess().getDefaultClauseSwitchDefaultClauseParserRuleCall_6_0()); 
	    }
		lv_defaultClause_6_0=ruleSwitchDefaultClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchStatementRule());
	        }
       		set(
       			$current, 
       			"defaultClause",
        		lv_defaultClause_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SwitchDefaultClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleSwitchClause
entryRuleSwitchClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchClauseRule()); }
	 iv_ruleSwitchClause=ruleSwitchClause 
	 { $current=$iv_ruleSwitchClause.current; } 
	 EOF 
;

// Rule SwitchClause
ruleSwitchClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchClauseAccess().getCaseSwitchCaseParserRuleCall_0_0()); 
	    }
		lv_case_0_0=ruleSwitchCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchClauseRule());
	        }
       		add(
       			$current, 
       			"case",
        		lv_case_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SwitchCase");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchClauseAccess().getCaseSwitchCaseParserRuleCall_1_0()); 
	    }
		lv_case_1_0=ruleSwitchCase		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchClauseRule());
	        }
       		add(
       			$current, 
       			"case",
        		lv_case_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.SwitchCase");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getSwitchClauseAccess().getBlockNonEmptyStatementSequenceParserRuleCall_2_0()); 
	    }
		lv_block_2_0=ruleNonEmptyStatementSequence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSwitchClauseRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.NonEmptyStatementSequence");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleSwitchCase
entryRuleSwitchCase returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchCaseRule()); }
	 iv_ruleSwitchCase=ruleSwitchCase 
	 { $current=$iv_ruleSwitchCase.current; } 
	 EOF 
;

// Rule SwitchCase
ruleSwitchCase returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='case' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitchCaseAccess().getCaseKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSwitchCaseAccess().getExpressionParserRuleCall_1()); 
    }
    this_Expression_1=ruleExpression
    { 
        $current = $this_Expression_1.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSwitchCaseAccess().getColonKeyword_2());
    }
)
;





// Entry rule entryRuleSwitchDefaultClause
entryRuleSwitchDefaultClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSwitchDefaultClauseRule()); }
	 iv_ruleSwitchDefaultClause=ruleSwitchDefaultClause 
	 { $current=$iv_ruleSwitchDefaultClause.current; } 
	 EOF 
;

// Rule SwitchDefaultClause
ruleSwitchDefaultClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='default' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getSwitchDefaultClauseAccess().getDefaultKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSwitchDefaultClauseAccess().getColonKeyword_1());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSwitchDefaultClauseAccess().getNonEmptyStatementSequenceParserRuleCall_2()); 
    }
    this_NonEmptyStatementSequence_2=ruleNonEmptyStatementSequence
    { 
        $current = $this_NonEmptyStatementSequence_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNonEmptyStatementSequence
entryRuleNonEmptyStatementSequence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNonEmptyStatementSequenceRule()); }
	 iv_ruleNonEmptyStatementSequence=ruleNonEmptyStatementSequence 
	 { $current=$iv_ruleNonEmptyStatementSequence.current; } 
	 EOF 
;

// Rule NonEmptyStatementSequence
ruleNonEmptyStatementSequence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementDocumentedStatementParserRuleCall_0()); 
	    }
		lv_statement_0_0=ruleDocumentedStatement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNonEmptyStatementSequenceRule());
	        }
       		add(
       			$current, 
       			"statement",
        		lv_statement_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.DocumentedStatement");
	        afterParserOrEnumRuleCall();
	    }

)
)+
;





// Entry rule entryRuleWhileStatement
entryRuleWhileStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWhileStatementRule()); }
	 iv_ruleWhileStatement=ruleWhileStatement 
	 { $current=$iv_ruleWhileStatement.current; } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='while' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getWhileStatementAccess().getWhileKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); 
	    }
		lv_condition_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getWhileStatementAccess().getBodyBlockParserRuleCall_4_0()); 
	    }
		lv_body_4_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWhileStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleDoStatement
entryRuleDoStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoStatementRule()); }
	 iv_ruleDoStatement=ruleDoStatement 
	 { $current=$iv_ruleDoStatement.current; } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='do' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDoStatementAccess().getDoKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoStatementAccess().getBodyBlockParserRuleCall_1_0()); 
	    }
		lv_body_1_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='while' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDoStatementAccess().getWhileKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoStatementAccess().getConditionExpressionParserRuleCall_4_0()); 
	    }
		lv_condition_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoStatementRule());
	        }
       		set(
       			$current, 
       			"condition",
        		lv_condition_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5());
    }
	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDoStatementAccess().getSemicolonKeyword_6());
    }
)
;





// Entry rule entryRuleForStatement
entryRuleForStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getForStatementRule()); }
	 iv_ruleForStatement=ruleForStatement 
	 { $current=$iv_ruleForStatement.current; } 
	 EOF 
;

// Rule ForStatement
ruleForStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='for' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getForStatementAccess().getForKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getVariableDefinitionLoopVariableDefinitionParserRuleCall_2_0()); 
	    }
		lv_variableDefinition_2_0=ruleLoopVariableDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		add(
       			$current, 
       			"variableDefinition",
        		lv_variableDefinition_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.LoopVariableDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getForStatementAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getVariableDefinitionLoopVariableDefinitionParserRuleCall_3_1_0()); 
	    }
		lv_variableDefinition_4_0=ruleLoopVariableDefinition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		add(
       			$current, 
       			"variableDefinition",
        		lv_variableDefinition_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.LoopVariableDefinition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getForStatementAccess().getRightParenthesisKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getForStatementAccess().getBodyBlockParserRuleCall_5_0()); 
	    }
		lv_body_6_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForStatementRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleLoopVariableDefinition
entryRuleLoopVariableDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLoopVariableDefinitionRule()); }
	 iv_ruleLoopVariableDefinition=ruleLoopVariableDefinition 
	 { $current=$iv_ruleLoopVariableDefinition.current; } 
	 EOF 
;

// Rule LoopVariableDefinition
ruleLoopVariableDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getLoopVariableDefinitionAccess().getVariableNameParserRuleCall_0_0_0()); 
	    }
		lv_variable_0_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		lv_typeIsInferred_1_0=	'in' 
    {
        newLeafNode(lv_typeIsInferred_1_0, grammarAccess.getLoopVariableDefinitionAccess().getTypeIsInferredInKeyword_0_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		setWithLastConsumed($current, "typeIsInferred", true, "in");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_0_2_0()); 
	    }
		lv_expression1_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"expression1",
        		lv_expression1_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='..' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLoopVariableDefinitionAccess().getFullStopFullStopKeyword_0_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLoopVariableDefinitionAccess().getExpression2ExpressionParserRuleCall_0_3_1_0()); 
	    }
		lv_expression2_4_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"expression2",
        		lv_expression2_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(((
(
		lv_isAny_5_0=	'any' 
    {
        newLeafNode(lv_isAny_5_0, grammarAccess.getLoopVariableDefinitionAccess().getIsAnyAnyKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		setWithLastConsumed($current, "isAny", true, "any");
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_1_0()); 
	    }
		lv_typeName_6_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"typeName",
        		lv_typeName_6_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))(
(
		{ 
	        newCompositeNode(grammarAccess.getLoopVariableDefinitionAccess().getVariableNameParserRuleCall_1_1_0()); 
	    }
		lv_variable_7_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"variable",
        		lv_variable_7_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_8=':' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLoopVariableDefinitionAccess().getColonKeyword_1_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_1_3_0()); 
	    }
		lv_expression1_9_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLoopVariableDefinitionRule());
	        }
       		set(
       			$current, 
       			"expression1",
        		lv_expression1_9_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleBreakStatement
entryRuleBreakStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBreakStatementRule()); }
	 iv_ruleBreakStatement=ruleBreakStatement 
	 { $current=$iv_ruleBreakStatement.current; } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBreakStatementAccess().getBreakStatementAction_0(),
            $current);
    }
)	otherlv_1='break' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBreakStatementAccess().getBreakKeyword_1());
    }
	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2());
    }
)
;





// Entry rule entryRuleReturnStatement
entryRuleReturnStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReturnStatementRule()); }
	 iv_ruleReturnStatement=ruleReturnStatement 
	 { $current=$iv_ruleReturnStatement.current; } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getReturnStatementAccess().getReturnStatementAction_0(),
            $current);
    }
)	otherlv_1='return' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getReturnStatementAccess().getReturnKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReturnStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleAcceptStatement
entryRuleAcceptStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAcceptStatementRule()); }
	 iv_ruleAcceptStatement=ruleAcceptStatement 
	 { $current=$iv_ruleAcceptStatement.current; } 
	 EOF 
;

// Rule AcceptStatement
ruleAcceptStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
	        newCompositeNode(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptClauseParserRuleCall_0_0_0()); 
	    }
		lv_acceptBlock_0_0=ruleAcceptClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAcceptStatementRule());
	        }
       		add(
       			$current, 
       			"acceptBlock",
        		lv_acceptBlock_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AcceptClause");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=';' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAcceptStatementAccess().getSemicolonKeyword_0_1());
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptBlockParserRuleCall_1_0_0()); 
	    }
		lv_acceptBlock_2_0=ruleAcceptBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAcceptStatementRule());
	        }
       		add(
       			$current, 
       			"acceptBlock",
        		lv_acceptBlock_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AcceptBlock");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3='or' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAcceptStatementAccess().getOrKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptBlockParserRuleCall_1_1_1_0()); 
	    }
		lv_acceptBlock_4_0=ruleAcceptBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAcceptStatementRule());
	        }
       		add(
       			$current, 
       			"acceptBlock",
        		lv_acceptBlock_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.AcceptBlock");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleAcceptBlock
entryRuleAcceptBlock returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAcceptBlockRule()); }
	 iv_ruleAcceptBlock=ruleAcceptBlock 
	 { $current=$iv_ruleAcceptBlock.current; } 
	 EOF 
;

// Rule AcceptBlock
ruleAcceptBlock returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getAcceptBlockAccess().getAcceptClauseParserRuleCall_0()); 
    }
    this_AcceptClause_0=ruleAcceptClause
    { 
        $current = $this_AcceptClause_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAcceptBlockAccess().getBlockBlockParserRuleCall_1_0()); 
	    }
		lv_block_1_0=ruleBlock		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAcceptBlockRule());
	        }
       		set(
       			$current, 
       			"block",
        		lv_block_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Block");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleAcceptClause
entryRuleAcceptClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAcceptClauseRule()); }
	 iv_ruleAcceptClause=ruleAcceptClause 
	 { $current=$iv_ruleAcceptClause.current; } 
	 EOF 
;

// Rule AcceptClause
ruleAcceptClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='accept' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAcceptClauseAccess().getAcceptKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAcceptClauseAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAcceptClauseAccess().getNameNameParserRuleCall_2_0_0()); 
	    }
		lv_name_2_0=ruleName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAcceptClauseRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Name");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAcceptClauseAccess().getColonKeyword_2_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getAcceptClauseAccess().getSignalNamesQualifiedNameListParserRuleCall_3_0()); 
	    }
		lv_signalNames_4_0=ruleQualifiedNameList		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAcceptClauseRule());
	        }
       		set(
       			$current, 
       			"signalNames",
        		lv_signalNames_4_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedNameList");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAcceptClauseAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleClassifyStatement
entryRuleClassifyStatement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassifyStatementRule()); }
	 iv_ruleClassifyStatement=ruleClassifyStatement 
	 { $current=$iv_ruleClassifyStatement.current; } 
	 EOF 
;

// Rule ClassifyStatement
ruleClassifyStatement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='classify' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassifyStatementAccess().getClassifyKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getClassifyStatementAccess().getExpressionExpressionParserRuleCall_1_0()); 
	    }
		lv_expression_1_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifyStatementRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_1_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getClassifyStatementAccess().getFromListClassificationFromClauseParserRuleCall_2_0_0_0()); 
	    }
		lv_fromList_2_0=ruleClassificationFromClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifyStatementRule());
	        }
       		set(
       			$current, 
       			"fromList",
        		lv_fromList_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassificationFromClause");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getClassifyStatementAccess().getToListClassificationToClauseParserRuleCall_2_0_1_0()); 
	    }
		lv_toList_3_0=ruleClassificationToClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifyStatementRule());
	        }
       		set(
       			$current, 
       			"toList",
        		lv_toList_3_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassificationToClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClassifyStatementAccess().getIsReclassifyAllReclassifyAllClauseParserRuleCall_2_1_0_0()); 
	    }
		lv_isReclassifyAll_4_0=ruleReclassifyAllClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifyStatementRule());
	        }
       		set(
       			$current, 
       			"isReclassifyAll",
        		true, 
        		"org.eclipse.papyrus.uml.alf.Alf.ReclassifyAllClause");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClassifyStatementAccess().getToListClassificationToClauseParserRuleCall_2_1_1_0()); 
	    }
		lv_toList_5_0=ruleClassificationToClause		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClassifyStatementRule());
	        }
       		set(
       			$current, 
       			"toList",
        		lv_toList_5_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.ClassificationToClause");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClassifyStatementAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleClassificationFromClause
entryRuleClassificationFromClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassificationFromClauseRule()); }
	 iv_ruleClassificationFromClause=ruleClassificationFromClause 
	 { $current=$iv_ruleClassificationFromClause.current; } 
	 EOF 
;

// Rule ClassificationFromClause
ruleClassificationFromClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='from' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassificationFromClauseAccess().getFromKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassificationFromClauseAccess().getQualifiedNameListParserRuleCall_1()); 
    }
    this_QualifiedNameList_1=ruleQualifiedNameList
    { 
        $current = $this_QualifiedNameList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleClassificationToClause
entryRuleClassificationToClause returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getClassificationToClauseRule()); }
	 iv_ruleClassificationToClause=ruleClassificationToClause 
	 { $current=$iv_ruleClassificationToClause.current; } 
	 EOF 
;

// Rule ClassificationToClause
ruleClassificationToClause returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='to' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getClassificationToClauseAccess().getToKeyword_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getClassificationToClauseAccess().getQualifiedNameListParserRuleCall_1()); 
    }
    this_QualifiedNameList_1=ruleQualifiedNameList
    { 
        $current = $this_QualifiedNameList_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleReclassifyAllClause
entryRuleReclassifyAllClause returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getReclassifyAllClauseRule()); } 
	 iv_ruleReclassifyAllClause=ruleReclassifyAllClause 
	 { $current=$iv_ruleReclassifyAllClause.current.getText(); }  
	 EOF 
;

// Rule ReclassifyAllClause
ruleReclassifyAllClause returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='from' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReclassifyAllClauseAccess().getFromKeyword_0()); 
    }

	kw='*' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReclassifyAllClauseAccess().getAsteriskKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleQualifiedNameList
entryRuleQualifiedNameList returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getQualifiedNameListRule()); }
	 iv_ruleQualifiedNameList=ruleQualifiedNameList 
	 { $current=$iv_ruleQualifiedNameList.current; } 
	 EOF 
;

// Rule QualifiedNameList
ruleQualifiedNameList returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getQualifiedNameListAccess().getNameQualifiedNameParserRuleCall_0_0()); 
	    }
		lv_name_0_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualifiedNameListRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1=',' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getQualifiedNameListAccess().getCommaKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getQualifiedNameListAccess().getNameQualifiedNameParserRuleCall_1_1_0()); 
	    }
		lv_name_2_0=ruleQualifiedName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getQualifiedNameListRule());
	        }
       		add(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.eclipse.papyrus.uml.alf.Alf.QualifiedName");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





RULE_BOOLEAN_VALUE : ('true'|'false');

RULE_NATURAL_VALUE : (('0'|'1'..'9' ('_'? '0'..'9')*)|('0b'|'0B') '0'..'1' ('_'? '0'..'1')*|('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F') ('_'? ('0'..'9'|'a'..'f'|'A'..'F'))*|'0' '_'? '0'..'7' ('_'? '0'..'7')*);

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_UNRESTRICTED_NAME : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_DOCUMENTATION_COMMENT : '/**' ( options {greedy=false;} : . )*'*/';

RULE_STATEMENT_ANNOTATION : '//@' ( options {greedy=false;} : . )*'\n';

RULE_INLINE_STATEMENT : '/*@inline(' (RULE_ID|RULE_UNRESTRICTED_NAME) ')' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~(('*'|'@')) ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' (~(('@'|'\n'|'\r')) ~(('\n'|'\r'))*)? ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


