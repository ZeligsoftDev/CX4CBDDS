/*
 * generated by Xtext
 */
grammar InternalAppliedStereotypeProperty;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.papyrus.uml.textedit.stereotypeproperty.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.papyrus.uml.textedit.stereotypeproperty.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.papyrus.uml.textedit.stereotypeproperty.xtext.services.AppliedStereotypePropertyGrammarAccess;

}

@parser::members {
 
 	private AppliedStereotypePropertyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AppliedStereotypePropertyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleAppliedStereotypePropertyRule
entryRuleAppliedStereotypePropertyRule 
:
{ before(grammarAccess.getAppliedStereotypePropertyRuleRule()); }
	 ruleAppliedStereotypePropertyRule
{ after(grammarAccess.getAppliedStereotypePropertyRuleRule()); } 
	 EOF 
;

// Rule AppliedStereotypePropertyRule
ruleAppliedStereotypePropertyRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAppliedStereotypePropertyRuleAccess().getValueAssignment()); }
(rule__AppliedStereotypePropertyRule__ValueAssignment)
{ after(grammarAccess.getAppliedStereotypePropertyRuleAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionValueRule
entryRuleExpressionValueRule 
:
{ before(grammarAccess.getExpressionValueRuleRule()); }
	 ruleExpressionValueRule
{ after(grammarAccess.getExpressionValueRuleRule()); } 
	 EOF 
;

// Rule ExpressionValueRule
ruleExpressionValueRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionValueRuleAccess().getGroup()); }
(rule__ExpressionValueRule__Group__0)
{ after(grammarAccess.getExpressionValueRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleStereotypeAnnotation
entryRuleStereotypeAnnotation 
:
{ before(grammarAccess.getStereotypeAnnotationRule()); }
	 ruleStereotypeAnnotation
{ after(grammarAccess.getStereotypeAnnotationRule()); } 
	 EOF 
;

// Rule StereotypeAnnotation
ruleStereotypeAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getGroup()); }
(rule__StereotypeAnnotation__Group__0)
{ after(grammarAccess.getStereotypeAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaggedValueList
entryRuleTaggedValueList 
:
{ before(grammarAccess.getTaggedValueListRule()); }
	 ruleTaggedValueList
{ after(grammarAccess.getTaggedValueListRule()); } 
	 EOF 
;

// Rule TaggedValueList
ruleTaggedValueList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaggedValueListAccess().getGroup()); }
(rule__TaggedValueList__Group__0)
{ after(grammarAccess.getTaggedValueListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaggedValue
entryRuleTaggedValue 
:
{ before(grammarAccess.getTaggedValueRule()); }
	 ruleTaggedValue
{ after(grammarAccess.getTaggedValueRule()); } 
	 EOF 
;

// Rule TaggedValue
ruleTaggedValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaggedValueAccess().getGroup()); }
(rule__TaggedValue__Group__0)
{ after(grammarAccess.getTaggedValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDeclaration
entryRuleNamespaceDeclaration 
:
{ before(grammarAccess.getNamespaceDeclarationRule()); }
	 ruleNamespaceDeclaration
{ after(grammarAccess.getNamespaceDeclarationRule()); } 
	 EOF 
;

// Rule NamespaceDeclaration
ruleNamespaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
(rule__NamespaceDeclaration__Group__0)
{ after(grammarAccess.getNamespaceDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportDeclaration
entryRuleImportDeclaration 
:
{ before(grammarAccess.getImportDeclarationRule()); }
	 ruleImportDeclaration
{ after(grammarAccess.getImportDeclarationRule()); } 
	 EOF 
;

// Rule ImportDeclaration
ruleImportDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportDeclarationAccess().getGroup()); }
(rule__ImportDeclaration__Group__0)
{ after(grammarAccess.getImportDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementImportReference
entryRuleElementImportReference 
:
{ before(grammarAccess.getElementImportReferenceRule()); }
	 ruleElementImportReference
{ after(grammarAccess.getElementImportReferenceRule()); } 
	 EOF 
;

// Rule ElementImportReference
ruleElementImportReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementImportReferenceAccess().getGroup()); }
(rule__ElementImportReference__Group__0)
{ after(grammarAccess.getElementImportReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageImportReference
entryRulePackageImportReference 
:
{ before(grammarAccess.getPackageImportReferenceRule()); }
	 rulePackageImportReference
{ after(grammarAccess.getPackageImportReferenceRule()); } 
	 EOF 
;

// Rule PackageImportReference
rulePackageImportReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageImportReferenceAccess().getGroup()); }
(rule__PackageImportReference__Group__0)
{ after(grammarAccess.getPackageImportReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageImportQualifiedName
entryRulePackageImportQualifiedName 
:
{ before(grammarAccess.getPackageImportQualifiedNameRule()); }
	 rulePackageImportQualifiedName
{ after(grammarAccess.getPackageImportQualifiedNameRule()); } 
	 EOF 
;

// Rule PackageImportQualifiedName
rulePackageImportQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getGroup()); }
(rule__PackageImportQualifiedName__Group__0)
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportVisibilityIndicator
entryRuleImportVisibilityIndicator 
:
{ before(grammarAccess.getImportVisibilityIndicatorRule()); }
	 ruleImportVisibilityIndicator
{ after(grammarAccess.getImportVisibilityIndicatorRule()); } 
	 EOF 
;

// Rule ImportVisibilityIndicator
ruleImportVisibilityIndicator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportVisibilityIndicatorAccess().getAlternatives()); }
(rule__ImportVisibilityIndicator__Alternatives)
{ after(grammarAccess.getImportVisibilityIndicatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamespaceDefinition
entryRuleNamespaceDefinition 
:
{ before(grammarAccess.getNamespaceDefinitionRule()); }
	 ruleNamespaceDefinition
{ after(grammarAccess.getNamespaceDefinitionRule()); } 
	 EOF 
;

// Rule NamespaceDefinition
ruleNamespaceDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getAlternatives()); }
(rule__NamespaceDefinition__Alternatives)
{ after(grammarAccess.getNamespaceDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibilityIndicator
entryRuleVisibilityIndicator 
:
{ before(grammarAccess.getVisibilityIndicatorRule()); }
	 ruleVisibilityIndicator
{ after(grammarAccess.getVisibilityIndicatorRule()); } 
	 EOF 
;

// Rule VisibilityIndicator
ruleVisibilityIndicator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
(rule__VisibilityIndicator__Alternatives)
{ after(grammarAccess.getVisibilityIndicatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDefinition
entryRulePackageDefinition 
:
{ before(grammarAccess.getPackageDefinitionRule()); }
	 rulePackageDefinition
{ after(grammarAccess.getPackageDefinitionRule()); } 
	 EOF 
;

// Rule PackageDefinition
rulePackageDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefinitionAccess().getGroup()); }
(rule__PackageDefinition__Group__0)
{ after(grammarAccess.getPackageDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDefinitionOrStub
entryRulePackageDefinitionOrStub 
:
{ before(grammarAccess.getPackageDefinitionOrStubRule()); }
	 rulePackageDefinitionOrStub
{ after(grammarAccess.getPackageDefinitionOrStubRule()); } 
	 EOF 
;

// Rule PackageDefinitionOrStub
rulePackageDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getGroup()); }
(rule__PackageDefinitionOrStub__Group__0)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackagedElement
entryRulePackagedElement 
:
{ before(grammarAccess.getPackagedElementRule()); }
	 rulePackagedElement
{ after(grammarAccess.getPackagedElementRule()); } 
	 EOF 
;

// Rule PackagedElement
rulePackagedElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackagedElementAccess().getGroup()); }
(rule__PackagedElement__Group__0)
{ after(grammarAccess.getPackagedElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackagedElementDefinition
entryRulePackagedElementDefinition 
:
{ before(grammarAccess.getPackagedElementDefinitionRule()); }
	 rulePackagedElementDefinition
{ after(grammarAccess.getPackagedElementDefinitionRule()); } 
	 EOF 
;

// Rule PackagedElementDefinition
rulePackagedElementDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackagedElementDefinitionAccess().getAlternatives()); }
(rule__PackagedElementDefinition__Alternatives)
{ after(grammarAccess.getPackagedElementDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierDefinition
entryRuleClassifierDefinition 
:
{ before(grammarAccess.getClassifierDefinitionRule()); }
	 ruleClassifierDefinition
{ after(grammarAccess.getClassifierDefinitionRule()); } 
	 EOF 
;

// Rule ClassifierDefinition
ruleClassifierDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierDefinitionAccess().getAlternatives()); }
(rule__ClassifierDefinition__Alternatives)
{ after(grammarAccess.getClassifierDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierDefinitionOrStub
entryRuleClassifierDefinitionOrStub 
:
{ before(grammarAccess.getClassifierDefinitionOrStubRule()); }
	 ruleClassifierDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ClassifierDefinitionOrStub
ruleClassifierDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getAlternatives()); }
(rule__ClassifierDefinitionOrStub__Alternatives)
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleClassifierTemplateParameter
entryRuleClassifierTemplateParameter 
:
{ before(grammarAccess.getClassifierTemplateParameterRule()); }
	 ruleClassifierTemplateParameter
{ after(grammarAccess.getClassifierTemplateParameterRule()); } 
	 EOF 
;

// Rule ClassifierTemplateParameter
ruleClassifierTemplateParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getGroup()); }
(rule__ClassifierTemplateParameter__Group__0)
{ after(grammarAccess.getClassifierTemplateParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierTemplateParameterDefinition
entryRuleClassifierTemplateParameterDefinition 
:
{ before(grammarAccess.getClassifierTemplateParameterDefinitionRule()); }
	 ruleClassifierTemplateParameterDefinition
{ after(grammarAccess.getClassifierTemplateParameterDefinitionRule()); } 
	 EOF 
;

// Rule ClassifierTemplateParameterDefinition
ruleClassifierTemplateParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getGroup()); }
(rule__ClassifierTemplateParameterDefinition__Group__0)
{ after(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateParameterConstraint
entryRuleTemplateParameterConstraint 
:
{ before(grammarAccess.getTemplateParameterConstraintRule()); }
	 ruleTemplateParameterConstraint
{ after(grammarAccess.getTemplateParameterConstraintRule()); } 
	 EOF 
;

// Rule TemplateParameterConstraint
ruleTemplateParameterConstraint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateParameterConstraintAccess().getNameAssignment()); }
(rule__TemplateParameterConstraint__NameAssignment)
{ after(grammarAccess.getTemplateParameterConstraintAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSpecializationClause
entryRuleSpecializationClause 
:
{ before(grammarAccess.getSpecializationClauseRule()); }
	 ruleSpecializationClause
{ after(grammarAccess.getSpecializationClauseRule()); } 
	 EOF 
;

// Rule SpecializationClause
ruleSpecializationClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSpecializationClauseAccess().getGroup()); }
(rule__SpecializationClause__Group__0)
{ after(grammarAccess.getSpecializationClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDeclaration
entryRuleClassDeclaration 
:
{ before(grammarAccess.getClassDeclarationRule()); }
	 ruleClassDeclaration
{ after(grammarAccess.getClassDeclarationRule()); } 
	 EOF 
;

// Rule ClassDeclaration
ruleClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup()); }
(rule__ClassDeclaration__Group__0)
{ after(grammarAccess.getClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDefinition
entryRuleClassDefinition 
:
{ before(grammarAccess.getClassDefinitionRule()); }
	 ruleClassDefinition
{ after(grammarAccess.getClassDefinitionRule()); } 
	 EOF 
;

// Rule ClassDefinition
ruleClassDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDefinitionAccess().getGroup()); }
(rule__ClassDefinition__Group__0)
{ after(grammarAccess.getClassDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassDefinitionOrStub
entryRuleClassDefinitionOrStub 
:
{ before(grammarAccess.getClassDefinitionOrStubRule()); }
	 ruleClassDefinitionOrStub
{ after(grammarAccess.getClassDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ClassDefinitionOrStub
ruleClassDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getGroup()); }
(rule__ClassDefinitionOrStub__Group__0)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassMember
entryRuleClassMember 
:
{ before(grammarAccess.getClassMemberRule()); }
	 ruleClassMember
{ after(grammarAccess.getClassMemberRule()); } 
	 EOF 
;

// Rule ClassMember
ruleClassMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMemberAccess().getGroup()); }
(rule__ClassMember__Group__0)
{ after(grammarAccess.getClassMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassMemberDefinition
entryRuleClassMemberDefinition 
:
{ before(grammarAccess.getClassMemberDefinitionRule()); }
	 ruleClassMemberDefinition
{ after(grammarAccess.getClassMemberDefinitionRule()); } 
	 EOF 
;

// Rule ClassMemberDefinition
ruleClassMemberDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassMemberDefinitionAccess().getAlternatives()); }
(rule__ClassMemberDefinition__Alternatives)
{ after(grammarAccess.getClassMemberDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassDeclaration
entryRuleActiveClassDeclaration 
:
{ before(grammarAccess.getActiveClassDeclarationRule()); }
	 ruleActiveClassDeclaration
{ after(grammarAccess.getActiveClassDeclarationRule()); } 
	 EOF 
;

// Rule ActiveClassDeclaration
ruleActiveClassDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getGroup()); }
(rule__ActiveClassDeclaration__Group__0)
{ after(grammarAccess.getActiveClassDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassDefinition
entryRuleActiveClassDefinition 
:
{ before(grammarAccess.getActiveClassDefinitionRule()); }
	 ruleActiveClassDefinition
{ after(grammarAccess.getActiveClassDefinitionRule()); } 
	 EOF 
;

// Rule ActiveClassDefinition
ruleActiveClassDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getGroup()); }
(rule__ActiveClassDefinition__Group__0)
{ after(grammarAccess.getActiveClassDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassDefinitionOrStub
entryRuleActiveClassDefinitionOrStub 
:
{ before(grammarAccess.getActiveClassDefinitionOrStubRule()); }
	 ruleActiveClassDefinitionOrStub
{ after(grammarAccess.getActiveClassDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ActiveClassDefinitionOrStub
ruleActiveClassDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup()); }
(rule__ActiveClassDefinitionOrStub__Group__0)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehaviorClause
entryRuleBehaviorClause 
:
{ before(grammarAccess.getBehaviorClauseRule()); }
	 ruleBehaviorClause
{ after(grammarAccess.getBehaviorClauseRule()); } 
	 EOF 
;

// Rule BehaviorClause
ruleBehaviorClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorClauseAccess().getAlternatives()); }
(rule__BehaviorClause__Alternatives)
{ after(grammarAccess.getBehaviorClauseAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassMember
entryRuleActiveClassMember 
:
{ before(grammarAccess.getActiveClassMemberRule()); }
	 ruleActiveClassMember
{ after(grammarAccess.getActiveClassMemberRule()); } 
	 EOF 
;

// Rule ActiveClassMember
ruleActiveClassMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassMemberAccess().getGroup()); }
(rule__ActiveClassMember__Group__0)
{ after(grammarAccess.getActiveClassMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveClassMemberDefinition
entryRuleActiveClassMemberDefinition 
:
{ before(grammarAccess.getActiveClassMemberDefinitionRule()); }
	 ruleActiveClassMemberDefinition
{ after(grammarAccess.getActiveClassMemberDefinitionRule()); } 
	 EOF 
;

// Rule ActiveClassMemberDefinition
ruleActiveClassMemberDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveClassMemberDefinitionAccess().getAlternatives()); }
(rule__ActiveClassMemberDefinition__Alternatives)
{ after(grammarAccess.getActiveClassMemberDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDeclaration
entryRuleDataTypeDeclaration 
:
{ before(grammarAccess.getDataTypeDeclarationRule()); }
	 ruleDataTypeDeclaration
{ after(grammarAccess.getDataTypeDeclarationRule()); } 
	 EOF 
;

// Rule DataTypeDeclaration
ruleDataTypeDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
(rule__DataTypeDeclaration__Group__0)
{ after(grammarAccess.getDataTypeDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDefinition
entryRuleDataTypeDefinition 
:
{ before(grammarAccess.getDataTypeDefinitionRule()); }
	 ruleDataTypeDefinition
{ after(grammarAccess.getDataTypeDefinitionRule()); } 
	 EOF 
;

// Rule DataTypeDefinition
ruleDataTypeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getGroup()); }
(rule__DataTypeDefinition__Group__0)
{ after(grammarAccess.getDataTypeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTypeDefinitionOrStub
entryRuleDataTypeDefinitionOrStub 
:
{ before(grammarAccess.getDataTypeDefinitionOrStubRule()); }
	 ruleDataTypeDefinitionOrStub
{ after(grammarAccess.getDataTypeDefinitionOrStubRule()); } 
	 EOF 
;

// Rule DataTypeDefinitionOrStub
ruleDataTypeDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getGroup()); }
(rule__DataTypeDefinitionOrStub__Group__0)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStructuredMember
entryRuleStructuredMember 
:
{ before(grammarAccess.getStructuredMemberRule()); }
	 ruleStructuredMember
{ after(grammarAccess.getStructuredMemberRule()); } 
	 EOF 
;

// Rule StructuredMember
ruleStructuredMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStructuredMemberAccess().getGroup()); }
(rule__StructuredMember__Group__0)
{ after(grammarAccess.getStructuredMemberAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationDeclaration
entryRuleAssociationDeclaration 
:
{ before(grammarAccess.getAssociationDeclarationRule()); }
	 ruleAssociationDeclaration
{ after(grammarAccess.getAssociationDeclarationRule()); } 
	 EOF 
;

// Rule AssociationDeclaration
ruleAssociationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getGroup()); }
(rule__AssociationDeclaration__Group__0)
{ after(grammarAccess.getAssociationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationDefinition
entryRuleAssociationDefinition 
:
{ before(grammarAccess.getAssociationDefinitionRule()); }
	 ruleAssociationDefinition
{ after(grammarAccess.getAssociationDefinitionRule()); } 
	 EOF 
;

// Rule AssociationDefinition
ruleAssociationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getGroup()); }
(rule__AssociationDefinition__Group__0)
{ after(grammarAccess.getAssociationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssociationDefinitionOrStub
entryRuleAssociationDefinitionOrStub 
:
{ before(grammarAccess.getAssociationDefinitionOrStubRule()); }
	 ruleAssociationDefinitionOrStub
{ after(grammarAccess.getAssociationDefinitionOrStubRule()); } 
	 EOF 
;

// Rule AssociationDefinitionOrStub
ruleAssociationDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getGroup()); }
(rule__AssociationDefinitionOrStub__Group__0)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationDeclaration
entryRuleEnumerationDeclaration 
:
{ before(grammarAccess.getEnumerationDeclarationRule()); }
	 ruleEnumerationDeclaration
{ after(grammarAccess.getEnumerationDeclarationRule()); } 
	 EOF 
;

// Rule EnumerationDeclaration
ruleEnumerationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getGroup()); }
(rule__EnumerationDeclaration__Group__0)
{ after(grammarAccess.getEnumerationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationDefinition
entryRuleEnumerationDefinition 
:
{ before(grammarAccess.getEnumerationDefinitionRule()); }
	 ruleEnumerationDefinition
{ after(grammarAccess.getEnumerationDefinitionRule()); } 
	 EOF 
;

// Rule EnumerationDefinition
ruleEnumerationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getGroup()); }
(rule__EnumerationDefinition__Group__0)
{ after(grammarAccess.getEnumerationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationDefinitionOrStub
entryRuleEnumerationDefinitionOrStub 
:
{ before(grammarAccess.getEnumerationDefinitionOrStubRule()); }
	 ruleEnumerationDefinitionOrStub
{ after(grammarAccess.getEnumerationDefinitionOrStubRule()); } 
	 EOF 
;

// Rule EnumerationDefinitionOrStub
ruleEnumerationDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup()); }
(rule__EnumerationDefinitionOrStub__Group__0)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteralName
entryRuleEnumerationLiteralName 
:
{ before(grammarAccess.getEnumerationLiteralNameRule()); }
	 ruleEnumerationLiteralName
{ after(grammarAccess.getEnumerationLiteralNameRule()); } 
	 EOF 
;

// Rule EnumerationLiteralName
ruleEnumerationLiteralName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getGroup()); }
(rule__EnumerationLiteralName__Group__0)
{ after(grammarAccess.getEnumerationLiteralNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumerationLiteralNameDefinition
entryRuleEnumerationLiteralNameDefinition 
:
{ before(grammarAccess.getEnumerationLiteralNameDefinitionRule()); }
	 ruleEnumerationLiteralNameDefinition
{ after(grammarAccess.getEnumerationLiteralNameDefinitionRule()); } 
	 EOF 
;

// Rule EnumerationLiteralNameDefinition
ruleEnumerationLiteralNameDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumerationLiteralNameDefinitionAccess().getNameAssignment()); }
(rule__EnumerationLiteralNameDefinition__NameAssignment)
{ after(grammarAccess.getEnumerationLiteralNameDefinitionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDeclaration
entryRuleSignalDeclaration 
:
{ before(grammarAccess.getSignalDeclarationRule()); }
	 ruleSignalDeclaration
{ after(grammarAccess.getSignalDeclarationRule()); } 
	 EOF 
;

// Rule SignalDeclaration
ruleSignalDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup()); }
(rule__SignalDeclaration__Group__0)
{ after(grammarAccess.getSignalDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDefinition
entryRuleSignalDefinition 
:
{ before(grammarAccess.getSignalDefinitionRule()); }
	 ruleSignalDefinition
{ after(grammarAccess.getSignalDefinitionRule()); } 
	 EOF 
;

// Rule SignalDefinition
ruleSignalDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDefinitionAccess().getGroup()); }
(rule__SignalDefinition__Group__0)
{ after(grammarAccess.getSignalDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDefinitionOrStub
entryRuleSignalDefinitionOrStub 
:
{ before(grammarAccess.getSignalDefinitionOrStubRule()); }
	 ruleSignalDefinitionOrStub
{ after(grammarAccess.getSignalDefinitionOrStubRule()); } 
	 EOF 
;

// Rule SignalDefinitionOrStub
ruleSignalDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getGroup()); }
(rule__SignalDefinitionOrStub__Group__0)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityDeclaration
entryRuleActivityDeclaration 
:
{ before(grammarAccess.getActivityDeclarationRule()); }
	 ruleActivityDeclaration
{ after(grammarAccess.getActivityDeclarationRule()); } 
	 EOF 
;

// Rule ActivityDeclaration
ruleActivityDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGroup()); }
(rule__ActivityDeclaration__Group__0)
{ after(grammarAccess.getActivityDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityDefinition
entryRuleActivityDefinition 
:
{ before(grammarAccess.getActivityDefinitionRule()); }
	 ruleActivityDefinition
{ after(grammarAccess.getActivityDefinitionRule()); } 
	 EOF 
;

// Rule ActivityDefinition
ruleActivityDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityDefinitionAccess().getGroup()); }
(rule__ActivityDefinition__Group__0)
{ after(grammarAccess.getActivityDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActivityDefinitionOrStub
entryRuleActivityDefinitionOrStub 
:
{ before(grammarAccess.getActivityDefinitionOrStubRule()); }
	 ruleActivityDefinitionOrStub
{ after(grammarAccess.getActivityDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ActivityDefinitionOrStub
ruleActivityDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getGroup()); }
(rule__ActivityDefinitionOrStub__Group__0)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParameter
entryRuleFormalParameter 
:
{ before(grammarAccess.getFormalParameterRule()); }
	 ruleFormalParameter
{ after(grammarAccess.getFormalParameterRule()); } 
	 EOF 
;

// Rule FormalParameter
ruleFormalParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterAccess().getGroup()); }
(rule__FormalParameter__Group__0)
{ after(grammarAccess.getFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFormalParameterDefinition
entryRuleFormalParameterDefinition 
:
{ before(grammarAccess.getFormalParameterDefinitionRule()); }
	 ruleFormalParameterDefinition
{ after(grammarAccess.getFormalParameterDefinitionRule()); } 
	 EOF 
;

// Rule FormalParameterDefinition
ruleFormalParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getGroup()); }
(rule__FormalParameterDefinition__Group__0)
{ after(grammarAccess.getFormalParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnParameter
entryRuleReturnParameter 
:
{ before(grammarAccess.getReturnParameterRule()); }
	 ruleReturnParameter
{ after(grammarAccess.getReturnParameterRule()); } 
	 EOF 
;

// Rule ReturnParameter
ruleReturnParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnParameterAccess().getDefinitionAssignment()); }
(rule__ReturnParameter__DefinitionAssignment)
{ after(grammarAccess.getReturnParameterAccess().getDefinitionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnParameterDefinition
entryRuleReturnParameterDefinition 
:
{ before(grammarAccess.getReturnParameterDefinitionRule()); }
	 ruleReturnParameterDefinition
{ after(grammarAccess.getReturnParameterDefinitionRule()); } 
	 EOF 
;

// Rule ReturnParameterDefinition
ruleReturnParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnParameterDefinitionAccess().getGroup()); }
(rule__ReturnParameterDefinition__Group__0)
{ after(grammarAccess.getReturnParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDirection
entryRuleParameterDirection 
:
{ before(grammarAccess.getParameterDirectionRule()); }
	 ruleParameterDirection
{ after(grammarAccess.getParameterDirectionRule()); } 
	 EOF 
;

// Rule ParameterDirection
ruleParameterDirection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDirectionAccess().getAlternatives()); }
(rule__ParameterDirection__Alternatives)
{ after(grammarAccess.getParameterDirectionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureDefinitionOrStub
entryRuleFeatureDefinitionOrStub 
:
{ before(grammarAccess.getFeatureDefinitionOrStubRule()); }
	 ruleFeatureDefinitionOrStub
{ after(grammarAccess.getFeatureDefinitionOrStubRule()); } 
	 EOF 
;

// Rule FeatureDefinitionOrStub
ruleFeatureDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureDefinitionOrStubAccess().getAlternatives()); }
(rule__FeatureDefinitionOrStub__Alternatives)
{ after(grammarAccess.getFeatureDefinitionOrStubAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleActiveFeatureDefinitionOrStub
entryRuleActiveFeatureDefinitionOrStub 
:
{ before(grammarAccess.getActiveFeatureDefinitionOrStubRule()); }
	 ruleActiveFeatureDefinitionOrStub
{ after(grammarAccess.getActiveFeatureDefinitionOrStubRule()); } 
	 EOF 
;

// Rule ActiveFeatureDefinitionOrStub
ruleActiveFeatureDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getAlternatives()); }
(rule__ActiveFeatureDefinitionOrStub__Alternatives)
{ after(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDefinition
entryRulePropertyDefinition 
:
{ before(grammarAccess.getPropertyDefinitionRule()); }
	 rulePropertyDefinition
{ after(grammarAccess.getPropertyDefinitionRule()); } 
	 EOF 
;

// Rule PropertyDefinition
rulePropertyDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
(rule__PropertyDefinition__Group__0)
{ after(grammarAccess.getPropertyDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition 
:
{ before(grammarAccess.getAttributeDefinitionRule()); }
	 ruleAttributeDefinition
{ after(grammarAccess.getAttributeDefinitionRule()); } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
(rule__AttributeDefinition__Group__0)
{ after(grammarAccess.getAttributeDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeInitializer
entryRuleAttributeInitializer 
:
{ before(grammarAccess.getAttributeInitializerRule()); }
	 ruleAttributeInitializer
{ after(grammarAccess.getAttributeInitializerRule()); } 
	 EOF 
;

// Rule AttributeInitializer
ruleAttributeInitializer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeInitializerAccess().getGroup()); }
(rule__AttributeInitializer__Group__0)
{ after(grammarAccess.getAttributeInitializerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePropertyDeclaration
entryRulePropertyDeclaration 
:
{ before(grammarAccess.getPropertyDeclarationRule()); }
	 rulePropertyDeclaration
{ after(grammarAccess.getPropertyDeclarationRule()); } 
	 EOF 
;

// Rule PropertyDeclaration
rulePropertyDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
(rule__PropertyDeclaration__Group__0)
{ after(grammarAccess.getPropertyDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypePart
entryRuleTypePart 
:
{ before(grammarAccess.getTypePartRule()); }
	 ruleTypePart
{ after(grammarAccess.getTypePartRule()); } 
	 EOF 
;

// Rule TypePart
ruleTypePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypePartAccess().getGroup()); }
(rule__TypePart__Group__0)
{ after(grammarAccess.getTypePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnlimitedNaturalLiteral
entryRuleUnlimitedNaturalLiteral 
:
{ before(grammarAccess.getUnlimitedNaturalLiteralRule()); }
	 ruleUnlimitedNaturalLiteral
{ after(grammarAccess.getUnlimitedNaturalLiteralRule()); } 
	 EOF 
;

// Rule UnlimitedNaturalLiteral
ruleUnlimitedNaturalLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getAlternatives()); }
(rule__UnlimitedNaturalLiteral__Alternatives)
{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationDeclaration
entryRuleOperationDeclaration 
:
{ before(grammarAccess.getOperationDeclarationRule()); }
	 ruleOperationDeclaration
{ after(grammarAccess.getOperationDeclarationRule()); } 
	 EOF 
;

// Rule OperationDeclaration
ruleOperationDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationDeclarationAccess().getGroup()); }
(rule__OperationDeclaration__Group__0)
{ after(grammarAccess.getOperationDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationDefinitionOrStub
entryRuleOperationDefinitionOrStub 
:
{ before(grammarAccess.getOperationDefinitionOrStubRule()); }
	 ruleOperationDefinitionOrStub
{ after(grammarAccess.getOperationDefinitionOrStubRule()); } 
	 EOF 
;

// Rule OperationDefinitionOrStub
ruleOperationDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getGroup()); }
(rule__OperationDefinitionOrStub__Group__0)
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRedefinitionClause
entryRuleRedefinitionClause 
:
{ before(grammarAccess.getRedefinitionClauseRule()); }
	 ruleRedefinitionClause
{ after(grammarAccess.getRedefinitionClauseRule()); } 
	 EOF 
;

// Rule RedefinitionClause
ruleRedefinitionClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRedefinitionClauseAccess().getGroup()); }
(rule__RedefinitionClause__Group__0)
{ after(grammarAccess.getRedefinitionClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReceptionDefinition
entryRuleReceptionDefinition 
:
{ before(grammarAccess.getReceptionDefinitionRule()); }
	 ruleReceptionDefinition
{ after(grammarAccess.getReceptionDefinitionRule()); } 
	 EOF 
;

// Rule ReceptionDefinition
ruleReceptionDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getGroup()); }
(rule__ReceptionDefinition__Group__0)
{ after(grammarAccess.getReceptionDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReceptionDeclaration
entryRuleSignalReceptionDeclaration 
:
{ before(grammarAccess.getSignalReceptionDeclarationRule()); }
	 ruleSignalReceptionDeclaration
{ after(grammarAccess.getSignalReceptionDeclarationRule()); } 
	 EOF 
;

// Rule SignalReceptionDeclaration
ruleSignalReceptionDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getGroup()); }
(rule__SignalReceptionDeclaration__Group__0)
{ after(grammarAccess.getSignalReceptionDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReceptionDefinitionOrStub
entryRuleSignalReceptionDefinitionOrStub 
:
{ before(grammarAccess.getSignalReceptionDefinitionOrStubRule()); }
	 ruleSignalReceptionDefinitionOrStub
{ after(grammarAccess.getSignalReceptionDefinitionOrStubRule()); } 
	 EOF 
;

// Rule SignalReceptionDefinitionOrStub
ruleSignalReceptionDefinitionOrStub
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getGroup()); }
(rule__SignalReceptionDefinitionOrStub__Group__0)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleName
entryRuleName 
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameAccess().getAlternatives()); }
(rule__Name__Alternatives)
{ after(grammarAccess.getNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePotentiallyAmbiguousQualifiedName
entryRulePotentiallyAmbiguousQualifiedName 
:
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameRule()); }
	 rulePotentiallyAmbiguousQualifiedName
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameRule()); } 
	 EOF 
;

// Rule PotentiallyAmbiguousQualifiedName
rulePotentiallyAmbiguousQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup()); }
(rule__PotentiallyAmbiguousQualifiedName__Group__0)
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleUnqualifiedName
entryRuleUnqualifiedName 
:
{ before(grammarAccess.getUnqualifiedNameRule()); }
	 ruleUnqualifiedName
{ after(grammarAccess.getUnqualifiedNameRule()); } 
	 EOF 
;

// Rule UnqualifiedName
ruleUnqualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnqualifiedNameAccess().getNameBindingAssignment()); }
(rule__UnqualifiedName__NameBindingAssignment)
{ after(grammarAccess.getUnqualifiedNameAccess().getNameBindingAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameBinding
entryRuleNameBinding 
:
{ before(grammarAccess.getNameBindingRule()); }
	 ruleNameBinding
{ after(grammarAccess.getNameBindingRule()); } 
	 EOF 
;

// Rule NameBinding
ruleNameBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameBindingAccess().getGroup()); }
(rule__NameBinding__Group__0)
{ after(grammarAccess.getNameBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateBinding
entryRuleTemplateBinding 
:
{ before(grammarAccess.getTemplateBindingRule()); }
	 ruleTemplateBinding
{ after(grammarAccess.getTemplateBindingRule()); } 
	 EOF 
;

// Rule TemplateBinding
ruleTemplateBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateBindingAccess().getGroup()); }
(rule__TemplateBinding__Group__0)
{ after(grammarAccess.getTemplateBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePositionalTemplateBinding
entryRulePositionalTemplateBinding 
:
{ before(grammarAccess.getPositionalTemplateBindingRule()); }
	 rulePositionalTemplateBinding
{ after(grammarAccess.getPositionalTemplateBindingRule()); } 
	 EOF 
;

// Rule PositionalTemplateBinding
rulePositionalTemplateBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getGroup()); }
(rule__PositionalTemplateBinding__Group__0)
{ after(grammarAccess.getPositionalTemplateBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedTemplateBinding
entryRuleNamedTemplateBinding 
:
{ before(grammarAccess.getNamedTemplateBindingRule()); }
	 ruleNamedTemplateBinding
{ after(grammarAccess.getNamedTemplateBindingRule()); } 
	 EOF 
;

// Rule NamedTemplateBinding
ruleNamedTemplateBinding
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getGroup()); }
(rule__NamedTemplateBinding__Group__0)
{ after(grammarAccess.getNamedTemplateBindingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTemplateParameterSubstitution
entryRuleTemplateParameterSubstitution 
:
{ before(grammarAccess.getTemplateParameterSubstitutionRule()); }
	 ruleTemplateParameterSubstitution
{ after(grammarAccess.getTemplateParameterSubstitutionRule()); } 
	 EOF 
;

// Rule TemplateParameterSubstitution
ruleTemplateParameterSubstitution
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getGroup()); }
(rule__TemplateParameterSubstitution__Group__0)
{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
(rule__PrimaryExpression__Group__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBaseExpression
entryRuleBaseExpression 
:
{ before(grammarAccess.getBaseExpressionRule()); }
	 ruleBaseExpression
{ after(grammarAccess.getBaseExpressionRule()); } 
	 EOF 
;

// Rule BaseExpression
ruleBaseExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
(rule__BaseExpression__Alternatives)
{ after(grammarAccess.getBaseExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteralExpression
entryRuleLiteralExpression 
:
{ before(grammarAccess.getLiteralExpressionRule()); }
	 ruleLiteralExpression
{ after(grammarAccess.getLiteralExpressionRule()); } 
	 EOF 
;

// Rule LiteralExpression
ruleLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
(rule__LiteralExpression__Alternatives)
{ after(grammarAccess.getLiteralExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLiteralExpression
entryRuleBooleanLiteralExpression 
:
{ before(grammarAccess.getBooleanLiteralExpressionRule()); }
	 ruleBooleanLiteralExpression
{ after(grammarAccess.getBooleanLiteralExpressionRule()); } 
	 EOF 
;

// Rule BooleanLiteralExpression
ruleBooleanLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLiteralExpressionAccess().getImageAssignment()); }
(rule__BooleanLiteralExpression__ImageAssignment)
{ after(grammarAccess.getBooleanLiteralExpressionAccess().getImageAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNaturalLiteralExpression
entryRuleNaturalLiteralExpression 
:
{ before(grammarAccess.getNaturalLiteralExpressionRule()); }
	 ruleNaturalLiteralExpression
{ after(grammarAccess.getNaturalLiteralExpressionRule()); } 
	 EOF 
;

// Rule NaturalLiteralExpression
ruleNaturalLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNaturalLiteralExpressionAccess().getImageAssignment()); }
(rule__NaturalLiteralExpression__ImageAssignment)
{ after(grammarAccess.getNaturalLiteralExpressionAccess().getImageAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnboundedLiteralExpression
entryRuleUnboundedLiteralExpression 
:
{ before(grammarAccess.getUnboundedLiteralExpressionRule()); }
	 ruleUnboundedLiteralExpression
{ after(grammarAccess.getUnboundedLiteralExpressionRule()); } 
	 EOF 
;

// Rule UnboundedLiteralExpression
ruleUnboundedLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnboundedLiteralExpressionAccess().getGroup()); }
(rule__UnboundedLiteralExpression__Group__0)
{ after(grammarAccess.getUnboundedLiteralExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLiteralExpression
entryRuleStringLiteralExpression 
:
{ before(grammarAccess.getStringLiteralExpressionRule()); }
	 ruleStringLiteralExpression
{ after(grammarAccess.getStringLiteralExpressionRule()); } 
	 EOF 
;

// Rule StringLiteralExpression
ruleStringLiteralExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLiteralExpressionAccess().getImageAssignment()); }
(rule__StringLiteralExpression__ImageAssignment)
{ after(grammarAccess.getStringLiteralExpressionAccess().getImageAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameExpression
entryRuleNameExpression 
:
{ before(grammarAccess.getNameExpressionRule()); }
	 ruleNameExpression
{ after(grammarAccess.getNameExpressionRule()); } 
	 EOF 
;

// Rule NameExpression
ruleNameExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameExpressionAccess().getNameAssignment()); }
(rule__NameExpression__NameAssignment)
{ after(grammarAccess.getNameExpressionAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThisExpression
entryRuleThisExpression 
:
{ before(grammarAccess.getThisExpressionRule()); }
	 ruleThisExpression
{ after(grammarAccess.getThisExpressionRule()); } 
	 EOF 
;

// Rule ThisExpression
ruleThisExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThisExpressionAccess().getAlternatives()); }
(rule__ThisExpression__Alternatives)
{ after(grammarAccess.getThisExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParenthesizedExpression
entryRuleParenthesizedExpression 
:
{ before(grammarAccess.getParenthesizedExpressionRule()); }
	 ruleParenthesizedExpression
{ after(grammarAccess.getParenthesizedExpressionRule()); } 
	 EOF 
;

// Rule ParenthesizedExpression
ruleParenthesizedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
(rule__ParenthesizedExpression__Group__0)
{ after(grammarAccess.getParenthesizedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBehaviorInvocationExpression
entryRuleBehaviorInvocationExpression 
:
{ before(grammarAccess.getBehaviorInvocationExpressionRule()); }
	 ruleBehaviorInvocationExpression
{ after(grammarAccess.getBehaviorInvocationExpressionRule()); } 
	 EOF 
;

// Rule BehaviorInvocationExpression
ruleBehaviorInvocationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBehaviorInvocationExpressionAccess().getGroup()); }
(rule__BehaviorInvocationExpression__Group__0)
{ after(grammarAccess.getBehaviorInvocationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTuple
entryRuleTuple 
:
{ before(grammarAccess.getTupleRule()); }
	 ruleTuple
{ after(grammarAccess.getTupleRule()); } 
	 EOF 
;

// Rule Tuple
ruleTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTupleAccess().getGroup()); }
(rule__Tuple__Group__0)
{ after(grammarAccess.getTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePositionalTupleExpressionList
entryRulePositionalTupleExpressionList 
:
{ before(grammarAccess.getPositionalTupleExpressionListRule()); }
	 rulePositionalTupleExpressionList
{ after(grammarAccess.getPositionalTupleExpressionListRule()); } 
	 EOF 
;

// Rule PositionalTupleExpressionList
rulePositionalTupleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getGroup()); }
(rule__PositionalTupleExpressionList__Group__0)
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedTupleExpressionList
entryRuleNamedTupleExpressionList 
:
{ before(grammarAccess.getNamedTupleExpressionListRule()); }
	 ruleNamedTupleExpressionList
{ after(grammarAccess.getNamedTupleExpressionListRule()); } 
	 EOF 
;

// Rule NamedTupleExpressionList
ruleNamedTupleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getGroup()); }
(rule__NamedTupleExpressionList__Group__0)
{ after(grammarAccess.getNamedTupleExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedExpression
entryRuleNamedExpression 
:
{ before(grammarAccess.getNamedExpressionRule()); }
	 ruleNamedExpression
{ after(grammarAccess.getNamedExpressionRule()); } 
	 EOF 
;

// Rule NamedExpression
ruleNamedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedExpressionAccess().getGroup()); }
(rule__NamedExpression__Group__0)
{ after(grammarAccess.getNamedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuperInvocationExpression
entryRuleSuperInvocationExpression 
:
{ before(grammarAccess.getSuperInvocationExpressionRule()); }
	 ruleSuperInvocationExpression
{ after(grammarAccess.getSuperInvocationExpressionRule()); } 
	 EOF 
;

// Rule SuperInvocationExpression
ruleSuperInvocationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getGroup()); }
(rule__SuperInvocationExpression__Group__0)
{ after(grammarAccess.getSuperInvocationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceCreationOrSequenceConstructionExpression
entryRuleInstanceCreationOrSequenceConstructionExpression 
:
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule()); }
	 ruleInstanceCreationOrSequenceConstructionExpression
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionRule()); } 
	 EOF 
;

// Rule InstanceCreationOrSequenceConstructionExpression
ruleInstanceCreationOrSequenceConstructionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup()); }
(rule__InstanceCreationOrSequenceConstructionExpression__Group__0)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkOperationExpression
entryRuleLinkOperationExpression 
:
{ before(grammarAccess.getLinkOperationExpressionRule()); }
	 ruleLinkOperationExpression
{ after(grammarAccess.getLinkOperationExpressionRule()); } 
	 EOF 
;

// Rule LinkOperationExpression
ruleLinkOperationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getGroup()); }
(rule__LinkOperationExpression__Group__0)
{ after(grammarAccess.getLinkOperationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkOperation
entryRuleLinkOperation 
:
{ before(grammarAccess.getLinkOperationRule()); }
	 ruleLinkOperation
{ after(grammarAccess.getLinkOperationRule()); } 
	 EOF 
;

// Rule LinkOperation
ruleLinkOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkOperationAccess().getAlternatives()); }
(rule__LinkOperation__Alternatives)
{ after(grammarAccess.getLinkOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLinkOperationTuple
entryRuleLinkOperationTuple 
:
{ before(grammarAccess.getLinkOperationTupleRule()); }
	 ruleLinkOperationTuple
{ after(grammarAccess.getLinkOperationTupleRule()); } 
	 EOF 
;

// Rule LinkOperationTuple
ruleLinkOperationTuple
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getGroup()); }
(rule__LinkOperationTuple__Group__0)
{ after(grammarAccess.getLinkOperationTupleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedNamedTupleExpressionList
entryRuleIndexedNamedTupleExpressionList 
:
{ before(grammarAccess.getIndexedNamedTupleExpressionListRule()); }
	 ruleIndexedNamedTupleExpressionList
{ after(grammarAccess.getIndexedNamedTupleExpressionListRule()); } 
	 EOF 
;

// Rule IndexedNamedTupleExpressionList
ruleIndexedNamedTupleExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedNamedTupleExpressionListAccess().getGroup()); }
(rule__IndexedNamedTupleExpressionList__Group__0)
{ after(grammarAccess.getIndexedNamedTupleExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedNamedExpression
entryRuleIndexedNamedExpression 
:
{ before(grammarAccess.getIndexedNamedExpressionRule()); }
	 ruleIndexedNamedExpression
{ after(grammarAccess.getIndexedNamedExpressionRule()); } 
	 EOF 
;

// Rule IndexedNamedExpression
ruleIndexedNamedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getGroup()); }
(rule__IndexedNamedExpression__Group__0)
{ after(grammarAccess.getIndexedNamedExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassExtentExpression
entryRuleClassExtentExpression 
:
{ before(grammarAccess.getClassExtentExpressionRule()); }
	 ruleClassExtentExpression
{ after(grammarAccess.getClassExtentExpressionRule()); } 
	 EOF 
;

// Rule ClassExtentExpression
ruleClassExtentExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassExtentExpressionAccess().getGroup()); }
(rule__ClassExtentExpression__Group__0)
{ after(grammarAccess.getClassExtentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceConstructionExpression
entryRuleSequenceConstructionExpression 
:
{ before(grammarAccess.getSequenceConstructionExpressionRule()); }
	 ruleSequenceConstructionExpression
{ after(grammarAccess.getSequenceConstructionExpressionRule()); } 
	 EOF 
;

// Rule SequenceConstructionExpression
ruleSequenceConstructionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives()); }
(rule__SequenceConstructionExpression__Alternatives)
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicityIndicator
entryRuleMultiplicityIndicator 
:
{ before(grammarAccess.getMultiplicityIndicatorRule()); }
	 ruleMultiplicityIndicator
{ after(grammarAccess.getMultiplicityIndicatorRule()); } 
	 EOF 
;

// Rule MultiplicityIndicator
ruleMultiplicityIndicator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicityIndicatorAccess().getGroup()); }
(rule__MultiplicityIndicator__Group__0)
{ after(grammarAccess.getMultiplicityIndicatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceElements
entryRuleSequenceElements 
:
{ before(grammarAccess.getSequenceElementsRule()); }
	 ruleSequenceElements
{ after(grammarAccess.getSequenceElementsRule()); } 
	 EOF 
;

// Rule SequenceElements
ruleSequenceElements
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceElementsAccess().getAlternatives()); }
(rule__SequenceElements__Alternatives)
{ after(grammarAccess.getSequenceElementsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceRange
entryRuleSequenceRange 
:
{ before(grammarAccess.getSequenceRangeRule()); }
	 ruleSequenceRange
{ after(grammarAccess.getSequenceRangeRule()); } 
	 EOF 
;

// Rule SequenceRange
ruleSequenceRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceRangeAccess().getGroup()); }
(rule__SequenceRange__Group__0)
{ after(grammarAccess.getSequenceRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceExpressionList
entryRuleSequenceExpressionList 
:
{ before(grammarAccess.getSequenceExpressionListRule()); }
	 ruleSequenceExpressionList
{ after(grammarAccess.getSequenceExpressionListRule()); } 
	 EOF 
;

// Rule SequenceExpressionList
ruleSequenceExpressionList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getGroup()); }
(rule__SequenceExpressionList__Group__0)
{ after(grammarAccess.getSequenceExpressionListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceElement
entryRuleSequenceElement 
:
{ before(grammarAccess.getSequenceElementRule()); }
	 ruleSequenceElement
{ after(grammarAccess.getSequenceElementRule()); } 
	 EOF 
;

// Rule SequenceElement
ruleSequenceElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceElementAccess().getAlternatives()); }
(rule__SequenceElement__Alternatives)
{ after(grammarAccess.getSequenceElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceInitializationExpression
entryRuleSequenceInitializationExpression 
:
{ before(grammarAccess.getSequenceInitializationExpressionRule()); }
	 ruleSequenceInitializationExpression
{ after(grammarAccess.getSequenceInitializationExpressionRule()); } 
	 EOF 
;

// Rule SequenceInitializationExpression
ruleSequenceInitializationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getGroup()); }
(rule__SequenceInitializationExpression__Group__0)
{ after(grammarAccess.getSequenceInitializationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndex
entryRuleIndex 
:
{ before(grammarAccess.getIndexRule()); }
	 ruleIndex
{ after(grammarAccess.getIndexRule()); } 
	 EOF 
;

// Rule Index
ruleIndex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexAccess().getGroup()); }
(rule__Index__Group__0)
{ after(grammarAccess.getIndexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequenceOperationOrReductionOrExpansionExpression
entryRuleSequenceOperationOrReductionOrExpansionExpression 
:
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule()); }
	 ruleSequenceOperationOrReductionOrExpansionExpression
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionRule()); } 
	 EOF 
;

// Rule SequenceOperationOrReductionOrExpansionExpression
ruleSequenceOperationOrReductionOrExpansionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__Group__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrefixExpression
entryRulePrefixExpression 
:
{ before(grammarAccess.getPrefixExpressionRule()); }
	 rulePrefixExpression
{ after(grammarAccess.getPrefixExpressionRule()); } 
	 EOF 
;

// Rule PrefixExpression
rulePrefixExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrefixExpressionAccess().getGroup()); }
(rule__PrefixExpression__Group__0)
{ after(grammarAccess.getPrefixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAffixOperator
entryRuleAffixOperator 
:
{ before(grammarAccess.getAffixOperatorRule()); }
	 ruleAffixOperator
{ after(grammarAccess.getAffixOperatorRule()); } 
	 EOF 
;

// Rule AffixOperator
ruleAffixOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAffixOperatorAccess().getAlternatives()); }
(rule__AffixOperator__Alternatives)
{ after(grammarAccess.getAffixOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression 
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
(rule__UnaryExpression__Alternatives)
{ after(grammarAccess.getUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixOrCastExpression
entryRulePostfixOrCastExpression 
:
{ before(grammarAccess.getPostfixOrCastExpressionRule()); }
	 rulePostfixOrCastExpression
{ after(grammarAccess.getPostfixOrCastExpressionRule()); } 
	 EOF 
;

// Rule PostfixOrCastExpression
rulePostfixOrCastExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getAlternatives()); }
(rule__PostfixOrCastExpression__Alternatives)
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePostfixExpression
entryRulePostfixExpression 
:
{ before(grammarAccess.getPostfixExpressionRule()); }
	 rulePostfixExpression
{ after(grammarAccess.getPostfixExpressionRule()); } 
	 EOF 
;

// Rule PostfixExpression
rulePostfixExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPostfixExpressionAccess().getGroup()); }
(rule__PostfixExpression__Group__0)
{ after(grammarAccess.getPostfixExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonPostfixNonCastUnaryExpression
entryRuleNonPostfixNonCastUnaryExpression 
:
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionRule()); }
	 ruleNonPostfixNonCastUnaryExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionRule()); } 
	 EOF 
;

// Rule NonPostfixNonCastUnaryExpression
ruleNonPostfixNonCastUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getAlternatives()); }
(rule__NonPostfixNonCastUnaryExpression__Alternatives)
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanUnaryExpression
entryRuleBooleanUnaryExpression 
:
{ before(grammarAccess.getBooleanUnaryExpressionRule()); }
	 ruleBooleanUnaryExpression
{ after(grammarAccess.getBooleanUnaryExpressionRule()); } 
	 EOF 
;

// Rule BooleanUnaryExpression
ruleBooleanUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanUnaryExpressionAccess().getGroup()); }
(rule__BooleanUnaryExpression__Group__0)
{ after(grammarAccess.getBooleanUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBitStringUnaryExpression
entryRuleBitStringUnaryExpression 
:
{ before(grammarAccess.getBitStringUnaryExpressionRule()); }
	 ruleBitStringUnaryExpression
{ after(grammarAccess.getBitStringUnaryExpressionRule()); } 
	 EOF 
;

// Rule BitStringUnaryExpression
ruleBitStringUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBitStringUnaryExpressionAccess().getGroup()); }
(rule__BitStringUnaryExpression__Group__0)
{ after(grammarAccess.getBitStringUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericUnaryExpression
entryRuleNumericUnaryExpression 
:
{ before(grammarAccess.getNumericUnaryExpressionRule()); }
	 ruleNumericUnaryExpression
{ after(grammarAccess.getNumericUnaryExpressionRule()); } 
	 EOF 
;

// Rule NumericUnaryExpression
ruleNumericUnaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getGroup()); }
(rule__NumericUnaryExpression__Group__0)
{ after(grammarAccess.getNumericUnaryExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumericUnaryOperator
entryRuleNumericUnaryOperator 
:
{ before(grammarAccess.getNumericUnaryOperatorRule()); }
	 ruleNumericUnaryOperator
{ after(grammarAccess.getNumericUnaryOperatorRule()); } 
	 EOF 
;

// Rule NumericUnaryOperator
ruleNumericUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumericUnaryOperatorAccess().getAlternatives()); }
(rule__NumericUnaryOperator__Alternatives)
{ after(grammarAccess.getNumericUnaryOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsolationExpression
entryRuleIsolationExpression 
:
{ before(grammarAccess.getIsolationExpressionRule()); }
	 ruleIsolationExpression
{ after(grammarAccess.getIsolationExpressionRule()); } 
	 EOF 
;

// Rule IsolationExpression
ruleIsolationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsolationExpressionAccess().getGroup()); }
(rule__IsolationExpression__Group__0)
{ after(grammarAccess.getIsolationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCastExpression
entryRuleCastExpression 
:
{ before(grammarAccess.getCastExpressionRule()); }
	 ruleCastExpression
{ after(grammarAccess.getCastExpressionRule()); } 
	 EOF 
;

// Rule CastExpression
ruleCastExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastExpressionAccess().getGroup()); }
(rule__CastExpression__Group__0)
{ after(grammarAccess.getCastExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCastCompletion
entryRuleCastCompletion 
:
{ before(grammarAccess.getCastCompletionRule()); }
	 ruleCastCompletion
{ after(grammarAccess.getCastCompletionRule()); } 
	 EOF 
;

// Rule CastCompletion
ruleCastCompletion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCastCompletionAccess().getAlternatives()); }
(rule__CastCompletion__Alternatives)
{ after(grammarAccess.getCastCompletionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression 
:
{ before(grammarAccess.getMultiplicativeExpressionRule()); }
	 ruleMultiplicativeExpression
{ after(grammarAccess.getMultiplicativeExpressionRule()); } 
	 EOF 
;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
(rule__MultiplicativeExpression__Group__0)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiplicativeOperator
entryRuleMultiplicativeOperator 
:
{ before(grammarAccess.getMultiplicativeOperatorRule()); }
	 ruleMultiplicativeOperator
{ after(grammarAccess.getMultiplicativeOperatorRule()); } 
	 EOF 
;

// Rule MultiplicativeOperator
ruleMultiplicativeOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
(rule__MultiplicativeOperator__Alternatives)
{ after(grammarAccess.getMultiplicativeOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression 
:
{ before(grammarAccess.getAdditiveExpressionRule()); }
	 ruleAdditiveExpression
{ after(grammarAccess.getAdditiveExpressionRule()); } 
	 EOF 
;

// Rule AdditiveExpression
ruleAdditiveExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
(rule__AdditiveExpression__Group__0)
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAdditiveOperator
entryRuleAdditiveOperator 
:
{ before(grammarAccess.getAdditiveOperatorRule()); }
	 ruleAdditiveOperator
{ after(grammarAccess.getAdditiveOperatorRule()); } 
	 EOF 
;

// Rule AdditiveOperator
ruleAdditiveOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
(rule__AdditiveOperator__Alternatives)
{ after(grammarAccess.getAdditiveOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShiftExpression
entryRuleShiftExpression 
:
{ before(grammarAccess.getShiftExpressionRule()); }
	 ruleShiftExpression
{ after(grammarAccess.getShiftExpressionRule()); } 
	 EOF 
;

// Rule ShiftExpression
ruleShiftExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftExpressionAccess().getGroup()); }
(rule__ShiftExpression__Group__0)
{ after(grammarAccess.getShiftExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleShiftOperator
entryRuleShiftOperator 
:
{ before(grammarAccess.getShiftOperatorRule()); }
	 ruleShiftOperator
{ after(grammarAccess.getShiftOperatorRule()); } 
	 EOF 
;

// Rule ShiftOperator
ruleShiftOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
(rule__ShiftOperator__Alternatives)
{ after(grammarAccess.getShiftOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression 
:
{ before(grammarAccess.getRelationalExpressionRule()); }
	 ruleRelationalExpression
{ after(grammarAccess.getRelationalExpressionRule()); } 
	 EOF 
;

// Rule RelationalExpression
ruleRelationalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup()); }
(rule__RelationalExpression__Group__0)
{ after(grammarAccess.getRelationalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator 
:
{ before(grammarAccess.getRelationalOperatorRule()); }
	 ruleRelationalOperator
{ after(grammarAccess.getRelationalOperatorRule()); } 
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
(rule__RelationalOperator__Alternatives)
{ after(grammarAccess.getRelationalOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationExpression
entryRuleClassificationExpression 
:
{ before(grammarAccess.getClassificationExpressionRule()); }
	 ruleClassificationExpression
{ after(grammarAccess.getClassificationExpressionRule()); } 
	 EOF 
;

// Rule ClassificationExpression
ruleClassificationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationExpressionAccess().getGroup()); }
(rule__ClassificationExpression__Group__0)
{ after(grammarAccess.getClassificationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationOperator
entryRuleClassificationOperator 
:
{ before(grammarAccess.getClassificationOperatorRule()); }
	 ruleClassificationOperator
{ after(grammarAccess.getClassificationOperatorRule()); } 
	 EOF 
;

// Rule ClassificationOperator
ruleClassificationOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
(rule__ClassificationOperator__Alternatives)
{ after(grammarAccess.getClassificationOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression 
:
{ before(grammarAccess.getEqualityExpressionRule()); }
	 ruleEqualityExpression
{ after(grammarAccess.getEqualityExpressionRule()); } 
	 EOF 
;

// Rule EqualityExpression
ruleEqualityExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup()); }
(rule__EqualityExpression__Group__0)
{ after(grammarAccess.getEqualityExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEqualityOperator
entryRuleEqualityOperator 
:
{ before(grammarAccess.getEqualityOperatorRule()); }
	 ruleEqualityOperator
{ after(grammarAccess.getEqualityOperatorRule()); } 
	 EOF 
;

// Rule EqualityOperator
ruleEqualityOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
(rule__EqualityOperator__Alternatives)
{ after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExclusiveOrExpression
entryRuleExclusiveOrExpression 
:
{ before(grammarAccess.getExclusiveOrExpressionRule()); }
	 ruleExclusiveOrExpression
{ after(grammarAccess.getExclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule ExclusiveOrExpression
ruleExclusiveOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
(rule__ExclusiveOrExpression__Group__0)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInclusiveOrExpression
entryRuleInclusiveOrExpression 
:
{ before(grammarAccess.getInclusiveOrExpressionRule()); }
	 ruleInclusiveOrExpression
{ after(grammarAccess.getInclusiveOrExpressionRule()); } 
	 EOF 
;

// Rule InclusiveOrExpression
ruleInclusiveOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
(rule__InclusiveOrExpression__Group__0)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalAndExpression
entryRuleConditionalAndExpression 
:
{ before(grammarAccess.getConditionalAndExpressionRule()); }
	 ruleConditionalAndExpression
{ after(grammarAccess.getConditionalAndExpressionRule()); } 
	 EOF 
;

// Rule ConditionalAndExpression
ruleConditionalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
(rule__ConditionalAndExpression__Group__0)
{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalOrExpression
entryRuleConditionalOrExpression 
:
{ before(grammarAccess.getConditionalOrExpressionRule()); }
	 ruleConditionalOrExpression
{ after(grammarAccess.getConditionalOrExpressionRule()); } 
	 EOF 
;

// Rule ConditionalOrExpression
ruleConditionalOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
(rule__ConditionalOrExpression__Group__0)
{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConditionalExpression
entryRuleConditionalExpression 
:
{ before(grammarAccess.getConditionalExpressionRule()); }
	 ruleConditionalExpression
{ after(grammarAccess.getConditionalExpressionRule()); } 
	 EOF 
;

// Rule ConditionalExpression
ruleConditionalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup()); }
(rule__ConditionalExpression__Group__0)
{ after(grammarAccess.getConditionalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentExpression
entryRuleAssignmentExpression 
:
{ before(grammarAccess.getAssignmentExpressionRule()); }
	 ruleAssignmentExpression
{ after(grammarAccess.getAssignmentExpressionRule()); } 
	 EOF 
;

// Rule AssignmentExpression
ruleAssignmentExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
(rule__AssignmentExpression__Group__0)
{ after(grammarAccess.getAssignmentExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLeftHandSide
entryRuleLeftHandSide 
:
{ before(grammarAccess.getLeftHandSideRule()); }
	 ruleLeftHandSide
{ after(grammarAccess.getLeftHandSideRule()); } 
	 EOF 
;

// Rule LeftHandSide
ruleLeftHandSide
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLeftHandSideAccess().getAlternatives()); }
(rule__LeftHandSide__Alternatives)
{ after(grammarAccess.getLeftHandSideAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNameLeftHandSide
entryRuleNameLeftHandSide 
:
{ before(grammarAccess.getNameLeftHandSideRule()); }
	 ruleNameLeftHandSide
{ after(grammarAccess.getNameLeftHandSideRule()); } 
	 EOF 
;

// Rule NameLeftHandSide
ruleNameLeftHandSide
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNameLeftHandSideAccess().getGroup()); }
(rule__NameLeftHandSide__Group__0)
{ after(grammarAccess.getNameLeftHandSideAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeatureLeftHandSide
entryRuleFeatureLeftHandSide 
:
{ before(grammarAccess.getFeatureLeftHandSideRule()); }
	 ruleFeatureLeftHandSide
{ after(grammarAccess.getFeatureLeftHandSideRule()); } 
	 EOF 
;

// Rule FeatureLeftHandSide
ruleFeatureLeftHandSide
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureLeftHandSideAccess().getExpressionAssignment()); }
(rule__FeatureLeftHandSide__ExpressionAssignment)
{ after(grammarAccess.getFeatureLeftHandSideAccess().getExpressionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignmentOperator
entryRuleAssignmentOperator 
:
{ before(grammarAccess.getAssignmentOperatorRule()); }
	 ruleAssignmentOperator
{ after(grammarAccess.getAssignmentOperatorRule()); } 
	 EOF 
;

// Rule AssignmentOperator
ruleAssignmentOperator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
(rule__AssignmentOperator__Alternatives)
{ after(grammarAccess.getAssignmentOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleDocumentedStatement
entryRuleDocumentedStatement 
:
{ before(grammarAccess.getDocumentedStatementRule()); }
	 ruleDocumentedStatement
{ after(grammarAccess.getDocumentedStatementRule()); } 
	 EOF 
;

// Rule DocumentedStatement
ruleDocumentedStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDocumentedStatementAccess().getAnnotatedStatementParserRuleCall()); }
	ruleAnnotatedStatement
{ after(grammarAccess.getDocumentedStatementAccess().getAnnotatedStatementParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotatedStatement
entryRuleAnnotatedStatement 
:
{ before(grammarAccess.getAnnotatedStatementRule()); }
	 ruleAnnotatedStatement
{ after(grammarAccess.getAnnotatedStatementRule()); } 
	 EOF 
;

// Rule AnnotatedStatement
ruleAnnotatedStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getGroup()); }
(rule__AnnotatedStatement__Group__0)
{ after(grammarAccess.getAnnotatedStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInLineStatement
entryRuleInLineStatement 
:
{ before(grammarAccess.getInLineStatementRule()); }
	 ruleInLineStatement
{ after(grammarAccess.getInLineStatementRule()); } 
	 EOF 
;

// Rule InLineStatement
ruleInLineStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInLineStatementAccess().getCodeAssignment()); }
(rule__InLineStatement__CodeAssignment)
{ after(grammarAccess.getInLineStatementAccess().getCodeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlockStatement
entryRuleBlockStatement 
:
{ before(grammarAccess.getBlockStatementRule()); }
	 ruleBlockStatement
{ after(grammarAccess.getBlockStatementRule()); } 
	 EOF 
;

// Rule BlockStatement
ruleBlockStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockStatementAccess().getBlockAssignment()); }
(rule__BlockStatement__BlockAssignment)
{ after(grammarAccess.getBlockStatementAccess().getBlockAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmptyStatement
entryRuleEmptyStatement 
:
{ before(grammarAccess.getEmptyStatementRule()); }
	 ruleEmptyStatement
{ after(grammarAccess.getEmptyStatementRule()); } 
	 EOF 
;

// Rule EmptyStatement
ruleEmptyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmptyStatementAccess().getGroup()); }
(rule__EmptyStatement__Group__0)
{ after(grammarAccess.getEmptyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalNameDeclarationStatement
entryRuleLocalNameDeclarationStatement 
:
{ before(grammarAccess.getLocalNameDeclarationStatementRule()); }
	 ruleLocalNameDeclarationStatement
{ after(grammarAccess.getLocalNameDeclarationStatementRule()); } 
	 EOF 
;

// Rule LocalNameDeclarationStatement
ruleLocalNameDeclarationStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup()); }
(rule__LocalNameDeclarationStatement__Group__0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInitializationExpression
entryRuleInitializationExpression 
:
{ before(grammarAccess.getInitializationExpressionRule()); }
	 ruleInitializationExpression
{ after(grammarAccess.getInitializationExpressionRule()); } 
	 EOF 
;

// Rule InitializationExpression
ruleInitializationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInitializationExpressionAccess().getAlternatives()); }
(rule__InitializationExpression__Alternatives)
{ after(grammarAccess.getInitializationExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceInitializationExpression
entryRuleInstanceInitializationExpression 
:
{ before(grammarAccess.getInstanceInitializationExpressionRule()); }
	 ruleInstanceInitializationExpression
{ after(grammarAccess.getInstanceInitializationExpressionRule()); } 
	 EOF 
;

// Rule InstanceInitializationExpression
ruleInstanceInitializationExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getGroup()); }
(rule__InstanceInitializationExpression__Group__0)
{ after(grammarAccess.getInstanceInitializationExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpressionStatement
entryRuleExpressionStatement 
:
{ before(grammarAccess.getExpressionStatementRule()); }
	 ruleExpressionStatement
{ after(grammarAccess.getExpressionStatementRule()); } 
	 EOF 
;

// Rule ExpressionStatement
ruleExpressionStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionStatementAccess().getGroup()); }
(rule__ExpressionStatement__Group__0)
{ after(grammarAccess.getExpressionStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfStatement
entryRuleIfStatement 
:
{ before(grammarAccess.getIfStatementRule()); }
	 ruleIfStatement
{ after(grammarAccess.getIfStatementRule()); } 
	 EOF 
;

// Rule IfStatement
ruleIfStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfStatementAccess().getGroup()); }
(rule__IfStatement__Group__0)
{ after(grammarAccess.getIfStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConcurrentClauses
entryRuleConcurrentClauses 
:
{ before(grammarAccess.getConcurrentClausesRule()); }
	 ruleConcurrentClauses
{ after(grammarAccess.getConcurrentClausesRule()); } 
	 EOF 
;

// Rule ConcurrentClauses
ruleConcurrentClauses
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConcurrentClausesAccess().getGroup()); }
(rule__ConcurrentClauses__Group__0)
{ after(grammarAccess.getConcurrentClausesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonFinalClause
entryRuleNonFinalClause 
:
{ before(grammarAccess.getNonFinalClauseRule()); }
	 ruleNonFinalClause
{ after(grammarAccess.getNonFinalClauseRule()); } 
	 EOF 
;

// Rule NonFinalClause
ruleNonFinalClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonFinalClauseAccess().getGroup()); }
(rule__NonFinalClause__Group__0)
{ after(grammarAccess.getNonFinalClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchStatement
entryRuleSwitchStatement 
:
{ before(grammarAccess.getSwitchStatementRule()); }
	 ruleSwitchStatement
{ after(grammarAccess.getSwitchStatementRule()); } 
	 EOF 
;

// Rule SwitchStatement
ruleSwitchStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchStatementAccess().getGroup()); }
(rule__SwitchStatement__Group__0)
{ after(grammarAccess.getSwitchStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchClause
entryRuleSwitchClause 
:
{ before(grammarAccess.getSwitchClauseRule()); }
	 ruleSwitchClause
{ after(grammarAccess.getSwitchClauseRule()); } 
	 EOF 
;

// Rule SwitchClause
ruleSwitchClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchClauseAccess().getGroup()); }
(rule__SwitchClause__Group__0)
{ after(grammarAccess.getSwitchClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchCase
entryRuleSwitchCase 
:
{ before(grammarAccess.getSwitchCaseRule()); }
	 ruleSwitchCase
{ after(grammarAccess.getSwitchCaseRule()); } 
	 EOF 
;

// Rule SwitchCase
ruleSwitchCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchCaseAccess().getGroup()); }
(rule__SwitchCase__Group__0)
{ after(grammarAccess.getSwitchCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSwitchDefaultClause
entryRuleSwitchDefaultClause 
:
{ before(grammarAccess.getSwitchDefaultClauseRule()); }
	 ruleSwitchDefaultClause
{ after(grammarAccess.getSwitchDefaultClauseRule()); } 
	 EOF 
;

// Rule SwitchDefaultClause
ruleSwitchDefaultClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getGroup()); }
(rule__SwitchDefaultClause__Group__0)
{ after(grammarAccess.getSwitchDefaultClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonEmptyStatementSequence
entryRuleNonEmptyStatementSequence 
:
{ before(grammarAccess.getNonEmptyStatementSequenceRule()); }
	 ruleNonEmptyStatementSequence
{ after(grammarAccess.getNonEmptyStatementSequenceRule()); } 
	 EOF 
;

// Rule NonEmptyStatementSequence
ruleNonEmptyStatementSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
(rule__NonEmptyStatementSequence__StatementAssignment)
{ after(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
)
(
{ before(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
(rule__NonEmptyStatementSequence__StatementAssignment)*
{ after(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWhileStatement
entryRuleWhileStatement 
:
{ before(grammarAccess.getWhileStatementRule()); }
	 ruleWhileStatement
{ after(grammarAccess.getWhileStatementRule()); } 
	 EOF 
;

// Rule WhileStatement
ruleWhileStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWhileStatementAccess().getGroup()); }
(rule__WhileStatement__Group__0)
{ after(grammarAccess.getWhileStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoStatement
entryRuleDoStatement 
:
{ before(grammarAccess.getDoStatementRule()); }
	 ruleDoStatement
{ after(grammarAccess.getDoStatementRule()); } 
	 EOF 
;

// Rule DoStatement
ruleDoStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoStatementAccess().getGroup()); }
(rule__DoStatement__Group__0)
{ after(grammarAccess.getDoStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForStatement
entryRuleForStatement 
:
{ before(grammarAccess.getForStatementRule()); }
	 ruleForStatement
{ after(grammarAccess.getForStatementRule()); } 
	 EOF 
;

// Rule ForStatement
ruleForStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForStatementAccess().getGroup()); }
(rule__ForStatement__Group__0)
{ after(grammarAccess.getForStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopVariableDefinition
entryRuleLoopVariableDefinition 
:
{ before(grammarAccess.getLoopVariableDefinitionRule()); }
	 ruleLoopVariableDefinition
{ after(grammarAccess.getLoopVariableDefinitionRule()); } 
	 EOF 
;

// Rule LoopVariableDefinition
ruleLoopVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getAlternatives()); }
(rule__LoopVariableDefinition__Alternatives)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakStatement
entryRuleBreakStatement 
:
{ before(grammarAccess.getBreakStatementRule()); }
	 ruleBreakStatement
{ after(grammarAccess.getBreakStatementRule()); } 
	 EOF 
;

// Rule BreakStatement
ruleBreakStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakStatementAccess().getGroup()); }
(rule__BreakStatement__Group__0)
{ after(grammarAccess.getBreakStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnStatement
entryRuleReturnStatement 
:
{ before(grammarAccess.getReturnStatementRule()); }
	 ruleReturnStatement
{ after(grammarAccess.getReturnStatementRule()); } 
	 EOF 
;

// Rule ReturnStatement
ruleReturnStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnStatementAccess().getGroup()); }
(rule__ReturnStatement__Group__0)
{ after(grammarAccess.getReturnStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAcceptStatement
entryRuleAcceptStatement 
:
{ before(grammarAccess.getAcceptStatementRule()); }
	 ruleAcceptStatement
{ after(grammarAccess.getAcceptStatementRule()); } 
	 EOF 
;

// Rule AcceptStatement
ruleAcceptStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAcceptStatementAccess().getAlternatives()); }
(rule__AcceptStatement__Alternatives)
{ after(grammarAccess.getAcceptStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAcceptBlock
entryRuleAcceptBlock 
:
{ before(grammarAccess.getAcceptBlockRule()); }
	 ruleAcceptBlock
{ after(grammarAccess.getAcceptBlockRule()); } 
	 EOF 
;

// Rule AcceptBlock
ruleAcceptBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAcceptBlockAccess().getGroup()); }
(rule__AcceptBlock__Group__0)
{ after(grammarAccess.getAcceptBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAcceptClause
entryRuleAcceptClause 
:
{ before(grammarAccess.getAcceptClauseRule()); }
	 ruleAcceptClause
{ after(grammarAccess.getAcceptClauseRule()); } 
	 EOF 
;

// Rule AcceptClause
ruleAcceptClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAcceptClauseAccess().getGroup()); }
(rule__AcceptClause__Group__0)
{ after(grammarAccess.getAcceptClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifyStatement
entryRuleClassifyStatement 
:
{ before(grammarAccess.getClassifyStatementRule()); }
	 ruleClassifyStatement
{ after(grammarAccess.getClassifyStatementRule()); } 
	 EOF 
;

// Rule ClassifyStatement
ruleClassifyStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassifyStatementAccess().getGroup()); }
(rule__ClassifyStatement__Group__0)
{ after(grammarAccess.getClassifyStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationFromClause
entryRuleClassificationFromClause 
:
{ before(grammarAccess.getClassificationFromClauseRule()); }
	 ruleClassificationFromClause
{ after(grammarAccess.getClassificationFromClauseRule()); } 
	 EOF 
;

// Rule ClassificationFromClause
ruleClassificationFromClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationFromClauseAccess().getGroup()); }
(rule__ClassificationFromClause__Group__0)
{ after(grammarAccess.getClassificationFromClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassificationToClause
entryRuleClassificationToClause 
:
{ before(grammarAccess.getClassificationToClauseRule()); }
	 ruleClassificationToClause
{ after(grammarAccess.getClassificationToClauseRule()); } 
	 EOF 
;

// Rule ClassificationToClause
ruleClassificationToClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassificationToClauseAccess().getGroup()); }
(rule__ClassificationToClause__Group__0)
{ after(grammarAccess.getClassificationToClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReclassifyAllClause
entryRuleReclassifyAllClause 
:
{ before(grammarAccess.getReclassifyAllClauseRule()); }
	 ruleReclassifyAllClause
{ after(grammarAccess.getReclassifyAllClauseRule()); } 
	 EOF 
;

// Rule ReclassifyAllClause
ruleReclassifyAllClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReclassifyAllClauseAccess().getGroup()); }
(rule__ReclassifyAllClause__Group__0)
{ after(grammarAccess.getReclassifyAllClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameList
entryRuleQualifiedNameList 
:
{ before(grammarAccess.getQualifiedNameListRule()); }
	 ruleQualifiedNameList
{ after(grammarAccess.getQualifiedNameListRule()); } 
	 EOF 
;

// Rule QualifiedNameList
ruleQualifiedNameList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameListAccess().getGroup()); }
(rule__QualifiedNameList__Group__0)
{ after(grammarAccess.getQualifiedNameListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__StereotypeAnnotation__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getNamesAssignment_2_1_0()); }
(rule__StereotypeAnnotation__NamesAssignment_2_1_0)
{ after(grammarAccess.getStereotypeAnnotationAccess().getNamesAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesAssignment_2_1_1()); }
(rule__StereotypeAnnotation__TaggedValuesAssignment_2_1_1)
{ after(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValueAssignment_2_0()); }
(rule__TaggedValue__ValueAssignment_2_0)
{ after(grammarAccess.getTaggedValueAccess().getValueAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getTaggedValueAccess().getGroup_2_1()); }
(rule__TaggedValue__Group_2_1__0)
{ after(grammarAccess.getTaggedValueAccess().getGroup_2_1()); }
)

    |(
{ before(grammarAccess.getTaggedValueAccess().getValueAssignment_2_2()); }
(rule__TaggedValue__ValueAssignment_2_2)
{ after(grammarAccess.getTaggedValueAccess().getValueAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getTaggedValueAccess().getValueAssignment_2_3()); }
(rule__TaggedValue__ValueAssignment_2_3)
{ after(grammarAccess.getTaggedValueAccess().getValueAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getPackageImportReferenceParserRuleCall_0_0()); }
	rulePackageImportReference
{ after(grammarAccess.getImportDeclarationAccess().getPackageImportReferenceParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getImportDeclarationAccess().getElementImportReferenceParserRuleCall_0_1()); }
	ruleElementImportReference
{ after(grammarAccess.getImportDeclarationAccess().getElementImportReferenceParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_0()); }
(rule__PackageImportQualifiedName__Group_1_0__0)
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_1()); }
(rule__PackageImportQualifiedName__Group_1_1__0)
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportVisibilityIndicator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportVisibilityIndicatorAccess().getPublicKeyword_0()); }

	'public' 

{ after(grammarAccess.getImportVisibilityIndicatorAccess().getPublicKeyword_0()); }
)

    |(
{ before(grammarAccess.getImportVisibilityIndicatorAccess().getPrivateKeyword_1()); }

	'private' 

{ after(grammarAccess.getImportVisibilityIndicatorAccess().getPrivateKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDefinitionAccess().getPackageDefinitionParserRuleCall_0()); }
	rulePackageDefinition
{ after(grammarAccess.getNamespaceDefinitionAccess().getPackageDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNamespaceDefinitionAccess().getClassifierDefinitionParserRuleCall_1()); }
	ruleClassifierDefinition
{ after(grammarAccess.getNamespaceDefinitionAccess().getClassifierDefinitionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibilityIndicator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityIndicatorAccess().getImportVisibilityIndicatorParserRuleCall_0()); }
	ruleImportVisibilityIndicator
{ after(grammarAccess.getVisibilityIndicatorAccess().getImportVisibilityIndicatorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVisibilityIndicatorAccess().getProtectedKeyword_1()); }

	'protected' 

{ after(grammarAccess.getVisibilityIndicatorAccess().getProtectedKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getIsStubAssignment_2_0()); }
(rule__PackageDefinitionOrStub__IsStubAssignment_2_0)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getIsStubAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getGroup_2_1()); }
(rule__PackageDefinitionOrStub__Group_2_1__0)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElementDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementDefinitionAccess().getPackageDefinitionOrStubParserRuleCall_0()); }
	rulePackageDefinitionOrStub
{ after(grammarAccess.getPackagedElementDefinitionAccess().getPackageDefinitionOrStubParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPackagedElementDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_1()); }
	ruleClassifierDefinitionOrStub
{ after(grammarAccess.getPackagedElementDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDefinitionAccess().getClassDefinitionParserRuleCall_0()); }
	ruleClassDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getClassDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getActiveClassDefinitionParserRuleCall_1()); }
	ruleActiveClassDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getActiveClassDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getDataTypeDefinitionParserRuleCall_2()); }
	ruleDataTypeDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getDataTypeDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getEnumerationDefinitionParserRuleCall_3()); }
	ruleEnumerationDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getEnumerationDefinitionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getAssociationDefinitionParserRuleCall_4()); }
	ruleAssociationDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getAssociationDefinitionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getSignalDefinitionParserRuleCall_5()); }
	ruleSignalDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getSignalDefinitionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionAccess().getActivityDefinitionParserRuleCall_6()); }
	ruleActivityDefinition
{ after(grammarAccess.getClassifierDefinitionAccess().getActivityDefinitionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierDefinitionOrStub__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getClassDefinitionOrStubParserRuleCall_0()); }
	ruleClassDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getClassDefinitionOrStubParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getActiveClassDefinitionOrStubParserRuleCall_1()); }
	ruleActiveClassDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getActiveClassDefinitionOrStubParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getDataTypeDefinitionOrStubParserRuleCall_2()); }
	ruleDataTypeDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getDataTypeDefinitionOrStubParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getEnumerationDefinitionOrStubParserRuleCall_3()); }
	ruleEnumerationDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getEnumerationDefinitionOrStubParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getAssociationDefinitionOrStubParserRuleCall_4()); }
	ruleAssociationDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getAssociationDefinitionOrStubParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getSignalDefinitionOrStubParserRuleCall_5()); }
	ruleSignalDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getSignalDefinitionOrStubParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getClassifierDefinitionOrStubAccess().getActivityDefinitionOrStubParserRuleCall_6()); }
	ruleActivityDefinitionOrStub
{ after(grammarAccess.getClassifierDefinitionOrStubAccess().getActivityDefinitionOrStubParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__ClassDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getGroup_1_1()); }
(rule__ClassDefinitionOrStub__Group_1_1__0)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMemberDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_0()); }
	ruleClassifierDefinitionOrStub
{ after(grammarAccess.getClassMemberDefinitionAccess().getClassifierDefinitionOrStubParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getClassMemberDefinitionAccess().getFeatureDefinitionOrStubParserRuleCall_1()); }
	ruleFeatureDefinitionOrStub
{ after(grammarAccess.getClassMemberDefinitionAccess().getFeatureDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__ActiveClassDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup_1_1()); }
(rule__ActiveClassDefinitionOrStub__Group_1_1__0)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorClause__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorClauseAccess().getBodyAssignment_0()); }
(rule__BehaviorClause__BodyAssignment_0)
{ after(grammarAccess.getBehaviorClauseAccess().getBodyAssignment_0()); }
)

    |(
{ before(grammarAccess.getBehaviorClauseAccess().getNameAssignment_1()); }
(rule__BehaviorClause__NameAssignment_1)
{ after(grammarAccess.getBehaviorClauseAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMemberDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberDefinitionAccess().getClassMemberDefinitionParserRuleCall_0()); }
	ruleClassMemberDefinition
{ after(grammarAccess.getActiveClassMemberDefinitionAccess().getClassMemberDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActiveClassMemberDefinitionAccess().getActiveFeatureDefinitionOrStubParserRuleCall_1()); }
	ruleActiveFeatureDefinitionOrStub
{ after(grammarAccess.getActiveClassMemberDefinitionAccess().getActiveFeatureDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__DataTypeDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getGroup_1_1()); }
(rule__DataTypeDefinitionOrStub__Group_1_1__0)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__AssociationDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getGroup_1_1()); }
(rule__AssociationDefinitionOrStub__Group_1_1__0)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__EnumerationDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup_1_1()); }
(rule__EnumerationDefinitionOrStub__Group_1_1__0)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__SignalDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getGroup_1_1()); }
(rule__SignalDefinitionOrStub__Group_1_1__0)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__ActivityDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getBodyAssignment_1_1()); }
(rule__ActivityDefinitionOrStub__BodyAssignment_1_1)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDirection__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDirectionAccess().getInKeyword_0()); }

	'in' 

{ after(grammarAccess.getParameterDirectionAccess().getInKeyword_0()); }
)

    |(
{ before(grammarAccess.getParameterDirectionAccess().getOutKeyword_1()); }

	'out' 

{ after(grammarAccess.getParameterDirectionAccess().getOutKeyword_1()); }
)

    |(
{ before(grammarAccess.getParameterDirectionAccess().getInoutKeyword_2()); }

	'inout' 

{ after(grammarAccess.getParameterDirectionAccess().getInoutKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureDefinitionOrStub__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureDefinitionOrStubAccess().getAttributeDefinitionParserRuleCall_0()); }
	ruleAttributeDefinition
{ after(grammarAccess.getFeatureDefinitionOrStubAccess().getAttributeDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureDefinitionOrStubAccess().getOperationDefinitionOrStubParserRuleCall_1()); }
	ruleOperationDefinitionOrStub
{ after(grammarAccess.getFeatureDefinitionOrStubAccess().getOperationDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveFeatureDefinitionOrStub__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getReceptionDefinitionParserRuleCall_0()); }
	ruleReceptionDefinition
{ after(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getReceptionDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getSignalReceptionDefinitionOrStubParserRuleCall_1()); }
	ruleSignalReceptionDefinitionOrStub
{ after(grammarAccess.getActiveFeatureDefinitionOrStubAccess().getSignalReceptionDefinitionOrStubParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsAnyAssignment_0_0()); }
(rule__TypePart__IsAnyAssignment_0_0)
{ after(grammarAccess.getTypePartAccess().getIsAnyAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getTypePartAccess().getTypeNameAssignment_0_1()); }
(rule__TypePart__TypeNameAssignment_0_1)
{ after(grammarAccess.getTypePartAccess().getTypeNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Alternatives_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsMultiplicityAssignment_1_0_1_0()); }
(rule__TypePart__IsMultiplicityAssignment_1_0_1_0)
{ after(grammarAccess.getTypePartAccess().getIsMultiplicityAssignment_1_0_1_0()); }
)

    |(
{ before(grammarAccess.getTypePartAccess().getGroup_1_0_1_1()); }
(rule__TypePart__Group_1_0_1_1__0)
{ after(grammarAccess.getTypePartAccess().getGroup_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getGroup_1_1_0()); }
(rule__TypePart__Group_1_1_0__0)
{ after(grammarAccess.getTypePartAccess().getGroup_1_1_0()); }
)

    |(
{ before(grammarAccess.getTypePartAccess().getGroup_1_1_1()); }
(rule__TypePart__Group_1_1_1__0)
{ after(grammarAccess.getTypePartAccess().getGroup_1_1_1()); }
)

    |(
{ before(grammarAccess.getTypePartAccess().getIsSequenceAssignment_1_1_2()); }
(rule__TypePart__IsSequenceAssignment_1_1_2)
{ after(grammarAccess.getTypePartAccess().getIsSequenceAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnlimitedNaturalLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getNATURAL_VALUETerminalRuleCall_0()); }
	RULE_NATURAL_VALUE
{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getNATURAL_VALUETerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnlimitedNaturalLiteralAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getUnlimitedNaturalLiteralAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__OperationDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getBodyAssignment_1_1()); }
(rule__OperationDefinitionOrStub__BodyAssignment_1_1)
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getBodyAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
(rule__SignalReceptionDefinitionOrStub__IsStubAssignment_1_0)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getIsStubAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getGroup_1_1()); }
(rule__SignalReceptionDefinitionOrStub__Group_1_1__0)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getNameAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
	RULE_UNRESTRICTED_NAME
{ after(grammarAccess.getNameAccess().getUNRESTRICTED_NAMETerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1_0()); }
(rule__QualifiedName__Group_1_0__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1_0()); }
)
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1_0()); }
(rule__QualifiedName__Group_1_0__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1_0()); }
)
)

    |(
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); }
(rule__QualifiedName__Group_1_1__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); }
(rule__QualifiedName__Group_1_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_0()); }
(rule__PotentiallyAmbiguousQualifiedName__Group_1_0__0)
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_0()); }
)
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_0()); }
(rule__PotentiallyAmbiguousQualifiedName__Group_1_0__0)*
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_0()); }
)
)

    |(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_1()); }
(rule__PotentiallyAmbiguousQualifiedName__Group_1_1__0)
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getNamedTemplateBindingParserRuleCall_1_0()); }
	ruleNamedTemplateBinding
{ after(grammarAccess.getTemplateBindingAccess().getNamedTemplateBindingParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getTemplateBindingAccess().getPositionalTemplateBindingParserRuleCall_1_1()); }
	rulePositionalTemplateBinding
{ after(grammarAccess.getTemplateBindingAccess().getPositionalTemplateBindingParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); }
	ruleAssignmentExpression
{ after(grammarAccess.getExpressionAccess().getAssignmentExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_1()); }
	ruleConditionalExpression
{ after(grammarAccess.getExpressionAccess().getConditionalExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_0()); }
(rule__PrimaryExpression__Group_1_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_1()); }
(rule__PrimaryExpression__Group_1_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2()); }
(rule__PrimaryExpression__Group_1_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_3()); }
(rule__PrimaryExpression__Group_1_3__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_2_0()); }
(rule__PrimaryExpression__Group_1_2_2_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_2_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_2_1()); }
(rule__PrimaryExpression__Group_1_2_2_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_2_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_2_2()); }
(rule__PrimaryExpression__Group_1_2_2_2__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BaseExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_0()); }
	ruleLiteralExpression
{ after(grammarAccess.getBaseExpressionAccess().getLiteralExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getThisExpressionParserRuleCall_1()); }
	ruleThisExpression
{ after(grammarAccess.getBaseExpressionAccess().getThisExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getSuperInvocationExpressionParserRuleCall_2()); }
	ruleSuperInvocationExpression
{ after(grammarAccess.getBaseExpressionAccess().getSuperInvocationExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getInstanceCreationOrSequenceConstructionExpressionParserRuleCall_3()); }
	ruleInstanceCreationOrSequenceConstructionExpression
{ after(grammarAccess.getBaseExpressionAccess().getInstanceCreationOrSequenceConstructionExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getClassExtentExpressionParserRuleCall_4()); }
	ruleClassExtentExpression
{ after(grammarAccess.getBaseExpressionAccess().getClassExtentExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getLinkOperationExpressionParserRuleCall_5()); }
	ruleLinkOperationExpression
{ after(grammarAccess.getBaseExpressionAccess().getLinkOperationExpressionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getSequenceConstructionExpressionParserRuleCall_6()); }
	ruleSequenceConstructionExpression
{ after(grammarAccess.getBaseExpressionAccess().getSequenceConstructionExpressionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getSequenceOperationOrReductionOrExpansionExpressionParserRuleCall_7()); }
	ruleSequenceOperationOrReductionOrExpansionExpression
{ after(grammarAccess.getBaseExpressionAccess().getSequenceOperationOrReductionOrExpansionExpressionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getBehaviorInvocationExpressionParserRuleCall_8()); }
	ruleBehaviorInvocationExpression
{ after(grammarAccess.getBaseExpressionAccess().getBehaviorInvocationExpressionParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getNameExpressionParserRuleCall_9()); }
	ruleNameExpression
{ after(grammarAccess.getBaseExpressionAccess().getNameExpressionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getBaseExpressionAccess().getParenthesizedExpressionParserRuleCall_10()); }
	ruleParenthesizedExpression
{ after(grammarAccess.getBaseExpressionAccess().getParenthesizedExpressionParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LiteralExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0()); }
	ruleBooleanLiteralExpression
{ after(grammarAccess.getLiteralExpressionAccess().getBooleanLiteralExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_1()); }
	ruleNaturalLiteralExpression
{ after(grammarAccess.getLiteralExpressionAccess().getNaturalLiteralExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getUnboundedLiteralExpressionParserRuleCall_2()); }
	ruleUnboundedLiteralExpression
{ after(grammarAccess.getLiteralExpressionAccess().getUnboundedLiteralExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_3()); }
	ruleStringLiteralExpression
{ after(grammarAccess.getLiteralExpressionAccess().getStringLiteralExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getGroup_0()); }
(rule__ThisExpression__Group_0__0)
{ after(grammarAccess.getThisExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getThisExpressionAccess().getGroup_1()); }
(rule__ThisExpression__Group_1__0)
{ after(grammarAccess.getThisExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getNamedTupleExpressionListParserRuleCall_1_0()); }
	ruleNamedTupleExpressionList
{ after(grammarAccess.getTupleAccess().getNamedTupleExpressionListParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getTupleAccess().getPositionalTupleExpressionListParserRuleCall_1_1()); }
	rulePositionalTupleExpressionList
{ after(grammarAccess.getTupleAccess().getPositionalTupleExpressionListParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup_1_0()); }
(rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__0)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup_1_1()); }
(rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__0)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationAccess().getCreateLinkKeyword_0()); }

	'createLink' 

{ after(grammarAccess.getLinkOperationAccess().getCreateLinkKeyword_0()); }
)

    |(
{ before(grammarAccess.getLinkOperationAccess().getDestroyLinkKeyword_1()); }

	'destroyLink' 

{ after(grammarAccess.getLinkOperationAccess().getDestroyLinkKeyword_1()); }
)

    |(
{ before(grammarAccess.getLinkOperationAccess().getClearAssocKeyword_2()); }

	'clearAssoc' 

{ after(grammarAccess.getLinkOperationAccess().getClearAssocKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getIndexedNamedTupleExpressionListParserRuleCall_1_0()); }
	ruleIndexedNamedTupleExpressionList
{ after(grammarAccess.getLinkOperationTupleAccess().getIndexedNamedTupleExpressionListParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListParserRuleCall_1_1()); }
	rulePositionalTupleExpressionList
{ after(grammarAccess.getLinkOperationTupleAccess().getPositionalTupleExpressionListParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_0()); }
(rule__SequenceConstructionExpression__Group_0__0)
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityAssignment_1()); }
(rule__SequenceConstructionExpression__HasMultiplicityAssignment_1)
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getIsAnyAssignment_0_0_0()); }
(rule__SequenceConstructionExpression__IsAnyAssignment_0_0_0)
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getIsAnyAssignment_0_0_0()); }
)

    |(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getTypeNameAssignment_0_0_1()); }
(rule__SequenceConstructionExpression__TypeNameAssignment_0_0_1)
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getTypeNameAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElements__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceRangeParserRuleCall_0()); }
	ruleSequenceRange
{ after(grammarAccess.getSequenceElementsAccess().getSequenceRangeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSequenceElementsAccess().getSequenceExpressionListParserRuleCall_1()); }
	ruleSequenceExpressionList
{ after(grammarAccess.getSequenceElementsAccess().getSequenceExpressionListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceElementAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getSequenceElementAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSequenceElementAccess().getSequenceInitializationExpressionParserRuleCall_1()); }
	ruleSequenceInitializationExpression
{ after(grammarAccess.getSequenceElementAccess().getSequenceInitializationExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup_3_0()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup_3_1()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup_3_1()); }
)

    |(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup_3_2()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__0)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AffixOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAffixOperatorAccess().getPlusSignPlusSignKeyword_0()); }

	'++' 

{ after(grammarAccess.getAffixOperatorAccess().getPlusSignPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getAffixOperatorAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	'--' 

{ after(grammarAccess.getAffixOperatorAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryExpressionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
	rulePostfixOrCastExpression
{ after(grammarAccess.getUnaryExpressionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryExpressionAccess().getNonPostfixNonCastUnaryExpressionParserRuleCall_1()); }
	ruleNonPostfixNonCastUnaryExpression
{ after(grammarAccess.getUnaryExpressionAccess().getNonPostfixNonCastUnaryExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixOrCastExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
	rulePostfixExpression
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getPostfixExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getCastExpressionParserRuleCall_1()); }
	ruleCastExpression
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getCastExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPostfixOrCastExpressionAccess().getPrimaryExpressionParserRuleCall_2()); }
	rulePrimaryExpression
{ after(grammarAccess.getPostfixOrCastExpressionAccess().getPrimaryExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonPostfixNonCastUnaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getPrefixExpressionParserRuleCall_0()); }
	rulePrefixExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getPrefixExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getNumericUnaryExpressionParserRuleCall_1()); }
	ruleNumericUnaryExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getNumericUnaryExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBooleanUnaryExpressionParserRuleCall_2()); }
	ruleBooleanUnaryExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBooleanUnaryExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBitStringUnaryExpressionParserRuleCall_3()); }
	ruleBitStringUnaryExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getBitStringUnaryExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getIsolationExpressionParserRuleCall_4()); }
	ruleIsolationExpression
{ after(grammarAccess.getNonPostfixNonCastUnaryExpressionAccess().getIsolationExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryOperatorAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getNumericUnaryOperatorAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getNumericUnaryOperatorAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getNumericUnaryOperatorAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getIsAnyAssignment_1_0()); }
(rule__CastExpression__IsAnyAssignment_1_0)
{ after(grammarAccess.getCastExpressionAccess().getIsAnyAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getCastExpressionAccess().getTypeNameAssignment_1_1()); }
(rule__CastExpression__TypeNameAssignment_1_1)
{ after(grammarAccess.getCastExpressionAccess().getTypeNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastCompletion__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastCompletionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
	rulePostfixOrCastExpression
{ after(grammarAccess.getCastCompletionAccess().getPostfixOrCastExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCastCompletionAccess().getBooleanUnaryExpressionParserRuleCall_1()); }
	ruleBooleanUnaryExpression
{ after(grammarAccess.getCastCompletionAccess().getBooleanUnaryExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCastCompletionAccess().getBitStringUnaryExpressionParserRuleCall_2()); }
	ruleBitStringUnaryExpression
{ after(grammarAccess.getCastCompletionAccess().getBitStringUnaryExpressionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCastCompletionAccess().getIsolationExpressionParserRuleCall_3()); }
	ruleIsolationExpression
{ after(grammarAccess.getCastCompletionAccess().getIsolationExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getMultiplicativeOperatorAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getMultiplicativeOperatorAccess().getSolidusKeyword_1()); }
)

    |(
{ before(grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2()); }

	'%' 

{ after(grammarAccess.getMultiplicativeOperatorAccess().getPercentSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getAdditiveOperatorAccess().getPlusSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getAdditiveOperatorAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftOperatorAccess().getLessThanSignLessThanSignKeyword_0()); }

	'<<' 

{ after(grammarAccess.getShiftOperatorAccess().getLessThanSignLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getShiftOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }

	'>>' 

{ after(grammarAccess.getShiftOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getShiftOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_2()); }

	'>>>' 

{ after(grammarAccess.getShiftOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }

	'<=' 

{ after(grammarAccess.getRelationalOperatorAccess().getLessThanSignEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }

	'>=' 

{ after(grammarAccess.getRelationalOperatorAccess().getGreaterThanSignEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0()); }

	'instanceof' 

{ after(grammarAccess.getClassificationOperatorAccess().getInstanceofKeyword_0()); }
)

    |(
{ before(grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1()); }

	'hastype' 

{ after(grammarAccess.getClassificationOperatorAccess().getHastypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }

	'==' 

{ after(grammarAccess.getEqualityOperatorAccess().getEqualsSignEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }

	'!=' 

{ after(grammarAccess.getEqualityOperatorAccess().getExclamationMarkEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LeftHandSide__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLeftHandSideAccess().getNameLeftHandSideParserRuleCall_0()); }
	ruleNameLeftHandSide
{ after(grammarAccess.getLeftHandSideAccess().getNameLeftHandSideParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLeftHandSideAccess().getFeatureLeftHandSideParserRuleCall_1()); }
	ruleFeatureLeftHandSide
{ after(grammarAccess.getLeftHandSideAccess().getFeatureLeftHandSideParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getEqualsSignKeyword_0()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); }

	'+=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getPlusSignEqualsSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); }

	'-=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getHyphenMinusEqualsSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); }

	'*=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getAsteriskEqualsSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); }

	'/=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getSolidusEqualsSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); }

	'%=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getPercentSignEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_6()); }

	'&=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getAmpersandEqualsSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_7()); }

	'|=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getVerticalLineEqualsSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_8()); }

	'^=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getCircumflexAccentEqualsSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_9()); }

	'<<=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getLessThanSignLessThanSignEqualsSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_10()); }

	'>>=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignEqualsSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_11()); }

	'>>>=' 

{ after(grammarAccess.getAssignmentOperatorAccess().getGreaterThanSignGreaterThanSignGreaterThanSignEqualsSignKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getInLineStatementParserRuleCall_0()); }
	ruleInLineStatement
{ after(grammarAccess.getStatementAccess().getInLineStatementParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_1()); }
	ruleBlockStatement
{ after(grammarAccess.getStatementAccess().getBlockStatementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_2()); }
	ruleEmptyStatement
{ after(grammarAccess.getStatementAccess().getEmptyStatementParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getLocalNameDeclarationStatementParserRuleCall_3()); }
	ruleLocalNameDeclarationStatement
{ after(grammarAccess.getStatementAccess().getLocalNameDeclarationStatementParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_4()); }
	ruleExpressionStatement
{ after(grammarAccess.getStatementAccess().getExpressionStatementParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_5()); }
	ruleIfStatement
{ after(grammarAccess.getStatementAccess().getIfStatementParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_6()); }
	ruleSwitchStatement
{ after(grammarAccess.getStatementAccess().getSwitchStatementParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_7()); }
	ruleWhileStatement
{ after(grammarAccess.getStatementAccess().getWhileStatementParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForStatementParserRuleCall_8()); }
	ruleForStatement
{ after(grammarAccess.getStatementAccess().getForStatementParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_9()); }
	ruleDoStatement
{ after(grammarAccess.getStatementAccess().getDoStatementParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_10()); }
	ruleBreakStatement
{ after(grammarAccess.getStatementAccess().getBreakStatementParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_11()); }
	ruleReturnStatement
{ after(grammarAccess.getStatementAccess().getReturnStatementParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAcceptStatementParserRuleCall_12()); }
	ruleAcceptStatement
{ after(grammarAccess.getStatementAccess().getAcceptStatementParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getClassifyStatementParserRuleCall_13()); }
	ruleClassifyStatement
{ after(grammarAccess.getStatementAccess().getClassifyStatementParserRuleCall_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup_0_0()); }
(rule__LocalNameDeclarationStatement__Group_0_0__0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup_0_1()); }
(rule__LocalNameDeclarationStatement__Group_0_1__0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Alternatives_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAssignment_0_0_3_0()); }
(rule__LocalNameDeclarationStatement__IsAnyAssignment_0_0_3_0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAssignment_0_0_3_0()); }
)

    |(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameAssignment_0_0_3_1()); }
(rule__LocalNameDeclarationStatement__TypeNameAssignment_0_0_3_1)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameAssignment_0_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Alternatives_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAssignment_0_1_0_0()); }
(rule__LocalNameDeclarationStatement__IsAnyAssignment_0_1_0_0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAssignment_0_1_0_0()); }
)

    |(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameAssignment_0_1_0_1()); }
(rule__LocalNameDeclarationStatement__TypeNameAssignment_0_1_0_1)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameAssignment_0_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InitializationExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInitializationExpressionAccess().getExpressionParserRuleCall_0()); }
	ruleExpression
{ after(grammarAccess.getInitializationExpressionAccess().getExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInitializationExpressionAccess().getSequenceInitializationExpressionParserRuleCall_1()); }
	ruleSequenceInitializationExpression
{ after(grammarAccess.getInitializationExpressionAccess().getSequenceInitializationExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getInitializationExpressionAccess().getInstanceInitializationExpressionParserRuleCall_2()); }
	ruleInstanceInitializationExpression
{ after(grammarAccess.getInitializationExpressionAccess().getInstanceInitializationExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0()); }
(rule__LoopVariableDefinition__Group_0__0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getGroup_1()); }
(rule__LoopVariableDefinition__Group_1__0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getIsAnyAssignment_1_0_0()); }
(rule__LoopVariableDefinition__IsAnyAssignment_1_0_0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getIsAnyAssignment_1_0_0()); }
)

    |(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameAssignment_1_0_1()); }
(rule__LoopVariableDefinition__TypeNameAssignment_1_0_1)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getGroup_0()); }
(rule__AcceptStatement__Group_0__0)
{ after(grammarAccess.getAcceptStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAcceptStatementAccess().getGroup_1()); }
(rule__AcceptStatement__Group_1__0)
{ after(grammarAccess.getAcceptStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getGroup_2_0()); }
(rule__ClassifyStatement__Group_2_0__0)
{ after(grammarAccess.getClassifyStatementAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getClassifyStatementAccess().getGroup_2_1()); }
(rule__ClassifyStatement__Group_2_1__0)
{ after(grammarAccess.getClassifyStatementAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__ExpressionValueRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionValueRule__Group__0__Impl
	rule__ExpressionValueRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionValueRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionValueRuleAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getExpressionValueRuleAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionValueRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionValueRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionValueRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionValueRuleAccess().getExpressionAssignment_1()); }
(rule__ExpressionValueRule__ExpressionAssignment_1)
{ after(grammarAccess.getExpressionValueRuleAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__StereotypeAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group__0__Impl
	rule__StereotypeAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getStereotypeAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group__1__Impl
	rule__StereotypeAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameAssignment_1()); }
(rule__StereotypeAnnotation__StereotypeNameAssignment_1)
{ after(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getGroup_2()); }
(rule__StereotypeAnnotation__Group_2__0)?
{ after(grammarAccess.getStereotypeAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StereotypeAnnotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group_2__0__Impl
	rule__StereotypeAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getStereotypeAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group_2__1__Impl
	rule__StereotypeAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getAlternatives_2_1()); }
(rule__StereotypeAnnotation__Alternatives_2_1)
{ after(grammarAccess.getStereotypeAnnotationAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StereotypeAnnotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StereotypeAnnotation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getStereotypeAnnotationAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaggedValueList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group__0__Impl
	rule__TaggedValueList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_0()); }
(rule__TaggedValueList__TaggedValueAssignment_0)
{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValueList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getGroup_1()); }
(rule__TaggedValueList__Group_1__0)*
{ after(grammarAccess.getTaggedValueListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaggedValueList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group_1__0__Impl
	rule__TaggedValueList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTaggedValueListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValueList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValueList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_1_1()); }
(rule__TaggedValueList__TaggedValueAssignment_1_1)
{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaggedValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group__0__Impl
	rule__TaggedValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getNameAssignment_0()); }
(rule__TaggedValue__NameAssignment_0)
{ after(grammarAccess.getTaggedValueAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group__1__Impl
	rule__TaggedValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getTaggedValueAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getAlternatives_2()); }
(rule__TaggedValue__Alternatives_2)
{ after(grammarAccess.getTaggedValueAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaggedValue__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group_2_1__0__Impl
	rule__TaggedValue__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getOperatorAssignment_2_1_0()); }
(rule__TaggedValue__OperatorAssignment_2_1_0)?
{ after(grammarAccess.getTaggedValueAccess().getOperatorAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaggedValue__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaggedValue__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValueAssignment_2_1_1()); }
(rule__TaggedValue__ValueAssignment_2_1_1)
{ after(grammarAccess.getTaggedValueAccess().getValueAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamespaceDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__0__Impl
	rule__NamespaceDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }

	'namespace' 

{ after(grammarAccess.getNamespaceDeclarationAccess().getNamespaceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__1__Impl
	rule__NamespaceDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getQualifiedNameParserRuleCall_1()); }
	ruleQualifiedName
{ after(grammarAccess.getNamespaceDeclarationAccess().getQualifiedNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamespaceDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamespaceDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamespaceDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getNamespaceDeclarationAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__0__Impl
	rule__ImportDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getAlternatives_0()); }
(rule__ImportDeclaration__Alternatives_0)
{ after(grammarAccess.getImportDeclarationAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportDeclaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getImportDeclarationAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElementImportReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementImportReference__Group__0__Impl
	rule__ElementImportReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getVisibilityAssignment_0()); }
(rule__ElementImportReference__VisibilityAssignment_0)
{ after(grammarAccess.getElementImportReferenceAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementImportReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementImportReference__Group__1__Impl
	rule__ElementImportReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getImportKeyword_1()); }

	'import' 

{ after(grammarAccess.getElementImportReferenceAccess().getImportKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementImportReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementImportReference__Group__2__Impl
	rule__ElementImportReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getReferentNameAssignment_2()); }
(rule__ElementImportReference__ReferentNameAssignment_2)
{ after(grammarAccess.getElementImportReferenceAccess().getReferentNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementImportReference__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementImportReference__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getGroup_3()); }
(rule__ElementImportReference__Group_3__0)?
{ after(grammarAccess.getElementImportReferenceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ElementImportReference__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementImportReference__Group_3__0__Impl
	rule__ElementImportReference__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getAsKeyword_3_0()); }

	'as' 

{ after(grammarAccess.getElementImportReferenceAccess().getAsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementImportReference__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementImportReference__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getAliasAssignment_3_1()); }
(rule__ElementImportReference__AliasAssignment_3_1)
{ after(grammarAccess.getElementImportReferenceAccess().getAliasAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageImportReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportReference__Group__0__Impl
	rule__PackageImportReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportReferenceAccess().getVisibilityAssignment_0()); }
(rule__PackageImportReference__VisibilityAssignment_0)
{ after(grammarAccess.getPackageImportReferenceAccess().getVisibilityAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportReference__Group__1__Impl
	rule__PackageImportReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportReferenceAccess().getImportKeyword_1()); }

	'import' 

{ after(grammarAccess.getPackageImportReferenceAccess().getImportKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportReferenceAccess().getReferentNameAssignment_2()); }
(rule__PackageImportReference__ReferentNameAssignment_2)
{ after(grammarAccess.getPackageImportReferenceAccess().getReferentNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PackageImportQualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group__0__Impl
	rule__PackageImportQualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingAssignment_0()); }
(rule__PackageImportQualifiedName__NameBindingAssignment_0)
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportQualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getAlternatives_1()); }
(rule__PackageImportQualifiedName__Alternatives_1)
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageImportQualifiedName__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_0__0__Impl
	rule__PackageImportQualifiedName__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_0_0()); }
(rule__PackageImportQualifiedName__Group_1_0_0__0)*
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportQualifiedName__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_0__1__Impl
	rule__PackageImportQualifiedName__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getColonColonKeyword_1_0_1()); }

	'::' 

{ after(grammarAccess.getPackageImportQualifiedNameAccess().getColonColonKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportQualifiedName__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getAsteriskKeyword_1_0_2()); }

	'*' 

{ after(grammarAccess.getPackageImportQualifiedNameAccess().getAsteriskKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PackageImportQualifiedName__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_0_0__0__Impl
	rule__PackageImportQualifiedName__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getColonColonKeyword_1_0_0_0()); }

	'::' 

{ after(grammarAccess.getPackageImportQualifiedNameAccess().getColonColonKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportQualifiedName__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingAssignment_1_0_0_1()); }
(rule__PackageImportQualifiedName__NameBindingAssignment_1_0_0_1)
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingAssignment_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageImportQualifiedName__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_1__0__Impl
	rule__PackageImportQualifiedName__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_1_0()); }
(rule__PackageImportQualifiedName__Group_1_1_0__0)*
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getGroup_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportQualifiedName__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_1__1__Impl
	rule__PackageImportQualifiedName__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getFullStopKeyword_1_1_1()); }

	'.' 

{ after(grammarAccess.getPackageImportQualifiedNameAccess().getFullStopKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportQualifiedName__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getAsteriskKeyword_1_1_2()); }

	'*' 

{ after(grammarAccess.getPackageImportQualifiedNameAccess().getAsteriskKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PackageImportQualifiedName__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_1_0__0__Impl
	rule__PackageImportQualifiedName__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getFullStopKeyword_1_1_0_0()); }

	'.' 

{ after(grammarAccess.getPackageImportQualifiedNameAccess().getFullStopKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageImportQualifiedName__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageImportQualifiedName__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingAssignment_1_1_0_1()); }
(rule__PackageImportQualifiedName__NameBindingAssignment_1_1_0_1)
{ after(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__0__Impl
	rule__PackageDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDefinitionAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__1__Impl
	rule__PackageDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1()); }
(rule__PackageDefinition__NameAssignment_1)
{ after(grammarAccess.getPackageDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__2__Impl
	rule__PackageDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageDefinitionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__3__Impl
	rule__PackageDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getOwnedMemberAssignment_3()); }
(rule__PackageDefinition__OwnedMemberAssignment_3)*
{ after(grammarAccess.getPackageDefinitionAccess().getOwnedMemberAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPackageDefinitionAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PackageDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group__0__Impl
	rule__PackageDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageDefinitionOrStubAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group__1__Impl
	rule__PackageDefinitionOrStub__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getNameAssignment_1()); }
(rule__PackageDefinitionOrStub__NameAssignment_1)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinitionOrStub__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getAlternatives_2()); }
(rule__PackageDefinitionOrStub__Alternatives_2)
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PackageDefinitionOrStub__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group_2_1__0__Impl
	rule__PackageDefinitionOrStub__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getLeftCurlyBracketKeyword_2_1_0()); }

	'{' 

{ after(grammarAccess.getPackageDefinitionOrStubAccess().getLeftCurlyBracketKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinitionOrStub__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group_2_1__1__Impl
	rule__PackageDefinitionOrStub__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getOwnedMemberAssignment_2_1_1()); }
(rule__PackageDefinitionOrStub__OwnedMemberAssignment_2_1_1)*
{ after(grammarAccess.getPackageDefinitionOrStubAccess().getOwnedMemberAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinitionOrStub__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinitionOrStub__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getRightCurlyBracketKeyword_2_1_2()); }

	'}' 

{ after(grammarAccess.getPackageDefinitionOrStubAccess().getRightCurlyBracketKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PackagedElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__0__Impl
	rule__PackagedElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getDocumentationAssignment_0()); }
(rule__PackagedElement__DocumentationAssignment_0)?
{ after(grammarAccess.getPackagedElementAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackagedElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__1__Impl
	rule__PackagedElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getAnnotationAssignment_1()); }
(rule__PackagedElement__AnnotationAssignment_1)*
{ after(grammarAccess.getPackagedElementAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackagedElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__2__Impl
	rule__PackagedElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getVisibilityAssignment_2()); }
(rule__PackagedElement__VisibilityAssignment_2)
{ after(grammarAccess.getPackagedElementAccess().getVisibilityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackagedElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackagedElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getDefinitionAssignment_3()); }
(rule__PackagedElement__DefinitionAssignment_3)
{ after(grammarAccess.getPackagedElementAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}













rule__ClassifierTemplateParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameter__Group__0__Impl
	rule__ClassifierTemplateParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getDocumentationAssignment_0()); }
(rule__ClassifierTemplateParameter__DocumentationAssignment_0)?
{ after(grammarAccess.getClassifierTemplateParameterAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTemplateParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getDefinitionAssignment_1()); }
(rule__ClassifierTemplateParameter__DefinitionAssignment_1)
{ after(grammarAccess.getClassifierTemplateParameterAccess().getDefinitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierTemplateParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameterDefinition__Group__0__Impl
	rule__ClassifierTemplateParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getNameAssignment_0()); }
(rule__ClassifierTemplateParameterDefinition__NameAssignment_0)
{ after(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTemplateParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameterDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getGroup_1()); }
(rule__ClassifierTemplateParameterDefinition__Group_1__0)?
{ after(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifierTemplateParameterDefinition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameterDefinition__Group_1__0__Impl
	rule__ClassifierTemplateParameterDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameterDefinition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializesKeyword_1_0()); }

	'specializes' 

{ after(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializesKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTemplateParameterDefinition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTemplateParameterDefinition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameterDefinition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializationAssignment_1_1()); }
(rule__ClassifierTemplateParameterDefinition__SpecializationAssignment_1_1)
{ after(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializationAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SpecializationClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecializationClause__Group__0__Impl
	rule__SpecializationClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecializationClauseAccess().getSpecializesKeyword_0()); }

	'specializes' 

{ after(grammarAccess.getSpecializationClauseAccess().getSpecializesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SpecializationClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SpecializationClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SpecializationClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSpecializationClauseAccess().getQualifiedNameListParserRuleCall_1()); }
	ruleQualifiedNameList
{ after(grammarAccess.getSpecializationClauseAccess().getQualifiedNameListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__0__Impl
	rule__ClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__ClassDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__1__Impl
	rule__ClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }

	'class' 

{ after(grammarAccess.getClassDeclarationAccess().getClassKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__2__Impl
	rule__ClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getNameAssignment_2()); }
(rule__ClassDeclaration__NameAssignment_2)
{ after(grammarAccess.getClassDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__3__Impl
	rule__ClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
(rule__ClassDeclaration__Group_3__0)?
{ after(grammarAccess.getClassDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getSpecializationAssignment_4()); }
(rule__ClassDeclaration__SpecializationAssignment_4)?
{ after(grammarAccess.getClassDeclarationAccess().getSpecializationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__0__Impl
	rule__ClassDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getClassDeclarationAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__1__Impl
	rule__ClassDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getOwnedMemberAssignment_3_1()); }
(rule__ClassDeclaration__OwnedMemberAssignment_3_1)
{ after(grammarAccess.getClassDeclarationAccess().getOwnedMemberAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__2__Impl
	rule__ClassDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGroup_3_2()); }
(rule__ClassDeclaration__Group_3_2__0)*
{ after(grammarAccess.getClassDeclarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getClassDeclarationAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassDeclaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3_2__0__Impl
	rule__ClassDeclaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getClassDeclarationAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDeclaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDeclaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
(rule__ClassDeclaration__OwnedMemberAssignment_3_2_1)
{ after(grammarAccess.getClassDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__0__Impl
	rule__ClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getClassDeclarationParserRuleCall_0()); }
	ruleClassDeclaration
{ after(grammarAccess.getClassDefinitionAccess().getClassDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__1__Impl
	rule__ClassDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getClassDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__2__Impl
	rule__ClassDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getOwnedMemberAssignment_2()); }
(rule__ClassDefinition__OwnedMemberAssignment_2)*
{ after(grammarAccess.getClassDefinitionAccess().getOwnedMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getClassDefinitionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinitionOrStub__Group__0__Impl
	rule__ClassDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getClassDeclarationParserRuleCall_0()); }
	ruleClassDeclaration
{ after(grammarAccess.getClassDefinitionOrStubAccess().getClassDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getAlternatives_1()); }
(rule__ClassDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getClassDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassDefinitionOrStub__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinitionOrStub__Group_1_1__0__Impl
	rule__ClassDefinitionOrStub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getClassDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinitionOrStub__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinitionOrStub__Group_1_1__1__Impl
	rule__ClassDefinitionOrStub__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
(rule__ClassDefinitionOrStub__OwnedMemberAssignment_1_1_1)*
{ after(grammarAccess.getClassDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDefinitionOrStub__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassDefinitionOrStub__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getClassDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__0__Impl
	rule__ClassMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getDocumentationAssignment_0()); }
(rule__ClassMember__DocumentationAssignment_0)*
{ after(grammarAccess.getClassMemberAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__1__Impl
	rule__ClassMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getAnnotationAssignment_1()); }
(rule__ClassMember__AnnotationAssignment_1)*
{ after(grammarAccess.getClassMemberAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__2__Impl
	rule__ClassMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getVisibilityAssignment_2()); }
(rule__ClassMember__VisibilityAssignment_2)?
{ after(grammarAccess.getClassMemberAccess().getVisibilityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getDefinitionAssignment_3()); }
(rule__ClassMember__DefinitionAssignment_3)
{ after(grammarAccess.getClassMemberAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActiveClassDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__0__Impl
	rule__ActiveClassDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__ActiveClassDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__1__Impl
	rule__ActiveClassDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getActiveKeyword_1()); }

	'active' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getActiveKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__2__Impl
	rule__ActiveClassDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getClassKeyword_2()); }

	'class' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getClassKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__3__Impl
	rule__ActiveClassDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getNameAssignment_3()); }
(rule__ActiveClassDeclaration__NameAssignment_3)
{ after(grammarAccess.getActiveClassDeclarationAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__4__Impl
	rule__ActiveClassDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getGroup_4()); }
(rule__ActiveClassDeclaration__Group_4__0)?
{ after(grammarAccess.getActiveClassDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getSpecializationAssignment_5()); }
(rule__ActiveClassDeclaration__SpecializationAssignment_5)?
{ after(grammarAccess.getActiveClassDeclarationAccess().getSpecializationAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ActiveClassDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group_4__0__Impl
	rule__ActiveClassDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getLessThanSignKeyword_4_0()); }

	'<' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getLessThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group_4__1__Impl
	rule__ActiveClassDeclaration__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberAssignment_4_1()); }
(rule__ActiveClassDeclaration__OwnedMemberAssignment_4_1)
{ after(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group_4__2__Impl
	rule__ActiveClassDeclaration__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getGroup_4_2()); }
(rule__ActiveClassDeclaration__Group_4_2__0)*
{ after(grammarAccess.getActiveClassDeclarationAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getGreaterThanSignKeyword_4_3()); }

	'>' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getGreaterThanSignKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActiveClassDeclaration__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group_4_2__0__Impl
	rule__ActiveClassDeclaration__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDeclaration__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDeclaration__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberAssignment_4_2_1()); }
(rule__ActiveClassDeclaration__OwnedMemberAssignment_4_2_1)
{ after(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActiveClassDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group__0__Impl
	rule__ActiveClassDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getActiveClassDeclarationParserRuleCall_0()); }
	ruleActiveClassDeclaration
{ after(grammarAccess.getActiveClassDefinitionAccess().getActiveClassDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group__1__Impl
	rule__ActiveClassDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getActiveClassDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group__2__Impl
	rule__ActiveClassDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getOwnedMemberAssignment_2()); }
(rule__ActiveClassDefinition__OwnedMemberAssignment_2)*
{ after(grammarAccess.getActiveClassDefinitionAccess().getOwnedMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group__3__Impl
	rule__ActiveClassDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getActiveClassDefinitionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getGroup_4()); }
(rule__ActiveClassDefinition__Group_4__0)?
{ after(grammarAccess.getActiveClassDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ActiveClassDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group_4__0__Impl
	rule__ActiveClassDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getDoKeyword_4_0()); }

	'do' 

{ after(grammarAccess.getActiveClassDefinitionAccess().getDoKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getClassifierBehaviorAssignment_4_1()); }
(rule__ActiveClassDefinition__ClassifierBehaviorAssignment_4_1)
{ after(grammarAccess.getActiveClassDefinitionAccess().getClassifierBehaviorAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActiveClassDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group__0__Impl
	rule__ActiveClassDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassDeclarationParserRuleCall_0()); }
	ruleActiveClassDeclaration
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getActiveClassDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getAlternatives_1()); }
(rule__ActiveClassDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActiveClassDefinitionOrStub__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group_1_1__0__Impl
	rule__ActiveClassDefinitionOrStub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinitionOrStub__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group_1_1__1__Impl
	rule__ActiveClassDefinitionOrStub__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
(rule__ActiveClassDefinitionOrStub__OwnedMemberAssignment_1_1_1)*
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinitionOrStub__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group_1_1__2__Impl
	rule__ActiveClassDefinitionOrStub__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinitionOrStub__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup_1_1_3()); }
(rule__ActiveClassDefinitionOrStub__Group_1_1_3__0)?
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getGroup_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActiveClassDefinitionOrStub__Group_1_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group_1_1_3__0__Impl
	rule__ActiveClassDefinitionOrStub__Group_1_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group_1_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getDoKeyword_1_1_3_0()); }

	'do' 

{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getDoKeyword_1_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassDefinitionOrStub__Group_1_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassDefinitionOrStub__Group_1_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__Group_1_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getClassifierBehaviorAssignment_1_1_3_1()); }
(rule__ActiveClassDefinitionOrStub__ClassifierBehaviorAssignment_1_1_3_1)
{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getClassifierBehaviorAssignment_1_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActiveClassMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__0__Impl
	rule__ActiveClassMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getDocumentationAssignment_0()); }
(rule__ActiveClassMember__DocumentationAssignment_0)?
{ after(grammarAccess.getActiveClassMemberAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__1__Impl
	rule__ActiveClassMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getAnnotationAssignment_1()); }
(rule__ActiveClassMember__AnnotationAssignment_1)*
{ after(grammarAccess.getActiveClassMemberAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__2__Impl
	rule__ActiveClassMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getVisibilityAssignment_2()); }
(rule__ActiveClassMember__VisibilityAssignment_2)?
{ after(grammarAccess.getActiveClassMemberAccess().getVisibilityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActiveClassMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActiveClassMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getDefinitionAssignment_3()); }
(rule__ActiveClassMember__DefinitionAssignment_3)
{ after(grammarAccess.getActiveClassMemberAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__0__Impl
	rule__DataTypeDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__DataTypeDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__1__Impl
	rule__DataTypeDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1()); }

	'datatype' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getDatatypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__2__Impl
	rule__DataTypeDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getNameAssignment_2()); }
(rule__DataTypeDeclaration__NameAssignment_2)
{ after(grammarAccess.getDataTypeDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__3__Impl
	rule__DataTypeDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getGroup_3()); }
(rule__DataTypeDeclaration__Group_3__0)?
{ after(grammarAccess.getDataTypeDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getSpecializationAssignment_4()); }
(rule__DataTypeDeclaration__SpecializationAssignment_4)?
{ after(grammarAccess.getDataTypeDeclarationAccess().getSpecializationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataTypeDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_3__0__Impl
	rule__DataTypeDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_3__1__Impl
	rule__DataTypeDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberAssignment_3_1()); }
(rule__DataTypeDeclaration__OwnedMemberAssignment_3_1)
{ after(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_3__2__Impl
	rule__DataTypeDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getGroup_3_2()); }
(rule__DataTypeDeclaration__Group_3_2__0)*
{ after(grammarAccess.getDataTypeDeclarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeDeclaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_3_2__0__Impl
	rule__DataTypeDeclaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDeclaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDeclaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
(rule__DataTypeDeclaration__OwnedMemberAssignment_3_2_1)
{ after(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataTypeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group__0__Impl
	rule__DataTypeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDeclarationParserRuleCall_0()); }
	ruleDataTypeDeclaration
{ after(grammarAccess.getDataTypeDefinitionAccess().getDataTypeDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group__1__Impl
	rule__DataTypeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getDataTypeDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group__2__Impl
	rule__DataTypeDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getOwnedMemberAssignment_2()); }
(rule__DataTypeDefinition__OwnedMemberAssignment_2)*
{ after(grammarAccess.getDataTypeDefinitionAccess().getOwnedMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getDataTypeDefinitionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DataTypeDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinitionOrStub__Group__0__Impl
	rule__DataTypeDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getDataTypeDeclarationParserRuleCall_0()); }
	ruleDataTypeDeclaration
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getDataTypeDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getAlternatives_1()); }
(rule__DataTypeDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataTypeDefinitionOrStub__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinitionOrStub__Group_1_1__0__Impl
	rule__DataTypeDefinitionOrStub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinitionOrStub__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinitionOrStub__Group_1_1__1__Impl
	rule__DataTypeDefinitionOrStub__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
(rule__DataTypeDefinitionOrStub__OwnedMemberAssignment_1_1_1)*
{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DataTypeDefinitionOrStub__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DataTypeDefinitionOrStub__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StructuredMember__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__0__Impl
	rule__StructuredMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getDocumentationAssignment_0()); }
(rule__StructuredMember__DocumentationAssignment_0)?
{ after(grammarAccess.getStructuredMemberAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredMember__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__1__Impl
	rule__StructuredMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getAnnotationAssignment_1()); }
(rule__StructuredMember__AnnotationAssignment_1)*
{ after(grammarAccess.getStructuredMemberAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredMember__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__2__Impl
	rule__StructuredMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getVisibilityAssignment_2()); }
(rule__StructuredMember__VisibilityAssignment_2)?
{ after(grammarAccess.getStructuredMemberAccess().getVisibilityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StructuredMember__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StructuredMember__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getDefinitionAssignment_3()); }
(rule__StructuredMember__DefinitionAssignment_3)
{ after(grammarAccess.getStructuredMemberAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssociationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__0__Impl
	rule__AssociationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__AssociationDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__1__Impl
	rule__AssociationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1()); }

	'assoc' 

{ after(grammarAccess.getAssociationDeclarationAccess().getAssocKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__2__Impl
	rule__AssociationDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getNameAssignment_2()); }
(rule__AssociationDeclaration__NameAssignment_2)
{ after(grammarAccess.getAssociationDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__3__Impl
	rule__AssociationDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getGroup_3()); }
(rule__AssociationDeclaration__Group_3__0)?
{ after(grammarAccess.getAssociationDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getSpecializationAssignment_4()); }
(rule__AssociationDeclaration__SpecializationAssignment_4)?
{ after(grammarAccess.getAssociationDeclarationAccess().getSpecializationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AssociationDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group_3__0__Impl
	rule__AssociationDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getAssociationDeclarationAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group_3__1__Impl
	rule__AssociationDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberAssignment_3_1()); }
(rule__AssociationDeclaration__OwnedMemberAssignment_3_1)
{ after(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group_3__2__Impl
	rule__AssociationDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getGroup_3_2()); }
(rule__AssociationDeclaration__Group_3_2__0)*
{ after(grammarAccess.getAssociationDeclarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getAssociationDeclarationAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssociationDeclaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group_3_2__0__Impl
	rule__AssociationDeclaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getAssociationDeclarationAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDeclaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDeclaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
(rule__AssociationDeclaration__OwnedMemberAssignment_3_2_1)
{ after(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssociationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__0__Impl
	rule__AssociationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationParserRuleCall_0()); }
	ruleAssociationDeclaration
{ after(grammarAccess.getAssociationDefinitionAccess().getAssociationDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__1__Impl
	rule__AssociationDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getAssociationDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__2__Impl
	rule__AssociationDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getOwnedMemberAssignment_2()); }
(rule__AssociationDefinition__OwnedMemberAssignment_2)*
{ after(grammarAccess.getAssociationDefinitionAccess().getOwnedMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getAssociationDefinitionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AssociationDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinitionOrStub__Group__0__Impl
	rule__AssociationDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDeclarationParserRuleCall_0()); }
	ruleAssociationDeclaration
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getAssociationDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getAlternatives_1()); }
(rule__AssociationDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssociationDefinitionOrStub__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinitionOrStub__Group_1_1__0__Impl
	rule__AssociationDefinitionOrStub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinitionOrStub__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinitionOrStub__Group_1_1__1__Impl
	rule__AssociationDefinitionOrStub__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
(rule__AssociationDefinitionOrStub__OwnedMemberAssignment_1_1_1)*
{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssociationDefinitionOrStub__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssociationDefinitionOrStub__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumerationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDeclaration__Group__0__Impl
	rule__EnumerationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumerationDeclarationAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDeclaration__Group__1__Impl
	rule__EnumerationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getNameAssignment_1()); }
(rule__EnumerationDeclaration__NameAssignment_1)
{ after(grammarAccess.getEnumerationDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getSpecializationAssignment_2()); }
(rule__EnumerationDeclaration__SpecializationAssignment_2)?
{ after(grammarAccess.getEnumerationDeclarationAccess().getSpecializationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumerationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__0__Impl
	rule__EnumerationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getEnumerationDeclarationParserRuleCall_0()); }
	ruleEnumerationDeclaration
{ after(grammarAccess.getEnumerationDefinitionAccess().getEnumerationDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__1__Impl
	rule__EnumerationDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getEnumerationDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__2__Impl
	rule__EnumerationDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getGroup_2()); }
(rule__EnumerationDefinition__Group_2__0)?
{ after(grammarAccess.getEnumerationDefinitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getEnumerationDefinitionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumerationDefinition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_2__0__Impl
	rule__EnumerationDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberAssignment_2_0()); }
(rule__EnumerationDefinition__OwnedMemberAssignment_2_0)
{ after(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getGroup_2_1()); }
(rule__EnumerationDefinition__Group_2_1__0)*
{ after(grammarAccess.getEnumerationDefinitionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationDefinition__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_2_1__0__Impl
	rule__EnumerationDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getEnumerationDefinitionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinition__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinition__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberAssignment_2_1_1()); }
(rule__EnumerationDefinition__OwnedMemberAssignment_2_1_1)
{ after(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group__0__Impl
	rule__EnumerationDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationDeclarationParserRuleCall_0()); }
	ruleEnumerationDeclaration
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getEnumerationDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getAlternatives_1()); }
(rule__EnumerationDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationDefinitionOrStub__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group_1_1__0__Impl
	rule__EnumerationDefinitionOrStub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinitionOrStub__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group_1_1__1__Impl
	rule__EnumerationDefinitionOrStub__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup_1_1_1()); }
(rule__EnumerationDefinitionOrStub__Group_1_1_1__0)?
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinitionOrStub__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EnumerationDefinitionOrStub__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group_1_1_1__0__Impl
	rule__EnumerationDefinitionOrStub__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1_0()); }
(rule__EnumerationDefinitionOrStub__OwnedMemberAssignment_1_1_1_0)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinitionOrStub__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup_1_1_1_1()); }
(rule__EnumerationDefinitionOrStub__Group_1_1_1_1__0)*
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getGroup_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationDefinitionOrStub__Group_1_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group_1_1_1_1__0__Impl
	rule__EnumerationDefinitionOrStub__Group_1_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group_1_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getCommaKeyword_1_1_1_1_0()); }

	',' 

{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getCommaKeyword_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationDefinitionOrStub__Group_1_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationDefinitionOrStub__Group_1_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__Group_1_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1_1_1()); }
(rule__EnumerationDefinitionOrStub__OwnedMemberAssignment_1_1_1_1_1)
{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumerationLiteralName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteralName__Group__0__Impl
	rule__EnumerationLiteralName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getDocumentationAssignment_0()); }
(rule__EnumerationLiteralName__DocumentationAssignment_0)?
{ after(grammarAccess.getEnumerationLiteralNameAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumerationLiteralName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumerationLiteralName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getDefinitionAssignment_1()); }
(rule__EnumerationLiteralName__DefinitionAssignment_1)
{ after(grammarAccess.getEnumerationLiteralNameAccess().getDefinitionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__0__Impl
	rule__SignalDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__SignalDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getSignalDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__1__Impl
	rule__SignalDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getSignalKeyword_1()); }

	'signal' 

{ after(grammarAccess.getSignalDeclarationAccess().getSignalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__2__Impl
	rule__SignalDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getNameAssignment_2()); }
(rule__SignalDeclaration__NameAssignment_2)
{ after(grammarAccess.getSignalDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__3__Impl
	rule__SignalDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup_3()); }
(rule__SignalDeclaration__Group_3__0)?
{ after(grammarAccess.getSignalDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getSpecializationAssignment_4()); }
(rule__SignalDeclaration__SpecializationAssignment_4)?
{ after(grammarAccess.getSignalDeclarationAccess().getSpecializationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SignalDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_3__0__Impl
	rule__SignalDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getLessThanSignKeyword_3_0()); }

	'<' 

{ after(grammarAccess.getSignalDeclarationAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_3__1__Impl
	rule__SignalDeclaration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getOwnedMemberAssignment_3_1()); }
(rule__SignalDeclaration__OwnedMemberAssignment_3_1)
{ after(grammarAccess.getSignalDeclarationAccess().getOwnedMemberAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_3__2__Impl
	rule__SignalDeclaration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGroup_3_2()); }
(rule__SignalDeclaration__Group_3_2__0)*
{ after(grammarAccess.getSignalDeclarationAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getGreaterThanSignKeyword_3_3()); }

	'>' 

{ after(grammarAccess.getSignalDeclarationAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SignalDeclaration__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_3_2__0__Impl
	rule__SignalDeclaration__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getSignalDeclarationAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDeclaration__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDeclaration__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
(rule__SignalDeclaration__OwnedMemberAssignment_3_2_1)
{ after(grammarAccess.getSignalDeclarationAccess().getOwnedMemberAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinition__Group__0__Impl
	rule__SignalDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getSignalDeclarationParserRuleCall_0()); }
	ruleSignalDeclaration
{ after(grammarAccess.getSignalDefinitionAccess().getSignalDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinition__Group__1__Impl
	rule__SignalDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getSignalDefinitionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinition__Group__2__Impl
	rule__SignalDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getOwnedMemberAssignment_2()); }
(rule__SignalDefinition__OwnedMemberAssignment_2)*
{ after(grammarAccess.getSignalDefinitionAccess().getOwnedMemberAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSignalDefinitionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SignalDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinitionOrStub__Group__0__Impl
	rule__SignalDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getSignalDeclarationParserRuleCall_0()); }
	ruleSignalDeclaration
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getSignalDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getAlternatives_1()); }
(rule__SignalDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDefinitionOrStub__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinitionOrStub__Group_1_1__0__Impl
	rule__SignalDefinitionOrStub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getSignalDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinitionOrStub__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinitionOrStub__Group_1_1__1__Impl
	rule__SignalDefinitionOrStub__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
(rule__SignalDefinitionOrStub__OwnedMemberAssignment_1_1_1)*
{ after(grammarAccess.getSignalDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDefinitionOrStub__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalDefinitionOrStub__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getSignalDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ActivityDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__0__Impl
	rule__ActivityDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getActivityKeyword_0()); }

	'activity' 

{ after(grammarAccess.getActivityDeclarationAccess().getActivityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__1__Impl
	rule__ActivityDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getNameAssignment_1()); }
(rule__ActivityDeclaration__NameAssignment_1)
{ after(grammarAccess.getActivityDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__2__Impl
	rule__ActivityDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGroup_2()); }
(rule__ActivityDeclaration__Group_2__0)?
{ after(grammarAccess.getActivityDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__3__Impl
	rule__ActivityDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getActivityDeclarationAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__4__Impl
	rule__ActivityDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGroup_4()); }
(rule__ActivityDeclaration__Group_4__0)?
{ after(grammarAccess.getActivityDeclarationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__5__Impl
	rule__ActivityDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getActivityDeclarationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_6()); }
(rule__ActivityDeclaration__OwnedMemberAssignment_6)?
{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ActivityDeclaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_2__0__Impl
	rule__ActivityDeclaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getLessThanSignKeyword_2_0()); }

	'<' 

{ after(grammarAccess.getActivityDeclarationAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_2__1__Impl
	rule__ActivityDeclaration__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_2_1()); }
(rule__ActivityDeclaration__OwnedMemberAssignment_2_1)
{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_2__2__Impl
	rule__ActivityDeclaration__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGroup_2_2()); }
(rule__ActivityDeclaration__Group_2_2__0)*
{ after(grammarAccess.getActivityDeclarationAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGreaterThanSignKeyword_2_3()); }

	'>' 

{ after(grammarAccess.getActivityDeclarationAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ActivityDeclaration__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_2_2__0__Impl
	rule__ActivityDeclaration__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getActivityDeclarationAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_2_2_1()); }
(rule__ActivityDeclaration__OwnedMemberAssignment_2_2_1)
{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityDeclaration__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_4__0__Impl
	rule__ActivityDeclaration__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_4_0()); }
(rule__ActivityDeclaration__OwnedMemberAssignment_4_0)
{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getGroup_4_1()); }
(rule__ActivityDeclaration__Group_4_1__0)*
{ after(grammarAccess.getActivityDeclarationAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityDeclaration__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_4_1__0__Impl
	rule__ActivityDeclaration__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getCommaKeyword_4_1_0()); }

	',' 

{ after(grammarAccess.getActivityDeclarationAccess().getCommaKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDeclaration__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDeclaration__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_4_1_1()); }
(rule__ActivityDeclaration__OwnedMemberAssignment_4_1_1)
{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinition__Group__0__Impl
	rule__ActivityDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionAccess().getActivityDeclarationParserRuleCall_0()); }
	ruleActivityDeclaration
{ after(grammarAccess.getActivityDefinitionAccess().getActivityDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionAccess().getBodyAssignment_1()); }
(rule__ActivityDefinition__BodyAssignment_1)
{ after(grammarAccess.getActivityDefinitionAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ActivityDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinitionOrStub__Group__0__Impl
	rule__ActivityDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getActivityDeclarationParserRuleCall_0()); }
	ruleActivityDeclaration
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getActivityDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ActivityDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ActivityDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getAlternatives_1()); }
(rule__ActivityDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getActivityDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__0__Impl
	rule__FormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getDocumentationAssignment_0()); }
(rule__FormalParameter__DocumentationAssignment_0)?
{ after(grammarAccess.getFormalParameterAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__1__Impl
	rule__FormalParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getAnnotationAssignment_1()); }
(rule__FormalParameter__AnnotationAssignment_1)*
{ after(grammarAccess.getFormalParameterAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getDefinitionAssignment_2()); }
(rule__FormalParameter__DefinitionAssignment_2)
{ after(grammarAccess.getFormalParameterAccess().getDefinitionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FormalParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDefinition__Group__0__Impl
	rule__FormalParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getDirectionAssignment_0()); }
(rule__FormalParameterDefinition__DirectionAssignment_0)
{ after(grammarAccess.getFormalParameterDefinitionAccess().getDirectionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDefinition__Group__1__Impl
	rule__FormalParameterDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getNameAssignment_1()); }
(rule__FormalParameterDefinition__NameAssignment_1)
{ after(grammarAccess.getFormalParameterDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDefinition__Group__2__Impl
	rule__FormalParameterDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getFormalParameterDefinitionAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FormalParameterDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FormalParameterDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getTypePartAssignment_3()); }
(rule__FormalParameterDefinition__TypePartAssignment_3)
{ after(grammarAccess.getFormalParameterDefinitionAccess().getTypePartAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ReturnParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnParameterDefinition__Group__0__Impl
	rule__ReturnParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterDefinitionAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getReturnParameterDefinitionAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnParameterDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterDefinitionAccess().getTypePartAssignment_1()); }
(rule__ReturnParameterDefinition__TypePartAssignment_1)
{ after(grammarAccess.getReturnParameterDefinitionAccess().getTypePartAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__0__Impl
	rule__PropertyDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getPropertyDeclarationParserRuleCall_0()); }
	rulePropertyDeclaration
{ after(grammarAccess.getPropertyDefinitionAccess().getPropertyDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDefinition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getPropertyDefinitionAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDefinition__Group__0__Impl
	rule__AttributeDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getPropertyDeclarationParserRuleCall_0()); }
	rulePropertyDeclaration
{ after(grammarAccess.getAttributeDefinitionAccess().getPropertyDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDefinition__Group__1__Impl
	rule__AttributeDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getInitializerAssignment_1()); }
(rule__AttributeDefinition__InitializerAssignment_1)?
{ after(grammarAccess.getAttributeDefinitionAccess().getInitializerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getAttributeDefinitionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AttributeInitializer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInitializer__Group__0__Impl
	rule__AttributeInitializer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInitializer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitializerAccess().getEqualsSignKeyword_0()); }

	'=' 

{ after(grammarAccess.getAttributeInitializerAccess().getEqualsSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeInitializer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeInitializer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeInitializer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeInitializerAccess().getInitializationExpressionParserRuleCall_1()); }
	ruleInitializationExpression
{ after(grammarAccess.getAttributeInitializerAccess().getInitializationExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PropertyDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__0__Impl
	rule__PropertyDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_0()); }
(rule__PropertyDeclaration__NameAssignment_0)
{ after(grammarAccess.getPropertyDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__1__Impl
	rule__PropertyDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getPropertyDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__2__Impl
	rule__PropertyDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsCompositeAssignment_2()); }
(rule__PropertyDeclaration__IsCompositeAssignment_2)?
{ after(grammarAccess.getPropertyDeclarationAccess().getIsCompositeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PropertyDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PropertyDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getTypePartAssignment_3()); }
(rule__PropertyDeclaration__TypePartAssignment_3)
{ after(grammarAccess.getPropertyDeclarationAccess().getTypePartAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group__0__Impl
	rule__TypePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getAlternatives_0()); }
(rule__TypePart__Alternatives_0)
{ after(grammarAccess.getTypePartAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getGroup_1()); }
(rule__TypePart__Group_1__0)?
{ after(grammarAccess.getTypePartAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePart__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1__0__Impl
	rule__TypePart__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getGroup_1_0()); }
(rule__TypePart__Group_1_0__0)?
{ after(grammarAccess.getTypePartAccess().getGroup_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getAlternatives_1_1()); }
(rule__TypePart__Alternatives_1_1)?
{ after(grammarAccess.getTypePartAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePart__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_0__0__Impl
	rule__TypePart__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getLeftSquareBracketKeyword_1_0_0()); }

	'[' 

{ after(grammarAccess.getTypePartAccess().getLeftSquareBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getAlternatives_1_0_1()); }
(rule__TypePart__Alternatives_1_0_1)
{ after(grammarAccess.getTypePartAccess().getAlternatives_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePart__Group_1_0_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_0_1_1__0__Impl
	rule__TypePart__Group_1_0_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_0_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getGroup_1_0_1_1_0()); }
(rule__TypePart__Group_1_0_1_1_0__0)?
{ after(grammarAccess.getTypePartAccess().getGroup_1_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_1_0_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_0_1_1__1__Impl
	rule__TypePart__Group_1_0_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_0_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getUpperBoundAssignment_1_0_1_1_1()); }
(rule__TypePart__UpperBoundAssignment_1_0_1_1_1)
{ after(grammarAccess.getTypePartAccess().getUpperBoundAssignment_1_0_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_1_0_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_0_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_0_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getRightSquareBracketKeyword_1_0_1_1_2()); }

	']' 

{ after(grammarAccess.getTypePartAccess().getRightSquareBracketKeyword_1_0_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypePart__Group_1_0_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_0_1_1_0__0__Impl
	rule__TypePart__Group_1_0_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_0_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getLowerBoundAssignment_1_0_1_1_0_0()); }
(rule__TypePart__LowerBoundAssignment_1_0_1_1_0_0)
{ after(grammarAccess.getTypePartAccess().getLowerBoundAssignment_1_0_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_1_0_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_0_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_0_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getFullStopFullStopKeyword_1_0_1_1_0_1()); }

	'..' 

{ after(grammarAccess.getTypePartAccess().getFullStopFullStopKeyword_1_0_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePart__Group_1_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_1_0__0__Impl
	rule__TypePart__Group_1_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsOrderedAssignment_1_1_0_0()); }
(rule__TypePart__IsOrderedAssignment_1_1_0_0)
{ after(grammarAccess.getTypePartAccess().getIsOrderedAssignment_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_1_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsNonuniqueAssignment_1_1_0_1()); }
(rule__TypePart__IsNonuniqueAssignment_1_1_0_1)?
{ after(grammarAccess.getTypePartAccess().getIsNonuniqueAssignment_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypePart__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_1_1__0__Impl
	rule__TypePart__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsNonuniqueAssignment_1_1_1_0()); }
(rule__TypePart__IsNonuniqueAssignment_1_1_1_0)
{ after(grammarAccess.getTypePartAccess().getIsNonuniqueAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypePart__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypePart__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsOrderedAssignment_1_1_1_1()); }
(rule__TypePart__IsOrderedAssignment_1_1_1_1)?
{ after(grammarAccess.getTypePartAccess().getIsOrderedAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__0__Impl
	rule__OperationDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getIsAbstractAssignment_0()); }
(rule__OperationDeclaration__IsAbstractAssignment_0)?
{ after(grammarAccess.getOperationDeclarationAccess().getIsAbstractAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__1__Impl
	rule__OperationDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getNameAssignment_1()); }
(rule__OperationDeclaration__NameAssignment_1)
{ after(grammarAccess.getOperationDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__2__Impl
	rule__OperationDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getOperationDeclarationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__3__Impl
	rule__OperationDeclaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getGroup_3()); }
(rule__OperationDeclaration__Group_3__0)?
{ after(grammarAccess.getOperationDeclarationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__4__Impl
	rule__OperationDeclaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOperationDeclarationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__5__Impl
	rule__OperationDeclaration__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getOwnedMemberAssignment_5()); }
(rule__OperationDeclaration__OwnedMemberAssignment_5)?
{ after(grammarAccess.getOperationDeclarationAccess().getOwnedMemberAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getRedefinitionAssignment_6()); }
(rule__OperationDeclaration__RedefinitionAssignment_6)?
{ after(grammarAccess.getOperationDeclarationAccess().getRedefinitionAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__OperationDeclaration__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group_3__0__Impl
	rule__OperationDeclaration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getOwnedMemberAssignment_3_0()); }
(rule__OperationDeclaration__OwnedMemberAssignment_3_0)
{ after(grammarAccess.getOperationDeclarationAccess().getOwnedMemberAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getGroup_3_1()); }
(rule__OperationDeclaration__Group_3_1__0)*
{ after(grammarAccess.getOperationDeclarationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationDeclaration__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group_3_1__0__Impl
	rule__OperationDeclaration__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getOperationDeclarationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDeclaration__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDeclaration__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getOwnedMemberAssignment_3_1_1()); }
(rule__OperationDeclaration__OwnedMemberAssignment_3_1_1)
{ after(grammarAccess.getOperationDeclarationAccess().getOwnedMemberAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinitionOrStub__Group__0__Impl
	rule__OperationDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getOperationDeclarationParserRuleCall_0()); }
	ruleOperationDeclaration
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getOperationDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getAlternatives_1()); }
(rule__OperationDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getOperationDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RedefinitionClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RedefinitionClause__Group__0__Impl
	rule__RedefinitionClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinitionClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinitionClauseAccess().getRedefinesKeyword_0()); }

	'redefines' 

{ after(grammarAccess.getRedefinitionClauseAccess().getRedefinesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RedefinitionClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RedefinitionClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RedefinitionClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRedefinitionClauseAccess().getQualifiedNameListParserRuleCall_1()); }
	ruleQualifiedNameList
{ after(grammarAccess.getRedefinitionClauseAccess().getQualifiedNameListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReceptionDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceptionDefinition__Group__0__Impl
	rule__ReceptionDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getReceiveKeyword_0()); }

	'receive' 

{ after(grammarAccess.getReceptionDefinitionAccess().getReceiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceptionDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceptionDefinition__Group__1__Impl
	rule__ReceptionDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getSignalNameAssignment_1()); }
(rule__ReceptionDefinition__SignalNameAssignment_1)
{ after(grammarAccess.getReceptionDefinitionAccess().getSignalNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReceptionDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReceptionDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getReceptionDefinitionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalReceptionDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__0__Impl
	rule__SignalReceptionDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getReceiveKeyword_0()); }

	'receive' 

{ after(grammarAccess.getSignalReceptionDeclarationAccess().getReceiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__1__Impl
	rule__SignalReceptionDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSignalKeyword_1()); }

	'signal' 

{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSignalKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__2__Impl
	rule__SignalReceptionDeclaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getNameAssignment_2()); }
(rule__SignalReceptionDeclaration__NameAssignment_2)
{ after(grammarAccess.getSignalReceptionDeclarationAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDeclaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDeclaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationAssignment_3()); }
(rule__SignalReceptionDeclaration__SpecializationAssignment_3)?
{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SignalReceptionDefinitionOrStub__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDefinitionOrStub__Group__0__Impl
	rule__SignalReceptionDefinitionOrStub__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSignalReceptionDeclarationParserRuleCall_0()); }
	ruleSignalReceptionDeclaration
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getSignalReceptionDeclarationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDefinitionOrStub__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDefinitionOrStub__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getAlternatives_1()); }
(rule__SignalReceptionDefinitionOrStub__Alternatives_1)
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalReceptionDefinitionOrStub__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDefinitionOrStub__Group_1_1__0__Impl
	rule__SignalReceptionDefinitionOrStub__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }

	'{' 

{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getLeftCurlyBracketKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDefinitionOrStub__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDefinitionOrStub__Group_1_1__1__Impl
	rule__SignalReceptionDefinitionOrStub__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
(rule__SignalReceptionDefinitionOrStub__OwnedMemberAssignment_1_1_1)*
{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getOwnedMemberAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReceptionDefinitionOrStub__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReceptionDefinitionOrStub__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }

	'}' 

{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getRightCurlyBracketKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getUnqualifiedNameParserRuleCall_0()); }
	ruleUnqualifiedName
{ after(grammarAccess.getQualifiedNameAccess().getUnqualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getAlternatives_1()); }
(rule__QualifiedName__Alternatives_1)?
{ after(grammarAccess.getQualifiedNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1_0__0__Impl
	rule__QualifiedName__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0_0()); }

	'::' 

{ after(grammarAccess.getQualifiedNameAccess().getColonColonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameBindingAssignment_1_0_1()); }
(rule__QualifiedName__NameBindingAssignment_1_0_1)
{ after(grammarAccess.getQualifiedNameAccess().getNameBindingAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1_1__0__Impl
	rule__QualifiedName__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameBindingAssignment_1_1_1()); }
(rule__QualifiedName__NameBindingAssignment_1_1_1)
{ after(grammarAccess.getQualifiedNameAccess().getNameBindingAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PotentiallyAmbiguousQualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group__0__Impl
	rule__PotentiallyAmbiguousQualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getUnqualifiedNameParserRuleCall_0()); }
	ruleUnqualifiedName
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getUnqualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotentiallyAmbiguousQualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getAlternatives_1()); }
(rule__PotentiallyAmbiguousQualifiedName__Alternatives_1)?
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PotentiallyAmbiguousQualifiedName__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group_1_0__0__Impl
	rule__PotentiallyAmbiguousQualifiedName__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getColonColonKeyword_1_0_0()); }

	'::' 

{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getColonColonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotentiallyAmbiguousQualifiedName__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingAssignment_1_0_1()); }
(rule__PotentiallyAmbiguousQualifiedName__NameBindingAssignment_1_0_1)
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PotentiallyAmbiguousQualifiedName__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1__0__Impl
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getIsAmbiguousAssignment_1_1_0()); }
(rule__PotentiallyAmbiguousQualifiedName__IsAmbiguousAssignment_1_1_0)
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getIsAmbiguousAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotentiallyAmbiguousQualifiedName__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1__1__Impl
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingAssignment_1_1_1()); }
(rule__PotentiallyAmbiguousQualifiedName__NameBindingAssignment_1_1_1)
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotentiallyAmbiguousQualifiedName__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_1_2()); }
(rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__0)*
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getGroup_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__0__Impl
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getFullStopKeyword_1_1_2_0()); }

	'.' 

{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getFullStopKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__Group_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingAssignment_1_1_2_1()); }
(rule__PotentiallyAmbiguousQualifiedName__NameBindingAssignment_1_1_2_1)
{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingAssignment_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NameBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameBinding__Group__0__Impl
	rule__NameBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getNameAssignment_0()); }
(rule__NameBinding__NameAssignment_0)
{ after(grammarAccess.getNameBindingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getBindingAssignment_1()); }
(rule__NameBinding__BindingAssignment_1)?
{ after(grammarAccess.getNameBindingAccess().getBindingAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateBinding__Group__0__Impl
	rule__TemplateBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getTemplateBindingAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateBinding__Group__1__Impl
	rule__TemplateBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getAlternatives_1()); }
(rule__TemplateBinding__Alternatives_1)
{ after(grammarAccess.getTemplateBindingAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateBinding__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateBinding__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateBinding__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateBindingAccess().getGreaterThanSignKeyword_2()); }

	'>' 

{ after(grammarAccess.getTemplateBindingAccess().getGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PositionalTemplateBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group__0__Impl
	rule__PositionalTemplateBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameAssignment_0()); }
(rule__PositionalTemplateBinding__ArgumentNameAssignment_0)
{ after(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTemplateBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getGroup_1()); }
(rule__PositionalTemplateBinding__Group_1__0)*
{ after(grammarAccess.getPositionalTemplateBindingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalTemplateBinding__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group_1__0__Impl
	rule__PositionalTemplateBinding__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getPositionalTemplateBindingAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTemplateBinding__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTemplateBinding__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameAssignment_1_1()); }
(rule__PositionalTemplateBinding__ArgumentNameAssignment_1_1)
{ after(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTemplateBinding__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group__0__Impl
	rule__NamedTemplateBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionAssignment_0()); }
(rule__NamedTemplateBinding__SubstitutionAssignment_0)
{ after(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTemplateBinding__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getGroup_1()); }
(rule__NamedTemplateBinding__Group_1__0)*
{ after(grammarAccess.getNamedTemplateBindingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTemplateBinding__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group_1__0__Impl
	rule__NamedTemplateBinding__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNamedTemplateBindingAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTemplateBinding__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTemplateBinding__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionAssignment_1_1()); }
(rule__NamedTemplateBinding__SubstitutionAssignment_1_1)
{ after(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TemplateParameterSubstitution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameterSubstitution__Group__0__Impl
	rule__TemplateParameterSubstitution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getParameterNameAssignment_0()); }
(rule__TemplateParameterSubstitution__ParameterNameAssignment_0)
{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getParameterNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameterSubstitution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameterSubstitution__Group__1__Impl
	rule__TemplateParameterSubstitution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TemplateParameterSubstitution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TemplateParameterSubstitution__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getArgumentNameAssignment_2()); }
(rule__TemplateParameterSubstitution__ArgumentNameAssignment_2)
{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getArgumentNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__0__Impl
	rule__PrimaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0()); }
	ruleBaseExpression
{ after(grammarAccess.getPrimaryExpressionAccess().getBaseExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
(rule__PrimaryExpression__Alternatives_1)*
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_0__0__Impl
	rule__PrimaryExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureReferenceExpressionAction_1_0_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureReferenceExpressionAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_0__1__Impl
	rule__PrimaryExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_0_1()); }

	'.' 

{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_0__2__Impl
	rule__PrimaryExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameBindingAssignment_1_0_2()); }
(rule__PrimaryExpression__NameBindingAssignment_1_0_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameBindingAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_0__3__Impl
	rule__PrimaryExpression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureInvocationExpressionTargetAction_1_0_3()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureInvocationExpressionTargetAction_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTupleAssignment_1_0_4()); }
(rule__PrimaryExpression__TupleAssignment_1_0_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getTupleAssignment_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PrimaryExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_1__0__Impl
	rule__PrimaryExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFeatureReferenceExpressionAction_1_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getFeatureReferenceExpressionAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_1__1__Impl
	rule__PrimaryExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_1_1()); }

	'.' 

{ after(grammarAccess.getPrimaryExpressionAccess().getFullStopKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_1__2__Impl
	rule__PrimaryExpression__Group_1_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameBindingAssignment_1_1_2()); }
(rule__PrimaryExpression__NameBindingAssignment_1_1_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getNameBindingAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getPropertyAccessExpressionFeatureReferenceAction_1_1_3()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getPropertyAccessExpressionFeatureReferenceAction_1_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2__0__Impl
	rule__PrimaryExpression__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExtentOrExpressionNonNameExpressionAction_1_2_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getExtentOrExpressionNonNameExpressionAction_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2__1__Impl
	rule__PrimaryExpression__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_1()); }

	'->' 

{ after(grammarAccess.getPrimaryExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1_2_2()); }
(rule__PrimaryExpression__Alternatives_1_2_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1_2_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_0__0__Impl
	rule__PrimaryExpression__Group_1_2_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSequenceOperationExpressionPrimaryAction_1_2_2_0_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getSequenceOperationExpressionPrimaryAction_1_2_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_0__1__Impl
	rule__PrimaryExpression__Group_1_2_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOperationAssignment_1_2_2_0_1()); }
(rule__PrimaryExpression__OperationAssignment_1_2_2_0_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getOperationAssignment_1_2_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTupleAssignment_1_2_2_0_2()); }
(rule__PrimaryExpression__TupleAssignment_1_2_2_0_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getTupleAssignment_1_2_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1_2_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_1__0__Impl
	rule__PrimaryExpression__Group_1_2_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSequenceReductionExpressionPrimaryAction_1_2_2_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getSequenceReductionExpressionPrimaryAction_1_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_1__1__Impl
	rule__PrimaryExpression__Group_1_2_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getReduceKeyword_1_2_2_1_1()); }

	'reduce' 

{ after(grammarAccess.getPrimaryExpressionAccess().getReduceKeyword_1_2_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_1__2__Impl
	rule__PrimaryExpression__Group_1_2_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsOrderedAssignment_1_2_2_1_2()); }
(rule__PrimaryExpression__IsOrderedAssignment_1_2_2_1_2)?
{ after(grammarAccess.getPrimaryExpressionAccess().getIsOrderedAssignment_1_2_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBehaviorNameAssignment_1_2_2_1_3()); }
(rule__PrimaryExpression__BehaviorNameAssignment_1_2_2_1_3)
{ after(grammarAccess.getPrimaryExpressionAccess().getBehaviorNameAssignment_1_2_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__PrimaryExpression__Group_1_2_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_2__0__Impl
	rule__PrimaryExpression__Group_1_2_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSequenceExpansionExpressionPrimaryAction_1_2_2_2_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getSequenceExpansionExpressionPrimaryAction_1_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_2__1__Impl
	rule__PrimaryExpression__Group_1_2_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOperationAssignment_1_2_2_2_1()); }
(rule__PrimaryExpression__OperationAssignment_1_2_2_2_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getOperationAssignment_1_2_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_2__2__Impl
	rule__PrimaryExpression__Group_1_2_2_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_1_2_2_2_2()); }
(rule__PrimaryExpression__VariableAssignment_1_2_2_2_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getVariableAssignment_1_2_2_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_2__3__Impl
	rule__PrimaryExpression__Group_1_2_2_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_2_2_2_3()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_1_2_2_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_2__4__Impl
	rule__PrimaryExpression__Group_1_2_2_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentAssignment_1_2_2_2_4()); }
(rule__PrimaryExpression__ArgumentAssignment_1_2_2_2_4)
{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentAssignment_1_2_2_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_2_2_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_2_2_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_2_2_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2_2_2_5()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_1_2_2_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrimaryExpression__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_3__0__Impl
	rule__PrimaryExpression__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getSequenceAccessExpressionPrimaryAction_1_3_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getSequenceAccessExpressionPrimaryAction_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIndexAssignment_1_3_1()); }
(rule__PrimaryExpression__IndexAssignment_1_3_1)
{ after(grammarAccess.getPrimaryExpressionAccess().getIndexAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnboundedLiteralExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnboundedLiteralExpression__Group__0__Impl
	rule__UnboundedLiteralExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnboundedLiteralExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnboundedLiteralExpressionAccess().getUnboundedLiteralExpressionAction_0()); }
(

)
{ after(grammarAccess.getUnboundedLiteralExpressionAccess().getUnboundedLiteralExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnboundedLiteralExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnboundedLiteralExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnboundedLiteralExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnboundedLiteralExpressionAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getUnboundedLiteralExpressionAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThisExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group_0__0__Impl
	rule__ThisExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getFeatureInvocationExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getThisExpressionAccess().getFeatureInvocationExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group_0__1__Impl
	rule__ThisExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getThisKeyword_0_1()); }

	'this' 

{ after(grammarAccess.getThisExpressionAccess().getThisKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getTupleAssignment_0_2()); }
(rule__ThisExpression__TupleAssignment_0_2)
{ after(grammarAccess.getThisExpressionAccess().getTupleAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ThisExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group_1__0__Impl
	rule__ThisExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getThisExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getThisExpressionAccess().getThisExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getThisKeyword_1_1()); }

	'this' 

{ after(grammarAccess.getThisExpressionAccess().getThisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParenthesizedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__0__Impl
	rule__ParenthesizedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__1__Impl
	rule__ParenthesizedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getParenthesizedExpressionAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParenthesizedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParenthesizedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParenthesizedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getParenthesizedExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BehaviorInvocationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BehaviorInvocationExpression__Group__0__Impl
	rule__BehaviorInvocationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorInvocationExpressionAccess().getTargetAssignment_0()); }
(rule__BehaviorInvocationExpression__TargetAssignment_0)
{ after(grammarAccess.getBehaviorInvocationExpressionAccess().getTargetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BehaviorInvocationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BehaviorInvocationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorInvocationExpressionAccess().getTupleAssignment_1()); }
(rule__BehaviorInvocationExpression__TupleAssignment_1)
{ after(grammarAccess.getBehaviorInvocationExpressionAccess().getTupleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Tuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__0__Impl
	rule__Tuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getTupleAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__1__Impl
	rule__Tuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getAlternatives_1()); }
(rule__Tuple__Alternatives_1)
{ after(grammarAccess.getTupleAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Tuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Tuple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Tuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTupleAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getTupleAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PositionalTupleExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group__0__Impl
	rule__PositionalTupleExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getPositionalTupleAction_0()); }
(

)
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getPositionalTupleAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTupleExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getGroup_1()); }
(rule__PositionalTupleExpressionList__Group_1__0)?
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalTupleExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group_1__0__Impl
	rule__PositionalTupleExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_1_0()); }
(rule__PositionalTupleExpressionList__ExpressionAssignment_1_0)
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTupleExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getGroup_1_1()); }
(rule__PositionalTupleExpressionList__Group_1_1__0)*
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PositionalTupleExpressionList__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group_1_1__0__Impl
	rule__PositionalTupleExpressionList__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getCommaKeyword_1_1_0()); }

	',' 

{ after(grammarAccess.getPositionalTupleExpressionListAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PositionalTupleExpressionList__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PositionalTupleExpressionList__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_1_1_1()); }
(rule__PositionalTupleExpressionList__ExpressionAssignment_1_1_1)
{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTupleExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group__0__Impl
	rule__NamedTupleExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_0()); }
(rule__NamedTupleExpressionList__NamedExpressionAssignment_0)
{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTupleExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getGroup_1()); }
(rule__NamedTupleExpressionList__Group_1__0)*
{ after(grammarAccess.getNamedTupleExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedTupleExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group_1__0__Impl
	rule__NamedTupleExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getNamedTupleExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedTupleExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedTupleExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_1_1()); }
(rule__NamedTupleExpressionList__NamedExpressionAssignment_1_1)
{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NamedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedExpression__Group__0__Impl
	rule__NamedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getNameAssignment_0()); }
(rule__NamedExpression__NameAssignment_0)
{ after(grammarAccess.getNamedExpressionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedExpression__Group__1__Impl
	rule__NamedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_1()); }

	'=>' 

{ after(grammarAccess.getNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getExpressionAssignment_2()); }
(rule__NamedExpression__ExpressionAssignment_2)
{ after(grammarAccess.getNamedExpressionAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuperInvocationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group__0__Impl
	rule__SuperInvocationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getSuperKeyword_0()); }

	'super' 

{ after(grammarAccess.getSuperInvocationExpressionAccess().getSuperKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperInvocationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group__1__Impl
	rule__SuperInvocationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getGroup_1()); }
(rule__SuperInvocationExpression__Group_1__0)?
{ after(grammarAccess.getSuperInvocationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperInvocationExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getTupleAssignment_2()); }
(rule__SuperInvocationExpression__TupleAssignment_2)
{ after(grammarAccess.getSuperInvocationExpressionAccess().getTupleAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuperInvocationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group_1__0__Impl
	rule__SuperInvocationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getSuperInvocationExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuperInvocationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuperInvocationExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getTargetAssignment_1_1()); }
(rule__SuperInvocationExpression__TargetAssignment_1_1)
{ after(grammarAccess.getSuperInvocationExpressionAccess().getTargetAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceCreationOrSequenceConstructionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group__0__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getAlternatives_1()); }
(rule__InstanceCreationOrSequenceConstructionExpression__Alternatives_1)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__0__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getSequenceConstructionExpressionAction_1_0_0()); }
(

)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getSequenceConstructionExpressionAction_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__1__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTypeNameAssignment_1_0_1()); }
(rule__InstanceCreationOrSequenceConstructionExpression__TypeNameAssignment_1_0_1)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTypeNameAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__2__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getHasMultiplicityAssignment_1_0_2()); }
(rule__InstanceCreationOrSequenceConstructionExpression__HasMultiplicityAssignment_1_0_2)?
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getHasMultiplicityAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__3__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0_3()); }

	'{' 

{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__4__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getElementsAssignment_1_0_4()); }
(rule__InstanceCreationOrSequenceConstructionExpression__ElementsAssignment_1_0_4)?
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getElementsAssignment_1_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_0_5()); }

	'}' 

{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__0__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getInstanceCreationExpressionAction_1_1_0()); }
(

)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getInstanceCreationExpressionAction_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__1__Impl
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getConstructorAssignment_1_1_1()); }
(rule__InstanceCreationOrSequenceConstructionExpression__ConstructorAssignment_1_1_1)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getConstructorAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleAssignment_1_1_2()); }
(rule__InstanceCreationOrSequenceConstructionExpression__TupleAssignment_1_1_2)
{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LinkOperationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationExpression__Group__0__Impl
	rule__LinkOperationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getAssociationNameAssignment_0()); }
(rule__LinkOperationExpression__AssociationNameAssignment_0)
{ after(grammarAccess.getLinkOperationExpressionAccess().getAssociationNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationExpression__Group__1__Impl
	rule__LinkOperationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getLinkOperationExpressionAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationExpression__Group__2__Impl
	rule__LinkOperationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getOperationAssignment_2()); }
(rule__LinkOperationExpression__OperationAssignment_2)
{ after(grammarAccess.getLinkOperationExpressionAccess().getOperationAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getTupleAssignment_3()); }
(rule__LinkOperationExpression__TupleAssignment_3)
{ after(grammarAccess.getLinkOperationExpressionAccess().getTupleAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LinkOperationTuple__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group__0__Impl
	rule__LinkOperationTuple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getLinkOperationTupleAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group__1__Impl
	rule__LinkOperationTuple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getAlternatives_1()); }
(rule__LinkOperationTuple__Alternatives_1)
{ after(grammarAccess.getLinkOperationTupleAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LinkOperationTuple__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LinkOperationTuple__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationTuple__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationTupleAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getLinkOperationTupleAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IndexedNamedTupleExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedTupleExpressionList__Group__0__Impl
	rule__IndexedNamedTupleExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedTupleExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionAssignment_0()); }
(rule__IndexedNamedTupleExpressionList__NamedExpressionAssignment_0)
{ after(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedTupleExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedTupleExpressionList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedTupleExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedTupleExpressionListAccess().getGroup_1()); }
(rule__IndexedNamedTupleExpressionList__Group_1__0)*
{ after(grammarAccess.getIndexedNamedTupleExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedNamedTupleExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedTupleExpressionList__Group_1__0__Impl
	rule__IndexedNamedTupleExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedTupleExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedTupleExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getIndexedNamedTupleExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedTupleExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedTupleExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedTupleExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionAssignment_1_1()); }
(rule__IndexedNamedTupleExpressionList__NamedExpressionAssignment_1_1)
{ after(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IndexedNamedExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__0__Impl
	rule__IndexedNamedExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getNameAssignment_0()); }
(rule__IndexedNamedExpression__NameAssignment_0)
{ after(grammarAccess.getIndexedNamedExpressionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__1__Impl
	rule__IndexedNamedExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getIndexAssignment_1()); }
(rule__IndexedNamedExpression__IndexAssignment_1)?
{ after(grammarAccess.getIndexedNamedExpressionAccess().getIndexAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__2__Impl
	rule__IndexedNamedExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_2()); }

	'=>' 

{ after(grammarAccess.getIndexedNamedExpressionAccess().getEqualsSignGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IndexedNamedExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IndexedNamedExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getExpressionAssignment_3()); }
(rule__IndexedNamedExpression__ExpressionAssignment_3)
{ after(grammarAccess.getIndexedNamedExpressionAccess().getExpressionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassExtentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpression__Group__0__Impl
	rule__ClassExtentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionAccess().getClassNameAssignment_0()); }
(rule__ClassExtentExpression__ClassNameAssignment_0)
{ after(grammarAccess.getClassExtentExpressionAccess().getClassNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpression__Group__1__Impl
	rule__ClassExtentExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getClassExtentExpressionAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpression__Group__2__Impl
	rule__ClassExtentExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionAccess().getAllInstancesKeyword_2()); }

	'allInstances' 

{ after(grammarAccess.getClassExtentExpressionAccess().getAllInstancesKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpression__Group__3__Impl
	rule__ClassExtentExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getClassExtentExpressionAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassExtentExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassExtentExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getClassExtentExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SequenceConstructionExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpression__Group_0__0__Impl
	rule__SequenceConstructionExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives_0_0()); }
(rule__SequenceConstructionExpression__Alternatives_0_0)
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpression__Group_0__1__Impl
	rule__SequenceConstructionExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityAssignment_0_1()); }
(rule__SequenceConstructionExpression__HasMultiplicityAssignment_0_1)?
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpression__Group_0__2__Impl
	rule__SequenceConstructionExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_2()); }

	'{' 

{ after(grammarAccess.getSequenceConstructionExpressionAccess().getLeftCurlyBracketKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpression__Group_0__3__Impl
	rule__SequenceConstructionExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getElementsAssignment_0_3()); }
(rule__SequenceConstructionExpression__ElementsAssignment_0_3)?
{ after(grammarAccess.getSequenceConstructionExpressionAccess().getElementsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceConstructionExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceConstructionExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_4()); }

	'}' 

{ after(grammarAccess.getSequenceConstructionExpressionAccess().getRightCurlyBracketKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MultiplicityIndicator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityIndicator__Group__0__Impl
	rule__MultiplicityIndicator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityIndicator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityIndicatorAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getMultiplicityIndicatorAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicityIndicator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicityIndicator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicityIndicator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicityIndicatorAccess().getRightSquareBracketKeyword_1()); }

	']' 

{ after(grammarAccess.getMultiplicityIndicatorAccess().getRightSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceRange__Group__0__Impl
	rule__SequenceRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceRangeAccess().getRangeLowerAssignment_0()); }
(rule__SequenceRange__RangeLowerAssignment_0)
{ after(grammarAccess.getSequenceRangeAccess().getRangeLowerAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceRange__Group__1__Impl
	rule__SequenceRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceRangeAccess().getFullStopFullStopKeyword_1()); }

	'..' 

{ after(grammarAccess.getSequenceRangeAccess().getFullStopFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceRange__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceRangeAccess().getRangeUpperAssignment_2()); }
(rule__SequenceRange__RangeUpperAssignment_2)
{ after(grammarAccess.getSequenceRangeAccess().getRangeUpperAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequenceExpressionList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceExpressionList__Group__0__Impl
	rule__SequenceExpressionList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpressionList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getElementAssignment_0()); }
(rule__SequenceExpressionList__ElementAssignment_0)
{ after(grammarAccess.getSequenceExpressionListAccess().getElementAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExpressionList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceExpressionList__Group__1__Impl
	rule__SequenceExpressionList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpressionList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getGroup_1()); }
(rule__SequenceExpressionList__Group_1__0)*
{ after(grammarAccess.getSequenceExpressionListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExpressionList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceExpressionList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpressionList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getCommaKeyword_2()); }
(
	',' 
)?
{ after(grammarAccess.getSequenceExpressionListAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequenceExpressionList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceExpressionList__Group_1__0__Impl
	rule__SequenceExpressionList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpressionList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getSequenceExpressionListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceExpressionList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceExpressionList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpressionList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getElementAssignment_1_1()); }
(rule__SequenceExpressionList__ElementAssignment_1_1)
{ after(grammarAccess.getSequenceExpressionListAccess().getElementAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SequenceInitializationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__0__Impl
	rule__SequenceInitializationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getNewKeyword_0()); }
(
	'new' 
)?
{ after(grammarAccess.getSequenceInitializationExpressionAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceInitializationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__1__Impl
	rule__SequenceInitializationExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getSequenceInitializationExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceInitializationExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__2__Impl
	rule__SequenceInitializationExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getElementsAssignment_2()); }
(rule__SequenceInitializationExpression__ElementsAssignment_2)
{ after(grammarAccess.getSequenceInitializationExpressionAccess().getElementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceInitializationExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceInitializationExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSequenceInitializationExpressionAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Index__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__0__Impl
	rule__Index__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getIndexAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__1__Impl
	rule__Index__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getIndexAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Index__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Index__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Index__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getIndexAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequenceOperationOrReductionOrExpansionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group__0__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getExtentOrExpressionAction_0()); }
(

)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getExtentOrExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group__1__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getNameAssignment_1()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__NameAssignment_1)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group__2__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }

	'->' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getAlternatives_3()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__Alternatives_3)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__0__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceOperationExpressionPrimaryAction_3_0_0()); }
(

)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceOperationExpressionPrimaryAction_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__1__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationAssignment_3_0_1()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__OperationAssignment_3_0_1)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationAssignment_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getTupleAssignment_3_0_2()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__TupleAssignment_3_0_2)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getTupleAssignment_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__0__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceReductionExpressionPrimaryAction_3_1_0()); }
(

)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceReductionExpressionPrimaryAction_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__1__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getReduceKeyword_3_1_1()); }

	'reduce' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getReduceKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__2__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getIsOrderedAssignment_3_1_2()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__IsOrderedAssignment_3_1_2)?
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getIsOrderedAssignment_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getBehaviorNameAssignment_3_1_3()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__BehaviorNameAssignment_3_1_3)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getBehaviorNameAssignment_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__0__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceExpansionExpressionPrimaryAction_3_2_0()); }
(

)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getSequenceExpansionExpressionPrimaryAction_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__1__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationAssignment_3_2_1()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__OperationAssignment_3_2_1)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__2__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getVariableAssignment_3_2_2()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__VariableAssignment_3_2_2)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getVariableAssignment_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__3__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getLeftParenthesisKeyword_3_2_3()); }

	'(' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getLeftParenthesisKeyword_3_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__4__Impl
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getArgumentAssignment_3_2_4()); }
(rule__SequenceOperationOrReductionOrExpansionExpression__ArgumentAssignment_3_2_4)
{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getArgumentAssignment_3_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__Group_3_2__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getRightParenthesisKeyword_3_2_5()); }

	')' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getRightParenthesisKeyword_3_2_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__PrefixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpression__Group__0__Impl
	rule__PrefixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getOperatorAssignment_0()); }
(rule__PrefixExpression__OperatorAssignment_0)
{ after(grammarAccess.getPrefixExpressionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrefixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrefixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getOperandAssignment_1()); }
(rule__PrefixExpression__OperandAssignment_1)
{ after(grammarAccess.getPrefixExpressionAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PostfixExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group__0__Impl
	rule__PostfixExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getOperandAssignment_0()); }
(rule__PostfixExpression__OperandAssignment_0)
{ after(grammarAccess.getPostfixExpressionAccess().getOperandAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PostfixExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PostfixExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getOperatorAssignment_1()); }
(rule__PostfixExpression__OperatorAssignment_1)
{ after(grammarAccess.getPostfixExpressionAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BooleanUnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanUnaryExpression__Group__0__Impl
	rule__BooleanUnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanUnaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorAssignment_0()); }
(rule__BooleanUnaryExpression__OperatorAssignment_0)
{ after(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanUnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BooleanUnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanUnaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanUnaryExpressionAccess().getOperandAssignment_1()); }
(rule__BooleanUnaryExpression__OperandAssignment_1)
{ after(grammarAccess.getBooleanUnaryExpressionAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__BitStringUnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStringUnaryExpression__Group__0__Impl
	rule__BitStringUnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringUnaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringUnaryExpressionAccess().getOperatorAssignment_0()); }
(rule__BitStringUnaryExpression__OperatorAssignment_0)
{ after(grammarAccess.getBitStringUnaryExpressionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BitStringUnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BitStringUnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringUnaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringUnaryExpressionAccess().getOperandAssignment_1()); }
(rule__BitStringUnaryExpression__OperandAssignment_1)
{ after(grammarAccess.getBitStringUnaryExpressionAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumericUnaryExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericUnaryExpression__Group__0__Impl
	rule__NumericUnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getOperatorAssignment_0()); }
(rule__NumericUnaryExpression__OperatorAssignment_0)
{ after(grammarAccess.getNumericUnaryExpressionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumericUnaryExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumericUnaryExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getOperandAssignment_1()); }
(rule__NumericUnaryExpression__OperandAssignment_1)
{ after(grammarAccess.getNumericUnaryExpressionAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IsolationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsolationExpression__Group__0__Impl
	rule__IsolationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsolationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsolationExpressionAccess().getOperatorAssignment_0()); }
(rule__IsolationExpression__OperatorAssignment_0)
{ after(grammarAccess.getIsolationExpressionAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsolationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsolationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsolationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsolationExpressionAccess().getOperandAssignment_1()); }
(rule__IsolationExpression__OperandAssignment_1)
{ after(grammarAccess.getIsolationExpressionAccess().getOperandAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CastExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group__0__Impl
	rule__CastExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getCastExpressionAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group__1__Impl
	rule__CastExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getAlternatives_1()); }
(rule__CastExpression__Alternatives_1)
{ after(grammarAccess.getCastExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group__2__Impl
	rule__CastExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCastExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CastExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CastExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getOperandAssignment_3()); }
(rule__CastExpression__OperandAssignment_3)
{ after(grammarAccess.getCastExpressionAccess().getOperandAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MultiplicativeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__0__Impl
	rule__MultiplicativeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
	ruleUnaryExpression
{ after(grammarAccess.getMultiplicativeExpressionAccess().getUnaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
(rule__MultiplicativeExpression__Group_1__0)*
{ after(grammarAccess.getMultiplicativeExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiplicativeExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__0__Impl
	rule__MultiplicativeExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getArithmeticExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getArithmeticExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__1__Impl
	rule__MultiplicativeExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
(rule__MultiplicativeExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiplicativeExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiplicativeExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperand2Assignment_1_2()); }
(rule__MultiplicativeExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AdditiveExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__0__Impl
	rule__AdditiveExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
	ruleMultiplicativeExpression
{ after(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
(rule__AdditiveExpression__Group_1__0)*
{ after(grammarAccess.getAdditiveExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AdditiveExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__0__Impl
	rule__AdditiveExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getArithmeticExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getAdditiveExpressionAccess().getArithmeticExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__1__Impl
	rule__AdditiveExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AdditiveExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AdditiveExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AdditiveExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOperand2Assignment_1_2()); }
(rule__AdditiveExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getAdditiveExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ShiftExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group__0__Impl
	rule__ShiftExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
	ruleAdditiveExpression
{ after(grammarAccess.getShiftExpressionAccess().getAdditiveExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
(rule__ShiftExpression__Group_1__0)*
{ after(grammarAccess.getShiftExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ShiftExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group_1__0__Impl
	rule__ShiftExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getShiftExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getShiftExpressionAccess().getShiftExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group_1__1__Impl
	rule__ShiftExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ShiftExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getShiftExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ShiftExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ShiftExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getOperand2Assignment_1_2()); }
(rule__ShiftExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getShiftExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__0__Impl
	rule__RelationalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); }
	ruleShiftExpression
{ after(grammarAccess.getRelationalExpressionAccess().getShiftExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
(rule__RelationalExpression__Group_1__0)?
{ after(grammarAccess.getRelationalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__0__Impl
	rule__RelationalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getRelationalExpressionAccess().getRelationalExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__1__Impl
	rule__RelationalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
(rule__RelationalExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getRelationalExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperand2Assignment_1_2()); }
(rule__RelationalExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getRelationalExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClassificationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpression__Group__0__Impl
	rule__ClassificationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
	ruleRelationalExpression
{ after(grammarAccess.getClassificationExpressionAccess().getRelationalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getGroup_1()); }
(rule__ClassificationExpression__Group_1__0)?
{ after(grammarAccess.getClassificationExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpression__Group_1__0__Impl
	rule__ClassificationExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getClassificationExpressionOperandAction_1_0()); }
(

)
{ after(grammarAccess.getClassificationExpressionAccess().getClassificationExpressionOperandAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpression__Group_1__1__Impl
	rule__ClassificationExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ClassificationExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getClassificationExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getTypeNameAssignment_1_2()); }
(rule__ClassificationExpression__TypeNameAssignment_1_2)
{ after(grammarAccess.getClassificationExpressionAccess().getTypeNameAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EqualityExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__0__Impl
	rule__EqualityExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0()); }
	ruleClassificationExpression
{ after(grammarAccess.getEqualityExpressionAccess().getClassificationExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
(rule__EqualityExpression__Group_1__0)*
{ after(grammarAccess.getEqualityExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EqualityExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__0__Impl
	rule__EqualityExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getEqualityExpressionAccess().getEqualityExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__1__Impl
	rule__EqualityExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
(rule__EqualityExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getEqualityExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EqualityExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EqualityExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperand2Assignment_1_2()); }
(rule__EqualityExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getEqualityExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
	ruleEqualityExpression
{ after(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getLogicalExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getLogicalExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperand2Assignment_1_2()); }
(rule__AndExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExclusiveOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group__0__Impl
	rule__ExclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getExclusiveOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
(rule__ExclusiveOrExpression__Group_1__0)*
{ after(grammarAccess.getExclusiveOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExclusiveOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group_1__0__Impl
	rule__ExclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getLogicalExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getLogicalExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group_1__1__Impl
	rule__ExclusiveOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ExclusiveOrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExclusiveOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExclusiveOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperand2Assignment_1_2()); }
(rule__ExclusiveOrExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InclusiveOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group__0__Impl
	rule__InclusiveOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); }
	ruleExclusiveOrExpression
{ after(grammarAccess.getInclusiveOrExpressionAccess().getExclusiveOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
(rule__InclusiveOrExpression__Group_1__0)*
{ after(grammarAccess.getInclusiveOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InclusiveOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group_1__0__Impl
	rule__InclusiveOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getLogicalExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getLogicalExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group_1__1__Impl
	rule__InclusiveOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__InclusiveOrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InclusiveOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InclusiveOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperand2Assignment_1_2()); }
(rule__InclusiveOrExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__0__Impl
	rule__ConditionalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); }
	ruleInclusiveOrExpression
{ after(grammarAccess.getConditionalAndExpressionAccess().getInclusiveOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
(rule__ConditionalAndExpression__Group_1__0)*
{ after(grammarAccess.getConditionalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__0__Impl
	rule__ConditionalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getConditionalLogicalExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getConditionalAndExpressionAccess().getConditionalLogicalExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__1__Impl
	rule__ConditionalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ConditionalAndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getOperand2Assignment_1_2()); }
(rule__ConditionalAndExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getConditionalAndExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionalOrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group__0__Impl
	rule__ConditionalOrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
	ruleConditionalAndExpression
{ after(grammarAccess.getConditionalOrExpressionAccess().getConditionalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
(rule__ConditionalOrExpression__Group_1__0)*
{ after(grammarAccess.getConditionalOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalOrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__0__Impl
	rule__ConditionalOrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getConditionalLogicalExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getConditionalOrExpressionAccess().getConditionalLogicalExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__1__Impl
	rule__ConditionalOrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ConditionalOrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalOrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalOrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getOperand2Assignment_1_2()); }
(rule__ConditionalOrExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getConditionalOrExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConditionalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__0__Impl
	rule__ConditionalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getConditionalOrExpressionParserRuleCall_0()); }
	ruleConditionalOrExpression
{ after(grammarAccess.getConditionalExpressionAccess().getConditionalOrExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
(rule__ConditionalExpression__Group_1__0)?
{ after(grammarAccess.getConditionalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConditionalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__0__Impl
	rule__ConditionalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getConditionalTestExpressionOperand1Action_1_0()); }
(

)
{ after(grammarAccess.getConditionalExpressionAccess().getConditionalTestExpressionOperand1Action_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__1__Impl
	rule__ConditionalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_1()); }

	'?' 

{ after(grammarAccess.getConditionalExpressionAccess().getQuestionMarkKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__2__Impl
	rule__ConditionalExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getOperand2Assignment_1_2()); }
(rule__ConditionalExpression__Operand2Assignment_1_2)
{ after(grammarAccess.getConditionalExpressionAccess().getOperand2Assignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__3__Impl
	rule__ConditionalExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3()); }

	':' 

{ after(grammarAccess.getConditionalExpressionAccess().getColonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionalExpression__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConditionalExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getOperand3Assignment_1_4()); }
(rule__ConditionalExpression__Operand3Assignment_1_4)
{ after(grammarAccess.getConditionalExpressionAccess().getOperand3Assignment_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AssignmentExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group__0__Impl
	rule__AssignmentExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getLeftHandSideAssignment_0()); }
(rule__AssignmentExpression__LeftHandSideAssignment_0)
{ after(grammarAccess.getAssignmentExpressionAccess().getLeftHandSideAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group__1__Impl
	rule__AssignmentExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignment_1()); }
(rule__AssignmentExpression__OperatorAssignment_1)
{ after(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignmentExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignmentExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getRightHandSideAssignment_2()); }
(rule__AssignmentExpression__RightHandSideAssignment_2)
{ after(grammarAccess.getAssignmentExpressionAccess().getRightHandSideAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NameLeftHandSide__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameLeftHandSide__Group__0__Impl
	rule__NameLeftHandSide__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NameLeftHandSide__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameLeftHandSideAccess().getTargetAssignment_0()); }
(rule__NameLeftHandSide__TargetAssignment_0)
{ after(grammarAccess.getNameLeftHandSideAccess().getTargetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NameLeftHandSide__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NameLeftHandSide__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NameLeftHandSide__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameLeftHandSideAccess().getIndexAssignment_1()); }
(rule__NameLeftHandSide__IndexAssignment_1)?
{ after(grammarAccess.getNameLeftHandSideAccess().getIndexAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getBlockAction_0()); }
(

)
{ after(grammarAccess.getBlockAccess().getBlockAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementAssignment_2()); }
(rule__Block__StatementAssignment_2)*
{ after(grammarAccess.getBlockAccess().getStatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnnotatedStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedStatement__Group__0__Impl
	rule__AnnotatedStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getDocumentationAssignment_0()); }
(rule__AnnotatedStatement__DocumentationAssignment_0)?
{ after(grammarAccess.getAnnotatedStatementAccess().getDocumentationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedStatement__Group__1__Impl
	rule__AnnotatedStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getAnnotationAssignment_1()); }
(rule__AnnotatedStatement__AnnotationAssignment_1)*
{ after(grammarAccess.getAnnotatedStatementAccess().getAnnotationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotatedStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotatedStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getStatementAssignment_2()); }
(rule__AnnotatedStatement__StatementAssignment_2)
{ after(grammarAccess.getAnnotatedStatementAccess().getStatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EmptyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__0__Impl
	rule__EmptyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0()); }
(

)
{ after(grammarAccess.getEmptyStatementAccess().getEmptyStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EmptyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EmptyStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EmptyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getEmptyStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalNameDeclarationStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__0__Impl
	rule__LocalNameDeclarationStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getAlternatives_0()); }
(rule__LocalNameDeclarationStatement__Alternatives_0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__1__Impl
	rule__LocalNameDeclarationStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__2__Impl
	rule__LocalNameDeclarationStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getExpressionAssignment_2()); }
(rule__LocalNameDeclarationStatement__ExpressionAssignment_2)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LocalNameDeclarationStatement__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_0__0__Impl
	rule__LocalNameDeclarationStatement__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getLetKeyword_0_0_0()); }

	'let' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getLetKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_0__1__Impl
	rule__LocalNameDeclarationStatement__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getNameAssignment_0_0_1()); }
(rule__LocalNameDeclarationStatement__NameAssignment_0_0_1)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getNameAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_0__2__Impl
	rule__LocalNameDeclarationStatement__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getColonKeyword_0_0_2()); }

	':' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getColonKeyword_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_0__3__Impl
	rule__LocalNameDeclarationStatement__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getAlternatives_0_0_3()); }
(rule__LocalNameDeclarationStatement__Alternatives_0_0_3)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getAlternatives_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityAssignment_0_0_4()); }
(rule__LocalNameDeclarationStatement__HasMultiplicityAssignment_0_0_4)?
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityAssignment_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LocalNameDeclarationStatement__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_1__0__Impl
	rule__LocalNameDeclarationStatement__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getAlternatives_0_1_0()); }
(rule__LocalNameDeclarationStatement__Alternatives_0_1_0)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getAlternatives_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_1__1__Impl
	rule__LocalNameDeclarationStatement__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityAssignment_0_1_1()); }
(rule__LocalNameDeclarationStatement__HasMultiplicityAssignment_0_1_1)?
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalNameDeclarationStatement__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalNameDeclarationStatement__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getNameAssignment_0_1_2()); }
(rule__LocalNameDeclarationStatement__NameAssignment_0_1_2)
{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getNameAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InstanceInitializationExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceInitializationExpression__Group__0__Impl
	rule__InstanceInitializationExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceInitializationExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getNewKeyword_0()); }

	'new' 

{ after(grammarAccess.getInstanceInitializationExpressionAccess().getNewKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceInitializationExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InstanceInitializationExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceInitializationExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getTupleAssignment_1()); }
(rule__InstanceInitializationExpression__TupleAssignment_1)
{ after(grammarAccess.getInstanceInitializationExpressionAccess().getTupleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExpressionStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__0__Impl
	rule__ExpressionStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
(rule__ExpressionStatement__ExpressionAssignment_0)
{ after(grammarAccess.getExpressionStatementAccess().getExpressionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExpressionStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExpressionStatement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getExpressionStatementAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__0__Impl
	rule__IfStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__1__Impl
	rule__IfStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getNonFinalClausesAssignment_1()); }
(rule__IfStatement__NonFinalClausesAssignment_1)
{ after(grammarAccess.getIfStatementAccess().getNonFinalClausesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__2__Impl
	rule__IfStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_2()); }
(rule__IfStatement__Group_2__0)*
{ after(grammarAccess.getIfStatementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getGroup_3()); }
(rule__IfStatement__Group_3__0)?
{ after(grammarAccess.getIfStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfStatement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_2__0__Impl
	rule__IfStatement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_2_0()); }

	'else' 

{ after(grammarAccess.getIfStatementAccess().getElseKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_2__1__Impl
	rule__IfStatement__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getIfKeyword_2_1()); }

	'if' 

{ after(grammarAccess.getIfStatementAccess().getIfKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getNonFinalClausesAssignment_2_2()); }
(rule__IfStatement__NonFinalClausesAssignment_2_2)
{ after(grammarAccess.getIfStatementAccess().getNonFinalClausesAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IfStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_3__0__Impl
	rule__IfStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }

	'else' 

{ after(grammarAccess.getIfStatementAccess().getElseKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getFinalClauseAssignment_3_1()); }
(rule__IfStatement__FinalClauseAssignment_3_1)
{ after(grammarAccess.getIfStatementAccess().getFinalClauseAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConcurrentClauses__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group__0__Impl
	rule__ConcurrentClauses__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getClauseAssignment_0()); }
(rule__ConcurrentClauses__ClauseAssignment_0)
{ after(grammarAccess.getConcurrentClausesAccess().getClauseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcurrentClauses__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getGroup_1()); }
(rule__ConcurrentClauses__Group_1__0)*
{ after(grammarAccess.getConcurrentClausesAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConcurrentClauses__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group_1__0__Impl
	rule__ConcurrentClauses__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getConcurrentClausesAccess().getOrKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcurrentClauses__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group_1__1__Impl
	rule__ConcurrentClauses__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getIfKeyword_1_1()); }

	'if' 

{ after(grammarAccess.getConcurrentClausesAccess().getIfKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConcurrentClauses__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConcurrentClauses__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getClauseAssignment_1_2()); }
(rule__ConcurrentClauses__ClauseAssignment_1_2)
{ after(grammarAccess.getConcurrentClausesAccess().getClauseAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NonFinalClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__0__Impl
	rule__NonFinalClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getNonFinalClauseAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonFinalClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__1__Impl
	rule__NonFinalClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getConditionAssignment_1()); }
(rule__NonFinalClause__ConditionAssignment_1)
{ after(grammarAccess.getNonFinalClauseAccess().getConditionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonFinalClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__2__Impl
	rule__NonFinalClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getNonFinalClauseAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NonFinalClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NonFinalClause__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getBodyAssignment_3()); }
(rule__NonFinalClause__BodyAssignment_3)
{ after(grammarAccess.getNonFinalClauseAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SwitchStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__0__Impl
	rule__SwitchStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }

	'switch' 

{ after(grammarAccess.getSwitchStatementAccess().getSwitchKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__1__Impl
	rule__SwitchStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__2__Impl
	rule__SwitchStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getExpressionAssignment_2()); }
(rule__SwitchStatement__ExpressionAssignment_2)
{ after(grammarAccess.getSwitchStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__3__Impl
	rule__SwitchStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getSwitchStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__4__Impl
	rule__SwitchStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getSwitchStatementAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__5__Impl
	rule__SwitchStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getNonDefaultClauseAssignment_5()); }
(rule__SwitchStatement__NonDefaultClauseAssignment_5)*
{ after(grammarAccess.getSwitchStatementAccess().getNonDefaultClauseAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__6__Impl
	rule__SwitchStatement__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getDefaultClauseAssignment_6()); }
(rule__SwitchStatement__DefaultClauseAssignment_6)?
{ after(grammarAccess.getSwitchStatementAccess().getDefaultClauseAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchStatement__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchStatement__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getSwitchStatementAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SwitchClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchClause__Group__0__Impl
	rule__SwitchClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getCaseAssignment_0()); }
(rule__SwitchClause__CaseAssignment_0)
{ after(grammarAccess.getSwitchClauseAccess().getCaseAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchClause__Group__1__Impl
	rule__SwitchClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getCaseAssignment_1()); }
(rule__SwitchClause__CaseAssignment_1)*
{ after(grammarAccess.getSwitchClauseAccess().getCaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getBlockAssignment_2()); }
(rule__SwitchClause__BlockAssignment_2)
{ after(grammarAccess.getSwitchClauseAccess().getBlockAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__0__Impl
	rule__SwitchCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getSwitchCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__1__Impl
	rule__SwitchCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getExpressionParserRuleCall_1()); }
	ruleExpression
{ after(grammarAccess.getSwitchCaseAccess().getExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchCase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchCaseAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSwitchCaseAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SwitchDefaultClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchDefaultClause__Group__0__Impl
	rule__SwitchDefaultClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getDefaultKeyword_0()); }

	'default' 

{ after(grammarAccess.getSwitchDefaultClauseAccess().getDefaultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchDefaultClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchDefaultClause__Group__1__Impl
	rule__SwitchDefaultClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSwitchDefaultClauseAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SwitchDefaultClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SwitchDefaultClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchDefaultClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchDefaultClauseAccess().getNonEmptyStatementSequenceParserRuleCall_2()); }
	ruleNonEmptyStatementSequence
{ after(grammarAccess.getSwitchDefaultClauseAccess().getNonEmptyStatementSequenceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WhileStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__0__Impl
	rule__WhileStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getWhileStatementAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__1__Impl
	rule__WhileStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getWhileStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__2__Impl
	rule__WhileStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
(rule__WhileStatement__ConditionAssignment_2)
{ after(grammarAccess.getWhileStatementAccess().getConditionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__3__Impl
	rule__WhileStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getWhileStatementAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WhileStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
(rule__WhileStatement__BodyAssignment_4)
{ after(grammarAccess.getWhileStatementAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DoStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__0__Impl
	rule__DoStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoStatementAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__1__Impl
	rule__DoStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getBodyAssignment_1()); }
(rule__DoStatement__BodyAssignment_1)
{ after(grammarAccess.getDoStatementAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__2__Impl
	rule__DoStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }

	'while' 

{ after(grammarAccess.getDoStatementAccess().getWhileKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__3__Impl
	rule__DoStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }

	'(' 

{ after(grammarAccess.getDoStatementAccess().getLeftParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__4__Impl
	rule__DoStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getConditionAssignment_4()); }
(rule__DoStatement__ConditionAssignment_4)
{ after(grammarAccess.getDoStatementAccess().getConditionAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__5__Impl
	rule__DoStatement__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getDoStatementAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoStatement__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoStatement__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getDoStatementAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ForStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__0__Impl
	rule__ForStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getForKeyword_0()); }

	'for' 

{ after(grammarAccess.getForStatementAccess().getForKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__1__Impl
	rule__ForStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getForStatementAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__2__Impl
	rule__ForStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVariableDefinitionAssignment_2()); }
(rule__ForStatement__VariableDefinitionAssignment_2)
{ after(grammarAccess.getForStatementAccess().getVariableDefinitionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__3__Impl
	rule__ForStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getGroup_3()); }
(rule__ForStatement__Group_3__0)*
{ after(grammarAccess.getForStatementAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__4__Impl
	rule__ForStatement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getForStatementAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBodyAssignment_5()); }
(rule__ForStatement__BodyAssignment_5)
{ after(grammarAccess.getForStatementAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ForStatement__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__0__Impl
	rule__ForStatement__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getForStatementAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForStatement__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForStatement__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVariableDefinitionAssignment_3_1()); }
(rule__ForStatement__VariableDefinitionAssignment_3_1)
{ after(grammarAccess.getForStatementAccess().getVariableDefinitionAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoopVariableDefinition__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__0__Impl
	rule__LoopVariableDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getVariableAssignment_0_0()); }
(rule__LoopVariableDefinition__VariableAssignment_0_0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getVariableAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__1__Impl
	rule__LoopVariableDefinition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getTypeIsInferredAssignment_0_1()); }
(rule__LoopVariableDefinition__TypeIsInferredAssignment_0_1)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getTypeIsInferredAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__2__Impl
	rule__LoopVariableDefinition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression1Assignment_0_2()); }
(rule__LoopVariableDefinition__Expression1Assignment_0_2)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression1Assignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0_3()); }
(rule__LoopVariableDefinition__Group_0_3__0)?
{ after(grammarAccess.getLoopVariableDefinitionAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LoopVariableDefinition__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0_3__0__Impl
	rule__LoopVariableDefinition__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getFullStopFullStopKeyword_0_3_0()); }

	'..' 

{ after(grammarAccess.getLoopVariableDefinitionAccess().getFullStopFullStopKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression2Assignment_0_3_1()); }
(rule__LoopVariableDefinition__Expression2Assignment_0_3_1)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression2Assignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoopVariableDefinition__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__0__Impl
	rule__LoopVariableDefinition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getAlternatives_1_0()); }
(rule__LoopVariableDefinition__Alternatives_1_0)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__1__Impl
	rule__LoopVariableDefinition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getVariableAssignment_1_1()); }
(rule__LoopVariableDefinition__VariableAssignment_1_1)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getVariableAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__2__Impl
	rule__LoopVariableDefinition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getColonKeyword_1_2()); }

	':' 

{ after(grammarAccess.getLoopVariableDefinitionAccess().getColonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopVariableDefinition__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopVariableDefinition__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression1Assignment_1_3()); }
(rule__LoopVariableDefinition__Expression1Assignment_1_3)
{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression1Assignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__BreakStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__0__Impl
	rule__BreakStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
(

)
{ after(grammarAccess.getBreakStatementAccess().getBreakStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__1__Impl
	rule__BreakStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }

	'break' 

{ after(grammarAccess.getBreakStatementAccess().getBreakKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakStatement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getBreakStatementAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__0__Impl
	rule__ReturnStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
(

)
{ after(grammarAccess.getReturnStatementAccess().getReturnStatementAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__1__Impl
	rule__ReturnStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }

	'return' 

{ after(grammarAccess.getReturnStatementAccess().getReturnKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__2__Impl
	rule__ReturnStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
(rule__ReturnStatement__ExpressionAssignment_2)?
{ after(grammarAccess.getReturnStatementAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getReturnStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AcceptStatement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group_0__0__Impl
	rule__AcceptStatement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptBlockAssignment_0_0()); }
(rule__AcceptStatement__AcceptBlockAssignment_0_0)
{ after(grammarAccess.getAcceptStatementAccess().getAcceptBlockAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptStatement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getSemicolonKeyword_0_1()); }

	';' 

{ after(grammarAccess.getAcceptStatementAccess().getSemicolonKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AcceptStatement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group_1__0__Impl
	rule__AcceptStatement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptBlockAssignment_1_0()); }
(rule__AcceptStatement__AcceptBlockAssignment_1_0)
{ after(grammarAccess.getAcceptStatementAccess().getAcceptBlockAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptStatement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getGroup_1_1()); }
(rule__AcceptStatement__Group_1_1__0)*
{ after(grammarAccess.getAcceptStatementAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AcceptStatement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group_1_1__0__Impl
	rule__AcceptStatement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getOrKeyword_1_1_0()); }

	'or' 

{ after(grammarAccess.getAcceptStatementAccess().getOrKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptStatement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptStatement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptBlockAssignment_1_1_1()); }
(rule__AcceptStatement__AcceptBlockAssignment_1_1_1)
{ after(grammarAccess.getAcceptStatementAccess().getAcceptBlockAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AcceptBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptBlock__Group__0__Impl
	rule__AcceptBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptBlockAccess().getAcceptClauseParserRuleCall_0()); }
	ruleAcceptClause
{ after(grammarAccess.getAcceptBlockAccess().getAcceptClauseParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptBlockAccess().getBlockAssignment_1()); }
(rule__AcceptBlock__BlockAssignment_1)
{ after(grammarAccess.getAcceptBlockAccess().getBlockAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AcceptClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__0__Impl
	rule__AcceptClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getAcceptKeyword_0()); }

	'accept' 

{ after(grammarAccess.getAcceptClauseAccess().getAcceptKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__1__Impl
	rule__AcceptClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAcceptClauseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__2__Impl
	rule__AcceptClause__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getGroup_2()); }
(rule__AcceptClause__Group_2__0)?
{ after(grammarAccess.getAcceptClauseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__3__Impl
	rule__AcceptClause__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getSignalNamesAssignment_3()); }
(rule__AcceptClause__SignalNamesAssignment_3)
{ after(grammarAccess.getAcceptClauseAccess().getSignalNamesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getAcceptClauseAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AcceptClause__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group_2__0__Impl
	rule__AcceptClause__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getNameAssignment_2_0()); }
(rule__AcceptClause__NameAssignment_2_0)
{ after(grammarAccess.getAcceptClauseAccess().getNameAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AcceptClause__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AcceptClause__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getColonKeyword_2_1()); }

	':' 

{ after(grammarAccess.getAcceptClauseAccess().getColonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifyStatement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__0__Impl
	rule__ClassifyStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getClassifyKeyword_0()); }

	'classify' 

{ after(grammarAccess.getClassifyStatementAccess().getClassifyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__1__Impl
	rule__ClassifyStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getExpressionAssignment_1()); }
(rule__ClassifyStatement__ExpressionAssignment_1)
{ after(grammarAccess.getClassifyStatementAccess().getExpressionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__2__Impl
	rule__ClassifyStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getAlternatives_2()); }
(rule__ClassifyStatement__Alternatives_2)
{ after(grammarAccess.getClassifyStatementAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getClassifyStatementAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ClassifyStatement__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group_2_0__0__Impl
	rule__ClassifyStatement__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getFromListAssignment_2_0_0()); }
(rule__ClassifyStatement__FromListAssignment_2_0_0)
{ after(grammarAccess.getClassifyStatementAccess().getFromListAssignment_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getToListAssignment_2_0_1()); }
(rule__ClassifyStatement__ToListAssignment_2_0_1)?
{ after(grammarAccess.getClassifyStatementAccess().getToListAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassifyStatement__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group_2_1__0__Impl
	rule__ClassifyStatement__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getIsReclassifyAllAssignment_2_1_0()); }
(rule__ClassifyStatement__IsReclassifyAllAssignment_2_1_0)?
{ after(grammarAccess.getClassifyStatementAccess().getIsReclassifyAllAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifyStatement__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifyStatement__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getToListAssignment_2_1_1()); }
(rule__ClassifyStatement__ToListAssignment_2_1_1)
{ after(grammarAccess.getClassifyStatementAccess().getToListAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationFromClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationFromClause__Group__0__Impl
	rule__ClassificationFromClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationFromClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationFromClauseAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getClassificationFromClauseAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationFromClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationFromClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationFromClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationFromClauseAccess().getQualifiedNameListParserRuleCall_1()); }
	ruleQualifiedNameList
{ after(grammarAccess.getClassificationFromClauseAccess().getQualifiedNameListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassificationToClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationToClause__Group__0__Impl
	rule__ClassificationToClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationToClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationToClauseAccess().getToKeyword_0()); }

	'to' 

{ after(grammarAccess.getClassificationToClauseAccess().getToKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassificationToClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassificationToClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationToClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationToClauseAccess().getQualifiedNameListParserRuleCall_1()); }
	ruleQualifiedNameList
{ after(grammarAccess.getClassificationToClauseAccess().getQualifiedNameListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReclassifyAllClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReclassifyAllClause__Group__0__Impl
	rule__ReclassifyAllClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReclassifyAllClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReclassifyAllClauseAccess().getFromKeyword_0()); }

	'from' 

{ after(grammarAccess.getReclassifyAllClauseAccess().getFromKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReclassifyAllClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReclassifyAllClause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReclassifyAllClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReclassifyAllClauseAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getReclassifyAllClauseAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group__0__Impl
	rule__QualifiedNameList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getNameAssignment_0()); }
(rule__QualifiedNameList__NameAssignment_0)
{ after(grammarAccess.getQualifiedNameListAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getGroup_1()); }
(rule__QualifiedNameList__Group_1__0)*
{ after(grammarAccess.getQualifiedNameListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group_1__0__Impl
	rule__QualifiedNameList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getQualifiedNameListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getNameAssignment_1_1()); }
(rule__QualifiedNameList__NameAssignment_1_1)
{ after(grammarAccess.getQualifiedNameListAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__AppliedStereotypePropertyRule__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAppliedStereotypePropertyRuleAccess().getValueExpressionValueRuleParserRuleCall_0()); }
	ruleExpressionValueRule{ after(grammarAccess.getAppliedStereotypePropertyRuleAccess().getValueExpressionValueRuleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionValueRule__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionValueRuleAccess().getExpressionSequenceElementParserRuleCall_1_0()); }
	ruleSequenceElement{ after(grammarAccess.getExpressionValueRuleAccess().getExpressionSequenceElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StereotypeAnnotation__StereotypeNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getStereotypeAnnotationAccess().getStereotypeNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__NamesAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getNamesQualifiedNameListParserRuleCall_2_1_0_0()); }
	ruleQualifiedNameList{ after(grammarAccess.getStereotypeAnnotationAccess().getNamesQualifiedNameListParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StereotypeAnnotation__TaggedValuesAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesTaggedValueListParserRuleCall_2_1_1_0()); }
	ruleTaggedValueList{ after(grammarAccess.getStereotypeAnnotationAccess().getTaggedValuesTaggedValueListParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__TaggedValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_0_0()); }
	ruleTaggedValue{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValueList__TaggedValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_1_1_0()); }
	ruleTaggedValue{ after(grammarAccess.getTaggedValueListAccess().getTaggedValueTaggedValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getTaggedValueAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__ValueAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValueBOOLEAN_VALUETerminalRuleCall_2_0_0()); }
	RULE_BOOLEAN_VALUE{ after(grammarAccess.getTaggedValueAccess().getValueBOOLEAN_VALUETerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__OperatorAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getOperatorNumericUnaryOperatorParserRuleCall_2_1_0_0()); }
	ruleNumericUnaryOperator{ after(grammarAccess.getTaggedValueAccess().getOperatorNumericUnaryOperatorParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__ValueAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValueNATURAL_VALUETerminalRuleCall_2_1_1_0()); }
	RULE_NATURAL_VALUE{ after(grammarAccess.getTaggedValueAccess().getValueNATURAL_VALUETerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__ValueAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValueAsteriskKeyword_2_2_0()); }
(
{ before(grammarAccess.getTaggedValueAccess().getValueAsteriskKeyword_2_2_0()); }

	'*' 

{ after(grammarAccess.getTaggedValueAccess().getValueAsteriskKeyword_2_2_0()); }
)

{ after(grammarAccess.getTaggedValueAccess().getValueAsteriskKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaggedValue__ValueAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaggedValueAccess().getValueSTRINGTerminalRuleCall_2_3_0()); }
	RULE_STRING{ after(grammarAccess.getTaggedValueAccess().getValueSTRINGTerminalRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_0_0()); }
	ruleImportVisibilityIndicator{ after(grammarAccess.getElementImportReferenceAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__ReferentNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getReferentNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getElementImportReferenceAccess().getReferentNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementImportReference__AliasAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementImportReferenceAccess().getAliasNameParserRuleCall_3_1_0()); }
	ruleName{ after(grammarAccess.getElementImportReferenceAccess().getAliasNameParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportReference__VisibilityAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportReferenceAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_0_0()); }
	ruleImportVisibilityIndicator{ after(grammarAccess.getPackageImportReferenceAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportReference__ReferentNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportReferenceAccess().getReferentNamePackageImportQualifiedNameParserRuleCall_2_0()); }
	rulePackageImportQualifiedName{ after(grammarAccess.getPackageImportReferenceAccess().getReferentNamePackageImportQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__NameBindingAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_0_0()); }
	ruleNameBinding{ after(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__NameBindingAssignment_1_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_0_1_0()); }
	ruleNameBinding{ after(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageImportQualifiedName__NameBindingAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_0_1_0()); }
	ruleNameBinding{ after(grammarAccess.getPackageImportQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getPackageDefinitionAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__OwnedMemberAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getOwnedMemberPackagedElementParserRuleCall_3_0()); }
	rulePackagedElement{ after(grammarAccess.getPackageDefinitionAccess().getOwnedMemberPackagedElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getPackageDefinitionOrStubAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__IsStubAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getIsStubSemicolonKeyword_2_0_0()); }
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getIsStubSemicolonKeyword_2_0_0()); }

	';' 

{ after(grammarAccess.getPackageDefinitionOrStubAccess().getIsStubSemicolonKeyword_2_0_0()); }
)

{ after(grammarAccess.getPackageDefinitionOrStubAccess().getIsStubSemicolonKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinitionOrStub__OwnedMemberAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionOrStubAccess().getOwnedMemberPackagedElementParserRuleCall_2_1_1_0()); }
	rulePackagedElement{ after(grammarAccess.getPackageDefinitionOrStubAccess().getOwnedMemberPackagedElementParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getPackagedElementAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
	ruleStereotypeAnnotation{ after(grammarAccess.getPackagedElementAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__VisibilityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_2_0()); }
	ruleImportVisibilityIndicator{ after(grammarAccess.getPackagedElementAccess().getVisibilityImportVisibilityIndicatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackagedElement__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackagedElementAccess().getDefinitionPackagedElementDefinitionParserRuleCall_3_0()); }
	rulePackagedElementDefinition{ after(grammarAccess.getPackagedElementAccess().getDefinitionPackagedElementDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__ClassifierTemplateParameter__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getClassifierTemplateParameterAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameter__DefinitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterAccess().getDefinitionClassifierTemplateParameterDefinitionParserRuleCall_1_0()); }
	ruleClassifierTemplateParameterDefinition{ after(grammarAccess.getClassifierTemplateParameterAccess().getDefinitionClassifierTemplateParameterDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameterDefinition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTemplateParameterDefinition__SpecializationAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializationTemplateParameterConstraintParserRuleCall_1_1_0()); }
	ruleTemplateParameterConstraint{ after(grammarAccess.getClassifierTemplateParameterDefinitionAccess().getSpecializationTemplateParameterConstraintParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterConstraint__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterConstraintAccess().getNameQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getTemplateParameterConstraintAccess().getNameQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getClassDeclarationAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__OwnedMemberAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__OwnedMemberAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDeclaration__SpecializationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
	ruleSpecializationClause{ after(grammarAccess.getClassDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinition__OwnedMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionAccess().getOwnedMemberClassMemberParserRuleCall_2_0()); }
	ruleClassMember{ after(grammarAccess.getClassDefinitionAccess().getOwnedMemberClassMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDefinitionOrStub__OwnedMemberAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassDefinitionOrStubAccess().getOwnedMemberClassMemberParserRuleCall_1_1_1_0()); }
	ruleClassMember{ after(grammarAccess.getClassDefinitionOrStubAccess().getOwnedMemberClassMemberParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getClassMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
	ruleStereotypeAnnotation{ after(grammarAccess.getClassMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__VisibilityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getVisibilityVisibilityIndicatorParserRuleCall_2_0()); }
	ruleVisibilityIndicator{ after(grammarAccess.getClassMemberAccess().getVisibilityVisibilityIndicatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassMember__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassMemberAccess().getDefinitionClassMemberDefinitionParserRuleCall_3_0()); }
	ruleClassMemberDefinition{ after(grammarAccess.getClassMemberAccess().getDefinitionClassMemberDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getActiveClassDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getNameNameParserRuleCall_3_0()); }
	ruleName{ after(grammarAccess.getActiveClassDeclarationAccess().getNameNameParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__OwnedMemberAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_4_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__OwnedMemberAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_4_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getActiveClassDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDeclaration__SpecializationAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_5_0()); }
	ruleSpecializationClause{ after(grammarAccess.getActiveClassDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__OwnedMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getOwnedMemberActiveClassMemberParserRuleCall_2_0()); }
	ruleActiveClassMember{ after(grammarAccess.getActiveClassDefinitionAccess().getOwnedMemberActiveClassMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinition__ClassifierBehaviorAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionAccess().getClassifierBehaviorBehaviorClauseParserRuleCall_4_1_0()); }
	ruleBehaviorClause{ after(grammarAccess.getActiveClassDefinitionAccess().getClassifierBehaviorBehaviorClauseParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__OwnedMemberAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getOwnedMemberActiveClassMemberParserRuleCall_1_1_1_0()); }
	ruleActiveClassMember{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getOwnedMemberActiveClassMemberParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassDefinitionOrStub__ClassifierBehaviorAssignment_1_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassDefinitionOrStubAccess().getClassifierBehaviorBehaviorClauseParserRuleCall_1_1_3_1_0()); }
	ruleBehaviorClause{ after(grammarAccess.getActiveClassDefinitionOrStubAccess().getClassifierBehaviorBehaviorClauseParserRuleCall_1_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorClause__BodyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorClauseAccess().getBodyBlockParserRuleCall_0_0()); }
	ruleBlock{ after(grammarAccess.getBehaviorClauseAccess().getBodyBlockParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorClause__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorClauseAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getBehaviorClauseAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getActiveClassMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
	ruleStereotypeAnnotation{ after(grammarAccess.getActiveClassMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__VisibilityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getVisibilityVisibilityIndicatorParserRuleCall_2_0()); }
	ruleVisibilityIndicator{ after(grammarAccess.getActiveClassMemberAccess().getVisibilityVisibilityIndicatorParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActiveClassMember__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActiveClassMemberAccess().getDefinitionActiveClassMemberDefinitionParserRuleCall_3_0()); }
	ruleActiveClassMemberDefinition{ after(grammarAccess.getActiveClassMemberAccess().getDefinitionActiveClassMemberDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getDataTypeDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getDataTypeDeclarationAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__OwnedMemberAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__OwnedMemberAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getDataTypeDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDeclaration__SpecializationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
	ruleSpecializationClause{ after(grammarAccess.getDataTypeDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinition__OwnedMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); }
	ruleStructuredMember{ after(grammarAccess.getDataTypeDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTypeDefinitionOrStub__OwnedMemberAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTypeDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
	ruleStructuredMember{ after(grammarAccess.getDataTypeDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getStructuredMemberAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
	ruleStereotypeAnnotation{ after(grammarAccess.getStructuredMemberAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__VisibilityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getVisibilityPublicKeyword_2_0()); }
(
{ before(grammarAccess.getStructuredMemberAccess().getVisibilityPublicKeyword_2_0()); }

	'public' 

{ after(grammarAccess.getStructuredMemberAccess().getVisibilityPublicKeyword_2_0()); }
)

{ after(grammarAccess.getStructuredMemberAccess().getVisibilityPublicKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StructuredMember__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStructuredMemberAccess().getDefinitionPropertyDefinitionParserRuleCall_3_0()); }
	rulePropertyDefinition{ after(grammarAccess.getStructuredMemberAccess().getDefinitionPropertyDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getAssociationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getAssociationDeclarationAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__OwnedMemberAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__OwnedMemberAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getAssociationDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDeclaration__SpecializationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
	ruleSpecializationClause{ after(grammarAccess.getAssociationDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinition__OwnedMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); }
	ruleStructuredMember{ after(grammarAccess.getAssociationDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssociationDefinitionOrStub__OwnedMemberAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssociationDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
	ruleStructuredMember{ after(grammarAccess.getAssociationDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getEnumerationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDeclaration__SpecializationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_2_0()); }
	ruleSpecializationClause{ after(grammarAccess.getEnumerationDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__OwnedMemberAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_2_0_0()); }
	ruleEnumerationLiteralName{ after(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinition__OwnedMemberAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_2_1_1_0()); }
	ruleEnumerationLiteralName{ after(grammarAccess.getEnumerationDefinitionAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__OwnedMemberAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_1_1_1_0_0()); }
	ruleEnumerationLiteralName{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationDefinitionOrStub__OwnedMemberAssignment_1_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_1_1_1_1_1_0()); }
	ruleEnumerationLiteralName{ after(grammarAccess.getEnumerationDefinitionOrStubAccess().getOwnedMemberEnumerationLiteralNameParserRuleCall_1_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getEnumerationLiteralNameAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralName__DefinitionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameAccess().getDefinitionEnumerationLiteralNameDefinitionParserRuleCall_1_0()); }
	ruleEnumerationLiteralNameDefinition{ after(grammarAccess.getEnumerationLiteralNameAccess().getDefinitionEnumerationLiteralNameDefinitionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumerationLiteralNameDefinition__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumerationLiteralNameDefinitionAccess().getNameNameParserRuleCall_0()); }
	ruleName{ after(grammarAccess.getEnumerationLiteralNameDefinitionAccess().getNameNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getSignalDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getSignalDeclarationAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__OwnedMemberAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getSignalDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__OwnedMemberAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getSignalDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDeclaration__SpecializationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
	ruleSpecializationClause{ after(grammarAccess.getSignalDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinition__OwnedMemberAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); }
	ruleStructuredMember{ after(grammarAccess.getSignalDefinitionAccess().getOwnedMemberStructuredMemberParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getSignalDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getSignalDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDefinitionOrStub__OwnedMemberAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
	ruleStructuredMember{ after(grammarAccess.getSignalDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getActivityDeclarationAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__OwnedMemberAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__OwnedMemberAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_2_2_1_0()); }
	ruleClassifierTemplateParameter{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberClassifierTemplateParameterParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__OwnedMemberAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_4_0_0()); }
	ruleFormalParameter{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__OwnedMemberAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_4_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDeclaration__OwnedMemberAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDeclarationAccess().getOwnedMemberReturnParameterParserRuleCall_6_0()); }
	ruleReturnParameter{ after(grammarAccess.getActivityDeclarationAccess().getOwnedMemberReturnParameterParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinition__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionAccess().getBodyBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getActivityDefinitionAccess().getBodyBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getActivityDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getActivityDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ActivityDefinitionOrStub__BodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActivityDefinitionOrStubAccess().getBodyBlockParserRuleCall_1_1_0()); }
	ruleBlock{ after(grammarAccess.getActivityDefinitionOrStubAccess().getBodyBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getFormalParameterAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
	ruleStereotypeAnnotation{ after(grammarAccess.getFormalParameterAccess().getAnnotationStereotypeAnnotationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameter__DefinitionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterAccess().getDefinitionFormalParameterDefinitionParserRuleCall_2_0()); }
	ruleFormalParameterDefinition{ after(grammarAccess.getFormalParameterAccess().getDefinitionFormalParameterDefinitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDefinition__DirectionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getDirectionParameterDirectionParserRuleCall_0_0()); }
	ruleParameterDirection{ after(grammarAccess.getFormalParameterDefinitionAccess().getDirectionParameterDirectionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getFormalParameterDefinitionAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FormalParameterDefinition__TypePartAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFormalParameterDefinitionAccess().getTypePartTypePartParserRuleCall_3_0()); }
	ruleTypePart{ after(grammarAccess.getFormalParameterDefinitionAccess().getTypePartTypePartParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameter__DefinitionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterAccess().getDefinitionReturnParameterDefinitionParserRuleCall_0()); }
	ruleReturnParameterDefinition{ after(grammarAccess.getReturnParameterAccess().getDefinitionReturnParameterDefinitionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnParameterDefinition__TypePartAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnParameterDefinitionAccess().getTypePartTypePartParserRuleCall_1_0()); }
	ruleTypePart{ after(grammarAccess.getReturnParameterDefinitionAccess().getTypePartTypePartParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeDefinition__InitializerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeDefinitionAccess().getInitializerAttributeInitializerParserRuleCall_1_0()); }
	ruleAttributeInitializer{ after(grammarAccess.getAttributeDefinitionAccess().getInitializerAttributeInitializerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getPropertyDeclarationAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__IsCompositeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }
(
{ before(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }

	'compose' 

{ after(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }
)

{ after(grammarAccess.getPropertyDeclarationAccess().getIsCompositeComposeKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PropertyDeclaration__TypePartAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyDeclarationAccess().getTypePartTypePartParserRuleCall_3_0()); }
	ruleTypePart{ after(grammarAccess.getPropertyDeclarationAccess().getTypePartTypePartParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__IsAnyAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsAnyAnyKeyword_0_0_0()); }
(
{ before(grammarAccess.getTypePartAccess().getIsAnyAnyKeyword_0_0_0()); }

	'any' 

{ after(grammarAccess.getTypePartAccess().getIsAnyAnyKeyword_0_0_0()); }
)

{ after(grammarAccess.getTypePartAccess().getIsAnyAnyKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__TypeNameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getTypeNameQualifiedNameParserRuleCall_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getTypePartAccess().getTypeNameQualifiedNameParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__IsMultiplicityAssignment_1_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsMultiplicityRightSquareBracketKeyword_1_0_1_0_0()); }
(
{ before(grammarAccess.getTypePartAccess().getIsMultiplicityRightSquareBracketKeyword_1_0_1_0_0()); }

	']' 

{ after(grammarAccess.getTypePartAccess().getIsMultiplicityRightSquareBracketKeyword_1_0_1_0_0()); }
)

{ after(grammarAccess.getTypePartAccess().getIsMultiplicityRightSquareBracketKeyword_1_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__LowerBoundAssignment_1_0_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getLowerBoundNATURAL_VALUETerminalRuleCall_1_0_1_1_0_0_0()); }
	RULE_NATURAL_VALUE{ after(grammarAccess.getTypePartAccess().getLowerBoundNATURAL_VALUETerminalRuleCall_1_0_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__UpperBoundAssignment_1_0_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getUpperBoundUnlimitedNaturalLiteralParserRuleCall_1_0_1_1_1_0()); }
	ruleUnlimitedNaturalLiteral{ after(grammarAccess.getTypePartAccess().getUpperBoundUnlimitedNaturalLiteralParserRuleCall_1_0_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__IsOrderedAssignment_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0()); }
(
{ before(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0()); }

	'ordered' 

{ after(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0()); }
)

{ after(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__IsNonuniqueAssignment_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0()); }
(
{ before(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0()); }

	'nonunique' 

{ after(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0()); }
)

{ after(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__IsNonuniqueAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0()); }
(
{ before(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0()); }

	'nonunique' 

{ after(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0()); }
)

{ after(grammarAccess.getTypePartAccess().getIsNonuniqueNonuniqueKeyword_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__IsOrderedAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0()); }
(
{ before(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0()); }

	'ordered' 

{ after(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0()); }
)

{ after(grammarAccess.getTypePartAccess().getIsOrderedOrderedKeyword_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypePart__IsSequenceAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypePartAccess().getIsSequenceSequenceKeyword_1_1_2_0()); }
(
{ before(grammarAccess.getTypePartAccess().getIsSequenceSequenceKeyword_1_1_2_0()); }

	'sequence' 

{ after(grammarAccess.getTypePartAccess().getIsSequenceSequenceKeyword_1_1_2_0()); }
)

{ after(grammarAccess.getTypePartAccess().getIsSequenceSequenceKeyword_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__IsAbstractAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
(
{ before(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }

	'abstract' 

{ after(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

{ after(grammarAccess.getOperationDeclarationAccess().getIsAbstractAbstractKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
	ruleName{ after(grammarAccess.getOperationDeclarationAccess().getNameNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__OwnedMemberAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_3_0_0()); }
	ruleFormalParameter{ after(grammarAccess.getOperationDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__OwnedMemberAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_3_1_1_0()); }
	ruleFormalParameter{ after(grammarAccess.getOperationDeclarationAccess().getOwnedMemberFormalParameterParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__OwnedMemberAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getOwnedMemberReturnParameterParserRuleCall_5_0()); }
	ruleReturnParameter{ after(grammarAccess.getOperationDeclarationAccess().getOwnedMemberReturnParameterParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDeclaration__RedefinitionAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDeclarationAccess().getRedefinitionRedefinitionClauseParserRuleCall_6_0()); }
	ruleRedefinitionClause{ after(grammarAccess.getOperationDeclarationAccess().getRedefinitionRedefinitionClauseParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getOperationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getOperationDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinitionOrStub__BodyAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionOrStubAccess().getBodyBlockParserRuleCall_1_1_0()); }
	ruleBlock{ after(grammarAccess.getOperationDefinitionOrStubAccess().getBodyBlockParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReceptionDefinition__SignalNameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReceptionDefinitionAccess().getSignalNameQualifiedNameParserRuleCall_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getReceptionDefinitionAccess().getSignalNameQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getNameNameParserRuleCall_2_0()); }
	ruleName{ after(grammarAccess.getSignalReceptionDeclarationAccess().getNameNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDeclaration__SpecializationAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_3_0()); }
	ruleSpecializationClause{ after(grammarAccess.getSignalReceptionDeclarationAccess().getSpecializationSpecializationClauseParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__IsStubAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }

	';' 

{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getIsStubSemicolonKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReceptionDefinitionOrStub__OwnedMemberAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
	ruleStructuredMember{ after(grammarAccess.getSignalReceptionDefinitionOrStubAccess().getOwnedMemberStructuredMemberParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameBindingAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_1_0()); }
	ruleNameBinding{ after(grammarAccess.getQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__NameBindingAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_1_0()); }
	ruleNameBinding{ after(grammarAccess.getQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__NameBindingAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_1_0()); }
	ruleNameBinding{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__IsAmbiguousAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getIsAmbiguousFullStopKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getIsAmbiguousFullStopKeyword_1_1_0_0()); }

	'.' 

{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getIsAmbiguousFullStopKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getIsAmbiguousFullStopKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__NameBindingAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_1_0()); }
	ruleNameBinding{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PotentiallyAmbiguousQualifiedName__NameBindingAssignment_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_2_1_0()); }
	ruleNameBinding{ after(grammarAccess.getPotentiallyAmbiguousQualifiedNameAccess().getNameBindingNameBindingParserRuleCall_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__UnqualifiedName__NameBindingAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnqualifiedNameAccess().getNameBindingNameBindingParserRuleCall_0()); }
	ruleNameBinding{ after(grammarAccess.getUnqualifiedNameAccess().getNameBindingNameBindingParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getNameBindingAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameBinding__BindingAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameBindingAccess().getBindingTemplateBindingParserRuleCall_1_0()); }
	ruleTemplateBinding{ after(grammarAccess.getNameBindingAccess().getBindingTemplateBindingParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__ArgumentNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTemplateBinding__ArgumentNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPositionalTemplateBindingAccess().getArgumentNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__SubstitutionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionTemplateParameterSubstitutionParserRuleCall_0_0()); }
	ruleTemplateParameterSubstitution{ after(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionTemplateParameterSubstitutionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTemplateBinding__SubstitutionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionTemplateParameterSubstitutionParserRuleCall_1_1_0()); }
	ruleTemplateParameterSubstitution{ after(grammarAccess.getNamedTemplateBindingAccess().getSubstitutionTemplateParameterSubstitutionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__ParameterNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getParameterNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getParameterNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TemplateParameterSubstitution__ArgumentNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTemplateParameterSubstitutionAccess().getArgumentNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getTemplateParameterSubstitutionAccess().getArgumentNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameBindingAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameBindingNameBindingParserRuleCall_1_0_2_0()); }
	ruleNameBinding{ after(grammarAccess.getPrimaryExpressionAccess().getNameBindingNameBindingParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__TupleAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTupleTupleParserRuleCall_1_0_4_0()); }
	ruleTuple{ after(grammarAccess.getPrimaryExpressionAccess().getTupleTupleParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__NameBindingAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNameBindingNameBindingParserRuleCall_1_1_2_0()); }
	ruleNameBinding{ after(grammarAccess.getPrimaryExpressionAccess().getNameBindingNameBindingParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperationAssignment_1_2_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOperationQualifiedNameParserRuleCall_1_2_2_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getPrimaryExpressionAccess().getOperationQualifiedNameParserRuleCall_1_2_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__TupleAssignment_1_2_2_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getTupleTupleParserRuleCall_1_2_2_0_2_0()); }
	ruleTuple{ after(grammarAccess.getPrimaryExpressionAccess().getTupleTupleParserRuleCall_1_2_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IsOrderedAssignment_1_2_2_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsOrderedOrderedKeyword_1_2_2_1_2_0()); }
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIsOrderedOrderedKeyword_1_2_2_1_2_0()); }

	'ordered' 

{ after(grammarAccess.getPrimaryExpressionAccess().getIsOrderedOrderedKeyword_1_2_2_1_2_0()); }
)

{ after(grammarAccess.getPrimaryExpressionAccess().getIsOrderedOrderedKeyword_1_2_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__BehaviorNameAssignment_1_2_2_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getBehaviorNameQualifiedNameParserRuleCall_1_2_2_1_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getPrimaryExpressionAccess().getBehaviorNameQualifiedNameParserRuleCall_1_2_2_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__OperationAssignment_1_2_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getOperationIDTerminalRuleCall_1_2_2_2_1_0()); }
	RULE_ID{ after(grammarAccess.getPrimaryExpressionAccess().getOperationIDTerminalRuleCall_1_2_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__VariableAssignment_1_2_2_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getVariableNameParserRuleCall_1_2_2_2_2_0()); }
	ruleName{ after(grammarAccess.getPrimaryExpressionAccess().getVariableNameParserRuleCall_1_2_2_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ArgumentAssignment_1_2_2_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getArgumentExpressionParserRuleCall_1_2_2_2_4_0()); }
	ruleExpression{ after(grammarAccess.getPrimaryExpressionAccess().getArgumentExpressionParserRuleCall_1_2_2_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__IndexAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getIndexIndexParserRuleCall_1_3_1_0()); }
	ruleIndex{ after(grammarAccess.getPrimaryExpressionAccess().getIndexIndexParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLiteralExpression__ImageAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLiteralExpressionAccess().getImageBOOLEAN_VALUETerminalRuleCall_0()); }
	RULE_BOOLEAN_VALUE{ after(grammarAccess.getBooleanLiteralExpressionAccess().getImageBOOLEAN_VALUETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NaturalLiteralExpression__ImageAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNaturalLiteralExpressionAccess().getImageNATURAL_VALUETerminalRuleCall_0()); }
	RULE_NATURAL_VALUE{ after(grammarAccess.getNaturalLiteralExpressionAccess().getImageNATURAL_VALUETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteralExpression__ImageAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLiteralExpressionAccess().getImageSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLiteralExpressionAccess().getImageSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameExpression__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameExpressionAccess().getNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0()); }
	rulePotentiallyAmbiguousQualifiedName{ after(grammarAccess.getNameExpressionAccess().getNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThisExpression__TupleAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisExpressionAccess().getTupleTupleParserRuleCall_0_2_0()); }
	ruleTuple{ after(grammarAccess.getThisExpressionAccess().getTupleTupleParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocationExpression__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorInvocationExpressionAccess().getTargetPotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
	rulePotentiallyAmbiguousQualifiedName{ after(grammarAccess.getBehaviorInvocationExpressionAccess().getTargetPotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BehaviorInvocationExpression__TupleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBehaviorInvocationExpressionAccess().getTupleTupleParserRuleCall_1_0()); }
	ruleTuple{ after(grammarAccess.getBehaviorInvocationExpressionAccess().getTupleTupleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__ExpressionAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
	ruleExpression{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PositionalTupleExpressionList__ExpressionAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
	ruleExpression{ after(grammarAccess.getPositionalTupleExpressionListAccess().getExpressionExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__NamedExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_0_0()); }
	ruleNamedExpression{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedTupleExpressionList__NamedExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_1_1_0()); }
	ruleNamedExpression{ after(grammarAccess.getNamedTupleExpressionListAccess().getNamedExpressionNamedExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedExpression__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getNamedExpressionAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__TargetAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getTargetQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getSuperInvocationExpressionAccess().getTargetQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuperInvocationExpression__TupleAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuperInvocationExpressionAccess().getTupleTupleParserRuleCall_2_0()); }
	ruleTuple{ after(grammarAccess.getSuperInvocationExpressionAccess().getTupleTupleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__TypeNameAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__HasMultiplicityAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_1_0_2_0()); }
	ruleMultiplicityIndicator{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__ElementsAssignment_1_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getElementsSequenceElementsParserRuleCall_1_0_4_0()); }
	ruleSequenceElements{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getElementsSequenceElementsParserRuleCall_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__ConstructorAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getConstructorQualifiedNameParserRuleCall_1_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getConstructorQualifiedNameParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceCreationOrSequenceConstructionExpression__TupleAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleTupleParserRuleCall_1_1_2_0()); }
	ruleTuple{ after(grammarAccess.getInstanceCreationOrSequenceConstructionExpressionAccess().getTupleTupleParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationExpression__AssociationNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getAssociationNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
	rulePotentiallyAmbiguousQualifiedName{ after(grammarAccess.getLinkOperationExpressionAccess().getAssociationNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationExpression__OperationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getOperationLinkOperationParserRuleCall_2_0()); }
	ruleLinkOperation{ after(grammarAccess.getLinkOperationExpressionAccess().getOperationLinkOperationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LinkOperationExpression__TupleAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLinkOperationExpressionAccess().getTupleLinkOperationTupleParserRuleCall_3_0()); }
	ruleLinkOperationTuple{ after(grammarAccess.getLinkOperationExpressionAccess().getTupleLinkOperationTupleParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedTupleExpressionList__NamedExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionIndexedNamedExpressionParserRuleCall_0_0()); }
	ruleIndexedNamedExpression{ after(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionIndexedNamedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedTupleExpressionList__NamedExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionIndexedNamedExpressionParserRuleCall_1_1_0()); }
	ruleIndexedNamedExpression{ after(grammarAccess.getIndexedNamedTupleExpressionListAccess().getNamedExpressionIndexedNamedExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
	ruleName{ after(grammarAccess.getIndexedNamedExpressionAccess().getNameNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__IndexAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getIndexIndexParserRuleCall_1_0()); }
	ruleIndex{ after(grammarAccess.getIndexedNamedExpressionAccess().getIndexIndexParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedNamedExpression__ExpressionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedNamedExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
	ruleExpression{ after(grammarAccess.getIndexedNamedExpressionAccess().getExpressionExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassExtentExpression__ClassNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassExtentExpressionAccess().getClassNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
	rulePotentiallyAmbiguousQualifiedName{ after(grammarAccess.getClassExtentExpressionAccess().getClassNamePotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__IsAnyAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getIsAnyAnyKeyword_0_0_0_0()); }
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getIsAnyAnyKeyword_0_0_0_0()); }

	'any' 

{ after(grammarAccess.getSequenceConstructionExpressionAccess().getIsAnyAnyKeyword_0_0_0_0()); }
)

{ after(grammarAccess.getSequenceConstructionExpressionAccess().getIsAnyAnyKeyword_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__TypeNameAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getTypeNameQualifiedNameParserRuleCall_0_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getSequenceConstructionExpressionAccess().getTypeNameQualifiedNameParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__HasMultiplicityAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_1_0()); }
	ruleMultiplicityIndicator{ after(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__ElementsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getElementsSequenceElementsParserRuleCall_0_3_0()); }
	ruleSequenceElements{ after(grammarAccess.getSequenceConstructionExpressionAccess().getElementsSequenceElementsParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceConstructionExpression__HasMultiplicityAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityNullKeyword_1_0()); }
(
{ before(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityNullKeyword_1_0()); }

	'null' 

{ after(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityNullKeyword_1_0()); }
)

{ after(grammarAccess.getSequenceConstructionExpressionAccess().getHasMultiplicityNullKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceRange__RangeLowerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceRangeAccess().getRangeLowerExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getSequenceRangeAccess().getRangeLowerExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceRange__RangeUpperAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceRangeAccess().getRangeUpperExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSequenceRangeAccess().getRangeUpperExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpressionList__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getElementSequenceElementParserRuleCall_0_0()); }
	ruleSequenceElement{ after(grammarAccess.getSequenceExpressionListAccess().getElementSequenceElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceExpressionList__ElementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceExpressionListAccess().getElementSequenceElementParserRuleCall_1_1_0()); }
	ruleSequenceElement{ after(grammarAccess.getSequenceExpressionListAccess().getElementSequenceElementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceInitializationExpression__ElementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceInitializationExpressionAccess().getElementsSequenceElementsParserRuleCall_2_0()); }
	ruleSequenceElements{ after(grammarAccess.getSequenceInitializationExpressionAccess().getElementsSequenceElementsParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getNamePotentiallyAmbiguousQualifiedNameParserRuleCall_1_0()); }
	rulePotentiallyAmbiguousQualifiedName{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getNamePotentiallyAmbiguousQualifiedNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__OperationAssignment_3_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationQualifiedNameParserRuleCall_3_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationQualifiedNameParserRuleCall_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__TupleAssignment_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getTupleTupleParserRuleCall_3_0_2_0()); }
	ruleTuple{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getTupleTupleParserRuleCall_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__IsOrderedAssignment_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getIsOrderedOrderedKeyword_3_1_2_0()); }
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getIsOrderedOrderedKeyword_3_1_2_0()); }

	'ordered' 

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getIsOrderedOrderedKeyword_3_1_2_0()); }
)

{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getIsOrderedOrderedKeyword_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__BehaviorNameAssignment_3_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getBehaviorNameQualifiedNameParserRuleCall_3_1_3_0()); }
	ruleQualifiedName{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getBehaviorNameQualifiedNameParserRuleCall_3_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__OperationAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationIDTerminalRuleCall_3_2_1_0()); }
	RULE_ID{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getOperationIDTerminalRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__VariableAssignment_3_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getVariableNameParserRuleCall_3_2_2_0()); }
	ruleName{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getVariableNameParserRuleCall_3_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SequenceOperationOrReductionOrExpansionExpression__ArgumentAssignment_3_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getArgumentExpressionParserRuleCall_3_2_4_0()); }
	ruleExpression{ after(grammarAccess.getSequenceOperationOrReductionOrExpansionExpressionAccess().getArgumentExpressionParserRuleCall_3_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getOperatorAffixOperatorParserRuleCall_0_0()); }
	ruleAffixOperator{ after(grammarAccess.getPrefixExpressionAccess().getOperatorAffixOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrefixExpression__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrefixExpressionAccess().getOperandLeftHandSideParserRuleCall_1_0()); }
	ruleLeftHandSide{ after(grammarAccess.getPrefixExpressionAccess().getOperandLeftHandSideParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__OperandAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getOperandLeftHandSideParserRuleCall_0_0()); }
	ruleLeftHandSide{ after(grammarAccess.getPostfixExpressionAccess().getOperandLeftHandSideParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PostfixExpression__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPostfixExpressionAccess().getOperatorAffixOperatorParserRuleCall_1_0()); }
	ruleAffixOperator{ after(grammarAccess.getPostfixExpressionAccess().getOperatorAffixOperatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanUnaryExpression__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorExclamationMarkKeyword_0_0()); }
(
{ before(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorExclamationMarkKeyword_0_0()); }

	'!' 

{ after(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorExclamationMarkKeyword_0_0()); }
)

{ after(grammarAccess.getBooleanUnaryExpressionAccess().getOperatorExclamationMarkKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanUnaryExpression__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getBooleanUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringUnaryExpression__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringUnaryExpressionAccess().getOperatorTildeKeyword_0_0()); }
(
{ before(grammarAccess.getBitStringUnaryExpressionAccess().getOperatorTildeKeyword_0_0()); }

	'~' 

{ after(grammarAccess.getBitStringUnaryExpressionAccess().getOperatorTildeKeyword_0_0()); }
)

{ after(grammarAccess.getBitStringUnaryExpressionAccess().getOperatorTildeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BitStringUnaryExpression__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBitStringUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getBitStringUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getOperatorNumericUnaryOperatorParserRuleCall_0_0()); }
	ruleNumericUnaryOperator{ after(grammarAccess.getNumericUnaryExpressionAccess().getOperatorNumericUnaryOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumericUnaryExpression__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumericUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getNumericUnaryExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsolationExpression__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsolationExpressionAccess().getOperatorDollarSignKeyword_0_0()); }
(
{ before(grammarAccess.getIsolationExpressionAccess().getOperatorDollarSignKeyword_0_0()); }

	'$' 

{ after(grammarAccess.getIsolationExpressionAccess().getOperatorDollarSignKeyword_0_0()); }
)

{ after(grammarAccess.getIsolationExpressionAccess().getOperatorDollarSignKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsolationExpression__OperandAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsolationExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
	ruleUnaryExpression{ after(grammarAccess.getIsolationExpressionAccess().getOperandUnaryExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__IsAnyAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getIsAnyAnyKeyword_1_0_0()); }
(
{ before(grammarAccess.getCastExpressionAccess().getIsAnyAnyKeyword_1_0_0()); }

	'any' 

{ after(grammarAccess.getCastExpressionAccess().getIsAnyAnyKeyword_1_0_0()); }
)

{ after(grammarAccess.getCastExpressionAccess().getIsAnyAnyKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__TypeNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getCastExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CastExpression__OperandAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCastExpressionAccess().getOperandCastCompletionParserRuleCall_3_0()); }
	ruleCastCompletion{ after(grammarAccess.getCastExpressionAccess().getOperandCastCompletionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0()); }
	ruleMultiplicativeOperator{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperatorMultiplicativeOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiplicativeExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiplicativeExpressionAccess().getOperand2UnaryExpressionParserRuleCall_1_2_0()); }
	ruleUnaryExpression{ after(grammarAccess.getMultiplicativeExpressionAccess().getOperand2UnaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0()); }
	ruleAdditiveOperator{ after(grammarAccess.getAdditiveExpressionAccess().getOperatorAdditiveOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AdditiveExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAdditiveExpressionAccess().getOperand2MultiplicativeExpressionParserRuleCall_1_2_0()); }
	ruleMultiplicativeExpression{ after(grammarAccess.getAdditiveExpressionAccess().getOperand2MultiplicativeExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getOperatorShiftOperatorParserRuleCall_1_1_0()); }
	ruleShiftOperator{ after(grammarAccess.getShiftExpressionAccess().getOperatorShiftOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ShiftExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getShiftExpressionAccess().getOperand2AdditiveExpressionParserRuleCall_1_2_0()); }
	ruleAdditiveExpression{ after(grammarAccess.getShiftExpressionAccess().getOperand2AdditiveExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0()); }
	ruleRelationalOperator{ after(grammarAccess.getRelationalExpressionAccess().getOperatorRelationalOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationalExpressionAccess().getOperand2ShiftExpressionParserRuleCall_1_2_0()); }
	ruleShiftExpression{ after(grammarAccess.getRelationalExpressionAccess().getOperand2ShiftExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0()); }
	ruleClassificationOperator{ after(grammarAccess.getClassificationExpressionAccess().getOperatorClassificationOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassificationExpression__TypeNameAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassificationExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getClassificationExpressionAccess().getTypeNameQualifiedNameParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0()); }
	ruleEqualityOperator{ after(grammarAccess.getEqualityExpressionAccess().getOperatorEqualityOperatorParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EqualityExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEqualityExpressionAccess().getOperand2ClassificationExpressionParserRuleCall_1_2_0()); }
	ruleClassificationExpression{ after(grammarAccess.getEqualityExpressionAccess().getOperand2ClassificationExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0()); }

	'&' 

{ after(grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getAndExpressionAccess().getOperatorAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperand2EqualityExpressionParserRuleCall_1_2_0()); }
	ruleEqualityExpression{ after(grammarAccess.getAndExpressionAccess().getOperand2EqualityExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }

	'^' 

{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }
)

{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperatorCircumflexAccentKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExclusiveOrExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExclusiveOrExpressionAccess().getOperand2AndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getExclusiveOrExpressionAccess().getOperand2AndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperatorVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperatorVerticalLineKeyword_1_1_0()); }

	'|' 

{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperatorVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperatorVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InclusiveOrExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInclusiveOrExpressionAccess().getOperand2ExclusiveOrExpressionParserRuleCall_1_2_0()); }
	ruleExclusiveOrExpression{ after(grammarAccess.getInclusiveOrExpressionAccess().getOperand2ExclusiveOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }

	'&&' 

{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

{ after(grammarAccess.getConditionalAndExpressionAccess().getOperatorAmpersandAmpersandKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalAndExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalAndExpressionAccess().getOperand2InclusiveOrExpressionParserRuleCall_1_2_0()); }
	ruleInclusiveOrExpression{ after(grammarAccess.getConditionalAndExpressionAccess().getOperand2InclusiveOrExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

{ after(grammarAccess.getConditionalOrExpressionAccess().getOperatorVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalOrExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalOrExpressionAccess().getOperand2ConditionalAndExpressionParserRuleCall_1_2_0()); }
	ruleConditionalAndExpression{ after(grammarAccess.getConditionalOrExpressionAccess().getOperand2ConditionalAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Operand2Assignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getOperand2ExpressionParserRuleCall_1_2_0()); }
	ruleExpression{ after(grammarAccess.getConditionalExpressionAccess().getOperand2ExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionalExpression__Operand3Assignment_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConditionalExpressionAccess().getOperand3ConditionalExpressionParserRuleCall_1_4_0()); }
	ruleConditionalExpression{ after(grammarAccess.getConditionalExpressionAccess().getOperand3ConditionalExpressionParserRuleCall_1_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__LeftHandSideAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getLeftHandSideLeftHandSideParserRuleCall_0_0()); }
	ruleLeftHandSide{ after(grammarAccess.getAssignmentExpressionAccess().getLeftHandSideLeftHandSideParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignmentOperatorParserRuleCall_1_0()); }
	ruleAssignmentOperator{ after(grammarAccess.getAssignmentExpressionAccess().getOperatorAssignmentOperatorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignmentExpression__RightHandSideAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentExpressionAccess().getRightHandSideExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentExpressionAccess().getRightHandSideExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameLeftHandSide__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameLeftHandSideAccess().getTargetPotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
	rulePotentiallyAmbiguousQualifiedName{ after(grammarAccess.getNameLeftHandSideAccess().getTargetPotentiallyAmbiguousQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NameLeftHandSide__IndexAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNameLeftHandSideAccess().getIndexIndexParserRuleCall_1_0()); }
	ruleIndex{ after(grammarAccess.getNameLeftHandSideAccess().getIndexIndexParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureLeftHandSide__ExpressionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureLeftHandSideAccess().getExpressionPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression{ after(grammarAccess.getFeatureLeftHandSideAccess().getExpressionPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__StatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementDocumentedStatementParserRuleCall_2_0()); }
	ruleDocumentedStatement{ after(grammarAccess.getBlockAccess().getStatementDocumentedStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__DocumentationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
	RULE_DOCUMENTATION_COMMENT{ after(grammarAccess.getAnnotatedStatementAccess().getDocumentationDOCUMENTATION_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__AnnotationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getAnnotationSTATEMENT_ANNOTATIONTerminalRuleCall_1_0()); }
	RULE_STATEMENT_ANNOTATION{ after(grammarAccess.getAnnotatedStatementAccess().getAnnotationSTATEMENT_ANNOTATIONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotatedStatement__StatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotatedStatementAccess().getStatementStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getAnnotatedStatementAccess().getStatementStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InLineStatement__CodeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInLineStatementAccess().getCodeINLINE_STATEMENTTerminalRuleCall_0()); }
	RULE_INLINE_STATEMENT{ after(grammarAccess.getInLineStatementAccess().getCodeINLINE_STATEMENTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BlockStatement__BlockAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockStatementAccess().getBlockBlockParserRuleCall_0()); }
	ruleBlock{ after(grammarAccess.getBlockStatementAccess().getBlockBlockParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__NameAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_0_0_1_0()); }
	ruleName{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__IsAnyAssignment_0_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_0_3_0_0()); }
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_0_3_0_0()); }

	'any' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_0_3_0_0()); }
)

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__TypeNameAssignment_0_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameQualifiedNameParserRuleCall_0_0_3_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameQualifiedNameParserRuleCall_0_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__HasMultiplicityAssignment_0_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_0_4_0()); }
	ruleMultiplicityIndicator{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__IsAnyAssignment_0_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_1_0_0_0()); }
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_1_0_0_0()); }

	'any' 

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_1_0_0_0()); }
)

{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getIsAnyAnyKeyword_0_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__TypeNameAssignment_0_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameQualifiedNameParserRuleCall_0_1_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getTypeNameQualifiedNameParserRuleCall_0_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__HasMultiplicityAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_1_1_0()); }
	ruleMultiplicityIndicator{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getHasMultiplicityMultiplicityIndicatorParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__NameAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_0_1_2_0()); }
	ruleName{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getNameNameParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalNameDeclarationStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalNameDeclarationStatementAccess().getExpressionInitializationExpressionParserRuleCall_2_0()); }
	ruleInitializationExpression{ after(grammarAccess.getLocalNameDeclarationStatementAccess().getExpressionInitializationExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceInitializationExpression__TupleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceInitializationExpressionAccess().getTupleTupleParserRuleCall_1_0()); }
	ruleTuple{ after(grammarAccess.getInstanceInitializationExpressionAccess().getTupleTupleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExpressionStatement__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
	ruleExpression{ after(grammarAccess.getExpressionStatementAccess().getExpressionExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__NonFinalClausesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getNonFinalClausesConcurrentClausesParserRuleCall_1_0()); }
	ruleConcurrentClauses{ after(grammarAccess.getIfStatementAccess().getNonFinalClausesConcurrentClausesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__NonFinalClausesAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getNonFinalClausesConcurrentClausesParserRuleCall_2_2_0()); }
	ruleConcurrentClauses{ after(grammarAccess.getIfStatementAccess().getNonFinalClausesConcurrentClausesParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatement__FinalClauseAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfStatementAccess().getFinalClauseBlockParserRuleCall_3_1_0()); }
	ruleBlock{ after(grammarAccess.getIfStatementAccess().getFinalClauseBlockParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__ClauseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getClauseNonFinalClauseParserRuleCall_0_0()); }
	ruleNonFinalClause{ after(grammarAccess.getConcurrentClausesAccess().getClauseNonFinalClauseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConcurrentClauses__ClauseAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConcurrentClausesAccess().getClauseNonFinalClauseParserRuleCall_1_2_0()); }
	ruleNonFinalClause{ after(grammarAccess.getConcurrentClausesAccess().getClauseNonFinalClauseParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__ConditionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getConditionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getNonFinalClauseAccess().getConditionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonFinalClause__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonFinalClauseAccess().getBodyBlockParserRuleCall_3_0()); }
	ruleBlock{ after(grammarAccess.getNonFinalClauseAccess().getBodyBlockParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getSwitchStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__NonDefaultClauseAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getNonDefaultClauseSwitchClauseParserRuleCall_5_0()); }
	ruleSwitchClause{ after(grammarAccess.getSwitchStatementAccess().getNonDefaultClauseSwitchClauseParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchStatement__DefaultClauseAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchStatementAccess().getDefaultClauseSwitchDefaultClauseParserRuleCall_6_0()); }
	ruleSwitchDefaultClause{ after(grammarAccess.getSwitchStatementAccess().getDefaultClauseSwitchDefaultClauseParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__CaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getCaseSwitchCaseParserRuleCall_0_0()); }
	ruleSwitchCase{ after(grammarAccess.getSwitchClauseAccess().getCaseSwitchCaseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__CaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getCaseSwitchCaseParserRuleCall_1_0()); }
	ruleSwitchCase{ after(grammarAccess.getSwitchClauseAccess().getCaseSwitchCaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SwitchClause__BlockAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSwitchClauseAccess().getBlockNonEmptyStatementSequenceParserRuleCall_2_0()); }
	ruleNonEmptyStatementSequence{ after(grammarAccess.getSwitchClauseAccess().getBlockNonEmptyStatementSequenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonEmptyStatementSequence__StatementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementDocumentedStatementParserRuleCall_0()); }
	ruleDocumentedStatement{ after(grammarAccess.getNonEmptyStatementSequenceAccess().getStatementDocumentedStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__ConditionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getWhileStatementAccess().getConditionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatement__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWhileStatementAccess().getBodyBlockParserRuleCall_4_0()); }
	ruleBlock{ after(grammarAccess.getWhileStatementAccess().getBodyBlockParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getBodyBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getDoStatementAccess().getBodyBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoStatement__ConditionAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoStatementAccess().getConditionExpressionParserRuleCall_4_0()); }
	ruleExpression{ after(grammarAccess.getDoStatementAccess().getConditionExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__VariableDefinitionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVariableDefinitionLoopVariableDefinitionParserRuleCall_2_0()); }
	ruleLoopVariableDefinition{ after(grammarAccess.getForStatementAccess().getVariableDefinitionLoopVariableDefinitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__VariableDefinitionAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getVariableDefinitionLoopVariableDefinitionParserRuleCall_3_1_0()); }
	ruleLoopVariableDefinition{ after(grammarAccess.getForStatementAccess().getVariableDefinitionLoopVariableDefinitionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForStatement__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForStatementAccess().getBodyBlockParserRuleCall_5_0()); }
	ruleBlock{ after(grammarAccess.getForStatementAccess().getBodyBlockParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__VariableAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getVariableNameParserRuleCall_0_0_0()); }
	ruleName{ after(grammarAccess.getLoopVariableDefinitionAccess().getVariableNameParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__TypeIsInferredAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getTypeIsInferredInKeyword_0_1_0()); }
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getTypeIsInferredInKeyword_0_1_0()); }

	'in' 

{ after(grammarAccess.getLoopVariableDefinitionAccess().getTypeIsInferredInKeyword_0_1_0()); }
)

{ after(grammarAccess.getLoopVariableDefinitionAccess().getTypeIsInferredInKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Expression1Assignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_0_2_0()); }
	ruleExpression{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Expression2Assignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression2ExpressionParserRuleCall_0_3_1_0()); }
	ruleExpression{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression2ExpressionParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__IsAnyAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getIsAnyAnyKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getIsAnyAnyKeyword_1_0_0_0()); }

	'any' 

{ after(grammarAccess.getLoopVariableDefinitionAccess().getIsAnyAnyKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getLoopVariableDefinitionAccess().getIsAnyAnyKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__TypeNameAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getLoopVariableDefinitionAccess().getTypeNameQualifiedNameParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__VariableAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getVariableNameParserRuleCall_1_1_0()); }
	ruleName{ after(grammarAccess.getLoopVariableDefinitionAccess().getVariableNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopVariableDefinition__Expression1Assignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_1_3_0()); }
	ruleExpression{ after(grammarAccess.getLoopVariableDefinitionAccess().getExpression1ExpressionParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatement__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getReturnStatementAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__AcceptBlockAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptClauseParserRuleCall_0_0_0()); }
	ruleAcceptClause{ after(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptClauseParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__AcceptBlockAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptBlockParserRuleCall_1_0_0()); }
	ruleAcceptBlock{ after(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptBlockParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptStatement__AcceptBlockAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptBlockParserRuleCall_1_1_1_0()); }
	ruleAcceptBlock{ after(grammarAccess.getAcceptStatementAccess().getAcceptBlockAcceptBlockParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptBlock__BlockAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptBlockAccess().getBlockBlockParserRuleCall_1_0()); }
	ruleBlock{ after(grammarAccess.getAcceptBlockAccess().getBlockBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__NameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getNameNameParserRuleCall_2_0_0()); }
	ruleName{ after(grammarAccess.getAcceptClauseAccess().getNameNameParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AcceptClause__SignalNamesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAcceptClauseAccess().getSignalNamesQualifiedNameListParserRuleCall_3_0()); }
	ruleQualifiedNameList{ after(grammarAccess.getAcceptClauseAccess().getSignalNamesQualifiedNameListParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__ExpressionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getClassifyStatementAccess().getExpressionExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__FromListAssignment_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getFromListClassificationFromClauseParserRuleCall_2_0_0_0()); }
	ruleClassificationFromClause{ after(grammarAccess.getClassifyStatementAccess().getFromListClassificationFromClauseParserRuleCall_2_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__ToListAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getToListClassificationToClauseParserRuleCall_2_0_1_0()); }
	ruleClassificationToClause{ after(grammarAccess.getClassifyStatementAccess().getToListClassificationToClauseParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__IsReclassifyAllAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getIsReclassifyAllReclassifyAllClauseParserRuleCall_2_1_0_0()); }
	ruleReclassifyAllClause{ after(grammarAccess.getClassifyStatementAccess().getIsReclassifyAllReclassifyAllClauseParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifyStatement__ToListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifyStatementAccess().getToListClassificationToClauseParserRuleCall_2_1_1_0()); }
	ruleClassificationToClause{ after(grammarAccess.getClassifyStatementAccess().getToListClassificationToClauseParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getNameQualifiedNameParserRuleCall_0_0()); }
	ruleQualifiedName{ after(grammarAccess.getQualifiedNameListAccess().getNameQualifiedNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameList__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameListAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
	ruleQualifiedName{ after(grammarAccess.getQualifiedNameListAccess().getNameQualifiedNameParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN_VALUE : ('true'|'false');

RULE_NATURAL_VALUE : (('0'|'1'..'9' ('_'? '0'..'9')*)|('0b'|'0B') '0'..'1' ('_'? '0'..'1')*|('0x'|'0X') ('0'..'9'|'a'..'f'|'A'..'F') ('_'? ('0'..'9'|'a'..'f'|'A'..'F'))*|'0' '_'? '0'..'7' ('_'? '0'..'7')*);

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_UNRESTRICTED_NAME : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_DOCUMENTATION_COMMENT : '/**' ( options {greedy=false;} : . )*'*/';

RULE_STATEMENT_ANNOTATION : '//@' ( options {greedy=false;} : . )*'\n';

RULE_INLINE_STATEMENT : '/*@inline(' (RULE_ID|RULE_UNRESTRICTED_NAME) ')' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~(('*'|'@')) ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' (~(('@'|'\n'|'\r')) ~(('\n'|'\r'))*)? ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


