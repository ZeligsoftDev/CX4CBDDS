/**
 */
package org.eclipse.papyrus.uml.alf;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EOperation;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 * <li>each class,</li>
 * <li>each feature of each class,</li>
 * <li>each operation of each class,</li>
 * <li>each enum,</li>
 * <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.eclipse.papyrus.uml.alf.AlfFactory
 * @model kind="package"
 *        annotation="http://www.eclipse.org/OCL/Import ecore='http://www.eclipse.org/emf/2002/Ecore' types='http://www.eclipse.org/uml2/5.0.0/Types' uml='http://www.eclipse.org/uml2/5.0.0/UML'"
 *        annotation="http://www.eclipse.org/emf/2002/Ecore invocationDelegates='http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot' settingDelegates='http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot' validationDelegates='http://www.eclipse.org/emf/2002/Ecore/OCL/Pivot'"
 * @generated
 */
public interface AlfPackage extends EPackage {
	/**
	 * The package name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNAME = "alf";

	/**
	 * The package namespace URI.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_URI = "http://www.omg.org/spec/ALF/20120827";

	/**
	 * The package namespace name.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	String eNS_PREFIX = "alf";

	/**
	 * The singleton instance of the package.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	AlfPackage eINSTANCE = org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl.init();

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AssignedSourceImpl <em>Assigned Source</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AssignedSourceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAssignedSource()
	 * @generated
	 */
	int ASSIGNED_SOURCE = 0;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE__NAME = 0;

	/**
	 * The feature id for the '<em><b>Source</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE__SOURCE = 1;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE__UPPER = 2;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE__LOWER = 3;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE__TYPE = 4;

	/**
	 * The feature id for the '<em><b>Is Parallel Local Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE__IS_PARALLEL_LOCAL_NAME = 5;

	/**
	 * The number of structural features of the '<em>Assigned Source</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE_FEATURE_COUNT = 6;

	/**
	 * The operation id for the '<em>Is New</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE___IS_NEW__ELIST = 0;

	/**
	 * The operation id for the '<em>Update</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE___UPDATE__ELIST = 1;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE___COPY__SYNTAXELEMENT_BOOLEAN = 2;

	/**
	 * The number of operations of the '<em>Assigned Source</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNED_SOURCE_OPERATION_COUNT = 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SyntaxElementImpl <em>Syntax Element</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SyntaxElementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSyntaxElement()
	 * @generated
	 */
	int SYNTAX_ELEMENT = 1;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT__OWNER = 0;

	/**
	 * The number of structural features of the '<em>Syntax Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT_FEATURE_COUNT = 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___TO_REFERENCE = 0;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___OWNER = 1;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER = 2;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___CURRENT_SCOPE = 3;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = 4;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___ENCLOSING_STATEMENT = 5;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___ENCLOSING_EXPRESSION = 6;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE = 7;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = 8;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = 9;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = 10;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST = 11;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST = 12;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST = 13;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = 14;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING = 15;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING = 16;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING = 17;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___BOOLEAN_TYPE = 18;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = 19;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___INTEGER_TYPE = 20;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = 21;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___STRING_TYPE = 22;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = 23;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE = 24;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = 25;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___BIT_STRING_TYPE = 26;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = 27;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___NATURAL_TYPE = 28;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = 29;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = 30;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD = 31;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = 32;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = 33;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = 34;

	/**
	 * The number of operations of the '<em>Syntax Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SYNTAX_ELEMENT_OPERATION_COUNT = 35;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AssignableElementImpl <em>Assignable Element</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AssignableElementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAssignableElement()
	 * @generated
	 */
	int ASSIGNABLE_ELEMENT = 9;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ElementReferenceImpl <em>Element Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ElementReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getElementReference()
	 * @generated
	 */
	int ELEMENT_REFERENCE = 2;

	/**
	 * The number of structural features of the '<em>Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE_FEATURE_COUNT = 0;

	/**
	 * The operation id for the '<em>Is Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_UML = 0;

	/**
	 * The operation id for the '<em>Is Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ALF = 1;

	/**
	 * The operation id for the '<em>As Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___AS_UML = 2;

	/**
	 * The operation id for the '<em>As Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___AS_ALF = 3;

	/**
	 * The operation id for the '<em>As Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___AS_MEMBER = 4;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_SAME_KIND_AS__ELEMENTREFERENCE = 5;

	/**
	 * The operation id for the '<em>Is Named Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_NAMED_ELEMENT = 6;

	/**
	 * The operation id for the '<em>Is Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_NAMESPACE = 7;

	/**
	 * The operation id for the '<em>Is Namespace For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_NAMESPACE_FOR__UNITDEFINITION = 8;

	/**
	 * The operation id for the '<em>Is Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_MODEL_NAMESPACE = 9;

	/**
	 * The operation id for the '<em>Is Package</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_PACKAGE = 10;

	/**
	 * The operation id for the '<em>Is Profile</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_PROFILE = 11;

	/**
	 * The operation id for the '<em>Is Packageable Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_PACKAGEABLE_ELEMENT = 12;

	/**
	 * The operation id for the '<em>Is Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_CLASSIFIER = 13;

	/**
	 * The operation id for the '<em>Is Abstract Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ABSTRACT_CLASSIFIER = 14;

	/**
	 * The operation id for the '<em>Is Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ASSOCIATION = 15;

	/**
	 * The operation id for the '<em>Is Data Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_DATA_TYPE = 16;

	/**
	 * The operation id for the '<em>Is Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_CLASS = 17;

	/**
	 * The operation id for the '<em>Is Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ACTIVE_CLASS = 18;

	/**
	 * The operation id for the '<em>Is Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_SIGNAL = 19;

	/**
	 * The operation id for the '<em>Is Enumeration</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ENUMERATION = 20;

	/**
	 * The operation id for the '<em>Is Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_BEHAVIOR = 21;

	/**
	 * The operation id for the '<em>Is Activity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ACTIVITY = 22;

	/**
	 * The operation id for the '<em>Is Method</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_METHOD = 23;

	/**
	 * The operation id for the '<em>Is Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_PRIMITIVE_TYPE = 24;

	/**
	 * The operation id for the '<em>Is Reception</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_RECEPTION = 25;

	/**
	 * The operation id for the '<em>Is Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_OPERATION = 26;

	/**
	 * The operation id for the '<em>Is Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_CONSTRUCTOR = 27;

	/**
	 * The operation id for the '<em>Is Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_DESTRUCTOR = 28;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_FEATURE = 29;

	/**
	 * The operation id for the '<em>Is Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_PROPERTY = 30;

	/**
	 * The operation id for the '<em>Is Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ASSOCIATION_END = 31;

	/**
	 * The operation id for the '<em>Is Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_PARAMETER = 32;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_TEMPLATE = 33;

	/**
	 * The operation id for the '<em>Is Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_TEMPLATE_PARAMETER = 34;

	/**
	 * The operation id for the '<em>Is Classifier Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_CLASSIFIER_TEMPLATE_PARAMETER = 35;

	/**
	 * The operation id for the '<em>Is Parametered Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_PARAMETERED_ELEMENT = 36;

	/**
	 * The operation id for the '<em>Is Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_TEMPLATE_BINDING = 37;

	/**
	 * The operation id for the '<em>Is Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_STEREOTYPE = 38;

	/**
	 * The operation id for the '<em>Is Enumeration Literal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ENUMERATION_LITERAL = 39;

	/**
	 * The operation id for the '<em>Is Loop Variable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_LOOP_VARIABLE = 40;

	/**
	 * The operation id for the '<em>Is Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ANNOTATION = 41;

	/**
	 * The operation id for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_SEQUENCE_EXPANSION_EXPRESSION = 42;

	/**
	 * The operation id for the '<em>Is Any Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ANY_TYPE = 43;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE = 44;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = 45;

	/**
	 * The operation id for the '<em>Collection Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___COLLECTION_ARGUMENT = 46;

	/**
	 * The operation id for the '<em>Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___NAME = 47;

	/**
	 * The operation id for the '<em>Visibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___VISIBILITY = 48;

	/**
	 * The operation id for the '<em>Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___OWNED_MEMBERS = 49;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___MEMBERS = 50;

	/**
	 * The operation id for the '<em>Visible Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___VISIBLE_MEMBERS = 51;

	/**
	 * The operation id for the '<em>Nested Classifiers</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___NESTED_CLASSIFIERS = 52;

	/**
	 * The operation id for the '<em>Properties</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___PROPERTIES = 53;

	/**
	 * The operation id for the '<em>Association Ends</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___ASSOCIATION_ENDS = 54;

	/**
	 * The operation id for the '<em>Opposite</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___OPPOSITE = 55;

	/**
	 * The operation id for the '<em>Receptions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RECEPTIONS = 56;

	/**
	 * The operation id for the '<em>Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___SIGNAL = 57;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___PARAMETERS = 58;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RETURN_PARAMETER = 59;

	/**
	 * The operation id for the '<em>Specification</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___SPECIFICATION = 60;

	/**
	 * The operation id for the '<em>Redefined Operations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___REDEFINED_OPERATIONS = 61;

	/**
	 * The operation id for the '<em>Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___NAMESPACE = 62;

	/**
	 * The operation id for the '<em>Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___TEMPLATE = 63;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___TEMPLATE_PARAMETERS = 64;

	/**
	 * The operation id for the '<em>Parametered Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___PARAMETERED_ELEMENTS = 65;

	/**
	 * The operation id for the '<em>Template Actuals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___TEMPLATE_ACTUALS = 66;

	/**
	 * The operation id for the '<em>Direction</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___DIRECTION = 67;

	/**
	 * The operation id for the '<em>Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___ASSOCIATION = 68;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___TYPE = 69;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___LOWER = 70;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___UPPER = 71;

	/**
	 * The operation id for the '<em>Is Ordered</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ORDERED = 72;

	/**
	 * The operation id for the '<em>Is Nonunique</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_NONUNIQUE = 73;

	/**
	 * The operation id for the '<em>Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___PARENTS = 74;

	/**
	 * The operation id for the '<em>All Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___ALL_PARENTS = 75;

	/**
	 * The operation id for the '<em>Classifier Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___CLASSIFIER_BEHAVIOR = 76;

	/**
	 * The operation id for the '<em>Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___CONTEXT = 77;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___APPLIED_PROFILES = 78;

	/**
	 * The operation id for the '<em>Base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___BASE = 79;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___REFERENCE = 80;

	/**
	 * The operation id for the '<em>Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___TEMPLATE_BINDING = 81;

	/**
	 * The operation id for the '<em>Bind</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___BIND__ELIST = 82;

	/**
	 * The operation id for the '<em>Bound Element Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST = 83;

	/**
	 * The operation id for the '<em>Bound Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___BOUND_PATH_NAME = 84;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___QUALIFIED_NAME = 85;

	/**
	 * The operation id for the '<em>Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___ACTIVE_CLASS = 86;

	/**
	 * The operation id for the '<em>Is Active Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___IS_ACTIVE_BEHAVIOR = 87;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___CONFORMS_TO__ELEMENTREFERENCE = 88;

	/**
	 * The operation id for the '<em>Equals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___EQUALS__ELEMENTREFERENCE = 89;

	/**
	 * The operation id for the '<em>Contained In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___CONTAINED_IN__ELIST = 90;

	/**
	 * The operation id for the '<em>Count In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___COUNT_IN__ELIST = 91;

	/**
	 * The operation id for the '<em>Position In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___POSITION_IN__ELIST = 92;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___COPY = 93;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___MODEL_SCOPE = 94;

	/**
	 * The operation id for the '<em>Resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RESOLVE_PATH_NAME__STRING = 95;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RESOLVE_IN_SCOPE__STRING = 96;

	/**
	 * The operation id for the '<em>Resolve Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RESOLVE_STEREOTYPE__STRING = 97;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RESOLVE__STRING = 98;

	/**
	 * The operation id for the '<em>Resolve Visible</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE = 99;

	/**
	 * The operation id for the '<em>Resolve Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING = 100;

	/**
	 * The operation id for the '<em>Contains Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE = 101;

	/**
	 * The operation id for the '<em>Allow Package Only</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY = 102;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___STUB = 103;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___STUB_FOR__UNITDEFINITION = 104;

	/**
	 * The operation id for the '<em>Constructor Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE = 105;

	/**
	 * The number of operations of the '<em>Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_REFERENCE_OPERATION_COUNT = 106;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.InternalElementReferenceImpl <em>Internal Element Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.InternalElementReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getInternalElementReference()
	 * @generated
	 */
	int INTERNAL_ELEMENT_REFERENCE = 3;

	/**
	 * The feature id for the '<em><b>Element</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE__ELEMENT = ELEMENT_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Internal Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE_FEATURE_COUNT = ELEMENT_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_UML = ELEMENT_REFERENCE___IS_UML;

	/**
	 * The operation id for the '<em>As Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___AS_UML = ELEMENT_REFERENCE___AS_UML;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE = ELEMENT_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Collection Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___COLLECTION_ARGUMENT = ELEMENT_REFERENCE___COLLECTION_ARGUMENT;

	/**
	 * The operation id for the '<em>Visible Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___VISIBLE_MEMBERS = ELEMENT_REFERENCE___VISIBLE_MEMBERS;

	/**
	 * The operation id for the '<em>Properties</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___PROPERTIES = ELEMENT_REFERENCE___PROPERTIES;

	/**
	 * The operation id for the '<em>Association Ends</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___ASSOCIATION_ENDS = ELEMENT_REFERENCE___ASSOCIATION_ENDS;

	/**
	 * The operation id for the '<em>Receptions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RECEPTIONS = ELEMENT_REFERENCE___RECEPTIONS;

	/**
	 * The operation id for the '<em>Redefined Operations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___REDEFINED_OPERATIONS = ELEMENT_REFERENCE___REDEFINED_OPERATIONS;

	/**
	 * The operation id for the '<em>Base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___BASE = ELEMENT_REFERENCE___BASE;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___REFERENCE = ELEMENT_REFERENCE___REFERENCE;

	/**
	 * The operation id for the '<em>Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___TEMPLATE_BINDING = ELEMENT_REFERENCE___TEMPLATE_BINDING;

	/**
	 * The operation id for the '<em>Bind</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___BIND__ELIST = ELEMENT_REFERENCE___BIND__ELIST;

	/**
	 * The operation id for the '<em>Bound Element Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST = ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST;

	/**
	 * The operation id for the '<em>Bound Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___BOUND_PATH_NAME = ELEMENT_REFERENCE___BOUND_PATH_NAME;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___QUALIFIED_NAME = ELEMENT_REFERENCE___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Is Active Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ACTIVE_BEHAVIOR = ELEMENT_REFERENCE___IS_ACTIVE_BEHAVIOR;

	/**
	 * The operation id for the '<em>Contained In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___CONTAINED_IN__ELIST = ELEMENT_REFERENCE___CONTAINED_IN__ELIST;

	/**
	 * The operation id for the '<em>Count In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___COUNT_IN__ELIST = ELEMENT_REFERENCE___COUNT_IN__ELIST;

	/**
	 * The operation id for the '<em>Position In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___POSITION_IN__ELIST = ELEMENT_REFERENCE___POSITION_IN__ELIST;

	/**
	 * The operation id for the '<em>Resolve Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RESOLVE_STEREOTYPE__STRING = ELEMENT_REFERENCE___RESOLVE_STEREOTYPE__STRING;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RESOLVE__STRING = ELEMENT_REFERENCE___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Resolve Visible</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE = ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Resolve Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING = ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING;

	/**
	 * The operation id for the '<em>Contains Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE = ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Allow Package Only</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY = ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY;

	/**
	 * The operation id for the '<em>Constructor Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE = ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE;

	/**
	 * The operation id for the '<em>Is Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ALF = ELEMENT_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>As Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___AS_ALF = ELEMENT_REFERENCE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>As Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___AS_MEMBER = ELEMENT_REFERENCE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_SAME_KIND_AS__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Is Named Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_NAMED_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Is Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Namespace For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_NAMESPACE_FOR__UNITDEFINITION = ELEMENT_REFERENCE_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Is Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_MODEL_NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Is Package</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_PACKAGE = ELEMENT_REFERENCE_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Is Profile</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_PROFILE = ELEMENT_REFERENCE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Packageable Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_PACKAGEABLE_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Is Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_CLASSIFIER = ELEMENT_REFERENCE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Abstract Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ABSTRACT_CLASSIFIER = ELEMENT_REFERENCE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Is Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ASSOCIATION = ELEMENT_REFERENCE_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Is Data Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_DATA_TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Is Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ACTIVE_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Is Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_SIGNAL = ELEMENT_REFERENCE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Is Enumeration</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ENUMERATION = ELEMENT_REFERENCE_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Is Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_BEHAVIOR = ELEMENT_REFERENCE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Activity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ACTIVITY = ELEMENT_REFERENCE_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Is Method</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_METHOD = ELEMENT_REFERENCE_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Is Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_PRIMITIVE_TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Is Reception</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_RECEPTION = ELEMENT_REFERENCE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_OPERATION = ELEMENT_REFERENCE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_CONSTRUCTOR = ELEMENT_REFERENCE_OPERATION_COUNT + 25;

	/**
	 * The operation id for the '<em>Is Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_DESTRUCTOR = ELEMENT_REFERENCE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_FEATURE = ELEMENT_REFERENCE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Is Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_PROPERTY = ELEMENT_REFERENCE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Is Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ASSOCIATION_END = ELEMENT_REFERENCE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Is Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 30;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE = ELEMENT_REFERENCE_OPERATION_COUNT + 31;

	/**
	 * The operation id for the '<em>Is Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 32;

	/**
	 * The operation id for the '<em>Is Classifier Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_CLASSIFIER_TEMPLATE_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 33;

	/**
	 * The operation id for the '<em>Is Parametered Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_PARAMETERED_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 34;

	/**
	 * The operation id for the '<em>Is Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE_BINDING = ELEMENT_REFERENCE_OPERATION_COUNT + 35;

	/**
	 * The operation id for the '<em>Is Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_STEREOTYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 36;

	/**
	 * The operation id for the '<em>Is Enumeration Literal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ENUMERATION_LITERAL = ELEMENT_REFERENCE_OPERATION_COUNT + 37;

	/**
	 * The operation id for the '<em>Is Loop Variable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_LOOP_VARIABLE = ELEMENT_REFERENCE_OPERATION_COUNT + 38;

	/**
	 * The operation id for the '<em>Is Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ANNOTATION = ELEMENT_REFERENCE_OPERATION_COUNT + 39;

	/**
	 * The operation id for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_SEQUENCE_EXPANSION_EXPRESSION = ELEMENT_REFERENCE_OPERATION_COUNT + 40;

	/**
	 * The operation id for the '<em>Is Any Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ANY_TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 41;

	/**
	 * The operation id for the '<em>Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___NAME = ELEMENT_REFERENCE_OPERATION_COUNT + 42;

	/**
	 * The operation id for the '<em>Visibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___VISIBILITY = ELEMENT_REFERENCE_OPERATION_COUNT + 43;

	/**
	 * The operation id for the '<em>Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___OWNED_MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 44;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 45;

	/**
	 * The operation id for the '<em>Nested Classifiers</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___NESTED_CLASSIFIERS = ELEMENT_REFERENCE_OPERATION_COUNT + 46;

	/**
	 * The operation id for the '<em>Opposite</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___OPPOSITE = ELEMENT_REFERENCE_OPERATION_COUNT + 47;

	/**
	 * The operation id for the '<em>Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___SIGNAL = ELEMENT_REFERENCE_OPERATION_COUNT + 48;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___PARAMETERS = ELEMENT_REFERENCE_OPERATION_COUNT + 49;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RETURN_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 50;

	/**
	 * The operation id for the '<em>Specification</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___SPECIFICATION = ELEMENT_REFERENCE_OPERATION_COUNT + 51;

	/**
	 * The operation id for the '<em>Redefined Operaions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___REDEFINED_OPERAIONS = ELEMENT_REFERENCE_OPERATION_COUNT + 52;

	/**
	 * The operation id for the '<em>Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 53;

	/**
	 * The operation id for the '<em>Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___TEMPLATE = ELEMENT_REFERENCE_OPERATION_COUNT + 54;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___TEMPLATE_PARAMETERS = ELEMENT_REFERENCE_OPERATION_COUNT + 55;

	/**
	 * The operation id for the '<em>Parametered Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___PARAMETERED_ELEMENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 56;

	/**
	 * The operation id for the '<em>Template Actuals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___TEMPLATE_ACTUALS = ELEMENT_REFERENCE_OPERATION_COUNT + 57;

	/**
	 * The operation id for the '<em>Direction</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___DIRECTION = ELEMENT_REFERENCE_OPERATION_COUNT + 58;

	/**
	 * The operation id for the '<em>Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___ASSOCIATION = ELEMENT_REFERENCE_OPERATION_COUNT + 59;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 60;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___LOWER = ELEMENT_REFERENCE_OPERATION_COUNT + 61;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___UPPER = ELEMENT_REFERENCE_OPERATION_COUNT + 62;

	/**
	 * The operation id for the '<em>Is Ordered</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_ORDERED = ELEMENT_REFERENCE_OPERATION_COUNT + 63;

	/**
	 * The operation id for the '<em>Is Nonunique</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___IS_NONUNIQUE = ELEMENT_REFERENCE_OPERATION_COUNT + 64;

	/**
	 * The operation id for the '<em>Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___PARENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 65;

	/**
	 * The operation id for the '<em>All Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___ALL_PARENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 66;

	/**
	 * The operation id for the '<em>Classifier Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___CLASSIFIER_BEHAVIOR = ELEMENT_REFERENCE_OPERATION_COUNT + 67;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___APPLIED_PROFILES = ELEMENT_REFERENCE_OPERATION_COUNT + 68;

	/**
	 * The operation id for the '<em>Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___ACTIVE_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 69;

	/**
	 * The operation id for the '<em>Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___CONTEXT = ELEMENT_REFERENCE_OPERATION_COUNT + 70;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___CONFORMS_TO__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 71;

	/**
	 * The operation id for the '<em>Equals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___EQUALS__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 72;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___COPY = ELEMENT_REFERENCE_OPERATION_COUNT + 73;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___MODEL_SCOPE = ELEMENT_REFERENCE_OPERATION_COUNT + 74;

	/**
	 * The operation id for the '<em>Resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RESOLVE_PATH_NAME__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 75;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RESOLVE_IN_SCOPE__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 76;

	/**
	 * The operation id for the '<em>Resolve Stereotype Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___RESOLVE_STEREOTYPE_NAME__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 77;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___STUB = ELEMENT_REFERENCE_OPERATION_COUNT + 78;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE___STUB_FOR__UNITDEFINITION = ELEMENT_REFERENCE_OPERATION_COUNT + 79;

	/**
	 * The number of operations of the '<em>Internal Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT = ELEMENT_REFERENCE_OPERATION_COUNT + 80;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ExternalElementReferenceImpl <em>External Element Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ExternalElementReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getExternalElementReference()
	 * @generated
	 */
	int EXTERNAL_ELEMENT_REFERENCE = 4;

	/**
	 * The feature id for the '<em><b>Element</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE__ELEMENT = ELEMENT_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Alias</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE__ALIAS = ELEMENT_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>External Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE_FEATURE_COUNT = ELEMENT_REFERENCE_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ALF = ELEMENT_REFERENCE___IS_ALF;

	/**
	 * The operation id for the '<em>As Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___AS_ALF = ELEMENT_REFERENCE___AS_ALF;

	/**
	 * The operation id for the '<em>Is Any Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ANY_TYPE = ELEMENT_REFERENCE___IS_ANY_TYPE;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE = ELEMENT_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Collection Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___COLLECTION_ARGUMENT = ELEMENT_REFERENCE___COLLECTION_ARGUMENT;

	/**
	 * The operation id for the '<em>Visible Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___VISIBLE_MEMBERS = ELEMENT_REFERENCE___VISIBLE_MEMBERS;

	/**
	 * The operation id for the '<em>Receptions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RECEPTIONS = ELEMENT_REFERENCE___RECEPTIONS;

	/**
	 * The operation id for the '<em>Base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___BASE = ELEMENT_REFERENCE___BASE;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___REFERENCE = ELEMENT_REFERENCE___REFERENCE;

	/**
	 * The operation id for the '<em>Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___TEMPLATE_BINDING = ELEMENT_REFERENCE___TEMPLATE_BINDING;

	/**
	 * The operation id for the '<em>Bind</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___BIND__ELIST = ELEMENT_REFERENCE___BIND__ELIST;

	/**
	 * The operation id for the '<em>Bound Element Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST = ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST;

	/**
	 * The operation id for the '<em>Bound Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___BOUND_PATH_NAME = ELEMENT_REFERENCE___BOUND_PATH_NAME;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___QUALIFIED_NAME = ELEMENT_REFERENCE___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Is Active Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ACTIVE_BEHAVIOR = ELEMENT_REFERENCE___IS_ACTIVE_BEHAVIOR;

	/**
	 * The operation id for the '<em>Contained In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___CONTAINED_IN__ELIST = ELEMENT_REFERENCE___CONTAINED_IN__ELIST;

	/**
	 * The operation id for the '<em>Count In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___COUNT_IN__ELIST = ELEMENT_REFERENCE___COUNT_IN__ELIST;

	/**
	 * The operation id for the '<em>Position In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___POSITION_IN__ELIST = ELEMENT_REFERENCE___POSITION_IN__ELIST;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RESOLVE__STRING = ELEMENT_REFERENCE___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Resolve Visible</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE = ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Resolve Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING = ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING;

	/**
	 * The operation id for the '<em>Contains Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE = ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Allow Package Only</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY = ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY;

	/**
	 * The operation id for the '<em>Constructor Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE = ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE;

	/**
	 * The operation id for the '<em>Is Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_UML = ELEMENT_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>As Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___AS_UML = ELEMENT_REFERENCE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>As Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___AS_MEMBER = ELEMENT_REFERENCE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_SAME_KIND_AS__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Is Named Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_NAMED_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Is Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Namespace For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_NAMESPACE_FOR__UNITDEFINITION = ELEMENT_REFERENCE_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Is Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_MODEL_NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Is Package</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_PACKAGE = ELEMENT_REFERENCE_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Is Profile</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_PROFILE = ELEMENT_REFERENCE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Packageable Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_PACKAGEABLE_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Is Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_CLASSIFIER = ELEMENT_REFERENCE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Abstract Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ABSTRACT_CLASSIFIER = ELEMENT_REFERENCE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Is Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ASSOCIATION = ELEMENT_REFERENCE_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Is Data Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_DATA_TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Is Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ACTIVE_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Is Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_SIGNAL = ELEMENT_REFERENCE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Is Enumeration</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ENUMERATION = ELEMENT_REFERENCE_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Is Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_BEHAVIOR = ELEMENT_REFERENCE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Activity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ACTIVITY = ELEMENT_REFERENCE_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Is Method</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_METHOD = ELEMENT_REFERENCE_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Is Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_PRIMITIVE_TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Is Reception</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_RECEPTION = ELEMENT_REFERENCE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_OPERATION = ELEMENT_REFERENCE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_CONSTRUCTOR = ELEMENT_REFERENCE_OPERATION_COUNT + 25;

	/**
	 * The operation id for the '<em>Is Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_DESTRUCTOR = ELEMENT_REFERENCE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_FEATURE = ELEMENT_REFERENCE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Is Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_PROPERTY = ELEMENT_REFERENCE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Is Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ASSOCIATION_END = ELEMENT_REFERENCE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Is Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 30;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE = ELEMENT_REFERENCE_OPERATION_COUNT + 31;

	/**
	 * The operation id for the '<em>Is Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 32;

	/**
	 * The operation id for the '<em>Is Classifier Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_CLASSIFIER_TEMPLATE_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 33;

	/**
	 * The operation id for the '<em>Is Parametered Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_PARAMETERED_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 34;

	/**
	 * The operation id for the '<em>Is Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE_BINDING = ELEMENT_REFERENCE_OPERATION_COUNT + 35;

	/**
	 * The operation id for the '<em>Is Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_STEREOTYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 36;

	/**
	 * The operation id for the '<em>Is Enumeration Literal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ENUMERATION_LITERAL = ELEMENT_REFERENCE_OPERATION_COUNT + 37;

	/**
	 * The operation id for the '<em>Is Loop Variable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_LOOP_VARIABLE = ELEMENT_REFERENCE_OPERATION_COUNT + 38;

	/**
	 * The operation id for the '<em>Is Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ANNOTATION = ELEMENT_REFERENCE_OPERATION_COUNT + 39;

	/**
	 * The operation id for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_SEQUENCE_EXPANSION_EXPRESSION = ELEMENT_REFERENCE_OPERATION_COUNT + 40;

	/**
	 * The operation id for the '<em>Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___NAME = ELEMENT_REFERENCE_OPERATION_COUNT + 41;

	/**
	 * The operation id for the '<em>Visibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___VISIBILITY = ELEMENT_REFERENCE_OPERATION_COUNT + 42;

	/**
	 * The operation id for the '<em>Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___OWNED_MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 43;

	/**
	 * The operation id for the '<em>Enumeration Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___ENUMERATION_MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 44;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 45;

	/**
	 * The operation id for the '<em>Additional Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___ADDITIONAL_MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 46;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___INHERIT__ELIST = ELEMENT_REFERENCE_OPERATION_COUNT + 47;

	/**
	 * The operation id for the '<em>Nested Classifiers</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___NESTED_CLASSIFIERS = ELEMENT_REFERENCE_OPERATION_COUNT + 48;

	/**
	 * The operation id for the '<em>Properties</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___PROPERTIES = ELEMENT_REFERENCE_OPERATION_COUNT + 49;

	/**
	 * The operation id for the '<em>Association Ends</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___ASSOCIATION_ENDS = ELEMENT_REFERENCE_OPERATION_COUNT + 50;

	/**
	 * The operation id for the '<em>Opposite</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___OPPOSITE = ELEMENT_REFERENCE_OPERATION_COUNT + 51;

	/**
	 * The operation id for the '<em>Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___SIGNAL = ELEMENT_REFERENCE_OPERATION_COUNT + 52;

	/**
	 * The operation id for the '<em>Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 53;

	/**
	 * The operation id for the '<em>Owned Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___OWNED_PARAMETERS = ELEMENT_REFERENCE_OPERATION_COUNT + 54;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___PARAMETERS = ELEMENT_REFERENCE_OPERATION_COUNT + 55;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RETURN_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 56;

	/**
	 * The operation id for the '<em>Specification</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___SPECIFICATION = ELEMENT_REFERENCE_OPERATION_COUNT + 57;

	/**
	 * The operation id for the '<em>Redefined Operations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___REDEFINED_OPERATIONS = ELEMENT_REFERENCE_OPERATION_COUNT + 58;

	/**
	 * The operation id for the '<em>Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___TEMPLATE = ELEMENT_REFERENCE_OPERATION_COUNT + 59;

	/**
	 * The operation id for the '<em>Uml Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___UML_TEMPLATE_BINDING = ELEMENT_REFERENCE_OPERATION_COUNT + 60;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___TEMPLATE_PARAMETERS = ELEMENT_REFERENCE_OPERATION_COUNT + 61;

	/**
	 * The operation id for the '<em>Parametered Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___PARAMETERED_ELEMENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 62;

	/**
	 * The operation id for the '<em>Template Actuals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___TEMPLATE_ACTUALS = ELEMENT_REFERENCE_OPERATION_COUNT + 63;

	/**
	 * The operation id for the '<em>Direction</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___DIRECTION = ELEMENT_REFERENCE_OPERATION_COUNT + 64;

	/**
	 * The operation id for the '<em>Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___ASSOCIATION = ELEMENT_REFERENCE_OPERATION_COUNT + 65;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 66;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___LOWER = ELEMENT_REFERENCE_OPERATION_COUNT + 67;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___UPPER = ELEMENT_REFERENCE_OPERATION_COUNT + 68;

	/**
	 * The operation id for the '<em>Is Ordered</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_ORDERED = ELEMENT_REFERENCE_OPERATION_COUNT + 69;

	/**
	 * The operation id for the '<em>Is Nonunique</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___IS_NONUNIQUE = ELEMENT_REFERENCE_OPERATION_COUNT + 70;

	/**
	 * The operation id for the '<em>Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___PARENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 71;

	/**
	 * The operation id for the '<em>All Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___ALL_PARENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 72;

	/**
	 * The operation id for the '<em>Classifier Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___CLASSIFIER_BEHAVIOR = ELEMENT_REFERENCE_OPERATION_COUNT + 73;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___APPLIED_PROFILES = ELEMENT_REFERENCE_OPERATION_COUNT + 74;

	/**
	 * The operation id for the '<em>Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___ACTIVE_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 75;

	/**
	 * The operation id for the '<em>Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___CONTEXT = ELEMENT_REFERENCE_OPERATION_COUNT + 76;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___CONFORMS_TO__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 77;

	/**
	 * The operation id for the '<em>Equals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___EQUALS__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 78;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___COPY = ELEMENT_REFERENCE_OPERATION_COUNT + 79;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___MODEL_SCOPE = ELEMENT_REFERENCE_OPERATION_COUNT + 80;

	/**
	 * The operation id for the '<em>Resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RESOLVE_PATH_NAME__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 81;

	/**
	 * The operation id for the '<em>External Element Reference resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___EXTERNAL_ELEMENT_REFERENCE_RESOLVE_PATH_NAME__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 82;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RESOLVE_IN_SCOPE__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 83;

	/**
	 * The operation id for the '<em>Resolve Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___RESOLVE_STEREOTYPE__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 84;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___STUB = ELEMENT_REFERENCE_OPERATION_COUNT + 85;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE___STUB_FOR__UNITDEFINITION = ELEMENT_REFERENCE_OPERATION_COUNT + 86;

	/**
	 * The number of operations of the '<em>External Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT = ELEMENT_REFERENCE_OPERATION_COUNT + 87;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ExternalEnumerationLiteralReferenceImpl <em>External Enumeration Literal Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ExternalEnumerationLiteralReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getExternalEnumerationLiteralReference()
	 * @generated
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE = 5;

	/**
	 * The feature id for the '<em><b>Element</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE__ELEMENT = EXTERNAL_ELEMENT_REFERENCE__ELEMENT;

	/**
	 * The feature id for the '<em><b>Alias</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE__ALIAS = EXTERNAL_ELEMENT_REFERENCE__ALIAS;

	/**
	 * The number of structural features of the '<em>External Enumeration Literal Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE_FEATURE_COUNT = EXTERNAL_ELEMENT_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ALF = EXTERNAL_ELEMENT_REFERENCE___IS_ALF;

	/**
	 * The operation id for the '<em>As Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___AS_ALF = EXTERNAL_ELEMENT_REFERENCE___AS_ALF;

	/**
	 * The operation id for the '<em>Is Any Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ANY_TYPE = EXTERNAL_ELEMENT_REFERENCE___IS_ANY_TYPE;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE = EXTERNAL_ELEMENT_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXTERNAL_ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Collection Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___COLLECTION_ARGUMENT = EXTERNAL_ELEMENT_REFERENCE___COLLECTION_ARGUMENT;

	/**
	 * The operation id for the '<em>Visible Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___VISIBLE_MEMBERS = EXTERNAL_ELEMENT_REFERENCE___VISIBLE_MEMBERS;

	/**
	 * The operation id for the '<em>Receptions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RECEPTIONS = EXTERNAL_ELEMENT_REFERENCE___RECEPTIONS;

	/**
	 * The operation id for the '<em>Base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___BASE = EXTERNAL_ELEMENT_REFERENCE___BASE;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___REFERENCE = EXTERNAL_ELEMENT_REFERENCE___REFERENCE;

	/**
	 * The operation id for the '<em>Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___TEMPLATE_BINDING = EXTERNAL_ELEMENT_REFERENCE___TEMPLATE_BINDING;

	/**
	 * The operation id for the '<em>Bind</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___BIND__ELIST = EXTERNAL_ELEMENT_REFERENCE___BIND__ELIST;

	/**
	 * The operation id for the '<em>Bound Element Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___BOUND_ELEMENT_NAME__ELIST = EXTERNAL_ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST;

	/**
	 * The operation id for the '<em>Bound Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___BOUND_PATH_NAME = EXTERNAL_ELEMENT_REFERENCE___BOUND_PATH_NAME;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___QUALIFIED_NAME = EXTERNAL_ELEMENT_REFERENCE___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Is Active Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ACTIVE_BEHAVIOR = EXTERNAL_ELEMENT_REFERENCE___IS_ACTIVE_BEHAVIOR;

	/**
	 * The operation id for the '<em>Contained In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___CONTAINED_IN__ELIST = EXTERNAL_ELEMENT_REFERENCE___CONTAINED_IN__ELIST;

	/**
	 * The operation id for the '<em>Count In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___COUNT_IN__ELIST = EXTERNAL_ELEMENT_REFERENCE___COUNT_IN__ELIST;

	/**
	 * The operation id for the '<em>Position In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___POSITION_IN__ELIST = EXTERNAL_ELEMENT_REFERENCE___POSITION_IN__ELIST;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RESOLVE__STRING = EXTERNAL_ELEMENT_REFERENCE___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Resolve Visible</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE = EXTERNAL_ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Resolve Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING = EXTERNAL_ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING;

	/**
	 * The operation id for the '<em>Contains Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE = EXTERNAL_ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Allow Package Only</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___ALLOW_PACKAGE_ONLY = EXTERNAL_ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY;

	/**
	 * The operation id for the '<em>Constructor Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___CONSTRUCTOR_REFERENCE = EXTERNAL_ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE;

	/**
	 * The operation id for the '<em>Is Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_UML = EXTERNAL_ELEMENT_REFERENCE___IS_UML;

	/**
	 * The operation id for the '<em>As Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___AS_UML = EXTERNAL_ELEMENT_REFERENCE___AS_UML;

	/**
	 * The operation id for the '<em>As Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___AS_MEMBER = EXTERNAL_ELEMENT_REFERENCE___AS_MEMBER;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_SAME_KIND_AS__ELEMENTREFERENCE = EXTERNAL_ELEMENT_REFERENCE___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Named Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_NAMED_ELEMENT = EXTERNAL_ELEMENT_REFERENCE___IS_NAMED_ELEMENT;

	/**
	 * The operation id for the '<em>Is Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_NAMESPACE = EXTERNAL_ELEMENT_REFERENCE___IS_NAMESPACE;

	/**
	 * The operation id for the '<em>Is Namespace For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_NAMESPACE_FOR__UNITDEFINITION = EXTERNAL_ELEMENT_REFERENCE___IS_NAMESPACE_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_MODEL_NAMESPACE = EXTERNAL_ELEMENT_REFERENCE___IS_MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Is Package</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_PACKAGE = EXTERNAL_ELEMENT_REFERENCE___IS_PACKAGE;

	/**
	 * The operation id for the '<em>Is Profile</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_PROFILE = EXTERNAL_ELEMENT_REFERENCE___IS_PROFILE;

	/**
	 * The operation id for the '<em>Is Packageable Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_PACKAGEABLE_ELEMENT = EXTERNAL_ELEMENT_REFERENCE___IS_PACKAGEABLE_ELEMENT;

	/**
	 * The operation id for the '<em>Is Abstract Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ABSTRACT_CLASSIFIER = EXTERNAL_ELEMENT_REFERENCE___IS_ABSTRACT_CLASSIFIER;

	/**
	 * The operation id for the '<em>Is Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ASSOCIATION = EXTERNAL_ELEMENT_REFERENCE___IS_ASSOCIATION;

	/**
	 * The operation id for the '<em>Is Data Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_DATA_TYPE = EXTERNAL_ELEMENT_REFERENCE___IS_DATA_TYPE;

	/**
	 * The operation id for the '<em>Is Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_CLASS = EXTERNAL_ELEMENT_REFERENCE___IS_CLASS;

	/**
	 * The operation id for the '<em>Is Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ACTIVE_CLASS = EXTERNAL_ELEMENT_REFERENCE___IS_ACTIVE_CLASS;

	/**
	 * The operation id for the '<em>Is Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_SIGNAL = EXTERNAL_ELEMENT_REFERENCE___IS_SIGNAL;

	/**
	 * The operation id for the '<em>Is Enumeration</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ENUMERATION = EXTERNAL_ELEMENT_REFERENCE___IS_ENUMERATION;

	/**
	 * The operation id for the '<em>Is Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_BEHAVIOR = EXTERNAL_ELEMENT_REFERENCE___IS_BEHAVIOR;

	/**
	 * The operation id for the '<em>Is Activity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ACTIVITY = EXTERNAL_ELEMENT_REFERENCE___IS_ACTIVITY;

	/**
	 * The operation id for the '<em>Is Method</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_METHOD = EXTERNAL_ELEMENT_REFERENCE___IS_METHOD;

	/**
	 * The operation id for the '<em>Is Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_PRIMITIVE_TYPE = EXTERNAL_ELEMENT_REFERENCE___IS_PRIMITIVE_TYPE;

	/**
	 * The operation id for the '<em>Is Reception</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_RECEPTION = EXTERNAL_ELEMENT_REFERENCE___IS_RECEPTION;

	/**
	 * The operation id for the '<em>Is Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_OPERATION = EXTERNAL_ELEMENT_REFERENCE___IS_OPERATION;

	/**
	 * The operation id for the '<em>Is Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_CONSTRUCTOR = EXTERNAL_ELEMENT_REFERENCE___IS_CONSTRUCTOR;

	/**
	 * The operation id for the '<em>Is Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_DESTRUCTOR = EXTERNAL_ELEMENT_REFERENCE___IS_DESTRUCTOR;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_FEATURE = EXTERNAL_ELEMENT_REFERENCE___IS_FEATURE;

	/**
	 * The operation id for the '<em>Is Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_PROPERTY = EXTERNAL_ELEMENT_REFERENCE___IS_PROPERTY;

	/**
	 * The operation id for the '<em>Is Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ASSOCIATION_END = EXTERNAL_ELEMENT_REFERENCE___IS_ASSOCIATION_END;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_TEMPLATE = EXTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_TEMPLATE_PARAMETER = EXTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE_PARAMETER;

	/**
	 * The operation id for the '<em>Is Classifier Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_CLASSIFIER_TEMPLATE_PARAMETER = EXTERNAL_ELEMENT_REFERENCE___IS_CLASSIFIER_TEMPLATE_PARAMETER;

	/**
	 * The operation id for the '<em>Is Parametered Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_PARAMETERED_ELEMENT = EXTERNAL_ELEMENT_REFERENCE___IS_PARAMETERED_ELEMENT;

	/**
	 * The operation id for the '<em>Is Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_TEMPLATE_BINDING = EXTERNAL_ELEMENT_REFERENCE___IS_TEMPLATE_BINDING;

	/**
	 * The operation id for the '<em>Is Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_STEREOTYPE = EXTERNAL_ELEMENT_REFERENCE___IS_STEREOTYPE;

	/**
	 * The operation id for the '<em>Is Loop Variable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_LOOP_VARIABLE = EXTERNAL_ELEMENT_REFERENCE___IS_LOOP_VARIABLE;

	/**
	 * The operation id for the '<em>Is Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ANNOTATION = EXTERNAL_ELEMENT_REFERENCE___IS_ANNOTATION;

	/**
	 * The operation id for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_SEQUENCE_EXPANSION_EXPRESSION = EXTERNAL_ELEMENT_REFERENCE___IS_SEQUENCE_EXPANSION_EXPRESSION;

	/**
	 * The operation id for the '<em>Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___NAME = EXTERNAL_ELEMENT_REFERENCE___NAME;

	/**
	 * The operation id for the '<em>Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___OWNED_MEMBERS = EXTERNAL_ELEMENT_REFERENCE___OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Enumeration Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___ENUMERATION_MEMBERS = EXTERNAL_ELEMENT_REFERENCE___ENUMERATION_MEMBERS;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___MEMBERS = EXTERNAL_ELEMENT_REFERENCE___MEMBERS;

	/**
	 * The operation id for the '<em>Additional Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___ADDITIONAL_MEMBERS = EXTERNAL_ELEMENT_REFERENCE___ADDITIONAL_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___INHERIT__ELIST = EXTERNAL_ELEMENT_REFERENCE___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Nested Classifiers</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___NESTED_CLASSIFIERS = EXTERNAL_ELEMENT_REFERENCE___NESTED_CLASSIFIERS;

	/**
	 * The operation id for the '<em>Properties</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___PROPERTIES = EXTERNAL_ELEMENT_REFERENCE___PROPERTIES;

	/**
	 * The operation id for the '<em>Association Ends</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___ASSOCIATION_ENDS = EXTERNAL_ELEMENT_REFERENCE___ASSOCIATION_ENDS;

	/**
	 * The operation id for the '<em>Opposite</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___OPPOSITE = EXTERNAL_ELEMENT_REFERENCE___OPPOSITE;

	/**
	 * The operation id for the '<em>Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___SIGNAL = EXTERNAL_ELEMENT_REFERENCE___SIGNAL;

	/**
	 * The operation id for the '<em>Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___NAMESPACE = EXTERNAL_ELEMENT_REFERENCE___NAMESPACE;

	/**
	 * The operation id for the '<em>Owned Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___OWNED_PARAMETERS = EXTERNAL_ELEMENT_REFERENCE___OWNED_PARAMETERS;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___PARAMETERS = EXTERNAL_ELEMENT_REFERENCE___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RETURN_PARAMETER = EXTERNAL_ELEMENT_REFERENCE___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Specification</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___SPECIFICATION = EXTERNAL_ELEMENT_REFERENCE___SPECIFICATION;

	/**
	 * The operation id for the '<em>Redefined Operations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___REDEFINED_OPERATIONS = EXTERNAL_ELEMENT_REFERENCE___REDEFINED_OPERATIONS;

	/**
	 * The operation id for the '<em>Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___TEMPLATE = EXTERNAL_ELEMENT_REFERENCE___TEMPLATE;

	/**
	 * The operation id for the '<em>Uml Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___UML_TEMPLATE_BINDING = EXTERNAL_ELEMENT_REFERENCE___UML_TEMPLATE_BINDING;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___TEMPLATE_PARAMETERS = EXTERNAL_ELEMENT_REFERENCE___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Parametered Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___PARAMETERED_ELEMENTS = EXTERNAL_ELEMENT_REFERENCE___PARAMETERED_ELEMENTS;

	/**
	 * The operation id for the '<em>Template Actuals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___TEMPLATE_ACTUALS = EXTERNAL_ELEMENT_REFERENCE___TEMPLATE_ACTUALS;

	/**
	 * The operation id for the '<em>Direction</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___DIRECTION = EXTERNAL_ELEMENT_REFERENCE___DIRECTION;

	/**
	 * The operation id for the '<em>Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___ASSOCIATION = EXTERNAL_ELEMENT_REFERENCE___ASSOCIATION;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___LOWER = EXTERNAL_ELEMENT_REFERENCE___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___UPPER = EXTERNAL_ELEMENT_REFERENCE___UPPER;

	/**
	 * The operation id for the '<em>Is Ordered</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ORDERED = EXTERNAL_ELEMENT_REFERENCE___IS_ORDERED;

	/**
	 * The operation id for the '<em>Is Nonunique</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_NONUNIQUE = EXTERNAL_ELEMENT_REFERENCE___IS_NONUNIQUE;

	/**
	 * The operation id for the '<em>Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___PARENTS = EXTERNAL_ELEMENT_REFERENCE___PARENTS;

	/**
	 * The operation id for the '<em>All Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___ALL_PARENTS = EXTERNAL_ELEMENT_REFERENCE___ALL_PARENTS;

	/**
	 * The operation id for the '<em>Classifier Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___CLASSIFIER_BEHAVIOR = EXTERNAL_ELEMENT_REFERENCE___CLASSIFIER_BEHAVIOR;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___APPLIED_PROFILES = EXTERNAL_ELEMENT_REFERENCE___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___ACTIVE_CLASS = EXTERNAL_ELEMENT_REFERENCE___ACTIVE_CLASS;

	/**
	 * The operation id for the '<em>Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___CONTEXT = EXTERNAL_ELEMENT_REFERENCE___CONTEXT;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___CONFORMS_TO__ELEMENTREFERENCE = EXTERNAL_ELEMENT_REFERENCE___CONFORMS_TO__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Equals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___EQUALS__ELEMENTREFERENCE = EXTERNAL_ELEMENT_REFERENCE___EQUALS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___COPY = EXTERNAL_ELEMENT_REFERENCE___COPY;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___MODEL_SCOPE = EXTERNAL_ELEMENT_REFERENCE___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RESOLVE_PATH_NAME__STRING = EXTERNAL_ELEMENT_REFERENCE___RESOLVE_PATH_NAME__STRING;

	/**
	 * The operation id for the '<em>External Element Reference resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___EXTERNAL_ELEMENT_REFERENCE_RESOLVE_PATH_NAME__STRING = EXTERNAL_ELEMENT_REFERENCE___EXTERNAL_ELEMENT_REFERENCE_RESOLVE_PATH_NAME__STRING;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RESOLVE_IN_SCOPE__STRING = EXTERNAL_ELEMENT_REFERENCE___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Resolve Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___RESOLVE_STEREOTYPE__STRING = EXTERNAL_ELEMENT_REFERENCE___RESOLVE_STEREOTYPE__STRING;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___STUB = EXTERNAL_ELEMENT_REFERENCE___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___STUB_FOR__UNITDEFINITION = EXTERNAL_ELEMENT_REFERENCE___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Named Eement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_NAMED_EEMENT = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_CLASSIFIER = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_PARAMETER = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Enumeration Literal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___IS_ENUMERATION_LITERAL = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>External Enumeration Literal Reference visibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___EXTERNAL_ENUMERATION_LITERAL_REFERENCE_VISIBILITY = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Visibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___VISIBILITY = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>External Enumeration Literal Reference type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___EXTERNAL_ENUMERATION_LITERAL_REFERENCE_TYPE = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE___TYPE = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>External Enumeration Literal Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTERNAL_ENUMERATION_LITERAL_REFERENCE_OPERATION_COUNT = EXTERNAL_ELEMENT_REFERENCE_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BoundElementReferenceImpl <em>Bound Element Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BoundElementReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBoundElementReference()
	 * @generated
	 */
	int BOUND_ELEMENT_REFERENCE = 6;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE__REFERENT = ELEMENT_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Namespace</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE__NAMESPACE = ELEMENT_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Template Binding</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE__TEMPLATE_BINDING = ELEMENT_REFERENCE_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Bound Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE_FEATURE_COUNT = ELEMENT_REFERENCE_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>Is Any Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ANY_TYPE = ELEMENT_REFERENCE___IS_ANY_TYPE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Collection Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___COLLECTION_ARGUMENT = ELEMENT_REFERENCE___COLLECTION_ARGUMENT;

	/**
	 * The operation id for the '<em>Visible Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___VISIBLE_MEMBERS = ELEMENT_REFERENCE___VISIBLE_MEMBERS;

	/**
	 * The operation id for the '<em>Receptions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RECEPTIONS = ELEMENT_REFERENCE___RECEPTIONS;

	/**
	 * The operation id for the '<em>Base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___BASE = ELEMENT_REFERENCE___BASE;

	/**
	 * The operation id for the '<em>Bind</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___BIND__ELIST = ELEMENT_REFERENCE___BIND__ELIST;

	/**
	 * The operation id for the '<em>Bound Element Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST = ELEMENT_REFERENCE___BOUND_ELEMENT_NAME__ELIST;

	/**
	 * The operation id for the '<em>Bound Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___BOUND_PATH_NAME = ELEMENT_REFERENCE___BOUND_PATH_NAME;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___QUALIFIED_NAME = ELEMENT_REFERENCE___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Contained In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___CONTAINED_IN__ELIST = ELEMENT_REFERENCE___CONTAINED_IN__ELIST;

	/**
	 * The operation id for the '<em>Count In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___COUNT_IN__ELIST = ELEMENT_REFERENCE___COUNT_IN__ELIST;

	/**
	 * The operation id for the '<em>Position In</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___POSITION_IN__ELIST = ELEMENT_REFERENCE___POSITION_IN__ELIST;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RESOLVE__STRING = ELEMENT_REFERENCE___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Resolve Visible</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE = ELEMENT_REFERENCE___RESOLVE_VISIBLE__STRING_ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Resolve Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING = ELEMENT_REFERENCE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING;

	/**
	 * The operation id for the '<em>Contains Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE = ELEMENT_REFERENCE___CONTAINS_MEMBER__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Allow Package Only</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY = ELEMENT_REFERENCE___ALLOW_PACKAGE_ONLY;

	/**
	 * The operation id for the '<em>Constructor Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE = ELEMENT_REFERENCE___CONSTRUCTOR_REFERENCE;

	/**
	 * The operation id for the '<em>Is Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_UML = ELEMENT_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ALF = ELEMENT_REFERENCE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>As Uml</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___AS_UML = ELEMENT_REFERENCE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>As Alf</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___AS_ALF = ELEMENT_REFERENCE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>As Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___AS_MEMBER = ELEMENT_REFERENCE_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_SAME_KIND_AS__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Named Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_NAMED_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Is Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Is Namespace For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_NAMESPACE_FOR__UNITDEFINITION = ELEMENT_REFERENCE_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Is Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_MODEL_NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Is Package</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_PACKAGE = ELEMENT_REFERENCE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Is Profile</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_PROFILE = ELEMENT_REFERENCE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Is Packageable Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_PACKAGEABLE_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Is Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_CLASSIFIER = ELEMENT_REFERENCE_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Is Abstract Classifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ABSTRACT_CLASSIFIER = ELEMENT_REFERENCE_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Is Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ASSOCIATION = ELEMENT_REFERENCE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Is Data Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_DATA_TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Is Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Is Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ACTIVE_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Is Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_SIGNAL = ELEMENT_REFERENCE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Is Enumeration</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ENUMERATION = ELEMENT_REFERENCE_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Is Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_BEHAVIOR = ELEMENT_REFERENCE_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Is Activity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ACTIVITY = ELEMENT_REFERENCE_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Is Method</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_METHOD = ELEMENT_REFERENCE_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_PRIMITIVE_TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Is Reception</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_RECEPTION = ELEMENT_REFERENCE_OPERATION_COUNT + 25;

	/**
	 * The operation id for the '<em>Is Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_OPERATION = ELEMENT_REFERENCE_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Is Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_CONSTRUCTOR = ELEMENT_REFERENCE_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Is Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_DESTRUCTOR = ELEMENT_REFERENCE_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_FEATURE = ELEMENT_REFERENCE_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Is Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_PROPERTY = ELEMENT_REFERENCE_OPERATION_COUNT + 30;

	/**
	 * The operation id for the '<em>Is Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ASSOCIATION_END = ELEMENT_REFERENCE_OPERATION_COUNT + 31;

	/**
	 * The operation id for the '<em>Is Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 32;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_TEMPLATE = ELEMENT_REFERENCE_OPERATION_COUNT + 33;

	/**
	 * The operation id for the '<em>Is Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_TEMPLATE_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 34;

	/**
	 * The operation id for the '<em>Is Classifier Template Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_CLASSIFIER_TEMPLATE_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 35;

	/**
	 * The operation id for the '<em>Is Parametered Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_PARAMETERED_ELEMENT = ELEMENT_REFERENCE_OPERATION_COUNT + 36;

	/**
	 * The operation id for the '<em>Is Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_STEREOTYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 37;

	/**
	 * The operation id for the '<em>Is Enumeration Literal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ENUMERATION_LITERAL = ELEMENT_REFERENCE_OPERATION_COUNT + 38;

	/**
	 * The operation id for the '<em>Is Loop Variable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_LOOP_VARIABLE = ELEMENT_REFERENCE_OPERATION_COUNT + 39;

	/**
	 * The operation id for the '<em>Is Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ANNOTATION = ELEMENT_REFERENCE_OPERATION_COUNT + 40;

	/**
	 * The operation id for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_SEQUENCE_EXPANSION_EXPRESSION = ELEMENT_REFERENCE_OPERATION_COUNT + 41;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_DISTINGUISHABLE_FROM__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 42;

	/**
	 * The operation id for the '<em>Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___NAME = ELEMENT_REFERENCE_OPERATION_COUNT + 43;

	/**
	 * The operation id for the '<em>Visibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___VISIBILITY = ELEMENT_REFERENCE_OPERATION_COUNT + 44;

	/**
	 * The operation id for the '<em>Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___OWNED_MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 45;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___MEMBERS = ELEMENT_REFERENCE_OPERATION_COUNT + 46;

	/**
	 * The operation id for the '<em>Nested Classifiers</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___NESTED_CLASSIFIERS = ELEMENT_REFERENCE_OPERATION_COUNT + 47;

	/**
	 * The operation id for the '<em>Properties</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___PROPERTIES = ELEMENT_REFERENCE_OPERATION_COUNT + 48;

	/**
	 * The operation id for the '<em>Association Ends</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___ASSOCIATION_ENDS = ELEMENT_REFERENCE_OPERATION_COUNT + 49;

	/**
	 * The operation id for the '<em>Opposite</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___OPPOSITE = ELEMENT_REFERENCE_OPERATION_COUNT + 50;

	/**
	 * The operation id for the '<em>Signal</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___SIGNAL = ELEMENT_REFERENCE_OPERATION_COUNT + 51;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___PARAMETERS = ELEMENT_REFERENCE_OPERATION_COUNT + 52;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RETURN_PARAMETER = ELEMENT_REFERENCE_OPERATION_COUNT + 53;

	/**
	 * The operation id for the '<em>Specification</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___SPECIFICATION = ELEMENT_REFERENCE_OPERATION_COUNT + 54;

	/**
	 * The operation id for the '<em>Redefined Operations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___REDEFINED_OPERATIONS = ELEMENT_REFERENCE_OPERATION_COUNT + 55;

	/**
	 * The operation id for the '<em>Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___NAMESPACE = ELEMENT_REFERENCE_OPERATION_COUNT + 56;

	/**
	 * The operation id for the '<em>Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___TEMPLATE = ELEMENT_REFERENCE_OPERATION_COUNT + 57;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___TEMPLATE_PARAMETERS = ELEMENT_REFERENCE_OPERATION_COUNT + 58;

	/**
	 * The operation id for the '<em>Parametered Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___PARAMETERED_ELEMENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 59;

	/**
	 * The operation id for the '<em>Is Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_TEMPLATE_BINDING = ELEMENT_REFERENCE_OPERATION_COUNT + 60;

	/**
	 * The operation id for the '<em>Template Actuals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___TEMPLATE_ACTUALS = ELEMENT_REFERENCE_OPERATION_COUNT + 61;

	/**
	 * The operation id for the '<em>Direction</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___DIRECTION = ELEMENT_REFERENCE_OPERATION_COUNT + 62;

	/**
	 * The operation id for the '<em>Association</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___ASSOCIATION = ELEMENT_REFERENCE_OPERATION_COUNT + 63;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___TYPE = ELEMENT_REFERENCE_OPERATION_COUNT + 64;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___LOWER = ELEMENT_REFERENCE_OPERATION_COUNT + 65;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___UPPER = ELEMENT_REFERENCE_OPERATION_COUNT + 66;

	/**
	 * The operation id for the '<em>Is Ordered</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ORDERED = ELEMENT_REFERENCE_OPERATION_COUNT + 67;

	/**
	 * The operation id for the '<em>Is Nonunique</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_NONUNIQUE = ELEMENT_REFERENCE_OPERATION_COUNT + 68;

	/**
	 * The operation id for the '<em>Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___PARENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 69;

	/**
	 * The operation id for the '<em>All Parents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___ALL_PARENTS = ELEMENT_REFERENCE_OPERATION_COUNT + 70;

	/**
	 * The operation id for the '<em>Classifier Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___CLASSIFIER_BEHAVIOR = ELEMENT_REFERENCE_OPERATION_COUNT + 71;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___APPLIED_PROFILES = ELEMENT_REFERENCE_OPERATION_COUNT + 72;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___REFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 73;

	/**
	 * The operation id for the '<em>Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___TEMPLATE_BINDING = ELEMENT_REFERENCE_OPERATION_COUNT + 74;

	/**
	 * The operation id for the '<em>Active Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___ACTIVE_CLASS = ELEMENT_REFERENCE_OPERATION_COUNT + 75;

	/**
	 * The operation id for the '<em>Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___CONTEXT = ELEMENT_REFERENCE_OPERATION_COUNT + 76;

	/**
	 * The operation id for the '<em>Is Active Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___IS_ACTIVE_BEHAVIOR = ELEMENT_REFERENCE_OPERATION_COUNT + 77;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___CONFORMS_TO__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 78;

	/**
	 * The operation id for the '<em>Equals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___EQUALS__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 79;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___COPY = ELEMENT_REFERENCE_OPERATION_COUNT + 80;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___MODEL_SCOPE = ELEMENT_REFERENCE_OPERATION_COUNT + 81;

	/**
	 * The operation id for the '<em>Resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RESOLVE_PATH_NAME__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 82;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RESOLVE_IN_SCOPE__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 83;

	/**
	 * The operation id for the '<em>Resolve Stereotype</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___RESOLVE_STEREOTYPE__STRING = ELEMENT_REFERENCE_OPERATION_COUNT + 84;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___STUB = ELEMENT_REFERENCE_OPERATION_COUNT + 85;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___STUB_FOR__UNITDEFINITION = ELEMENT_REFERENCE_OPERATION_COUNT + 86;

	/**
	 * The operation id for the '<em>Bound Reference To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___BOUND_REFERENCE_TO__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 87;

	/**
	 * The operation id for the '<em>Bound Reference To1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___BOUND_REFERENCE_TO1__ELEMENTREFERENCE = ELEMENT_REFERENCE_OPERATION_COUNT + 88;

	/**
	 * The operation id for the '<em>Bound References To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE___BOUND_REFERENCES_TO__ELIST = ELEMENT_REFERENCE_OPERATION_COUNT + 89;

	/**
	 * The number of operations of the '<em>Bound Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_ELEMENT_REFERENCE_OPERATION_COUNT = ELEMENT_REFERENCE_OPERATION_COUNT + 90;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.DocumentedElementImpl <em>Documented Element</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.DocumentedElementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getDocumentedElement()
	 * @generated
	 */
	int DOCUMENTED_ELEMENT = 7;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Documentation</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT__DOCUMENTATION = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Documented Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The number of operations of the '<em>Documented Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DOCUMENTED_ELEMENT_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT__UPPER = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT__LOWER = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT__TYPE = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Assignable Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___TYPE_CACHED = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___TYPE = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___LOWER = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___UPPER = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_NULL = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Assignable Element</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ExpressionImpl <em>Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getExpression()
	 * @generated
	 */
	int EXPRESSION = 11;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__OWNER = ASSIGNABLE_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__UPPER = ASSIGNABLE_ELEMENT__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__LOWER = ASSIGNABLE_ELEMENT__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__TYPE = ASSIGNABLE_ELEMENT__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__ASSIGNMENT_BEFORE = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION__ASSIGNMENT_AFTER = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_FEATURE_COUNT = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___TO_REFERENCE = ASSIGNABLE_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___OWNER = ASSIGNABLE_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___SYNTAX_ELEMENT_OWNER = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___CURRENT_SCOPE = ASSIGNABLE_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___ENCLOSING_STATEMENT = ASSIGNABLE_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___ENCLOSING_EXPRESSION = ASSIGNABLE_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___UPDATE_ALL__ELIST_ELIST = ASSIGNABLE_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___COMMON_ANCESTOR__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___COMMON_ANCESTORS__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = ASSIGNABLE_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___RESOLVE_IN_LIBRARY__STRING = ASSIGNABLE_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___PRIMITIVE_TYPE__STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___PRIMITIVE_TYPE____STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___BOOLEAN_TYPE = ASSIGNABLE_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___INTEGER_TYPE = ASSIGNABLE_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___STRING_TYPE = ASSIGNABLE_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___UNLIMITED_NATURAL_TYPE = ASSIGNABLE_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___BIT_STRING_TYPE = ASSIGNABLE_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___NATURAL_TYPE = ASSIGNABLE_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___COLLECTION_FUNCTION_ADD = ASSIGNABLE_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___TYPE_CACHED = ASSIGNABLE_ELEMENT___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___TYPE = ASSIGNABLE_ELEMENT___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___LOWER = ASSIGNABLE_ELEMENT___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___UPPER = ASSIGNABLE_ELEMENT___UPPER;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_NULL = ASSIGNABLE_ELEMENT___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___REFERENCE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___NEW_ASSIGNMENTS = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___UPDATE_ASSIGNMENTS = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___RESOLVE__STRING = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___IS_ADD_TARGET__EXPRESSION = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The number of operations of the '<em>Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_OPERATION_COUNT = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceExpansionExpressionImpl <em>Sequence Expansion Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceExpansionExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceExpansionExpression()
	 * @generated
	 */
	int SEQUENCE_EXPANSION_EXPRESSION = 8;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__OPERATION = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Variable</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__VARIABLE = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Variable Source</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__VARIABLE_SOURCE = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Argument</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__ARGUMENT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__PRIMARY = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Select Or Reject</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__IS_SELECT_OR_REJECT = EXPRESSION_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Is Collect Or Iterate</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__IS_COLLECT_OR_ITERATE = EXPRESSION_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Is For All Or Exists Or One</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE = EXPRESSION_FEATURE_COUNT + 7;

	/**
	 * The feature id for the '<em><b>Is Is Unique</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION__IS_IS_UNIQUE = EXPRESSION_FEATURE_COUNT + 8;

	/**
	 * The number of structural features of the '<em>Sequence Expansion Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 9;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments After Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Source Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments After Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Is Unique Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Is Unique Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Is Unique Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Is Unique Expression Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 25;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 26;

	/**
	 * The number of operations of the '<em>Sequence Expansion Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 27;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AssignableElementReferenceImpl <em>Assignable Element Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AssignableElementReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAssignableElementReference()
	 * @generated
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE = 10;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE__OWNER = ASSIGNABLE_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE__UPPER = ASSIGNABLE_ELEMENT__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE__LOWER = ASSIGNABLE_ELEMENT__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE__TYPE = ASSIGNABLE_ELEMENT__TYPE;

	/**
	 * The feature id for the '<em><b>Reference</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE__REFERENCE = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Assignable Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE_FEATURE_COUNT = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___TO_REFERENCE = ASSIGNABLE_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___OWNER = ASSIGNABLE_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___SYNTAX_ELEMENT_OWNER = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___CURRENT_SCOPE = ASSIGNABLE_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___ENCLOSING_STATEMENT = ASSIGNABLE_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___ENCLOSING_EXPRESSION = ASSIGNABLE_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___UPDATE_ALL__ELIST_ELIST = ASSIGNABLE_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___COMMON_ANCESTOR__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___COMMON_ANCESTORS__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST = ASSIGNABLE_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___RESOLVE_IN_LIBRARY__STRING = ASSIGNABLE_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___PRIMITIVE_TYPE__STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___PRIMITIVE_TYPE____STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___BOOLEAN_TYPE = ASSIGNABLE_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___INTEGER_TYPE = ASSIGNABLE_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___STRING_TYPE = ASSIGNABLE_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___UNLIMITED_NATURAL_TYPE = ASSIGNABLE_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___BIT_STRING_TYPE = ASSIGNABLE_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___NATURAL_TYPE = ASSIGNABLE_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___COLLECTION_FUNCTION_ADD = ASSIGNABLE_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___TYPE_CACHED = ASSIGNABLE_ELEMENT___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_NULL = ASSIGNABLE_ELEMENT___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___TYPE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___LOWER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE___UPPER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Assignable Element Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_ELEMENT_REFERENCE_OPERATION_COUNT = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ExpressionReferenceImpl <em>Expression Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ExpressionReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getExpressionReference()
	 * @generated
	 */
	int EXPRESSION_REFERENCE = 12;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Expression Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___LOWER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___UPPER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___IS_ADD_TARGET__EXPRESSION = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___ASSIGNMENTS_BEFORE = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The number of operations of the '<em>Expression Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_REFERENCE_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ExtentOrExpressionImpl <em>Extent Or Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ExtentOrExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getExtentOrExpression()
	 * @generated
	 */
	int EXTENT_OR_EXPRESSION = 13;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__NAME = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Non Name Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION__NON_NAME_EXPRESSION = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Extent Or Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___TYPE = EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___LOWER = EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___UPPER = EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Extent Or Expression Expression Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___EXTENT_OR_EXPRESSION_EXPRESSION_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Extent Or Expression Extent Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___EXTENT_OR_EXPRESSION_EXTENT_TYPE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Extent Or Expression Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION___EXTENT_OR_EXPRESSION_RESOLUTION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Extent Or Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXTENT_OR_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.QualifiedNameImpl <em>Qualified Name</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.QualifiedNameImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getQualifiedName()
	 * @generated
	 */
	int QUALIFIED_NAME = 14;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Is Ambiguous</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__IS_AMBIGUOUS = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Path Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__PATH_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Feature Reference</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__IS_FEATURE_REFERENCE = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Qualification</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__QUALIFICATION = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Disambiguation</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__DISAMBIGUATION = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Name Binding</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__NAME_BINDING = SYNTAX_ELEMENT_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__REFERENT = SYNTAX_ELEMENT_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Unqualified Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__UNQUALIFIED_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 7;

	/**
	 * The feature id for the '<em><b>Template Name</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME__TEMPLATE_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 8;

	/**
	 * The number of structural features of the '<em>Qualified Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 9;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___COPY = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Add Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___ADD_NAME__STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Add Name Bindings</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___ADD_NAME_BINDINGS__ELIST = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Model Referents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___MODEL_REFERENTS = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Qualified Name Unqualified Name Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_UNQUALIFIED_NAME_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Qualified Name Path Name Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_PATH_NAME_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Qualified Name Is Feature Reference Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_IS_FEATURE_REFERENCE_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Qualified Name Qualification Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_QUALIFICATION_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Qualified Name Disambiguation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_DISAMBIGUATION_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Qualified Name Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Qualified Name Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_LOCAL_NAME__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Qualified Name Non Local Unqualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_NON_LOCAL_UNQUALIFIED_NAME__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Qualified Name Qualified Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_QUALIFIED_RESOLUTION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Qualified Name Template Binding</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_TEMPLATE_BINDING__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Qualified Name Template Name Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___QUALIFIED_NAME_TEMPLATE_NAME_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Disambiguation Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___DISAMBIGUATION_CACHED = SYNTAX_ELEMENT_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Disambiguation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___DISAMBIGUATION = SYNTAX_ELEMENT_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___REFERENT_CACHED = SYNTAX_ELEMENT_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME___REFERENT = SYNTAX_ELEMENT_OPERATION_COUNT + 18;

	/**
	 * The number of operations of the '<em>Qualified Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 19;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.FeatureReferenceImpl <em>Feature Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.FeatureReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getFeatureReference()
	 * @generated
	 */
	int FEATURE_REFERENCE = 15;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__REFERENT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Name Binding</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE__NAME_BINDING = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Feature Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___TYPE = EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___LOWER = EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___UPPER = EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Behavioral Feature Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___BEHAVIORAL_FEATURE_REFERENT__INVOCATIONEXPRESSION = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Feature Reference Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___FEATURE_REFERENCE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Feature Reference Target Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___FEATURE_REFERENCE_TARGET_TYPE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___REFERENT_CACHED = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___REFERENT = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Feature Reference referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE___FEATURE_REFERENCE_REFERENT = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Feature Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_REFERENCE_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NameBindingImpl <em>Name Binding</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NameBindingImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNameBinding()
	 * @generated
	 */
	int NAME_BINDING = 16;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Binding</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING__BINDING = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING__NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Name Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>To String</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___TO_STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>To Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___TO_NAME = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Process</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___PROCESS__STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Escape</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___ESCAPE__STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___COPY = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>To Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___TO_QUALIFIED_NAME__SYNTAXELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>To Qualified Name With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING___TO_QUALIFIED_NAME_WITH__NAMEBINDING_SYNTAXELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Name Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_BINDING_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.TemplateBindingImpl <em>Template Binding</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.TemplateBindingImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getTemplateBinding()
	 * @generated
	 */
	int TEMPLATE_BINDING = 17;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The number of structural features of the '<em>Template Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>To String</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___TO_STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___MATCHES__ELEMENTREFERENCE = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___COPY = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Bind To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING___BIND_TO__ELEMENTREFERENCE = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Template Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_BINDING_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NamedTemplateBindingImpl <em>Named Template Binding</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NamedTemplateBindingImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNamedTemplateBinding()
	 * @generated
	 */
	int NAMED_TEMPLATE_BINDING = 18;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING__OWNER = TEMPLATE_BINDING__OWNER;

	/**
	 * The feature id for the '<em><b>Substitution</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING__SUBSTITUTION = TEMPLATE_BINDING_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Named Template Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING_FEATURE_COUNT = TEMPLATE_BINDING_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___TO_REFERENCE = TEMPLATE_BINDING___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___OWNER = TEMPLATE_BINDING___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___SYNTAX_ELEMENT_OWNER = TEMPLATE_BINDING___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___CURRENT_SCOPE = TEMPLATE_BINDING___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___SYNTAX_ELEMENT_CURRENT_SCOPE = TEMPLATE_BINDING___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___ENCLOSING_STATEMENT = TEMPLATE_BINDING___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___ENCLOSING_EXPRESSION = TEMPLATE_BINDING___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___ASSIGNMENTS_BEFORE = TEMPLATE_BINDING___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = TEMPLATE_BINDING___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___UPDATE_ALL__ELIST_ELIST = TEMPLATE_BINDING___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___COMMON_ANCESTOR__ELIST = TEMPLATE_BINDING___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___COMMON_ANCESTORS__ELIST = TEMPLATE_BINDING___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___REMOVE_DUPLICATE_ELEMENTS__ELIST = TEMPLATE_BINDING___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___RESOLVE_IN_LIBRARY__STRING = TEMPLATE_BINDING___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___PRIMITIVE_TYPE__STRING = TEMPLATE_BINDING___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___PRIMITIVE_TYPE____STRING = TEMPLATE_BINDING___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___BOOLEAN_TYPE = TEMPLATE_BINDING___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___INTEGER_TYPE = TEMPLATE_BINDING___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_INTEGER_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___STRING_TYPE = TEMPLATE_BINDING___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_STRING_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___UNLIMITED_NATURAL_TYPE = TEMPLATE_BINDING___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___BIT_STRING_TYPE = TEMPLATE_BINDING___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___NATURAL_TYPE = TEMPLATE_BINDING___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_NATURAL_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_NUMERIC_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___COLLECTION_FUNCTION_ADD = TEMPLATE_BINDING___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_COLLECTION_CLASS__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>To String</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___TO_STRING = TEMPLATE_BINDING_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___MATCHES__ELEMENTREFERENCE = TEMPLATE_BINDING_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Matches Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___MATCHES_PARAMETER__ELEMENTREFERENCE = TEMPLATE_BINDING_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Bind To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___BIND_TO__ELEMENTREFERENCE = TEMPLATE_BINDING_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING___COPY = TEMPLATE_BINDING_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Named Template Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TEMPLATE_BINDING_OPERATION_COUNT = TEMPLATE_BINDING_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.TemplateParameterSubstitutionImpl <em>Template Parameter Substitution</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.TemplateParameterSubstitutionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getTemplateParameterSubstitution()
	 * @generated
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION = 19;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Parameter Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION__PARAMETER_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Argument Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION__ARGUMENT_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION__REFERENT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Template Parameter Substitution</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Actual Parameter Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___ACTUAL_PARAMETER_NAME = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>To String</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___TO_STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION___COPY = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Template Parameter Substitution</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TEMPLATE_PARAMETER_SUBSTITUTION_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.UnaryExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getUnaryExpression()
	 * @generated
	 */
	int UNARY_EXPRESSION = 21;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION__OPERAND = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___TYPE = EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___LOWER = EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___UPPER = EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Unary Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNARY_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NumericUnaryExpressionImpl <em>Numeric Unary Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NumericUnaryExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNumericUnaryExpression()
	 * @generated
	 */
	int NUMERIC_UNARY_EXPRESSION = 20;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__OWNER = UNARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__UPPER = UNARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__LOWER = UNARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__TYPE = UNARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__ASSIGNMENT_BEFORE = UNARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__ASSIGNMENT_AFTER = UNARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__OPERATOR = UNARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION__OPERAND = UNARY_EXPRESSION__OPERAND;

	/**
	 * The number of structural features of the '<em>Numeric Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION_FEATURE_COUNT = UNARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___TO_REFERENCE = UNARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___OWNER = UNARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER = UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___CURRENT_SCOPE = UNARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___ENCLOSING_STATEMENT = UNARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___ENCLOSING_EXPRESSION = UNARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST = UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST = UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST = UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___BOOLEAN_TYPE = UNARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___INTEGER_TYPE = UNARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___STRING_TYPE = UNARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE = UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___BIT_STRING_TYPE = UNARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___NATURAL_TYPE = UNARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD = UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___TYPE_CACHED = UNARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_NULL = UNARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___REFERENCE = UNARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___NEW_ASSIGNMENTS = UNARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___RESOLVE__STRING = UNARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION = UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Unary Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___TYPE = UNARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___LOWER = UNARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___UPPER = UNARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Numeric Unary Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___NUMERIC_UNARY_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Numeric Unary Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___NUMERIC_UNARY_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Numeric Unary Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___NUMERIC_UNARY_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Numeric Unary Expression Operand</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION___NUMERIC_UNARY_EXPRESSION_OPERAND__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Numeric Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NUMERIC_UNARY_EXPRESSION_OPERATION_COUNT = UNARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ForAllOrExistsOrOneExpressionImpl <em>For All Or Exists Or One Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ForAllOrExistsOrOneExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getForAllOrExistsOrOneExpression()
	 * @generated
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION = 22;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__OWNER = SEQUENCE_EXPANSION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__UPPER = SEQUENCE_EXPANSION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__LOWER = SEQUENCE_EXPANSION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__TYPE = SEQUENCE_EXPANSION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__ASSIGNMENT_BEFORE = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__ASSIGNMENT_AFTER = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__OPERATION = SEQUENCE_EXPANSION_EXPRESSION__OPERATION;

	/**
	 * The feature id for the '<em><b>Variable</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__VARIABLE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE;

	/**
	 * The feature id for the '<em><b>Variable Source</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__VARIABLE_SOURCE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE_SOURCE;

	/**
	 * The feature id for the '<em><b>Argument</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__ARGUMENT = SEQUENCE_EXPANSION_EXPRESSION__ARGUMENT;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__PRIMARY = SEQUENCE_EXPANSION_EXPRESSION__PRIMARY;

	/**
	 * The feature id for the '<em><b>Is Select Or Reject</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__IS_SELECT_OR_REJECT = SEQUENCE_EXPANSION_EXPRESSION__IS_SELECT_OR_REJECT;

	/**
	 * The feature id for the '<em><b>Is Collect Or Iterate</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__IS_COLLECT_OR_ITERATE = SEQUENCE_EXPANSION_EXPRESSION__IS_COLLECT_OR_ITERATE;

	/**
	 * The feature id for the '<em><b>Is For All Or Exists Or One</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE = SEQUENCE_EXPANSION_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE;

	/**
	 * The feature id for the '<em><b>Is Is Unique</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION__IS_IS_UNIQUE = SEQUENCE_EXPANSION_EXPRESSION__IS_IS_UNIQUE;

	/**
	 * The number of structural features of the '<em>For All Or Exists Or One Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_FEATURE_COUNT = SEQUENCE_EXPANSION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___TO_REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___OWNER = SEQUENCE_EXPANSION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SYNTAX_ELEMENT_OWNER = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___ENCLOSING_STATEMENT = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___ENCLOSING_EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___UPDATE_ALL__ELIST_ELIST = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___COMMON_ANCESTOR__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___COMMON_ANCESTORS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___PRIMITIVE_TYPE__STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___PRIMITIVE_TYPE____STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___BOOLEAN_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___INTEGER_TYPE = SEQUENCE_EXPANSION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___UNLIMITED_NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___BIT_STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___COLLECTION_FUNCTION_ADD = SEQUENCE_EXPANSION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___TYPE_CACHED = SEQUENCE_EXPANSION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_NULL = SEQUENCE_EXPANSION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___NEW_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___RESOLVE__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_ADD_TARGET__EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___TYPE = SEQUENCE_EXPANSION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___LOWER = SEQUENCE_EXPANSION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___UPPER = SEQUENCE_EXPANSION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Source Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments After Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>For All Or Exists Or One Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_OPERATION_COUNT = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.IsolationExpressionImpl <em>Isolation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.IsolationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getIsolationExpression()
	 * @generated
	 */
	int ISOLATION_EXPRESSION = 23;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__OWNER = UNARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__UPPER = UNARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__LOWER = UNARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__TYPE = UNARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__ASSIGNMENT_BEFORE = UNARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__ASSIGNMENT_AFTER = UNARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__OPERATOR = UNARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION__OPERAND = UNARY_EXPRESSION__OPERAND;

	/**
	 * The number of structural features of the '<em>Isolation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION_FEATURE_COUNT = UNARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___TO_REFERENCE = UNARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___OWNER = UNARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___CURRENT_SCOPE = UNARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___ENCLOSING_STATEMENT = UNARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___ENCLOSING_EXPRESSION = UNARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___COMMON_ANCESTOR__ELIST = UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___COMMON_ANCESTORS__ELIST = UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___PRIMITIVE_TYPE__STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___PRIMITIVE_TYPE____STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___BOOLEAN_TYPE = UNARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___INTEGER_TYPE = UNARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___STRING_TYPE = UNARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___BIT_STRING_TYPE = UNARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___NATURAL_TYPE = UNARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___COLLECTION_FUNCTION_ADD = UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___TYPE_CACHED = UNARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_NULL = UNARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___REFERENCE = UNARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___NEW_ASSIGNMENTS = UNARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___RESOLVE__STRING = UNARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Unary Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___TYPE = UNARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___LOWER = UNARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___UPPER = UNARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Isolation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___ISOLATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Isolation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___ISOLATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Isolation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION___ISOLATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The number of operations of the '<em>Isolation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ISOLATION_EXPRESSION_OPERATION_COUNT = UNARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BinaryExpressionImpl <em>Binary Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BinaryExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBinaryExpression()
	 * @generated
	 */
	int BINARY_EXPRESSION = 24;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__OPERAND1 = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__OPERAND2 = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Binary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___TYPE = EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___LOWER = EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___UPPER = EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Validate Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___VALIDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>No Null Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___NO_NULL_ARGUMENTS = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Binary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BINARY_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BooleanUnaryExpressionImpl <em>Boolean Unary Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BooleanUnaryExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBooleanUnaryExpression()
	 * @generated
	 */
	int BOOLEAN_UNARY_EXPRESSION = 25;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__OWNER = UNARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__UPPER = UNARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__LOWER = UNARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__TYPE = UNARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__ASSIGNMENT_BEFORE = UNARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__ASSIGNMENT_AFTER = UNARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__OPERATOR = UNARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION__OPERAND = UNARY_EXPRESSION__OPERAND;

	/**
	 * The number of structural features of the '<em>Boolean Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION_FEATURE_COUNT = UNARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___TO_REFERENCE = UNARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___OWNER = UNARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER = UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___CURRENT_SCOPE = UNARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___ENCLOSING_STATEMENT = UNARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___ENCLOSING_EXPRESSION = UNARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST = UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST = UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST = UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___BOOLEAN_TYPE = UNARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___INTEGER_TYPE = UNARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___STRING_TYPE = UNARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE = UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___BIT_STRING_TYPE = UNARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___NATURAL_TYPE = UNARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD = UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___TYPE_CACHED = UNARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_NULL = UNARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___REFERENCE = UNARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___NEW_ASSIGNMENTS = UNARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___RESOLVE__STRING = UNARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION = UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Unary Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___TYPE = UNARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___LOWER = UNARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___UPPER = UNARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Boolean Unary Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___BOOLEAN_UNARY_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Boolean Unary Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___BOOLEAN_UNARY_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Boolean Unary Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___BOOLEAN_UNARY_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Boolean Unary Expression Operand</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION___BOOLEAN_UNARY_EXPRESSION_OPERAND__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Boolean Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_UNARY_EXPRESSION_OPERATION_COUNT = UNARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.CastExpressionImpl <em>Cast Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.CastExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getCastExpression()
	 * @generated
	 */
	int CAST_EXPRESSION = 26;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__OPERAND = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__TYPE_NAME = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Any</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION__IS_ANY = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Cast Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Cast Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___CAST_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Cast Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___CAST_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Cast Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___CAST_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Cast Expression Type Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___CAST_EXPRESSION_TYPE_RESOLUTION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Cast Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___CAST_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The number of operations of the '<em>Cast Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CAST_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.TupleImpl <em>Tuple</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.TupleImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getTuple()
	 * @generated
	 */
	int TUPLE = 28;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Input</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE__INPUT = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Invocation</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE__INVOCATION = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Output</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE__OUTPUT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Tuple</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Size</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___SIZE = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Input Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___INPUT_CACHED = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Input</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___INPUT = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Input For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___INPUT_FOR__ELIST = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Output Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___OUTPUT_CACHED = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Output</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___OUTPUT = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Output For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___OUTPUT_FOR__ELIST = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Output For Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___OUTPUT_FOR_EXPRESSION__EXPRESSION = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___ASSIGNMENTS_AFTER = SYNTAX_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___NEW_ASSIGNMENTS = SYNTAX_ELEMENT_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Update For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___UPDATE_FOR__ELIST_OUTPUTNAMEDEXPRESSION = SYNTAX_ELEMENT_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Tuple Input Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___TUPLE_INPUT_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Tuple Output Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___TUPLE_OUTPUT_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Tuple Null Inputs</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___TUPLE_NULL_INPUTS__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Tuple Outputs</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___TUPLE_OUTPUTS__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Tuple Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___TUPLE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Tuple Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE___TUPLE_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 17;

	/**
	 * The number of operations of the '<em>Tuple</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TUPLE_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 18;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.PositionalTupleImpl <em>Positional Tuple</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.PositionalTupleImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getPositionalTuple()
	 * @generated
	 */
	int POSITIONAL_TUPLE = 27;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE__OWNER = TUPLE__OWNER;

	/**
	 * The feature id for the '<em><b>Input</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE__INPUT = TUPLE__INPUT;

	/**
	 * The feature id for the '<em><b>Invocation</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE__INVOCATION = TUPLE__INVOCATION;

	/**
	 * The feature id for the '<em><b>Output</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE__OUTPUT = TUPLE__OUTPUT;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE__EXPRESSION = TUPLE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Positional Tuple</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE_FEATURE_COUNT = TUPLE_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___TO_REFERENCE = TUPLE___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___OWNER = TUPLE___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___SYNTAX_ELEMENT_OWNER = TUPLE___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___CURRENT_SCOPE = TUPLE___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___SYNTAX_ELEMENT_CURRENT_SCOPE = TUPLE___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___ENCLOSING_STATEMENT = TUPLE___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___ENCLOSING_EXPRESSION = TUPLE___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___ASSIGNMENTS_BEFORE = TUPLE___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___UPDATE_ALL__ELIST_ELIST = TUPLE___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___COMMON_ANCESTOR__ELIST = TUPLE___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___COMMON_ANCESTORS__ELIST = TUPLE___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___REMOVE_DUPLICATE_ELEMENTS__ELIST = TUPLE___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___RESOLVE_IN_LIBRARY__STRING = TUPLE___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___PRIMITIVE_TYPE__STRING = TUPLE___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___PRIMITIVE_TYPE____STRING = TUPLE___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___BOOLEAN_TYPE = TUPLE___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = TUPLE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___INTEGER_TYPE = TUPLE___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_INTEGER_TYPE__ELEMENTREFERENCE = TUPLE___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___STRING_TYPE = TUPLE___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_STRING_TYPE__ELEMENTREFERENCE = TUPLE___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___UNLIMITED_NATURAL_TYPE = TUPLE___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = TUPLE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___BIT_STRING_TYPE = TUPLE___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = TUPLE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___NATURAL_TYPE = TUPLE___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_NATURAL_TYPE__ELEMENTREFERENCE = TUPLE___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = TUPLE___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___COLLECTION_FUNCTION_ADD = TUPLE___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = TUPLE___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = TUPLE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = TUPLE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Input Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___INPUT_CACHED = TUPLE___INPUT_CACHED;

	/**
	 * The operation id for the '<em>Input</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___INPUT = TUPLE___INPUT;

	/**
	 * The operation id for the '<em>Output Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___OUTPUT_CACHED = TUPLE___OUTPUT_CACHED;

	/**
	 * The operation id for the '<em>Output</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___OUTPUT = TUPLE___OUTPUT;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = TUPLE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___ASSIGNMENTS_AFTER = TUPLE___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___NEW_ASSIGNMENTS = TUPLE___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___UPDATE_FOR__ELIST_OUTPUTNAMEDEXPRESSION = TUPLE___UPDATE_FOR__ELIST_OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Tuple Input Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___TUPLE_INPUT_DERIVATION__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_INPUT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Output Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___TUPLE_OUTPUT_DERIVATION__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_OUTPUT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Null Inputs</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___TUPLE_NULL_INPUTS__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_NULL_INPUTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Outputs</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___TUPLE_OUTPUTS__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_OUTPUTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___TUPLE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___TUPLE_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Size</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___SIZE = TUPLE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Input For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___INPUT_FOR__ELIST = TUPLE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Output For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___OUTPUT_FOR__ELIST = TUPLE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Output For Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___OUTPUT_FOR_EXPRESSION__EXPRESSION = TUPLE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Positional Tuple Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE___POSITIONAL_TUPLE_ARGUMENTS__DIAGNOSTICCHAIN_MAP = TUPLE_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Positional Tuple</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TUPLE_OPERATION_COUNT = TUPLE_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NamedExpressionImpl <em>Named Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NamedExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNamedExpression()
	 * @generated
	 */
	int NAMED_EXPRESSION = 29;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION__NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION__EXPRESSION = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Index</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION__INDEX = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Named Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION___ACTUAL_NAME = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>Named Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_EXPRESSION_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.InputNamedExpressionImpl <em>Input Named Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.InputNamedExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getInputNamedExpression()
	 * @generated
	 */
	int INPUT_NAMED_EXPRESSION = 30;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION__NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION__EXPRESSION = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Index</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION__INDEX = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Collection Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION__IS_COLLECTION_CONVERSION = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION__IS_BIT_STRING_CONVERSION = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The number of structural features of the '<em>Input Named Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 5;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Tuple</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___TUPLE = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Named Expression Is Collection Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___NAMED_EXPRESSION_IS_COLLECTION_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Named Expression Is Bit String Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION___NAMED_EXPRESSION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Input Named Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INPUT_NAMED_EXPRESSION_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.InvocationExpressionImpl <em>Invocation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.InvocationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getInvocationExpression()
	 * @generated
	 */
	int INVOCATION_EXPRESSION = 31;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Is Behavior</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__IS_BEHAVIOR = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Association End</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__IS_ASSOCIATION_END = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__FEATURE = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__IS_OPERATION = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__IS_DESTRUCTOR = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Implicit</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__IS_IMPLICIT = EXPRESSION_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__REFERENT = EXPRESSION_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Parameter</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__PARAMETER = EXPRESSION_FEATURE_COUNT + 7;

	/**
	 * The feature id for the '<em><b>Is Signal</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__IS_SIGNAL = EXPRESSION_FEATURE_COUNT + 8;

	/**
	 * The feature id for the '<em><b>Tuple</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION__TUPLE = EXPRESSION_FEATURE_COUNT + 9;

	/**
	 * The number of structural features of the '<em>Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 10;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___FEATURE = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___REFERENT = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___REFERENT_CACHED = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Invocation Expression type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Invocation Expression upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Invocation Expression lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Parameter Named</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Parameter Count</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PARAMETER_COUNT = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Parameter Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION = EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Parameter Is Assignable To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION = EXPRESSION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID = EXPRESSION_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION = EXPRESSION_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION = EXPRESSION_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Effective Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION = EXPRESSION_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PARAMETER_ELEMENTS = EXPRESSION_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS = EXPRESSION_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Parameter From Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE = EXPRESSION_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING = EXPRESSION_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 25;

	/**
	 * The operation id for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 27;

	/**
	 * The operation id for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 28;

	/**
	 * The operation id for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 29;

	/**
	 * The operation id for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 30;

	/**
	 * The operation id for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 31;

	/**
	 * The operation id for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 32;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 33;

	/**
	 * The operation id for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 34;

	/**
	 * The number of operations of the '<em>Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INVOCATION_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 35;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.OutputNamedExpressionImpl <em>Output Named Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.OutputNamedExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getOutputNamedExpression()
	 * @generated
	 */
	int OUTPUT_NAMED_EXPRESSION = 32;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION__OWNER = INPUT_NAMED_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION__NAME = INPUT_NAMED_EXPRESSION__NAME;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION__EXPRESSION = INPUT_NAMED_EXPRESSION__EXPRESSION;

	/**
	 * The feature id for the '<em><b>Index</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION__INDEX = INPUT_NAMED_EXPRESSION__INDEX;

	/**
	 * The feature id for the '<em><b>Is Collection Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION__IS_COLLECTION_CONVERSION = INPUT_NAMED_EXPRESSION__IS_COLLECTION_CONVERSION;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION__IS_BIT_STRING_CONVERSION = INPUT_NAMED_EXPRESSION__IS_BIT_STRING_CONVERSION;

	/**
	 * The feature id for the '<em><b>Left Hand Side</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION__LEFT_HAND_SIDE = INPUT_NAMED_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Output Named Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION_FEATURE_COUNT = INPUT_NAMED_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___TO_REFERENCE = INPUT_NAMED_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___OWNER = INPUT_NAMED_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_OWNER = INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___CURRENT_SCOPE = INPUT_NAMED_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___ENCLOSING_STATEMENT = INPUT_NAMED_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___ENCLOSING_EXPRESSION = INPUT_NAMED_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___ASSIGNMENTS_BEFORE = INPUT_NAMED_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = INPUT_NAMED_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = INPUT_NAMED_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___UPDATE_ALL__ELIST_ELIST = INPUT_NAMED_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___COMMON_ANCESTOR__ELIST = INPUT_NAMED_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___COMMON_ANCESTORS__ELIST = INPUT_NAMED_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = INPUT_NAMED_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = INPUT_NAMED_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___PRIMITIVE_TYPE__STRING = INPUT_NAMED_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___PRIMITIVE_TYPE____STRING = INPUT_NAMED_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___BOOLEAN_TYPE = INPUT_NAMED_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___INTEGER_TYPE = INPUT_NAMED_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___STRING_TYPE = INPUT_NAMED_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___UNLIMITED_NATURAL_TYPE = INPUT_NAMED_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___BIT_STRING_TYPE = INPUT_NAMED_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___NATURAL_TYPE = INPUT_NAMED_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___COLLECTION_FUNCTION_ADD = INPUT_NAMED_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = INPUT_NAMED_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Tuple</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___TUPLE = INPUT_NAMED_EXPRESSION___TUPLE;

	/**
	 * The operation id for the '<em>Named Expression Is Collection Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___NAMED_EXPRESSION_IS_COLLECTION_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = INPUT_NAMED_EXPRESSION___NAMED_EXPRESSION_IS_COLLECTION_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Named Expression Is Bit String Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___NAMED_EXPRESSION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = INPUT_NAMED_EXPRESSION___NAMED_EXPRESSION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Output Named Expression Left Hand Side Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___OUTPUT_NAMED_EXPRESSION_LEFT_HAND_SIDE_DERIVATION__DIAGNOSTICCHAIN_MAP = INPUT_NAMED_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Output Named Expression Form</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___OUTPUT_NAMED_EXPRESSION_FORM__DIAGNOSTICCHAIN_MAP = INPUT_NAMED_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Has Legal Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION___HAS_LEGAL_EXPRESSION = INPUT_NAMED_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Output Named Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OUTPUT_NAMED_EXPRESSION_OPERATION_COUNT = INPUT_NAMED_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.LeftHandSideImpl <em>Left Hand Side</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.LeftHandSideImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getLeftHandSide()
	 * @generated
	 */
	int LEFT_HAND_SIDE = 33;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE__OWNER = ASSIGNABLE_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE__UPPER = ASSIGNABLE_ELEMENT__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE__LOWER = ASSIGNABLE_ELEMENT__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE__TYPE = ASSIGNABLE_ELEMENT__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE__ASSIGNMENT_BEFORE = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE__ASSIGNMENT_AFTER = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE__REFERENT = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE_FEATURE_COUNT = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___TO_REFERENCE = ASSIGNABLE_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___OWNER = ASSIGNABLE_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___SYNTAX_ELEMENT_OWNER = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___CURRENT_SCOPE = ASSIGNABLE_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___SYNTAX_ELEMENT_CURRENT_SCOPE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___ENCLOSING_STATEMENT = ASSIGNABLE_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___ENCLOSING_EXPRESSION = ASSIGNABLE_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___UPDATE_ALL__ELIST_ELIST = ASSIGNABLE_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___COMMON_ANCESTOR__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___COMMON_ANCESTORS__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___REMOVE_DUPLICATE_ELEMENTS__ELIST = ASSIGNABLE_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___RESOLVE_IN_LIBRARY__STRING = ASSIGNABLE_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___PRIMITIVE_TYPE__STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___PRIMITIVE_TYPE____STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___BOOLEAN_TYPE = ASSIGNABLE_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___INTEGER_TYPE = ASSIGNABLE_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_INTEGER_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___STRING_TYPE = ASSIGNABLE_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___UNLIMITED_NATURAL_TYPE = ASSIGNABLE_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___BIT_STRING_TYPE = ASSIGNABLE_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___NATURAL_TYPE = ASSIGNABLE_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___COLLECTION_FUNCTION_ADD = ASSIGNABLE_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___TYPE_CACHED = ASSIGNABLE_ELEMENT___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_NULL = ASSIGNABLE_ELEMENT___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___ASSIGNMENTS_AFTER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___TYPE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Left Hand Side type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___LEFT_HAND_SIDE_TYPE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___UPPER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Left Hand Side upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___LEFT_HAND_SIDE_UPPER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___LOWER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Left Hand Side lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___LEFT_HAND_SIDE_LOWER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___REFERENT = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Assigned Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___ASSIGNED_NAME = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___LOCAL_NAME = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___FEATURE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___EXPRESSION = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Is Data Value Update</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___IS_DATA_VALUE_UPDATE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Left Hand Side Index Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___LEFT_HAND_SIDE_INDEX_EXPRESSION__DIAGNOSTICCHAIN_MAP = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Index</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE___INDEX = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 15;

	/**
	 * The number of operations of the '<em>Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LEFT_HAND_SIDE_OPERATION_COUNT = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 16;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceAccessExpressionImpl <em>Sequence Access Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceAccessExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceAccessExpression()
	 * @generated
	 */
	int SEQUENCE_ACCESS_EXPRESSION = 34;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__PRIMARY = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Index</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION__INDEX = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Sequence Access Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Sequence Access Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SEQUENCE_ACCESS_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Sequence Access Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SEQUENCE_ACCESS_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Sequence Access Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SEQUENCE_ACCESS_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Sequence Access Expression Index Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SEQUENCE_ACCESS_EXPRESSION_INDEX_TYPE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Sequence Access Expression Index Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION___SEQUENCE_ACCESS_EXPRESSION_INDEX_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The number of operations of the '<em>Sequence Access Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ACCESS_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.LiteralExpressionImpl <em>Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.LiteralExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getLiteralExpression()
	 * @generated
	 */
	int LITERAL_EXPRESSION = 36;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The number of structural features of the '<em>Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___TYPE = EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Literal Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Literal Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LITERAL_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.StringLiteralExpressionImpl <em>String Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.StringLiteralExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getStringLiteralExpression()
	 * @generated
	 */
	int STRING_LITERAL_EXPRESSION = 35;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION__OWNER = LITERAL_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION__UPPER = LITERAL_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION__LOWER = LITERAL_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION__TYPE = LITERAL_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION__ASSIGNMENT_BEFORE = LITERAL_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION__ASSIGNMENT_AFTER = LITERAL_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Image</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION__IMAGE = LITERAL_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>String Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION_FEATURE_COUNT = LITERAL_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___TO_REFERENCE = LITERAL_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___OWNER = LITERAL_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___CURRENT_SCOPE = LITERAL_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___ENCLOSING_STATEMENT = LITERAL_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___ENCLOSING_EXPRESSION = LITERAL_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___BOOLEAN_TYPE = LITERAL_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___INTEGER_TYPE = LITERAL_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___STRING_TYPE = LITERAL_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___BIT_STRING_TYPE = LITERAL_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___NATURAL_TYPE = LITERAL_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD = LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___TYPE_CACHED = LITERAL_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_NULL = LITERAL_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___REFERENCE = LITERAL_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___NEW_ASSIGNMENTS = LITERAL_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___RESOLVE__STRING = LITERAL_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___UPPER = LITERAL_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___LOWER = LITERAL_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Literal Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Literal Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___TYPE = LITERAL_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>String Literal Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION___STRING_LITERAL_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>String Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STRING_LITERAL_EXPRESSION_OPERATION_COUNT = LITERAL_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceOperationExpressionImpl <em>Sequence Operation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceOperationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceOperationExpression()
	 * @generated
	 */
	int SEQUENCE_OPERATION_EXPRESSION = 37;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__OWNER = INVOCATION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__UPPER = INVOCATION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__LOWER = INVOCATION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__TYPE = INVOCATION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__ASSIGNMENT_BEFORE = INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__ASSIGNMENT_AFTER = INVOCATION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Is Behavior</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_BEHAVIOR = INVOCATION_EXPRESSION__IS_BEHAVIOR;

	/**
	 * The feature id for the '<em><b>Is Association End</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_ASSOCIATION_END = INVOCATION_EXPRESSION__IS_ASSOCIATION_END;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__FEATURE = INVOCATION_EXPRESSION__FEATURE;

	/**
	 * The feature id for the '<em><b>Is Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_OPERATION = INVOCATION_EXPRESSION__IS_OPERATION;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_DESTRUCTOR = INVOCATION_EXPRESSION__IS_DESTRUCTOR;

	/**
	 * The feature id for the '<em><b>Is Implicit</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_IMPLICIT = INVOCATION_EXPRESSION__IS_IMPLICIT;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__REFERENT = INVOCATION_EXPRESSION__REFERENT;

	/**
	 * The feature id for the '<em><b>Parameter</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__PARAMETER = INVOCATION_EXPRESSION__PARAMETER;

	/**
	 * The feature id for the '<em><b>Is Signal</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_SIGNAL = INVOCATION_EXPRESSION__IS_SIGNAL;

	/**
	 * The feature id for the '<em><b>Tuple</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__TUPLE = INVOCATION_EXPRESSION__TUPLE;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__PRIMARY = INVOCATION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Operation</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__OPERATION = INVOCATION_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Collection Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_COLLECTION_CONVERSION = INVOCATION_EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__IS_BIT_STRING_CONVERSION = INVOCATION_EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Left Hand Side</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION__LEFT_HAND_SIDE = INVOCATION_EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The number of structural features of the '<em>Sequence Operation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION_FEATURE_COUNT = INVOCATION_EXPRESSION_FEATURE_COUNT + 5;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___TO_REFERENCE = INVOCATION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___OWNER = INVOCATION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___CURRENT_SCOPE = INVOCATION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___ENCLOSING_STATEMENT = INVOCATION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___ENCLOSING_EXPRESSION = INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___COMMON_ANCESTOR__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___COMMON_ANCESTORS__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PRIMITIVE_TYPE__STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PRIMITIVE_TYPE____STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___BOOLEAN_TYPE = INVOCATION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INTEGER_TYPE = INVOCATION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___STRING_TYPE = INVOCATION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___BIT_STRING_TYPE = INVOCATION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___NATURAL_TYPE = INVOCATION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___COLLECTION_FUNCTION_ADD = INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___TYPE_CACHED = INVOCATION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_NULL = INVOCATION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___REFERENCE = INVOCATION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___NEW_ASSIGNMENTS = INVOCATION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___RESOLVE__STRING = INVOCATION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___REFERENT_CACHED = INVOCATION_EXPRESSION___REFERENT_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___TYPE = INVOCATION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Invocation Expression type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___UPPER = INVOCATION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Invocation Expression upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___LOWER = INVOCATION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Invocation Expression lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER;

	/**
	 * The operation id for the '<em>Parameter Named</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PARAMETER_NAMED__STRING = INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING;

	/**
	 * The operation id for the '<em>Parameter Count</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PARAMETER_COUNT = INVOCATION_EXPRESSION___PARAMETER_COUNT;

	/**
	 * The operation id for the '<em>Parameter Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Is Assignable To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID = INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Effective Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Parameter From Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING;

	/**
	 * The operation id for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___FEATURE = INVOCATION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___REFERENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = INVOCATION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>First Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___FIRST_PARAMETER = INVOCATION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>First Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___FIRST_ARGUMENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Operation Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_OPERATION_REFERENT__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Target Compatibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_TARGET_COMPATIBILITY__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Argument Compatibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_ARGUMENT_COMPATIBILITY__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Is Collection Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_IS_COLLECTION_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Is Bit String Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Sequence Operation Expression Left Hand Side Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___SEQUENCE_OPERATION_EXPRESSION_LEFT_HAND_SIDE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION___PARAMETER_ELEMENTS = INVOCATION_EXPRESSION_OPERATION_COUNT + 16;

	/**
	 * The number of operations of the '<em>Sequence Operation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_OPERATION_EXPRESSION_OPERATION_COUNT = INVOCATION_EXPRESSION_OPERATION_COUNT + 17;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SelectOrRejectExpressionImpl <em>Select Or Reject Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SelectOrRejectExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSelectOrRejectExpression()
	 * @generated
	 */
	int SELECT_OR_REJECT_EXPRESSION = 38;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__OWNER = SEQUENCE_EXPANSION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__UPPER = SEQUENCE_EXPANSION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__LOWER = SEQUENCE_EXPANSION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__TYPE = SEQUENCE_EXPANSION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__ASSIGNMENT_BEFORE = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__ASSIGNMENT_AFTER = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__OPERATION = SEQUENCE_EXPANSION_EXPRESSION__OPERATION;

	/**
	 * The feature id for the '<em><b>Variable</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__VARIABLE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE;

	/**
	 * The feature id for the '<em><b>Variable Source</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__VARIABLE_SOURCE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE_SOURCE;

	/**
	 * The feature id for the '<em><b>Argument</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__ARGUMENT = SEQUENCE_EXPANSION_EXPRESSION__ARGUMENT;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__PRIMARY = SEQUENCE_EXPANSION_EXPRESSION__PRIMARY;

	/**
	 * The feature id for the '<em><b>Is Select Or Reject</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__IS_SELECT_OR_REJECT = SEQUENCE_EXPANSION_EXPRESSION__IS_SELECT_OR_REJECT;

	/**
	 * The feature id for the '<em><b>Is Collect Or Iterate</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__IS_COLLECT_OR_ITERATE = SEQUENCE_EXPANSION_EXPRESSION__IS_COLLECT_OR_ITERATE;

	/**
	 * The feature id for the '<em><b>Is For All Or Exists Or One</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE = SEQUENCE_EXPANSION_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE;

	/**
	 * The feature id for the '<em><b>Is Is Unique</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION__IS_IS_UNIQUE = SEQUENCE_EXPANSION_EXPRESSION__IS_IS_UNIQUE;

	/**
	 * The number of structural features of the '<em>Select Or Reject Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION_FEATURE_COUNT = SEQUENCE_EXPANSION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___TO_REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___OWNER = SEQUENCE_EXPANSION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SYNTAX_ELEMENT_OWNER = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___ENCLOSING_STATEMENT = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___ENCLOSING_EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___UPDATE_ALL__ELIST_ELIST = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___COMMON_ANCESTOR__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___COMMON_ANCESTORS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___PRIMITIVE_TYPE__STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___PRIMITIVE_TYPE____STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___BOOLEAN_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___INTEGER_TYPE = SEQUENCE_EXPANSION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___UNLIMITED_NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___BIT_STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___COLLECTION_FUNCTION_ADD = SEQUENCE_EXPANSION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___TYPE_CACHED = SEQUENCE_EXPANSION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_NULL = SEQUENCE_EXPANSION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___NEW_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___RESOLVE__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_ADD_TARGET__EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___TYPE = SEQUENCE_EXPANSION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___LOWER = SEQUENCE_EXPANSION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___UPPER = SEQUENCE_EXPANSION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Source Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments After Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Select Or Reject Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SELECT_OR_REJECT_EXPRESSION_OPERATION_COUNT = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ClassExtentExpressionImpl <em>Class Extent Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ClassExtentExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getClassExtentExpression()
	 * @generated
	 */
	int CLASS_EXTENT_EXPRESSION = 39;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Class Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION__CLASS_NAME = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Class Extent Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Class Extent Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___CLASS_EXTENT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Class Extent Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___CLASS_EXTENT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Class Extent Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___CLASS_EXTENT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Class Extent Expression Extent Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___CLASS_EXTENT_EXPRESSION_EXTENT_TYPE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Validate Class Extent Expression Extent Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION___VALIDATE_CLASS_EXTENT_EXPRESSION_EXTENT_TYPE = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Class Extent Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_EXTENT_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.PositionalTemplateBindingImpl <em>Positional Template Binding</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.PositionalTemplateBindingImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getPositionalTemplateBinding()
	 * @generated
	 */
	int POSITIONAL_TEMPLATE_BINDING = 40;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING__OWNER = TEMPLATE_BINDING__OWNER;

	/**
	 * The feature id for the '<em><b>Argument Name</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING__ARGUMENT_NAME = TEMPLATE_BINDING_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Positional Template Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING_FEATURE_COUNT = TEMPLATE_BINDING_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___TO_REFERENCE = TEMPLATE_BINDING___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___OWNER = TEMPLATE_BINDING___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___SYNTAX_ELEMENT_OWNER = TEMPLATE_BINDING___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___CURRENT_SCOPE = TEMPLATE_BINDING___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___SYNTAX_ELEMENT_CURRENT_SCOPE = TEMPLATE_BINDING___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___ENCLOSING_STATEMENT = TEMPLATE_BINDING___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___ENCLOSING_EXPRESSION = TEMPLATE_BINDING___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___ASSIGNMENTS_BEFORE = TEMPLATE_BINDING___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = TEMPLATE_BINDING___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = TEMPLATE_BINDING___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___UPDATE_ALL__ELIST_ELIST = TEMPLATE_BINDING___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___COMMON_ANCESTOR__ELIST = TEMPLATE_BINDING___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___COMMON_ANCESTORS__ELIST = TEMPLATE_BINDING___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___REMOVE_DUPLICATE_ELEMENTS__ELIST = TEMPLATE_BINDING___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___RESOLVE_IN_LIBRARY__STRING = TEMPLATE_BINDING___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___PRIMITIVE_TYPE__STRING = TEMPLATE_BINDING___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___PRIMITIVE_TYPE____STRING = TEMPLATE_BINDING___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___BOOLEAN_TYPE = TEMPLATE_BINDING___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___INTEGER_TYPE = TEMPLATE_BINDING___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_INTEGER_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___STRING_TYPE = TEMPLATE_BINDING___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_STRING_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___UNLIMITED_NATURAL_TYPE = TEMPLATE_BINDING___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___BIT_STRING_TYPE = TEMPLATE_BINDING___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___NATURAL_TYPE = TEMPLATE_BINDING___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_NATURAL_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_NUMERIC_TYPE__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___COLLECTION_FUNCTION_ADD = TEMPLATE_BINDING___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_COLLECTION_CLASS__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = TEMPLATE_BINDING___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>To String</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___TO_STRING = TEMPLATE_BINDING_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___MATCHES__ELEMENTREFERENCE = TEMPLATE_BINDING_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___MATCHES__ELEMENTREFERENCE_QUALIFIEDNAME = TEMPLATE_BINDING_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Bind To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___BIND_TO__ELEMENTREFERENCE = TEMPLATE_BINDING_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Copy</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING___COPY = TEMPLATE_BINDING_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Positional Template Binding</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int POSITIONAL_TEMPLATE_BINDING_OPERATION_COUNT = TEMPLATE_BINDING_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ConditionalLogicalExpressionImpl <em>Conditional Logical Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ConditionalLogicalExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getConditionalLogicalExpression()
	 * @generated
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION = 41;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__OWNER = BINARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__UPPER = BINARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__LOWER = BINARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__TYPE = BINARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__ASSIGNMENT_BEFORE = BINARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__ASSIGNMENT_AFTER = BINARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__OPERAND1 = BINARY_EXPRESSION__OPERAND1;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__OPERAND2 = BINARY_EXPRESSION__OPERAND2;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION__OPERATOR = BINARY_EXPRESSION__OPERATOR;

	/**
	 * The number of structural features of the '<em>Conditional Logical Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___TO_REFERENCE = BINARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___OWNER = BINARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = BINARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___CURRENT_SCOPE = BINARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = BINARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___ENCLOSING_STATEMENT = BINARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___ENCLOSING_EXPRESSION = BINARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = BINARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___COMMON_ANCESTOR__ELIST = BINARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___COMMON_ANCESTORS__ELIST = BINARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = BINARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = BINARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___PRIMITIVE_TYPE__STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___PRIMITIVE_TYPE____STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___BOOLEAN_TYPE = BINARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___INTEGER_TYPE = BINARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___STRING_TYPE = BINARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = BINARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___BIT_STRING_TYPE = BINARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___NATURAL_TYPE = BINARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___COLLECTION_FUNCTION_ADD = BINARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___TYPE_CACHED = BINARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_NULL = BINARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___REFERENCE = BINARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___NEW_ASSIGNMENTS = BINARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___RESOLVE__STRING = BINARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = BINARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>No Null Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___NO_NULL_ARGUMENTS = BINARY_EXPRESSION___NO_NULL_ARGUMENTS;

	/**
	 * The operation id for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___TYPE = BINARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___LOWER = BINARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___UPPER = BINARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Conditional Logical Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___CONDITIONAL_LOGICAL_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Conditional Logical Expression Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___CONDITIONAL_LOGICAL_EXPRESSION_LOWER__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Conditional Logical Expression Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___CONDITIONAL_LOGICAL_EXPRESSION_UPPER__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Conditional Logical Expression Operands</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___CONDITIONAL_LOGICAL_EXPRESSION_OPERANDS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Validate Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___VALIDATE_ASSIGNMENTS = BINARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = BINARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION___UPDATE_ASSIGNMENTS = BINARY_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Conditional Logical Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_LOGICAL_EXPRESSION_OPERATION_COUNT = BINARY_EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.LinkOperationExpressionImpl <em>Link Operation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.LinkOperationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getLinkOperationExpression()
	 * @generated
	 */
	int LINK_OPERATION_EXPRESSION = 42;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__OWNER = INVOCATION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__UPPER = INVOCATION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__LOWER = INVOCATION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__TYPE = INVOCATION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__ASSIGNMENT_BEFORE = INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__ASSIGNMENT_AFTER = INVOCATION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Is Behavior</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_BEHAVIOR = INVOCATION_EXPRESSION__IS_BEHAVIOR;

	/**
	 * The feature id for the '<em><b>Is Association End</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_ASSOCIATION_END = INVOCATION_EXPRESSION__IS_ASSOCIATION_END;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__FEATURE = INVOCATION_EXPRESSION__FEATURE;

	/**
	 * The feature id for the '<em><b>Is Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_OPERATION = INVOCATION_EXPRESSION__IS_OPERATION;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_DESTRUCTOR = INVOCATION_EXPRESSION__IS_DESTRUCTOR;

	/**
	 * The feature id for the '<em><b>Is Implicit</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_IMPLICIT = INVOCATION_EXPRESSION__IS_IMPLICIT;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__REFERENT = INVOCATION_EXPRESSION__REFERENT;

	/**
	 * The feature id for the '<em><b>Parameter</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__PARAMETER = INVOCATION_EXPRESSION__PARAMETER;

	/**
	 * The feature id for the '<em><b>Is Signal</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_SIGNAL = INVOCATION_EXPRESSION__IS_SIGNAL;

	/**
	 * The feature id for the '<em><b>Tuple</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__TUPLE = INVOCATION_EXPRESSION__TUPLE;

	/**
	 * The feature id for the '<em><b>Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__OPERATION = INVOCATION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Creation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_CREATION = INVOCATION_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Clear</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__IS_CLEAR = INVOCATION_EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Association Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION__ASSOCIATION_NAME = INVOCATION_EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Link Operation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION_FEATURE_COUNT = INVOCATION_EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___TO_REFERENCE = INVOCATION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___OWNER = INVOCATION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___CURRENT_SCOPE = INVOCATION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___ENCLOSING_STATEMENT = INVOCATION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___ENCLOSING_EXPRESSION = INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___COMMON_ANCESTOR__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___COMMON_ANCESTORS__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PRIMITIVE_TYPE__STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PRIMITIVE_TYPE____STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___BOOLEAN_TYPE = INVOCATION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INTEGER_TYPE = INVOCATION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___STRING_TYPE = INVOCATION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___BIT_STRING_TYPE = INVOCATION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___NATURAL_TYPE = INVOCATION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___COLLECTION_FUNCTION_ADD = INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___TYPE_CACHED = INVOCATION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_NULL = INVOCATION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___REFERENCE = INVOCATION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___NEW_ASSIGNMENTS = INVOCATION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___RESOLVE__STRING = INVOCATION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___REFERENT_CACHED = INVOCATION_EXPRESSION___REFERENT_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___TYPE = INVOCATION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Invocation Expression type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___UPPER = INVOCATION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Invocation Expression upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___LOWER = INVOCATION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Invocation Expression lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER;

	/**
	 * The operation id for the '<em>Parameter Named</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PARAMETER_NAMED__STRING = INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING;

	/**
	 * The operation id for the '<em>Parameter Count</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PARAMETER_COUNT = INVOCATION_EXPRESSION___PARAMETER_COUNT;

	/**
	 * The operation id for the '<em>Parameter Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Is Assignable To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID = INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Effective Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Parameter From Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING;

	/**
	 * The operation id for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___REFERENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___FEATURE = INVOCATION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Link Operation Expression Is Creation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___LINK_OPERATION_EXPRESSION_IS_CREATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Link Operation Expression Is Clear Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___LINK_OPERATION_EXPRESSION_IS_CLEAR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Link Operation Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___LINK_OPERATION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Link Operation Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___LINK_OPERATION_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Link Operation Expression Association Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___LINK_OPERATION_EXPRESSION_ASSOCIATION_REFERENCE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Link Operation Expression Argument Compatibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___LINK_OPERATION_EXPRESSION_ARGUMENT_COMPATIBILITY__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION___PARAMETER_ELEMENTS = INVOCATION_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The number of operations of the '<em>Link Operation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LINK_OPERATION_EXPRESSION_OPERATION_COUNT = INVOCATION_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.EqualityExpressionImpl <em>Equality Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.EqualityExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getEqualityExpression()
	 * @generated
	 */
	int EQUALITY_EXPRESSION = 43;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__OWNER = BINARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__UPPER = BINARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__LOWER = BINARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__TYPE = BINARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__ASSIGNMENT_BEFORE = BINARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__ASSIGNMENT_AFTER = BINARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__OPERAND1 = BINARY_EXPRESSION__OPERAND1;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__OPERAND2 = BINARY_EXPRESSION__OPERAND2;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__OPERATOR = BINARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Is Negated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION__IS_NEGATED = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Equality Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___TO_REFERENCE = BINARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___OWNER = BINARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___SYNTAX_ELEMENT_OWNER = BINARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___CURRENT_SCOPE = BINARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = BINARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___ENCLOSING_STATEMENT = BINARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___ENCLOSING_EXPRESSION = BINARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___UPDATE_ALL__ELIST_ELIST = BINARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___COMMON_ANCESTOR__ELIST = BINARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___COMMON_ANCESTORS__ELIST = BINARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = BINARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = BINARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___PRIMITIVE_TYPE__STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___PRIMITIVE_TYPE____STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___BOOLEAN_TYPE = BINARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___INTEGER_TYPE = BINARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___STRING_TYPE = BINARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___UNLIMITED_NATURAL_TYPE = BINARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___BIT_STRING_TYPE = BINARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___NATURAL_TYPE = BINARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___COLLECTION_FUNCTION_ADD = BINARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___TYPE_CACHED = BINARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_NULL = BINARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___REFERENCE = BINARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___NEW_ASSIGNMENTS = BINARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___RESOLVE__STRING = BINARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___IS_ADD_TARGET__EXPRESSION = BINARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Validate Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___VALIDATE_ASSIGNMENTS = BINARY_EXPRESSION___VALIDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___TYPE = BINARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___LOWER = BINARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___UPPER = BINARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Equality Expression Is Negated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___EQUALITY_EXPRESSION_IS_NEGATED_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Equality Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___EQUALITY_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Equality Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___EQUALITY_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Equality Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___EQUALITY_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>No Null Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION___NO_NULL_ARGUMENTS = BINARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Equality Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EQUALITY_EXPRESSION_OPERATION_COUNT = BINARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AssignmentExpressionImpl <em>Assignment Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AssignmentExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAssignmentExpression()
	 * @generated
	 */
	int ASSIGNMENT_EXPRESSION = 44;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Left Hand Side</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__LEFT_HAND_SIDE = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Right Hand Side</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__RIGHT_HAND_SIDE = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Assignment</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__ASSIGNMENT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__FEATURE = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Indexed</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_INDEXED = EXPRESSION_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Is Arithmetic</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_ARITHMETIC = EXPRESSION_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Is Logical</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_LOGICAL = EXPRESSION_FEATURE_COUNT + 7;

	/**
	 * The feature id for the '<em><b>Is Shift</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_SHIFT = EXPRESSION_FEATURE_COUNT + 8;

	/**
	 * The feature id for the '<em><b>Is Concatenation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_CONCATENATION = EXPRESSION_FEATURE_COUNT + 9;

	/**
	 * The feature id for the '<em><b>Is Definition</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_DEFINITION = EXPRESSION_FEATURE_COUNT + 10;

	/**
	 * The feature id for the '<em><b>Is Simple</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_SIMPLE = EXPRESSION_FEATURE_COUNT + 11;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 12;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_FEATURE = EXPRESSION_FEATURE_COUNT + 13;

	/**
	 * The feature id for the '<em><b>Is Data Value Update</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_DATA_VALUE_UPDATE = EXPRESSION_FEATURE_COUNT + 14;

	/**
	 * The feature id for the '<em><b>Is Collection Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_COLLECTION_CONVERSION = EXPRESSION_FEATURE_COUNT + 15;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION__IS_BIT_STRING_CONVERSION = EXPRESSION_FEATURE_COUNT + 16;

	/**
	 * The number of structural features of the '<em>Assignment Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 17;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Assignment Expression Is Simple Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_SIMPLE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Assignment Expression Is Arithmetic Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_ARITHMETIC_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Assignment Expression Is Definition Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_DEFINITION_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Assignment Expression Is Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Assignment Expression Is Indexed Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_INDEXED_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Assignment Expression Is Data Value Update Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_DATA_VALUE_UPDATE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Assignment Expression Assignment Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_ASSIGNMENT_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Assignment Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Assignment Expression Expression Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_EXPRESSION_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Assignment Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Assignment Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Assignment Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Assignment Expression Simple Assignment Type Conformance</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_SIMPLE_ASSIGNMENT_TYPE_CONFORMANCE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Assignment Expression Simple Assignment Multiplicity Conformance</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_SIMPLE_ASSIGNMENT_MULTIPLICITY_CONFORMANCE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Assignment Expression Compound Assignment Type Conformance</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_COMPOUND_ASSIGNMENT_TYPE_CONFORMANCE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Assignment Expression Compound Assignment Multiplicity Conformance</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_COMPOUND_ASSIGNMENT_MULTIPLICITY_CONFORMANCE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Assignment Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Assignment Expression Is Collection Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_COLLECTION_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Assignment Expression Is Bit String Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Assignment Expression Data Value Update Legality</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___ASSIGNMENT_EXPRESSION_DATA_VALUE_UPDATE_LEGALITY__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 24;

	/**
	 * The number of operations of the '<em>Assignment Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNMENT_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 25;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.LogicalExpressionImpl <em>Logical Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.LogicalExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getLogicalExpression()
	 * @generated
	 */
	int LOGICAL_EXPRESSION = 45;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__OWNER = BINARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__UPPER = BINARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__LOWER = BINARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__TYPE = BINARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__ASSIGNMENT_BEFORE = BINARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__ASSIGNMENT_AFTER = BINARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__OPERAND1 = BINARY_EXPRESSION__OPERAND1;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__OPERAND2 = BINARY_EXPRESSION__OPERAND2;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__OPERATOR = BINARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Is Bit Wise</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__IS_BIT_WISE = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion1</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__IS_BIT_STRING_CONVERSION1 = BINARY_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion2</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION__IS_BIT_STRING_CONVERSION2 = BINARY_EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Logical Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___TO_REFERENCE = BINARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___OWNER = BINARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = BINARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___CURRENT_SCOPE = BINARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = BINARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___ENCLOSING_STATEMENT = BINARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___ENCLOSING_EXPRESSION = BINARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = BINARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___COMMON_ANCESTOR__ELIST = BINARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___COMMON_ANCESTORS__ELIST = BINARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = BINARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = BINARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___PRIMITIVE_TYPE__STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___PRIMITIVE_TYPE____STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___BOOLEAN_TYPE = BINARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___INTEGER_TYPE = BINARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___STRING_TYPE = BINARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = BINARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___BIT_STRING_TYPE = BINARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___NATURAL_TYPE = BINARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___COLLECTION_FUNCTION_ADD = BINARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___TYPE_CACHED = BINARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_NULL = BINARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___REFERENCE = BINARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___NEW_ASSIGNMENTS = BINARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___RESOLVE__STRING = BINARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = BINARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Validate Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___VALIDATE_ASSIGNMENTS = BINARY_EXPRESSION___VALIDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>No Null Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___NO_NULL_ARGUMENTS = BINARY_EXPRESSION___NO_NULL_ARGUMENTS;

	/**
	 * The operation id for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___TYPE = BINARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOWER = BINARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___UPPER = BINARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Logical Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOGICAL_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Logical Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOGICAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Logical Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOGICAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Logical Expression Operands</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOGICAL_EXPRESSION_OPERANDS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Logical Expression Is Bit String Conversion1 Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOGICAL_EXPRESSION_IS_BIT_STRING_CONVERSION1_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Logical Expression Is Bit String Conversion2 Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOGICAL_EXPRESSION_IS_BIT_STRING_CONVERSION2_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Logical Expression Is Bit Wise Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION___LOGICAL_EXPRESSION_IS_BIT_WISE_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Logical Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOGICAL_EXPRESSION_OPERATION_COUNT = BINARY_EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceConstructionExpressionImpl <em>Sequence Construction Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceConstructionExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceConstructionExpression()
	 * @generated
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION = 46;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Elements</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__ELEMENTS = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Has Multiplicity</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__HAS_MULTIPLICITY = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__TYPE_NAME = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Any</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION__IS_ANY = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Sequence Construction Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collection Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___COLLECTION_TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Constructor Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___CONSTRUCTOR_REFERENCE = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Sequence Construction Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SEQUENCE_CONSTRUCTION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Sequence Construction Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SEQUENCE_CONSTRUCTION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Sequence Construction Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SEQUENCE_CONSTRUCTION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Sequence Construction Expression Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SEQUENCE_CONSTRUCTION_EXPRESSION_TYPE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Sequence Construction Expression Element Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SEQUENCE_CONSTRUCTION_EXPRESSION_ELEMENT_TYPE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Sequence Construction Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___SEQUENCE_CONSTRUCTION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The number of operations of the '<em>Sequence Construction Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_CONSTRUCTION_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceElementsImpl <em>Sequence Elements</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceElementsImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceElements()
	 * @generated
	 */
	int SEQUENCE_ELEMENTS = 47;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS__UPPER = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS__LOWER = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Sequence Elements</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___CONFORMS_TO__ELEMENTREFERENCE = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___ASSIGNMENTS_AFTER = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___UPPER = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS___LOWER = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Sequence Elements</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_ELEMENTS_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.CollectOrIterateExpressionImpl <em>Collect Or Iterate Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.CollectOrIterateExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getCollectOrIterateExpression()
	 * @generated
	 */
	int COLLECT_OR_ITERATE_EXPRESSION = 48;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__OWNER = SEQUENCE_EXPANSION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__UPPER = SEQUENCE_EXPANSION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__LOWER = SEQUENCE_EXPANSION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__TYPE = SEQUENCE_EXPANSION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__ASSIGNMENT_BEFORE = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__ASSIGNMENT_AFTER = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__OPERATION = SEQUENCE_EXPANSION_EXPRESSION__OPERATION;

	/**
	 * The feature id for the '<em><b>Variable</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__VARIABLE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE;

	/**
	 * The feature id for the '<em><b>Variable Source</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__VARIABLE_SOURCE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE_SOURCE;

	/**
	 * The feature id for the '<em><b>Argument</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__ARGUMENT = SEQUENCE_EXPANSION_EXPRESSION__ARGUMENT;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__PRIMARY = SEQUENCE_EXPANSION_EXPRESSION__PRIMARY;

	/**
	 * The feature id for the '<em><b>Is Select Or Reject</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__IS_SELECT_OR_REJECT = SEQUENCE_EXPANSION_EXPRESSION__IS_SELECT_OR_REJECT;

	/**
	 * The feature id for the '<em><b>Is Collect Or Iterate</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__IS_COLLECT_OR_ITERATE = SEQUENCE_EXPANSION_EXPRESSION__IS_COLLECT_OR_ITERATE;

	/**
	 * The feature id for the '<em><b>Is For All Or Exists Or One</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE = SEQUENCE_EXPANSION_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE;

	/**
	 * The feature id for the '<em><b>Is Is Unique</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION__IS_IS_UNIQUE = SEQUENCE_EXPANSION_EXPRESSION__IS_IS_UNIQUE;

	/**
	 * The number of structural features of the '<em>Collect Or Iterate Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION_FEATURE_COUNT = SEQUENCE_EXPANSION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___TO_REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___OWNER = SEQUENCE_EXPANSION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SYNTAX_ELEMENT_OWNER = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___ENCLOSING_STATEMENT = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___ENCLOSING_EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___UPDATE_ALL__ELIST_ELIST = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___COMMON_ANCESTOR__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___COMMON_ANCESTORS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___PRIMITIVE_TYPE__STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___PRIMITIVE_TYPE____STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___BOOLEAN_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___INTEGER_TYPE = SEQUENCE_EXPANSION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___UNLIMITED_NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___BIT_STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___COLLECTION_FUNCTION_ADD = SEQUENCE_EXPANSION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___TYPE_CACHED = SEQUENCE_EXPANSION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_NULL = SEQUENCE_EXPANSION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___NEW_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___RESOLVE__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_ADD_TARGET__EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___TYPE = SEQUENCE_EXPANSION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___LOWER = SEQUENCE_EXPANSION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___UPPER = SEQUENCE_EXPANSION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Source Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments After Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Collect Or Iterate Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int COLLECT_OR_ITERATE_EXPRESSION_OPERATION_COUNT = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.IsUniqueExpressionImpl <em>Is Unique Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.IsUniqueExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getIsUniqueExpression()
	 * @generated
	 */
	int IS_UNIQUE_EXPRESSION = 49;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__OWNER = SEQUENCE_EXPANSION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__UPPER = SEQUENCE_EXPANSION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__LOWER = SEQUENCE_EXPANSION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__TYPE = SEQUENCE_EXPANSION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__ASSIGNMENT_BEFORE = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__ASSIGNMENT_AFTER = SEQUENCE_EXPANSION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__OPERATION = SEQUENCE_EXPANSION_EXPRESSION__OPERATION;

	/**
	 * The feature id for the '<em><b>Variable</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__VARIABLE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE;

	/**
	 * The feature id for the '<em><b>Variable Source</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__VARIABLE_SOURCE = SEQUENCE_EXPANSION_EXPRESSION__VARIABLE_SOURCE;

	/**
	 * The feature id for the '<em><b>Argument</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__ARGUMENT = SEQUENCE_EXPANSION_EXPRESSION__ARGUMENT;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__PRIMARY = SEQUENCE_EXPANSION_EXPRESSION__PRIMARY;

	/**
	 * The feature id for the '<em><b>Is Select Or Reject</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__IS_SELECT_OR_REJECT = SEQUENCE_EXPANSION_EXPRESSION__IS_SELECT_OR_REJECT;

	/**
	 * The feature id for the '<em><b>Is Collect Or Iterate</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__IS_COLLECT_OR_ITERATE = SEQUENCE_EXPANSION_EXPRESSION__IS_COLLECT_OR_ITERATE;

	/**
	 * The feature id for the '<em><b>Is For All Or Exists Or One</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE = SEQUENCE_EXPANSION_EXPRESSION__IS_FOR_ALL_OR_EXISTS_OR_ONE;

	/**
	 * The feature id for the '<em><b>Is Is Unique</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION__IS_IS_UNIQUE = SEQUENCE_EXPANSION_EXPRESSION__IS_IS_UNIQUE;

	/**
	 * The number of structural features of the '<em>Is Unique Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION_FEATURE_COUNT = SEQUENCE_EXPANSION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___TO_REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___OWNER = SEQUENCE_EXPANSION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SYNTAX_ELEMENT_OWNER = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___ENCLOSING_STATEMENT = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___ENCLOSING_EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SEQUENCE_EXPANSION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___UPDATE_ALL__ELIST_ELIST = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___COMMON_ANCESTOR__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___COMMON_ANCESTORS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SEQUENCE_EXPANSION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___PRIMITIVE_TYPE__STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___PRIMITIVE_TYPE____STRING = SEQUENCE_EXPANSION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___BOOLEAN_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___INTEGER_TYPE = SEQUENCE_EXPANSION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___UNLIMITED_NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___BIT_STRING_TYPE = SEQUENCE_EXPANSION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___NATURAL_TYPE = SEQUENCE_EXPANSION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___COLLECTION_FUNCTION_ADD = SEQUENCE_EXPANSION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___TYPE_CACHED = SEQUENCE_EXPANSION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_NULL = SEQUENCE_EXPANSION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = SEQUENCE_EXPANSION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = SEQUENCE_EXPANSION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___REFERENCE = SEQUENCE_EXPANSION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___NEW_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___RESOLVE__STRING = SEQUENCE_EXPANSION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_ADD_TARGET__EXPRESSION = SEQUENCE_EXPANSION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY = SEQUENCE_EXPANSION_EXPRESSION___ASSIGNMENTS_AFTER_PRIMARY;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___TYPE = SEQUENCE_EXPANSION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___LOWER = SEQUENCE_EXPANSION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___UPPER = SEQUENCE_EXPANSION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Source Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_SOURCE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_PRIMARY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments Before Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_BEFORE_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Variable Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_VARIABLE_NAME__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Assignments After Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_ASSIGNMENTS_AFTER_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Select Or Reject Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SELECT_OR_REJECT_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Collect Or Iterate Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___COLLECT_OR_ITERATE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>For All Or Exists Or One Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___FOR_ALL_OR_EXISTS_OR_ONE_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___UPDATE_ASSIGNMENTS = SEQUENCE_EXPANSION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Sequence Expansion Expression Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION___SEQUENCE_EXPANSION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Unique Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_UNIQUE_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Unique Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_UNIQUE_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Unique Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_UNIQUE_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Unique Expression Expression Argument</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION___IS_UNIQUE_EXPRESSION_EXPRESSION_ARGUMENT__DIAGNOSTICCHAIN_MAP = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Is Unique Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IS_UNIQUE_EXPRESSION_OPERATION_COUNT = SEQUENCE_EXPANSION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ArithmeticExpressionImpl <em>Arithmetic Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ArithmeticExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getArithmeticExpression()
	 * @generated
	 */
	int ARITHMETIC_EXPRESSION = 50;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__OWNER = BINARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__UPPER = BINARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__LOWER = BINARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__TYPE = BINARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__ASSIGNMENT_BEFORE = BINARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__ASSIGNMENT_AFTER = BINARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__OPERAND1 = BINARY_EXPRESSION__OPERAND1;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__OPERAND2 = BINARY_EXPRESSION__OPERAND2;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__OPERATOR = BINARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Is Concatenation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION__IS_CONCATENATION = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Arithmetic Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___TO_REFERENCE = BINARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___OWNER = BINARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___SYNTAX_ELEMENT_OWNER = BINARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___CURRENT_SCOPE = BINARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = BINARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ENCLOSING_STATEMENT = BINARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ENCLOSING_EXPRESSION = BINARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___UPDATE_ALL__ELIST_ELIST = BINARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___COMMON_ANCESTOR__ELIST = BINARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___COMMON_ANCESTORS__ELIST = BINARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = BINARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = BINARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___PRIMITIVE_TYPE__STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___PRIMITIVE_TYPE____STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___BOOLEAN_TYPE = BINARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___INTEGER_TYPE = BINARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___STRING_TYPE = BINARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___UNLIMITED_NATURAL_TYPE = BINARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___BIT_STRING_TYPE = BINARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___NATURAL_TYPE = BINARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___COLLECTION_FUNCTION_ADD = BINARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___TYPE_CACHED = BINARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_NULL = BINARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___REFERENCE = BINARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___NEW_ASSIGNMENTS = BINARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___RESOLVE__STRING = BINARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___IS_ADD_TARGET__EXPRESSION = BINARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Validate Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___VALIDATE_ASSIGNMENTS = BINARY_EXPRESSION___VALIDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>No Null Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___NO_NULL_ARGUMENTS = BINARY_EXPRESSION___NO_NULL_ARGUMENTS;

	/**
	 * The operation id for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___TYPE = BINARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___LOWER = BINARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___UPPER = BINARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Arithmetic Expression Is Concatenation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ARITHMETIC_EXPRESSION_IS_CONCATENATION_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Arithmetic Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ARITHMETIC_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Arithmetic Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ARITHMETIC_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Arithmetic Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ARITHMETIC_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Arithmetic Expression Operand Types</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION___ARITHMETIC_EXPRESSION_OPERAND_TYPES__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Arithmetic Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ARITHMETIC_EXPRESSION_OPERATION_COUNT = BINARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.FeatureLeftHandSideImpl <em>Feature Left Hand Side</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.FeatureLeftHandSideImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getFeatureLeftHandSide()
	 * @generated
	 */
	int FEATURE_LEFT_HAND_SIDE = 51;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__OWNER = LEFT_HAND_SIDE__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__UPPER = LEFT_HAND_SIDE__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__LOWER = LEFT_HAND_SIDE__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__TYPE = LEFT_HAND_SIDE__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__ASSIGNMENT_BEFORE = LEFT_HAND_SIDE__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__ASSIGNMENT_AFTER = LEFT_HAND_SIDE__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__REFERENT = LEFT_HAND_SIDE__REFERENT;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE__EXPRESSION = LEFT_HAND_SIDE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Feature Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE_FEATURE_COUNT = LEFT_HAND_SIDE_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___TO_REFERENCE = LEFT_HAND_SIDE___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___OWNER = LEFT_HAND_SIDE___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_OWNER = LEFT_HAND_SIDE___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___CURRENT_SCOPE = LEFT_HAND_SIDE___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_CURRENT_SCOPE = LEFT_HAND_SIDE___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___ENCLOSING_STATEMENT = LEFT_HAND_SIDE___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___ENCLOSING_EXPRESSION = LEFT_HAND_SIDE___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE = LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___UPDATE_ALL__ELIST_ELIST = LEFT_HAND_SIDE___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___COMMON_ANCESTOR__ELIST = LEFT_HAND_SIDE___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___COMMON_ANCESTORS__ELIST = LEFT_HAND_SIDE___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___REMOVE_DUPLICATE_ELEMENTS__ELIST = LEFT_HAND_SIDE___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___RESOLVE_IN_LIBRARY__STRING = LEFT_HAND_SIDE___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___PRIMITIVE_TYPE__STRING = LEFT_HAND_SIDE___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___PRIMITIVE_TYPE____STRING = LEFT_HAND_SIDE___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___BOOLEAN_TYPE = LEFT_HAND_SIDE___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___INTEGER_TYPE = LEFT_HAND_SIDE___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_INTEGER_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___STRING_TYPE = LEFT_HAND_SIDE___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_STRING_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___UNLIMITED_NATURAL_TYPE = LEFT_HAND_SIDE___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___BIT_STRING_TYPE = LEFT_HAND_SIDE___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___NATURAL_TYPE = LEFT_HAND_SIDE___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_NATURAL_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___COLLECTION_FUNCTION_ADD = LEFT_HAND_SIDE___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___TYPE_CACHED = LEFT_HAND_SIDE___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_NULL = LEFT_HAND_SIDE___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = LEFT_HAND_SIDE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = LEFT_HAND_SIDE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___ASSIGNMENTS_AFTER = LEFT_HAND_SIDE___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___TYPE = LEFT_HAND_SIDE___TYPE;

	/**
	 * The operation id for the '<em>Left Hand Side type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_TYPE = LEFT_HAND_SIDE___LEFT_HAND_SIDE_TYPE;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___UPPER = LEFT_HAND_SIDE___UPPER;

	/**
	 * The operation id for the '<em>Left Hand Side upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_UPPER = LEFT_HAND_SIDE___LEFT_HAND_SIDE_UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___LOWER = LEFT_HAND_SIDE___LOWER;

	/**
	 * The operation id for the '<em>Left Hand Side lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_LOWER = LEFT_HAND_SIDE___LEFT_HAND_SIDE_LOWER;

	/**
	 * The operation id for the '<em>Assigned Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___ASSIGNED_NAME = LEFT_HAND_SIDE___ASSIGNED_NAME;

	/**
	 * The operation id for the '<em>Is Data Value Update</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___IS_DATA_VALUE_UPDATE = LEFT_HAND_SIDE___IS_DATA_VALUE_UPDATE;

	/**
	 * The operation id for the '<em>Left Hand Side Index Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_INDEX_EXPRESSION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE___LEFT_HAND_SIDE_INDEX_EXPRESSION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___REFERENT = LEFT_HAND_SIDE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE = LEFT_HAND_SIDE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___EXPRESSION = LEFT_HAND_SIDE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Index</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___INDEX = LEFT_HAND_SIDE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___LOCAL_NAME = LEFT_HAND_SIDE_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Assignment Before Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_ASSIGNMENT_BEFORE_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Feature Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_FEATURE_EXPRESSION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Referent Constraint</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_REFERENT_CONSTRAINT__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Feature Left Hand Side Indexed Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE___FEATURE_LEFT_HAND_SIDE_INDEXED_FEATURE__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 14;

	/**
	 * The number of operations of the '<em>Feature Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_LEFT_HAND_SIDE_OPERATION_COUNT = LEFT_HAND_SIDE_OPERATION_COUNT + 15;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ConditionalTestExpressionImpl <em>Conditional Test Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ConditionalTestExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getConditionalTestExpression()
	 * @generated
	 */
	int CONDITIONAL_TEST_EXPRESSION = 52;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__OPERAND1 = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__OPERAND2 = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Operand3</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION__OPERAND3 = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Conditional Test Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Conditional Test Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___CONDITIONAL_TEST_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Conditional Test Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___CONDITIONAL_TEST_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Conditional Test Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___CONDITIONAL_TEST_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Conditional Test Expression Condition</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___CONDITIONAL_TEST_EXPRESSION_CONDITION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Conditional Test Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___CONDITIONAL_TEST_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Conditional Test Expression Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___CONDITIONAL_TEST_EXPRESSION_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The number of operations of the '<em>Conditional Test Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONDITIONAL_TEST_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.InstanceCreationExpressionImpl <em>Instance Creation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.InstanceCreationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getInstanceCreationExpression()
	 * @generated
	 */
	int INSTANCE_CREATION_EXPRESSION = 53;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__OWNER = INVOCATION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__UPPER = INVOCATION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__LOWER = INVOCATION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__TYPE = INVOCATION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__ASSIGNMENT_BEFORE = INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__ASSIGNMENT_AFTER = INVOCATION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Is Behavior</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_BEHAVIOR = INVOCATION_EXPRESSION__IS_BEHAVIOR;

	/**
	 * The feature id for the '<em><b>Is Association End</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_ASSOCIATION_END = INVOCATION_EXPRESSION__IS_ASSOCIATION_END;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__FEATURE = INVOCATION_EXPRESSION__FEATURE;

	/**
	 * The feature id for the '<em><b>Is Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_OPERATION = INVOCATION_EXPRESSION__IS_OPERATION;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_DESTRUCTOR = INVOCATION_EXPRESSION__IS_DESTRUCTOR;

	/**
	 * The feature id for the '<em><b>Is Implicit</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_IMPLICIT = INVOCATION_EXPRESSION__IS_IMPLICIT;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__REFERENT = INVOCATION_EXPRESSION__REFERENT;

	/**
	 * The feature id for the '<em><b>Parameter</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__PARAMETER = INVOCATION_EXPRESSION__PARAMETER;

	/**
	 * The feature id for the '<em><b>Is Signal</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_SIGNAL = INVOCATION_EXPRESSION__IS_SIGNAL;

	/**
	 * The feature id for the '<em><b>Tuple</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__TUPLE = INVOCATION_EXPRESSION__TUPLE;

	/**
	 * The feature id for the '<em><b>Is Constructorless</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_CONSTRUCTORLESS = INVOCATION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Object Creation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__IS_OBJECT_CREATION = INVOCATION_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Constructor</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION__CONSTRUCTOR = INVOCATION_EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Instance Creation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION_FEATURE_COUNT = INVOCATION_EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___TO_REFERENCE = INVOCATION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___OWNER = INVOCATION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___CURRENT_SCOPE = INVOCATION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___ENCLOSING_STATEMENT = INVOCATION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___ENCLOSING_EXPRESSION = INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___COMMON_ANCESTOR__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___COMMON_ANCESTORS__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PRIMITIVE_TYPE__STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PRIMITIVE_TYPE____STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___BOOLEAN_TYPE = INVOCATION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INTEGER_TYPE = INVOCATION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___STRING_TYPE = INVOCATION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___BIT_STRING_TYPE = INVOCATION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___NATURAL_TYPE = INVOCATION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___COLLECTION_FUNCTION_ADD = INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___TYPE_CACHED = INVOCATION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_NULL = INVOCATION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___REFERENCE = INVOCATION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___NEW_ASSIGNMENTS = INVOCATION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___RESOLVE__STRING = INVOCATION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___REFERENT_CACHED = INVOCATION_EXPRESSION___REFERENT_CACHED;

	/**
	 * The operation id for the '<em>Invocation Expression type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE;

	/**
	 * The operation id for the '<em>Invocation Expression upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER;

	/**
	 * The operation id for the '<em>Invocation Expression lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER;

	/**
	 * The operation id for the '<em>Parameter Named</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PARAMETER_NAMED__STRING = INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING;

	/**
	 * The operation id for the '<em>Parameter Count</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PARAMETER_COUNT = INVOCATION_EXPRESSION___PARAMETER_COUNT;

	/**
	 * The operation id for the '<em>Parameter Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Is Assignable To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID = INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Effective Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Parameter From Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING;

	/**
	 * The operation id for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___REFERENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___FEATURE = INVOCATION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___TYPE = INVOCATION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___LOWER = INVOCATION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___UPPER = INVOCATION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Instance Creation Expression Is Object Creation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_IS_OBJECT_CREATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Instance Creation Expression Is Constructorless Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_IS_CONSTRUCTORLESS_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Instance Creation Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Instance Creation Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Instance Creation Expression Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_CONSTRUCTOR__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Instance Creation Expression Constructorless Legality</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_CONSTRUCTORLESS_LEGALITY__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Instance Creation Expression Data Type Compatibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_DATA_TYPE_COMPATIBILITY__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Instance Creation Expression Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___INSTANCE_CREATION_EXPRESSION_REFERENT__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION___PARAMETER_ELEMENTS = INVOCATION_EXPRESSION_OPERATION_COUNT + 13;

	/**
	 * The number of operations of the '<em>Instance Creation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INSTANCE_CREATION_EXPRESSION_OPERATION_COUNT = INVOCATION_EXPRESSION_OPERATION_COUNT + 14;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.PropertyAccessExpressionImpl <em>Property Access Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.PropertyAccessExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getPropertyAccessExpression()
	 * @generated
	 */
	int PROPERTY_ACCESS_EXPRESSION = 54;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Feature Reference</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__FEATURE_REFERENCE = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION__FEATURE = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Property Access Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Property Access Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PROPERTY_ACCESS_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Property Access Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PROPERTY_ACCESS_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Property Access Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PROPERTY_ACCESS_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Property Access Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PROPERTY_ACCESS_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Property Access Expression Feature Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PROPERTY_ACCESS_EXPRESSION_FEATURE_RESOLUTION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Property Access Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___PROPERTY_ACCESS_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Property Access Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_ACCESS_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NameExpressionImpl <em>Name Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NameExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNameExpression()
	 * @generated
	 */
	int NAME_EXPRESSION = 55;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enumeration Literal</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__ENUMERATION_LITERAL = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Assignment</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__ASSIGNMENT = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Property Access</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__PROPERTY_ACCESS = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION__NAME = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Name Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Parameter Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___PARAMETER_REFERENT = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Assignment For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___ASSIGNMENT_FOR__STRING = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Assignment For </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___ASSIGNMENT_FOR____STRING = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Is Add Target Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___IS_ADD_TARGET_NAME = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Name Expression Assignment Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NAME_EXPRESSION_ASSIGNMENT_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Name Expression Enumeration Literal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NAME_EXPRESSION_ENUMERATION_LITERAL_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Name Expression Property Access Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NAME_EXPRESSION_PROPERTY_ACCESS_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Name Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NAME_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Name Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NAME_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Name Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NAME_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Name Expression Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___NAME_EXPRESSION_RESOLUTION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Validate Name Expression Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___VALIDATE_NAME_EXPRESSION_RESOLUTION = EXPRESSION_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 15;

	/**
	 * The number of operations of the '<em>Name Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 16;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BitStringUnaryExpressionImpl <em>Bit String Unary Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BitStringUnaryExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBitStringUnaryExpression()
	 * @generated
	 */
	int BIT_STRING_UNARY_EXPRESSION = 56;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__OWNER = UNARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__UPPER = UNARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__LOWER = UNARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__TYPE = UNARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__ASSIGNMENT_BEFORE = UNARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__ASSIGNMENT_AFTER = UNARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__OPERATOR = UNARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__OPERAND = UNARY_EXPRESSION__OPERAND;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION__IS_BIT_STRING_CONVERSION = UNARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Bit String Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION_FEATURE_COUNT = UNARY_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___TO_REFERENCE = UNARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___OWNER = UNARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER = UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___CURRENT_SCOPE = UNARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___ENCLOSING_STATEMENT = UNARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___ENCLOSING_EXPRESSION = UNARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST = UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST = UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST = UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___BOOLEAN_TYPE = UNARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___INTEGER_TYPE = UNARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___STRING_TYPE = UNARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE = UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___BIT_STRING_TYPE = UNARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___NATURAL_TYPE = UNARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD = UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___TYPE_CACHED = UNARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_NULL = UNARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___REFERENCE = UNARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___NEW_ASSIGNMENTS = UNARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___RESOLVE__STRING = UNARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION = UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Unary Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___TYPE = UNARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___LOWER = UNARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___UPPER = UNARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Bit String Unary Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___BIT_STRING_UNARY_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Bit String Unary Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___BIT_STRING_UNARY_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Bit String Unary Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___BIT_STRING_UNARY_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Bit String Unary Expression Operand</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___BIT_STRING_UNARY_EXPRESSION_OPERAND__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Bit String Unary Expression Is Bit String Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION___BIT_STRING_UNARY_EXPRESSION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Bit String Unary Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BIT_STRING_UNARY_EXPRESSION_OPERATION_COUNT = UNARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.FeatureInvocationExpressionImpl <em>Feature Invocation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.FeatureInvocationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getFeatureInvocationExpression()
	 * @generated
	 */
	int FEATURE_INVOCATION_EXPRESSION = 57;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__OWNER = INVOCATION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__UPPER = INVOCATION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__LOWER = INVOCATION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__TYPE = INVOCATION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE = INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__ASSIGNMENT_AFTER = INVOCATION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Is Behavior</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__IS_BEHAVIOR = INVOCATION_EXPRESSION__IS_BEHAVIOR;

	/**
	 * The feature id for the '<em><b>Is Association End</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__IS_ASSOCIATION_END = INVOCATION_EXPRESSION__IS_ASSOCIATION_END;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__FEATURE = INVOCATION_EXPRESSION__FEATURE;

	/**
	 * The feature id for the '<em><b>Is Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__IS_OPERATION = INVOCATION_EXPRESSION__IS_OPERATION;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__IS_DESTRUCTOR = INVOCATION_EXPRESSION__IS_DESTRUCTOR;

	/**
	 * The feature id for the '<em><b>Is Implicit</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__IS_IMPLICIT = INVOCATION_EXPRESSION__IS_IMPLICIT;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__REFERENT = INVOCATION_EXPRESSION__REFERENT;

	/**
	 * The feature id for the '<em><b>Parameter</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__PARAMETER = INVOCATION_EXPRESSION__PARAMETER;

	/**
	 * The feature id for the '<em><b>Is Signal</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__IS_SIGNAL = INVOCATION_EXPRESSION__IS_SIGNAL;

	/**
	 * The feature id for the '<em><b>Tuple</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__TUPLE = INVOCATION_EXPRESSION__TUPLE;

	/**
	 * The feature id for the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION__TARGET = INVOCATION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Feature Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION_FEATURE_COUNT = INVOCATION_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___TO_REFERENCE = INVOCATION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___OWNER = INVOCATION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___CURRENT_SCOPE = INVOCATION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___ENCLOSING_STATEMENT = INVOCATION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION = INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___BOOLEAN_TYPE = INVOCATION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INTEGER_TYPE = INVOCATION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___STRING_TYPE = INVOCATION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___BIT_STRING_TYPE = INVOCATION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___NATURAL_TYPE = INVOCATION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD = INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___TYPE_CACHED = INVOCATION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_NULL = INVOCATION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___REFERENCE = INVOCATION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___NEW_ASSIGNMENTS = INVOCATION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___RESOLVE__STRING = INVOCATION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___REFERENT_CACHED = INVOCATION_EXPRESSION___REFERENT_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___TYPE = INVOCATION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Invocation Expression type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___UPPER = INVOCATION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Invocation Expression upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___LOWER = INVOCATION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Invocation Expression lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER;

	/**
	 * The operation id for the '<em>Parameter Named</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING = INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING;

	/**
	 * The operation id for the '<em>Parameter Count</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PARAMETER_COUNT = INVOCATION_EXPRESSION___PARAMETER_COUNT;

	/**
	 * The operation id for the '<em>Parameter Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Is Assignable To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID = INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Effective Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Parameter From Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING;

	/**
	 * The operation id for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___FEATURE = INVOCATION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___REFERENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Feature Invocation Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___FEATURE_INVOCATION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Feature Invocation Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___FEATURE_INVOCATION_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Feature Invocation Expression Referent Exists</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___FEATURE_INVOCATION_EXPRESSION_REFERENT_EXISTS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Feature Invocation Expression Alternative Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___FEATURE_INVOCATION_EXPRESSION_ALTERNATIVE_CONSTRUCTOR__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Feature Invocation Expression Implicit Alternative Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION___FEATURE_INVOCATION_EXPRESSION_IMPLICIT_ALTERNATIVE_CONSTRUCTOR__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Feature Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FEATURE_INVOCATION_EXPRESSION_OPERATION_COUNT = INVOCATION_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BehaviorInvocationExpressionImpl <em>Behavior Invocation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BehaviorInvocationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBehaviorInvocationExpression()
	 * @generated
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION = 58;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__OWNER = INVOCATION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__UPPER = INVOCATION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__LOWER = INVOCATION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__TYPE = INVOCATION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE = INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__ASSIGNMENT_AFTER = INVOCATION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Is Behavior</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__IS_BEHAVIOR = INVOCATION_EXPRESSION__IS_BEHAVIOR;

	/**
	 * The feature id for the '<em><b>Is Association End</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__IS_ASSOCIATION_END = INVOCATION_EXPRESSION__IS_ASSOCIATION_END;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__FEATURE = INVOCATION_EXPRESSION__FEATURE;

	/**
	 * The feature id for the '<em><b>Is Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__IS_OPERATION = INVOCATION_EXPRESSION__IS_OPERATION;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__IS_DESTRUCTOR = INVOCATION_EXPRESSION__IS_DESTRUCTOR;

	/**
	 * The feature id for the '<em><b>Is Implicit</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__IS_IMPLICIT = INVOCATION_EXPRESSION__IS_IMPLICIT;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__REFERENT = INVOCATION_EXPRESSION__REFERENT;

	/**
	 * The feature id for the '<em><b>Parameter</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__PARAMETER = INVOCATION_EXPRESSION__PARAMETER;

	/**
	 * The feature id for the '<em><b>Is Signal</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__IS_SIGNAL = INVOCATION_EXPRESSION__IS_SIGNAL;

	/**
	 * The feature id for the '<em><b>Tuple</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__TUPLE = INVOCATION_EXPRESSION__TUPLE;

	/**
	 * The feature id for the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION__TARGET = INVOCATION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Behavior Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION_FEATURE_COUNT = INVOCATION_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___TO_REFERENCE = INVOCATION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___OWNER = INVOCATION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___CURRENT_SCOPE = INVOCATION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___ENCLOSING_STATEMENT = INVOCATION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION = INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BOOLEAN_TYPE = INVOCATION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INTEGER_TYPE = INVOCATION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___STRING_TYPE = INVOCATION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BIT_STRING_TYPE = INVOCATION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___NATURAL_TYPE = INVOCATION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD = INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___TYPE_CACHED = INVOCATION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_NULL = INVOCATION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___REFERENCE = INVOCATION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___NEW_ASSIGNMENTS = INVOCATION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___RESOLVE__STRING = INVOCATION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___REFERENT_CACHED = INVOCATION_EXPRESSION___REFERENT_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___TYPE = INVOCATION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Invocation Expression type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___UPPER = INVOCATION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Invocation Expression upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___LOWER = INVOCATION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Invocation Expression lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER;

	/**
	 * The operation id for the '<em>Parameter Named</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING = INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING;

	/**
	 * The operation id for the '<em>Parameter Count</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PARAMETER_COUNT = INVOCATION_EXPRESSION___PARAMETER_COUNT;

	/**
	 * The operation id for the '<em>Parameter Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Is Assignable To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID = INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Effective Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Parameter From Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING;

	/**
	 * The operation id for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = INVOCATION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___REFERENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Referent1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___REFERENT1 = INVOCATION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Behavior Invocation referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BEHAVIOR_INVOCATION_REFERENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___FEATURE = INVOCATION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Behavior Invocation Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BEHAVIOR_INVOCATION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Behavior Invocation Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BEHAVIOR_INVOCATION_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Behavior Invocation Expression Referent Constraint</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BEHAVIOR_INVOCATION_EXPRESSION_REFERENT_CONSTRAINT__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Behavior Invocation Expression Argument Compatibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BEHAVIOR_INVOCATION_EXPRESSION_ARGUMENT_COMPATIBILITY__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Behavior Invocation Expression Alternative Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION___BEHAVIOR_INVOCATION_EXPRESSION_ALTERNATIVE_CONSTRUCTOR__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Behavior Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BEHAVIOR_INVOCATION_EXPRESSION_OPERATION_COUNT = INVOCATION_EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ShiftExpressionImpl <em>Shift Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ShiftExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getShiftExpression()
	 * @generated
	 */
	int SHIFT_EXPRESSION = 59;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__OWNER = BINARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__UPPER = BINARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__LOWER = BINARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__TYPE = BINARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__ASSIGNMENT_BEFORE = BINARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__ASSIGNMENT_AFTER = BINARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__OPERAND1 = BINARY_EXPRESSION__OPERAND1;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__OPERAND2 = BINARY_EXPRESSION__OPERAND2;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__OPERATOR = BINARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION__IS_BIT_STRING_CONVERSION = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Shift Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___TO_REFERENCE = BINARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___OWNER = BINARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SYNTAX_ELEMENT_OWNER = BINARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___CURRENT_SCOPE = BINARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = BINARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___ENCLOSING_STATEMENT = BINARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___ENCLOSING_EXPRESSION = BINARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___UPDATE_ALL__ELIST_ELIST = BINARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___COMMON_ANCESTOR__ELIST = BINARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___COMMON_ANCESTORS__ELIST = BINARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = BINARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = BINARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___PRIMITIVE_TYPE__STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___PRIMITIVE_TYPE____STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___BOOLEAN_TYPE = BINARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___INTEGER_TYPE = BINARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___STRING_TYPE = BINARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___UNLIMITED_NATURAL_TYPE = BINARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___BIT_STRING_TYPE = BINARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___NATURAL_TYPE = BINARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___COLLECTION_FUNCTION_ADD = BINARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___TYPE_CACHED = BINARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_NULL = BINARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___REFERENCE = BINARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___NEW_ASSIGNMENTS = BINARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___RESOLVE__STRING = BINARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___IS_ADD_TARGET__EXPRESSION = BINARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Validate Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___VALIDATE_ASSIGNMENTS = BINARY_EXPRESSION___VALIDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>No Null Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___NO_NULL_ARGUMENTS = BINARY_EXPRESSION___NO_NULL_ARGUMENTS;

	/**
	 * The operation id for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___TYPE = BINARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___LOWER = BINARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___UPPER = BINARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Shift Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SHIFT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Shift Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SHIFT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Shift Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SHIFT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Shift Expression Operands</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SHIFT_EXPRESSION_OPERANDS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Shift Expression Is Bit String Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION___SHIFT_EXPRESSION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Shift Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SHIFT_EXPRESSION_OPERATION_COUNT = BINARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.UnboundedLiteralExpressionImpl <em>Unbounded Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.UnboundedLiteralExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getUnboundedLiteralExpression()
	 * @generated
	 */
	int UNBOUNDED_LITERAL_EXPRESSION = 60;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION__OWNER = LITERAL_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION__UPPER = LITERAL_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION__LOWER = LITERAL_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION__TYPE = LITERAL_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION__ASSIGNMENT_BEFORE = LITERAL_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION__ASSIGNMENT_AFTER = LITERAL_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The number of structural features of the '<em>Unbounded Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION_FEATURE_COUNT = LITERAL_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___TO_REFERENCE = LITERAL_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___OWNER = LITERAL_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___CURRENT_SCOPE = LITERAL_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___ENCLOSING_STATEMENT = LITERAL_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___ENCLOSING_EXPRESSION = LITERAL_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___BOOLEAN_TYPE = LITERAL_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___INTEGER_TYPE = LITERAL_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___STRING_TYPE = LITERAL_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___BIT_STRING_TYPE = LITERAL_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___NATURAL_TYPE = LITERAL_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD = LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___TYPE_CACHED = LITERAL_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_NULL = LITERAL_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___REFERENCE = LITERAL_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___NEW_ASSIGNMENTS = LITERAL_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___RESOLVE__STRING = LITERAL_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___UPPER = LITERAL_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___LOWER = LITERAL_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Literal Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Literal Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___TYPE = LITERAL_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Unbounded Literal Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION___UNBOUNDED_LITERAL_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Unbounded Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNBOUNDED_LITERAL_EXPRESSION_OPERATION_COUNT = LITERAL_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ThisExpressionImpl <em>This Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ThisExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getThisExpression()
	 * @generated
	 */
	int THIS_EXPRESSION = 61;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The number of structural features of the '<em>This Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>This Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___THIS_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>This Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___THIS_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>This Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION___THIS_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The number of operations of the '<em>This Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int THIS_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ClassificationExpressionImpl <em>Classification Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ClassificationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getClassificationExpression()
	 * @generated
	 */
	int CLASSIFICATION_EXPRESSION = 62;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__OWNER = UNARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__UPPER = UNARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__LOWER = UNARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__TYPE = UNARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__ASSIGNMENT_BEFORE = UNARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__ASSIGNMENT_AFTER = UNARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__OPERATOR = UNARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__OPERAND = UNARY_EXPRESSION__OPERAND;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__REFERENT = UNARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Direct</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__IS_DIRECT = UNARY_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION__TYPE_NAME = UNARY_EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Classification Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION_FEATURE_COUNT = UNARY_EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___TO_REFERENCE = UNARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___OWNER = UNARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = UNARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CURRENT_SCOPE = UNARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = UNARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___ENCLOSING_STATEMENT = UNARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___ENCLOSING_EXPRESSION = UNARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = UNARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = UNARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = UNARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___COMMON_ANCESTOR__ELIST = UNARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___COMMON_ANCESTORS__ELIST = UNARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = UNARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = UNARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___PRIMITIVE_TYPE__STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___PRIMITIVE_TYPE____STRING = UNARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___BOOLEAN_TYPE = UNARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___INTEGER_TYPE = UNARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___STRING_TYPE = UNARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = UNARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___BIT_STRING_TYPE = UNARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___NATURAL_TYPE = UNARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___COLLECTION_FUNCTION_ADD = UNARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___TYPE_CACHED = UNARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_NULL = UNARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = UNARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = UNARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___REFERENCE = UNARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___NEW_ASSIGNMENTS = UNARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___RESOLVE__STRING = UNARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = UNARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Unary Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION___UNARY_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___UPDATE_ASSIGNMENTS = UNARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___TYPE = UNARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___LOWER = UNARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___UPPER = UNARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Classification Expression Is Direct Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CLASSIFICATION_EXPRESSION_IS_DIRECT_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Classification Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CLASSIFICATION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Classification Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CLASSIFICATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Classification Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CLASSIFICATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Classification Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CLASSIFICATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Classification Expression Type Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CLASSIFICATION_EXPRESSION_TYPE_NAME__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Classification Expression Operand</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION___CLASSIFICATION_EXPRESSION_OPERAND__DIAGNOSTICCHAIN_MAP = UNARY_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Classification Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFICATION_EXPRESSION_OPERATION_COUNT = UNARY_EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SuperInvocationExpressionImpl <em>Super Invocation Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SuperInvocationExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSuperInvocationExpression()
	 * @generated
	 */
	int SUPER_INVOCATION_EXPRESSION = 63;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__OWNER = INVOCATION_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__UPPER = INVOCATION_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__LOWER = INVOCATION_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__TYPE = INVOCATION_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE = INVOCATION_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__ASSIGNMENT_AFTER = INVOCATION_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Is Behavior</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__IS_BEHAVIOR = INVOCATION_EXPRESSION__IS_BEHAVIOR;

	/**
	 * The feature id for the '<em><b>Is Association End</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__IS_ASSOCIATION_END = INVOCATION_EXPRESSION__IS_ASSOCIATION_END;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__FEATURE = INVOCATION_EXPRESSION__FEATURE;

	/**
	 * The feature id for the '<em><b>Is Operation</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__IS_OPERATION = INVOCATION_EXPRESSION__IS_OPERATION;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__IS_DESTRUCTOR = INVOCATION_EXPRESSION__IS_DESTRUCTOR;

	/**
	 * The feature id for the '<em><b>Is Implicit</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__IS_IMPLICIT = INVOCATION_EXPRESSION__IS_IMPLICIT;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__REFERENT = INVOCATION_EXPRESSION__REFERENT;

	/**
	 * The feature id for the '<em><b>Parameter</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__PARAMETER = INVOCATION_EXPRESSION__PARAMETER;

	/**
	 * The feature id for the '<em><b>Is Signal</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__IS_SIGNAL = INVOCATION_EXPRESSION__IS_SIGNAL;

	/**
	 * The feature id for the '<em><b>Tuple</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__TUPLE = INVOCATION_EXPRESSION__TUPLE;

	/**
	 * The feature id for the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION__TARGET = INVOCATION_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Super Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION_FEATURE_COUNT = INVOCATION_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___TO_REFERENCE = INVOCATION_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___OWNER = INVOCATION_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___CURRENT_SCOPE = INVOCATION_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___ENCLOSING_STATEMENT = INVOCATION_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION = INVOCATION_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = INVOCATION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = INVOCATION_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST = INVOCATION_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = INVOCATION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = INVOCATION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING = INVOCATION_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___BOOLEAN_TYPE = INVOCATION_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INTEGER_TYPE = INVOCATION_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___STRING_TYPE = INVOCATION_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE = INVOCATION_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___BIT_STRING_TYPE = INVOCATION_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___NATURAL_TYPE = INVOCATION_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD = INVOCATION_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___TYPE_CACHED = INVOCATION_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_NULL = INVOCATION_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = INVOCATION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = INVOCATION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___REFERENCE = INVOCATION_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___NEW_ASSIGNMENTS = INVOCATION_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___RESOLVE__STRING = INVOCATION_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = INVOCATION_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = INVOCATION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Referent Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___REFERENT_CACHED = INVOCATION_EXPRESSION___REFERENT_CACHED;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___TYPE = INVOCATION_EXPRESSION___TYPE;

	/**
	 * The operation id for the '<em>Invocation Expression type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___UPPER = INVOCATION_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Invocation Expression upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___LOWER = INVOCATION_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Invocation Expression lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER;

	/**
	 * The operation id for the '<em>Parameter Named</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING = INVOCATION_EXPRESSION___PARAMETER_NAMED__STRING;

	/**
	 * The operation id for the '<em>Parameter Count</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PARAMETER_COUNT = INVOCATION_EXPRESSION___PARAMETER_COUNT;

	/**
	 * The operation id for the '<em>Parameter Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_FROM__INPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Is Assignable To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION = INVOCATION_EXPRESSION___PARAMETER_IS_ASSIGNABLE_TO__OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID = INVOCATION_EXPRESSION___ALTERNATIVE_CONSTRUCTOR_IS_VALID;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___BIND_TEMPLATE_IMPLICIT_ARGUMENTS1__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Effective Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION = INVOCATION_EXPRESSION___EFFECTIVE_TYPE__ELEMENTREFERENCE_EXPRESSION;

	/**
	 * The operation id for the '<em>Parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_ELEMENTS;

	/**
	 * The operation id for the '<em>Parameter From Property</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING = INVOCATION_EXPRESSION___PARAMETER_FROM_PROPERTY_WITH_MULTIPLICITY__ELEMENTREFERENCE_STRING_STRING;

	/**
	 * The operation id for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_BEHAVIOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_ASSOCIATION_END_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_IMPLICIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_IS_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_PARAMETER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS = INVOCATION_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION___INVOCATION_EXPRESSION_TEMPLATE_PARAMETERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___REFERENT = INVOCATION_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___FEATURE = INVOCATION_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___CONTEXT = INVOCATION_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Super Invocation Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SUPER_INVOCATION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Super Invocation Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SUPER_INVOCATION_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Super Invocation Expression Qualification</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SUPER_INVOCATION_EXPRESSION_QUALIFICATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Super Invocation Expression Implicit Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SUPER_INVOCATION_EXPRESSION_IMPLICIT_TARGET__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Super Invocation Expression Constructor Call</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SUPER_INVOCATION_EXPRESSION_CONSTRUCTOR_CALL__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Super Invocation Expression Destructor Call</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SUPER_INVOCATION_EXPRESSION_DESTRUCTOR_CALL__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Super Invocation Expression Operation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION___SUPER_INVOCATION_EXPRESSION_OPERATION__DIAGNOSTICCHAIN_MAP = INVOCATION_EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Super Invocation Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SUPER_INVOCATION_EXPRESSION_OPERATION_COUNT = INVOCATION_EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.IncrementOrDecrementExpressionImpl <em>Increment Or Decrement Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.IncrementOrDecrementExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getIncrementOrDecrementExpression()
	 * @generated
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION = 64;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Assignment</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__ASSIGNMENT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Operand</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__OPERAND = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Feature</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__FEATURE = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is Prefix</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__IS_PREFIX = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__IS_FEATURE = EXPRESSION_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Is Indexed</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__IS_INDEXED = EXPRESSION_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Is Data Value Update</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__IS_DATA_VALUE_UPDATE = EXPRESSION_FEATURE_COUNT + 7;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION__OPERATOR = EXPRESSION_FEATURE_COUNT + 8;

	/**
	 * The number of structural features of the '<em>Increment Or Decrement Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 9;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Assignment Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_ASSIGNMENT_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Is Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_IS_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Is Indexed Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_IS_INDEXED_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Is Data Value Update Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_IS_DATA_VALUE_UPDATE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Expression Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_EXPRESSION_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Operand</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_OPERAND__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Increment Or Decrement Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___INCREMENT_OR_DECREMENT_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 14;

	/**
	 * The number of operations of the '<em>Increment Or Decrement Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int INCREMENT_OR_DECREMENT_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 15;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BooleanLiteralExpressionImpl <em>Boolean Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BooleanLiteralExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBooleanLiteralExpression()
	 * @generated
	 */
	int BOOLEAN_LITERAL_EXPRESSION = 65;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__OWNER = LITERAL_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__UPPER = LITERAL_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__LOWER = LITERAL_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__TYPE = LITERAL_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__ASSIGNMENT_BEFORE = LITERAL_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__ASSIGNMENT_AFTER = LITERAL_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Image</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION__IMAGE = LITERAL_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Boolean Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION_FEATURE_COUNT = LITERAL_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___TO_REFERENCE = LITERAL_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___OWNER = LITERAL_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___CURRENT_SCOPE = LITERAL_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___ENCLOSING_STATEMENT = LITERAL_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___ENCLOSING_EXPRESSION = LITERAL_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___BOOLEAN_TYPE = LITERAL_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___INTEGER_TYPE = LITERAL_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___STRING_TYPE = LITERAL_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___BIT_STRING_TYPE = LITERAL_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___NATURAL_TYPE = LITERAL_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD = LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___TYPE_CACHED = LITERAL_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_NULL = LITERAL_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___REFERENCE = LITERAL_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___NEW_ASSIGNMENTS = LITERAL_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___RESOLVE__STRING = LITERAL_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___UPPER = LITERAL_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___LOWER = LITERAL_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Literal Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Literal Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___TYPE = LITERAL_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Boolean Literal Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION___BOOLEAN_LITERAL_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Boolean Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOOLEAN_LITERAL_EXPRESSION_OPERATION_COUNT = LITERAL_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NamedTupleImpl <em>Named Tuple</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NamedTupleImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNamedTuple()
	 * @generated
	 */
	int NAMED_TUPLE = 66;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE__OWNER = TUPLE__OWNER;

	/**
	 * The feature id for the '<em><b>Input</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE__INPUT = TUPLE__INPUT;

	/**
	 * The feature id for the '<em><b>Invocation</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE__INVOCATION = TUPLE__INVOCATION;

	/**
	 * The feature id for the '<em><b>Output</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE__OUTPUT = TUPLE__OUTPUT;

	/**
	 * The feature id for the '<em><b>Named Expression</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE__NAMED_EXPRESSION = TUPLE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Named Tuple</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE_FEATURE_COUNT = TUPLE_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___TO_REFERENCE = TUPLE___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___OWNER = TUPLE___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___SYNTAX_ELEMENT_OWNER = TUPLE___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___CURRENT_SCOPE = TUPLE___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___SYNTAX_ELEMENT_CURRENT_SCOPE = TUPLE___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___ENCLOSING_STATEMENT = TUPLE___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___ENCLOSING_EXPRESSION = TUPLE___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___ASSIGNMENTS_BEFORE = TUPLE___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = TUPLE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___UPDATE_ALL__ELIST_ELIST = TUPLE___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___COMMON_ANCESTOR__ELIST = TUPLE___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___COMMON_ANCESTORS__ELIST = TUPLE___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___REMOVE_DUPLICATE_ELEMENTS__ELIST = TUPLE___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___RESOLVE_IN_LIBRARY__STRING = TUPLE___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___PRIMITIVE_TYPE__STRING = TUPLE___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___PRIMITIVE_TYPE____STRING = TUPLE___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___BOOLEAN_TYPE = TUPLE___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = TUPLE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___INTEGER_TYPE = TUPLE___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_INTEGER_TYPE__ELEMENTREFERENCE = TUPLE___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___STRING_TYPE = TUPLE___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_STRING_TYPE__ELEMENTREFERENCE = TUPLE___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___UNLIMITED_NATURAL_TYPE = TUPLE___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = TUPLE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___BIT_STRING_TYPE = TUPLE___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = TUPLE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___NATURAL_TYPE = TUPLE___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_NATURAL_TYPE__ELEMENTREFERENCE = TUPLE___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = TUPLE___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___COLLECTION_FUNCTION_ADD = TUPLE___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = TUPLE___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = TUPLE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = TUPLE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Input Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___INPUT_CACHED = TUPLE___INPUT_CACHED;

	/**
	 * The operation id for the '<em>Input</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___INPUT = TUPLE___INPUT;

	/**
	 * The operation id for the '<em>Output Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___OUTPUT_CACHED = TUPLE___OUTPUT_CACHED;

	/**
	 * The operation id for the '<em>Output</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___OUTPUT = TUPLE___OUTPUT;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = TUPLE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___ASSIGNMENTS_AFTER = TUPLE___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___NEW_ASSIGNMENTS = TUPLE___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___UPDATE_FOR__ELIST_OUTPUTNAMEDEXPRESSION = TUPLE___UPDATE_FOR__ELIST_OUTPUTNAMEDEXPRESSION;

	/**
	 * The operation id for the '<em>Tuple Input Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___TUPLE_INPUT_DERIVATION__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_INPUT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Output Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___TUPLE_OUTPUT_DERIVATION__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_OUTPUT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Null Inputs</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___TUPLE_NULL_INPUTS__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_NULL_INPUTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Outputs</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___TUPLE_OUTPUTS__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_OUTPUTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___TUPLE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Tuple Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___TUPLE_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = TUPLE___TUPLE_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Size</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___SIZE = TUPLE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Input For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___INPUT_FOR__ELIST = TUPLE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Output For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___OUTPUT_FOR__ELIST = TUPLE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Output For Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___OUTPUT_FOR_EXPRESSION__EXPRESSION = TUPLE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Named Tuple Argument Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE___NAMED_TUPLE_ARGUMENT_NAMES__DIAGNOSTICCHAIN_MAP = TUPLE_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Named Tuple</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMED_TUPLE_OPERATION_COUNT = TUPLE_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NaturalLiteralExpressionImpl <em>Natural Literal Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NaturalLiteralExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNaturalLiteralExpression()
	 * @generated
	 */
	int NATURAL_LITERAL_EXPRESSION = 67;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION__OWNER = LITERAL_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION__UPPER = LITERAL_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION__LOWER = LITERAL_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION__TYPE = LITERAL_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION__ASSIGNMENT_BEFORE = LITERAL_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION__ASSIGNMENT_AFTER = LITERAL_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Image</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION__IMAGE = LITERAL_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Natural Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION_FEATURE_COUNT = LITERAL_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___TO_REFERENCE = LITERAL_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___OWNER = LITERAL_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = LITERAL_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___CURRENT_SCOPE = LITERAL_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___ENCLOSING_STATEMENT = LITERAL_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___ENCLOSING_EXPRESSION = LITERAL_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = LITERAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = LITERAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = LITERAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST = LITERAL_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = LITERAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = LITERAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING = LITERAL_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___BOOLEAN_TYPE = LITERAL_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___INTEGER_TYPE = LITERAL_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___STRING_TYPE = LITERAL_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = LITERAL_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___BIT_STRING_TYPE = LITERAL_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___NATURAL_TYPE = LITERAL_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD = LITERAL_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___TYPE_CACHED = LITERAL_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_NULL = LITERAL_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = LITERAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = LITERAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___REFERENCE = LITERAL_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___NEW_ASSIGNMENTS = LITERAL_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = LITERAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = LITERAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___RESOLVE__STRING = LITERAL_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = LITERAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___UPPER = LITERAL_EXPRESSION___UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___LOWER = LITERAL_EXPRESSION___LOWER;

	/**
	 * The operation id for the '<em>Literal Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Literal Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION___LITERAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___TYPE = LITERAL_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Natural Literal Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION___NATURAL_LITERAL_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = LITERAL_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Natural Literal Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NATURAL_LITERAL_EXPRESSION_OPERATION_COUNT = LITERAL_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceRangeImpl <em>Sequence Range</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceRangeImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceRange()
	 * @generated
	 */
	int SEQUENCE_RANGE = 68;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE__OWNER = SEQUENCE_ELEMENTS__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE__UPPER = SEQUENCE_ELEMENTS__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE__LOWER = SEQUENCE_ELEMENTS__LOWER;

	/**
	 * The feature id for the '<em><b>Range Lower</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE__RANGE_LOWER = SEQUENCE_ELEMENTS_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Range Upper</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE__RANGE_UPPER = SEQUENCE_ELEMENTS_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Sequence Range</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE_FEATURE_COUNT = SEQUENCE_ELEMENTS_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___TO_REFERENCE = SEQUENCE_ELEMENTS___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___OWNER = SEQUENCE_ELEMENTS___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SYNTAX_ELEMENT_OWNER = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___CURRENT_SCOPE = SEQUENCE_ELEMENTS___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SYNTAX_ELEMENT_CURRENT_SCOPE = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___ENCLOSING_STATEMENT = SEQUENCE_ELEMENTS___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___ENCLOSING_EXPRESSION = SEQUENCE_ELEMENTS___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___ASSIGNMENTS_BEFORE = SEQUENCE_ELEMENTS___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SEQUENCE_ELEMENTS___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___UPDATE_ALL__ELIST_ELIST = SEQUENCE_ELEMENTS___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___COMMON_ANCESTOR__ELIST = SEQUENCE_ELEMENTS___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___COMMON_ANCESTORS__ELIST = SEQUENCE_ELEMENTS___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___REMOVE_DUPLICATE_ELEMENTS__ELIST = SEQUENCE_ELEMENTS___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___RESOLVE_IN_LIBRARY__STRING = SEQUENCE_ELEMENTS___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___PRIMITIVE_TYPE__STRING = SEQUENCE_ELEMENTS___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___PRIMITIVE_TYPE____STRING = SEQUENCE_ELEMENTS___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___BOOLEAN_TYPE = SEQUENCE_ELEMENTS___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___INTEGER_TYPE = SEQUENCE_ELEMENTS___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_INTEGER_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___STRING_TYPE = SEQUENCE_ELEMENTS___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___UNLIMITED_NATURAL_TYPE = SEQUENCE_ELEMENTS___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___BIT_STRING_TYPE = SEQUENCE_ELEMENTS___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___NATURAL_TYPE = SEQUENCE_ELEMENTS___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___COLLECTION_FUNCTION_ADD = SEQUENCE_ELEMENTS___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___CONFORMS_TO__ELEMENTREFERENCE = SEQUENCE_ELEMENTS_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___ASSIGNMENTS_AFTER = SEQUENCE_ELEMENTS_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___UPPER = SEQUENCE_ELEMENTS_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___LOWER = SEQUENCE_ELEMENTS_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Sequence Range Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SEQUENCE_RANGE_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_ELEMENTS_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Sequence Range Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SEQUENCE_RANGE_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_ELEMENTS_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Sequence Range Expression Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SEQUENCE_RANGE_EXPRESSION_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = SEQUENCE_ELEMENTS_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Sequence Range Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE___SEQUENCE_RANGE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = SEQUENCE_ELEMENTS_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Sequence Range</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_RANGE_OPERATION_COUNT = SEQUENCE_ELEMENTS_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NameLeftHandSideImpl <em>Name Left Hand Side</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NameLeftHandSideImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNameLeftHandSide()
	 * @generated
	 */
	int NAME_LEFT_HAND_SIDE = 69;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__OWNER = LEFT_HAND_SIDE__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__UPPER = LEFT_HAND_SIDE__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__LOWER = LEFT_HAND_SIDE__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__TYPE = LEFT_HAND_SIDE__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__ASSIGNMENT_BEFORE = LEFT_HAND_SIDE__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__ASSIGNMENT_AFTER = LEFT_HAND_SIDE__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__REFERENT = LEFT_HAND_SIDE__REFERENT;

	/**
	 * The feature id for the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__TARGET = LEFT_HAND_SIDE_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Index</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE__INDEX = LEFT_HAND_SIDE_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Name Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE_FEATURE_COUNT = LEFT_HAND_SIDE_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___TO_REFERENCE = LEFT_HAND_SIDE___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___OWNER = LEFT_HAND_SIDE___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_OWNER = LEFT_HAND_SIDE___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___CURRENT_SCOPE = LEFT_HAND_SIDE___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_CURRENT_SCOPE = LEFT_HAND_SIDE___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___ENCLOSING_STATEMENT = LEFT_HAND_SIDE___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___ENCLOSING_EXPRESSION = LEFT_HAND_SIDE___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE = LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___UPDATE_ALL__ELIST_ELIST = LEFT_HAND_SIDE___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___COMMON_ANCESTOR__ELIST = LEFT_HAND_SIDE___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___COMMON_ANCESTORS__ELIST = LEFT_HAND_SIDE___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___REMOVE_DUPLICATE_ELEMENTS__ELIST = LEFT_HAND_SIDE___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___RESOLVE_IN_LIBRARY__STRING = LEFT_HAND_SIDE___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___PRIMITIVE_TYPE__STRING = LEFT_HAND_SIDE___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___PRIMITIVE_TYPE____STRING = LEFT_HAND_SIDE___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___BOOLEAN_TYPE = LEFT_HAND_SIDE___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___INTEGER_TYPE = LEFT_HAND_SIDE___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_INTEGER_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___STRING_TYPE = LEFT_HAND_SIDE___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_STRING_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___UNLIMITED_NATURAL_TYPE = LEFT_HAND_SIDE___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___BIT_STRING_TYPE = LEFT_HAND_SIDE___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NATURAL_TYPE = LEFT_HAND_SIDE___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_NATURAL_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___COLLECTION_FUNCTION_ADD = LEFT_HAND_SIDE___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___TYPE_CACHED = LEFT_HAND_SIDE___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_NULL = LEFT_HAND_SIDE___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = LEFT_HAND_SIDE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = LEFT_HAND_SIDE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = LEFT_HAND_SIDE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___ASSIGNMENTS_AFTER = LEFT_HAND_SIDE___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Left Hand Side type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_TYPE = LEFT_HAND_SIDE___LEFT_HAND_SIDE_TYPE;

	/**
	 * The operation id for the '<em>Left Hand Side upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_UPPER = LEFT_HAND_SIDE___LEFT_HAND_SIDE_UPPER;

	/**
	 * The operation id for the '<em>Left Hand Side lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_LOWER = LEFT_HAND_SIDE___LEFT_HAND_SIDE_LOWER;

	/**
	 * The operation id for the '<em>Assigned Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___ASSIGNED_NAME = LEFT_HAND_SIDE___ASSIGNED_NAME;

	/**
	 * The operation id for the '<em>Is Data Value Update</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___IS_DATA_VALUE_UPDATE = LEFT_HAND_SIDE___IS_DATA_VALUE_UPDATE;

	/**
	 * The operation id for the '<em>Left Hand Side Index Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_INDEX_EXPRESSION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE___LEFT_HAND_SIDE_INDEX_EXPRESSION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___TARGET = LEFT_HAND_SIDE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Index</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___INDEX = LEFT_HAND_SIDE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___REFERENT = LEFT_HAND_SIDE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Parameter Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___PARAMETER_REFERENT = LEFT_HAND_SIDE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___TYPE = LEFT_HAND_SIDE_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___UPPER = LEFT_HAND_SIDE_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___LOWER = LEFT_HAND_SIDE_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Old Assignment</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___OLD_ASSIGNMENT = LEFT_HAND_SIDE_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___FEATURE = LEFT_HAND_SIDE_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___EXPRESSION = LEFT_HAND_SIDE_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___PRIMARY = LEFT_HAND_SIDE_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___LOCAL_NAME = LEFT_HAND_SIDE_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Name Left Hand Side Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Name Left Hand Side Target Assignment</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TARGET_ASSIGNMENT__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Name Left Hand Side Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Name Left Hand Side Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Name Left Hand Side Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Name Left Hand Side Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Name Left Hand Side Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Name Left Hand Side Target Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TARGET_RESOLUTION__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Name Left Hand Side Indexed Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_INDEXED_FEATURE__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Name Left Hand Side Nontemplate Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_NONTEMPLATE_TARGET__DIAGNOSTICCHAIN_MAP = LEFT_HAND_SIDE_OPERATION_COUNT + 21;

	/**
	 * The number of operations of the '<em>Name Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAME_LEFT_HAND_SIDE_OPERATION_COUNT = LEFT_HAND_SIDE_OPERATION_COUNT + 22;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.EffectiveLeftHandSideImpl <em>Effective Left Hand Side</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.EffectiveLeftHandSideImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getEffectiveLeftHandSide()
	 * @generated
	 */
	int EFFECTIVE_LEFT_HAND_SIDE = 70;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__OWNER = NAME_LEFT_HAND_SIDE__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__UPPER = NAME_LEFT_HAND_SIDE__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__LOWER = NAME_LEFT_HAND_SIDE__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__TYPE = NAME_LEFT_HAND_SIDE__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__ASSIGNMENT_BEFORE = NAME_LEFT_HAND_SIDE__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__ASSIGNMENT_AFTER = NAME_LEFT_HAND_SIDE__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__REFERENT = NAME_LEFT_HAND_SIDE__REFERENT;

	/**
	 * The feature id for the '<em><b>Target</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__TARGET = NAME_LEFT_HAND_SIDE__TARGET;

	/**
	 * The feature id for the '<em><b>Index</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__INDEX = NAME_LEFT_HAND_SIDE__INDEX;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE__EXPRESSION = NAME_LEFT_HAND_SIDE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Effective Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE_FEATURE_COUNT = NAME_LEFT_HAND_SIDE_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___TO_REFERENCE = NAME_LEFT_HAND_SIDE___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___OWNER = NAME_LEFT_HAND_SIDE___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_OWNER = NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___CURRENT_SCOPE = NAME_LEFT_HAND_SIDE___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_CURRENT_SCOPE = NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___ENCLOSING_STATEMENT = NAME_LEFT_HAND_SIDE___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___ENCLOSING_EXPRESSION = NAME_LEFT_HAND_SIDE___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE = NAME_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = NAME_LEFT_HAND_SIDE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___UPDATE_ALL__ELIST_ELIST = NAME_LEFT_HAND_SIDE___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___COMMON_ANCESTOR__ELIST = NAME_LEFT_HAND_SIDE___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___COMMON_ANCESTORS__ELIST = NAME_LEFT_HAND_SIDE___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___REMOVE_DUPLICATE_ELEMENTS__ELIST = NAME_LEFT_HAND_SIDE___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___RESOLVE_IN_LIBRARY__STRING = NAME_LEFT_HAND_SIDE___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___PRIMITIVE_TYPE__STRING = NAME_LEFT_HAND_SIDE___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___PRIMITIVE_TYPE____STRING = NAME_LEFT_HAND_SIDE___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___BOOLEAN_TYPE = NAME_LEFT_HAND_SIDE___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___INTEGER_TYPE = NAME_LEFT_HAND_SIDE___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_INTEGER_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___STRING_TYPE = NAME_LEFT_HAND_SIDE___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_STRING_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___UNLIMITED_NATURAL_TYPE = NAME_LEFT_HAND_SIDE___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___BIT_STRING_TYPE = NAME_LEFT_HAND_SIDE___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NATURAL_TYPE = NAME_LEFT_HAND_SIDE___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_NATURAL_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___COLLECTION_FUNCTION_ADD = NAME_LEFT_HAND_SIDE___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___TYPE_CACHED = NAME_LEFT_HAND_SIDE___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_NULL = NAME_LEFT_HAND_SIDE___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = NAME_LEFT_HAND_SIDE___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = NAME_LEFT_HAND_SIDE___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = NAME_LEFT_HAND_SIDE___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = NAME_LEFT_HAND_SIDE___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = NAME_LEFT_HAND_SIDE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___ASSIGNMENTS_AFTER = NAME_LEFT_HAND_SIDE___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Left Hand Side type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_TYPE = NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_TYPE;

	/**
	 * The operation id for the '<em>Left Hand Side upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_UPPER = NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_UPPER;

	/**
	 * The operation id for the '<em>Left Hand Side lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_LOWER = NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_LOWER;

	/**
	 * The operation id for the '<em>Assigned Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___ASSIGNED_NAME = NAME_LEFT_HAND_SIDE___ASSIGNED_NAME;

	/**
	 * The operation id for the '<em>Is Data Value Update</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___IS_DATA_VALUE_UPDATE = NAME_LEFT_HAND_SIDE___IS_DATA_VALUE_UPDATE;

	/**
	 * The operation id for the '<em>Left Hand Side Index Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___LEFT_HAND_SIDE_INDEX_EXPRESSION__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___LEFT_HAND_SIDE_INDEX_EXPRESSION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___REFERENT = NAME_LEFT_HAND_SIDE___REFERENT;

	/**
	 * The operation id for the '<em>Parameter Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___PARAMETER_REFERENT = NAME_LEFT_HAND_SIDE___PARAMETER_REFERENT;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___TYPE = NAME_LEFT_HAND_SIDE___TYPE;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___UPPER = NAME_LEFT_HAND_SIDE___UPPER;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___LOWER = NAME_LEFT_HAND_SIDE___LOWER;

	/**
	 * The operation id for the '<em>Old Assignment</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___OLD_ASSIGNMENT = NAME_LEFT_HAND_SIDE___OLD_ASSIGNMENT;

	/**
	 * The operation id for the '<em>Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___LOCAL_NAME = NAME_LEFT_HAND_SIDE___LOCAL_NAME;

	/**
	 * The operation id for the '<em>Name Left Hand Side Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Target Assignment</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TARGET_ASSIGNMENT__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TARGET_ASSIGNMENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Target Resolution</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TARGET_RESOLUTION__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_TARGET_RESOLUTION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Indexed Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_INDEXED_FEATURE__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_INDEXED_FEATURE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Name Left Hand Side Nontemplate Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_NONTEMPLATE_TARGET__DIAGNOSTICCHAIN_MAP = NAME_LEFT_HAND_SIDE___NAME_LEFT_HAND_SIDE_NONTEMPLATE_TARGET__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___TARGET = NAME_LEFT_HAND_SIDE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Index</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___INDEX = NAME_LEFT_HAND_SIDE_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___FEATURE = NAME_LEFT_HAND_SIDE_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Primary</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___PRIMARY = NAME_LEFT_HAND_SIDE_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE___EXPRESSION = NAME_LEFT_HAND_SIDE_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Effective Left Hand Side</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EFFECTIVE_LEFT_HAND_SIDE_OPERATION_COUNT = NAME_LEFT_HAND_SIDE_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceReductionExpressionImpl <em>Sequence Reduction Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceReductionExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceReductionExpression()
	 * @generated
	 */
	int SEQUENCE_REDUCTION_EXPRESSION = 71;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__OWNER = EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__UPPER = EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__LOWER = EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__TYPE = EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__ASSIGNMENT_BEFORE = EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__ASSIGNMENT_AFTER = EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__REFERENT = EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Ordered</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__IS_ORDERED = EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Primary</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__PRIMARY = EXPRESSION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Behavior Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION__BEHAVIOR_NAME = EXPRESSION_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Sequence Reduction Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___TO_REFERENCE = EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___OWNER = EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SYNTAX_ELEMENT_OWNER = EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___CURRENT_SCOPE = EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___ENCLOSING_STATEMENT = EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___ENCLOSING_EXPRESSION = EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___ASSIGNMENTS_BEFORE = EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___UPDATE_ALL__ELIST_ELIST = EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___COMMON_ANCESTOR__ELIST = EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___COMMON_ANCESTORS__ELIST = EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___PRIMITIVE_TYPE__STRING = EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___PRIMITIVE_TYPE____STRING = EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___BOOLEAN_TYPE = EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___INTEGER_TYPE = EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___STRING_TYPE = EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___UNLIMITED_NATURAL_TYPE = EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___BIT_STRING_TYPE = EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___NATURAL_TYPE = EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___COLLECTION_FUNCTION_ADD = EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___TYPE_CACHED = EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_NULL = EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___REFERENCE = EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___NEW_ASSIGNMENTS = EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___RESOLVE__STRING = EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___IS_ADD_TARGET__EXPRESSION = EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___TYPE = EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___UPPER = EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___LOWER = EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Sequence Reduction Expression Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SEQUENCE_REDUCTION_EXPRESSION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Sequence Reduction Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SEQUENCE_REDUCTION_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Sequence Reduction Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SEQUENCE_REDUCTION_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Sequence Reduction Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SEQUENCE_REDUCTION_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Sequence Reduction Expression Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SEQUENCE_REDUCTION_EXPRESSION_BEHAVIOR__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Sequence Reduction Expression Behavior Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SEQUENCE_REDUCTION_EXPRESSION_BEHAVIOR_PARAMETERS__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Sequence Reduction Expression Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___SEQUENCE_REDUCTION_EXPRESSION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = EXPRESSION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION___UPDATE_ASSIGNMENTS = EXPRESSION_OPERATION_COUNT + 10;

	/**
	 * The number of operations of the '<em>Sequence Reduction Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_REDUCTION_EXPRESSION_OPERATION_COUNT = EXPRESSION_OPERATION_COUNT + 11;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SequenceExpressionListImpl <em>Sequence Expression List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SequenceExpressionListImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSequenceExpressionList()
	 * @generated
	 */
	int SEQUENCE_EXPRESSION_LIST = 72;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST__OWNER = SEQUENCE_ELEMENTS__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST__UPPER = SEQUENCE_ELEMENTS__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST__LOWER = SEQUENCE_ELEMENTS__LOWER;

	/**
	 * The feature id for the '<em><b>Element</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST__ELEMENT = SEQUENCE_ELEMENTS_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Sequence Expression List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST_FEATURE_COUNT = SEQUENCE_ELEMENTS_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___TO_REFERENCE = SEQUENCE_ELEMENTS___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___OWNER = SEQUENCE_ELEMENTS___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___SYNTAX_ELEMENT_OWNER = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___CURRENT_SCOPE = SEQUENCE_ELEMENTS___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___SYNTAX_ELEMENT_CURRENT_SCOPE = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___ENCLOSING_STATEMENT = SEQUENCE_ELEMENTS___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___ENCLOSING_EXPRESSION = SEQUENCE_ELEMENTS___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___ASSIGNMENTS_BEFORE = SEQUENCE_ELEMENTS___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SEQUENCE_ELEMENTS___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___UPDATE_ALL__ELIST_ELIST = SEQUENCE_ELEMENTS___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___COMMON_ANCESTOR__ELIST = SEQUENCE_ELEMENTS___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___COMMON_ANCESTORS__ELIST = SEQUENCE_ELEMENTS___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___REMOVE_DUPLICATE_ELEMENTS__ELIST = SEQUENCE_ELEMENTS___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___RESOLVE_IN_LIBRARY__STRING = SEQUENCE_ELEMENTS___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___PRIMITIVE_TYPE__STRING = SEQUENCE_ELEMENTS___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___PRIMITIVE_TYPE____STRING = SEQUENCE_ELEMENTS___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___BOOLEAN_TYPE = SEQUENCE_ELEMENTS___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___INTEGER_TYPE = SEQUENCE_ELEMENTS___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_INTEGER_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___STRING_TYPE = SEQUENCE_ELEMENTS___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___UNLIMITED_NATURAL_TYPE = SEQUENCE_ELEMENTS___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___BIT_STRING_TYPE = SEQUENCE_ELEMENTS___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___NATURAL_TYPE = SEQUENCE_ELEMENTS___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_NATURAL_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___COLLECTION_FUNCTION_ADD = SEQUENCE_ELEMENTS___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SEQUENCE_ELEMENTS___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Conforms To</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___CONFORMS_TO__ELEMENTREFERENCE = SEQUENCE_ELEMENTS_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SEQUENCE_ELEMENTS_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___ASSIGNMENTS_AFTER = SEQUENCE_ELEMENTS_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___LOWER = SEQUENCE_ELEMENTS_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___UPPER = SEQUENCE_ELEMENTS_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Sequence Expression List Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___SEQUENCE_EXPRESSION_LIST_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_ELEMENTS_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Sequence Expression List Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST___SEQUENCE_EXPRESSION_LIST_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = SEQUENCE_ELEMENTS_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Sequence Expression List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SEQUENCE_EXPRESSION_LIST_OPERATION_COUNT = SEQUENCE_ELEMENTS_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.RelationalExpressionImpl <em>Relational Expression</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.RelationalExpressionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getRelationalExpression()
	 * @generated
	 */
	int RELATIONAL_EXPRESSION = 73;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__OWNER = BINARY_EXPRESSION__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__UPPER = BINARY_EXPRESSION__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__LOWER = BINARY_EXPRESSION__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__TYPE = BINARY_EXPRESSION__TYPE;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__ASSIGNMENT_BEFORE = BINARY_EXPRESSION__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__ASSIGNMENT_AFTER = BINARY_EXPRESSION__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Operand1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__OPERAND1 = BINARY_EXPRESSION__OPERAND1;

	/**
	 * The feature id for the '<em><b>Operand2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__OPERAND2 = BINARY_EXPRESSION__OPERAND2;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__OPERATOR = BINARY_EXPRESSION__OPERATOR;

	/**
	 * The feature id for the '<em><b>Is Unlimited Natural</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION__IS_UNLIMITED_NATURAL = BINARY_EXPRESSION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Relational Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION_FEATURE_COUNT = BINARY_EXPRESSION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___TO_REFERENCE = BINARY_EXPRESSION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___OWNER = BINARY_EXPRESSION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___SYNTAX_ELEMENT_OWNER = BINARY_EXPRESSION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___CURRENT_SCOPE = BINARY_EXPRESSION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE = BINARY_EXPRESSION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___ENCLOSING_STATEMENT = BINARY_EXPRESSION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___ENCLOSING_EXPRESSION = BINARY_EXPRESSION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = BINARY_EXPRESSION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = BINARY_EXPRESSION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___UPDATE_ALL__ELIST_ELIST = BINARY_EXPRESSION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___COMMON_ANCESTOR__ELIST = BINARY_EXPRESSION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___COMMON_ANCESTORS__ELIST = BINARY_EXPRESSION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST = BINARY_EXPRESSION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___RESOLVE_IN_LIBRARY__STRING = BINARY_EXPRESSION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___PRIMITIVE_TYPE__STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___PRIMITIVE_TYPE____STRING = BINARY_EXPRESSION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___BOOLEAN_TYPE = BINARY_EXPRESSION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___INTEGER_TYPE = BINARY_EXPRESSION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___STRING_TYPE = BINARY_EXPRESSION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___UNLIMITED_NATURAL_TYPE = BINARY_EXPRESSION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___BIT_STRING_TYPE = BINARY_EXPRESSION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___NATURAL_TYPE = BINARY_EXPRESSION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___COLLECTION_FUNCTION_ADD = BINARY_EXPRESSION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___TYPE_CACHED = BINARY_EXPRESSION___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_NULL = BINARY_EXPRESSION___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = BINARY_EXPRESSION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = BINARY_EXPRESSION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___REFERENCE = BINARY_EXPRESSION___REFERENCE;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___NEW_ASSIGNMENTS = BINARY_EXPRESSION___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Expression update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___EXPRESSION_UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Update Assignments Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS_CACHED;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___RESOLVE__STRING = BINARY_EXPRESSION___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Is Add Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___IS_ADD_TARGET__EXPRESSION = BINARY_EXPRESSION___IS_ADD_TARGET__EXPRESSION;

	/**
	 * The operation id for the '<em>Expression Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Expression Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___EXPRESSION_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Validate Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___VALIDATE_ASSIGNMENTS = BINARY_EXPRESSION___VALIDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>No Null Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___NO_NULL_ARGUMENTS = BINARY_EXPRESSION___NO_NULL_ARGUMENTS;

	/**
	 * The operation id for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_MULTIPLICITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION___BINARY_EXPRESSION_OPERAND_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Update Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___UPDATE_ASSIGNMENTS = BINARY_EXPRESSION___UPDATE_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___TYPE = BINARY_EXPRESSION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___LOWER = BINARY_EXPRESSION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___UPPER = BINARY_EXPRESSION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Relational Expression Is Unlimited Natural Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___RELATIONAL_EXPRESSION_IS_UNLIMITED_NATURAL_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Relational Expression Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___RELATIONAL_EXPRESSION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Relational Expression Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___RELATIONAL_EXPRESSION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Relational Expression Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___RELATIONAL_EXPRESSION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Relational Expression Operand Types</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION___RELATIONAL_EXPRESSION_OPERAND_TYPES__DIAGNOSTICCHAIN_MAP = BINARY_EXPRESSION_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Relational Expression</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RELATIONAL_EXPRESSION_OPERATION_COUNT = BINARY_EXPRESSION_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.StatementImpl <em>Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.StatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getStatement()
	 * @generated
	 */
	int STATEMENT = 76;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT__ASSIGNMENT_BEFORE = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT__ASSIGNMENT_AFTER = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT__ENCLOSING_STATEMENT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT__IS_ISOLATED = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ENCLOSING_LOOP_STATEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ANNOTATION = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___HAS_ANNOTATION__STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___NEW_ASSIGNMENTS = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___RESOLVE__STRING = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ASSIGNMENTS_AFTER = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = SYNTAX_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___ASSIGNMENTS_AFTER_CACHED = SYNTAX_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___MERGE_ASSIGNMENTS__ELIST = SYNTAX_ELEMENT_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___MERGE__STRING_ELIST = SYNTAX_ELEMENT_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 14;

	/**
	 * The number of operations of the '<em>Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STATEMENT_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 15;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.LocalNameDeclarationStatementImpl <em>Local Name Declaration Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.LocalNameDeclarationStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getLocalNameDeclarationStatement()
	 * @generated
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT = 74;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__NAME = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Has Multiplicity</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__HAS_MULTIPLICITY = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__TYPE_NAME = STATEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__TYPE = STATEMENT_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Any</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT__IS_ANY = STATEMENT_FEATURE_COUNT + 5;

	/**
	 * The number of structural features of the '<em>Local Name Declaration Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 6;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ACTUAL_NAME = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Local Name Declaration Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___LOCAL_NAME_DECLARATION_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Local Name Declaration Statement Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___LOCAL_NAME_DECLARATION_STATEMENT_TYPE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Local Name Declaration Statement Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___LOCAL_NAME_DECLARATION_STATEMENT_LOCAL_NAME__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Local Name Declaration Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___LOCAL_NAME_DECLARATION_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Local Name Declaration Statement Expression Multiplicity</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___LOCAL_NAME_DECLARATION_STATEMENT_EXPRESSION_MULTIPLICITY__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Local Name Declaration Statement Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___LOCAL_NAME_DECLARATION_STATEMENT_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___TYPE_CACHED = STATEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT___TYPE = STATEMENT_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Local Name Declaration Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOCAL_NAME_DECLARATION_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AssignableLocalNameDeclarationImpl <em>Assignable Local Name Declaration</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AssignableLocalNameDeclarationImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAssignableLocalNameDeclaration()
	 * @generated
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION = 75;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION__OWNER = ASSIGNABLE_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION__UPPER = ASSIGNABLE_ELEMENT__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION__LOWER = ASSIGNABLE_ELEMENT__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION__TYPE = ASSIGNABLE_ELEMENT__TYPE;

	/**
	 * The feature id for the '<em><b>Local Name Declaration</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION__LOCAL_NAME_DECLARATION = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Assignable Local Name Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION_FEATURE_COUNT = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___TO_REFERENCE = ASSIGNABLE_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___OWNER = ASSIGNABLE_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___SYNTAX_ELEMENT_OWNER = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___CURRENT_SCOPE = ASSIGNABLE_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___SYNTAX_ELEMENT_CURRENT_SCOPE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___ENCLOSING_STATEMENT = ASSIGNABLE_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___ENCLOSING_EXPRESSION = ASSIGNABLE_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___UPDATE_ALL__ELIST_ELIST = ASSIGNABLE_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___COMMON_ANCESTOR__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___COMMON_ANCESTORS__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___REMOVE_DUPLICATE_ELEMENTS__ELIST = ASSIGNABLE_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___RESOLVE_IN_LIBRARY__STRING = ASSIGNABLE_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___PRIMITIVE_TYPE__STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___PRIMITIVE_TYPE____STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___BOOLEAN_TYPE = ASSIGNABLE_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___INTEGER_TYPE = ASSIGNABLE_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_INTEGER_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___STRING_TYPE = ASSIGNABLE_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___UNLIMITED_NATURAL_TYPE = ASSIGNABLE_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___BIT_STRING_TYPE = ASSIGNABLE_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___NATURAL_TYPE = ASSIGNABLE_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___COLLECTION_FUNCTION_ADD = ASSIGNABLE_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___TYPE_CACHED = ASSIGNABLE_ELEMENT___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_NULL = ASSIGNABLE_ELEMENT___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___TYPE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___LOWER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION___UPPER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Assignable Local Name Declaration</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSIGNABLE_LOCAL_NAME_DECLARATION_OPERATION_COUNT = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AnnotationImpl <em>Annotation</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AnnotationImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAnnotation()
	 * @generated
	 */
	int ANNOTATION = 77;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Text</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION__TEXT = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Identifier</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION__IDENTIFIER = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Argument</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION__ARGUMENT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Annotation</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Identifier</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___IDENTIFIER = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Arguments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION___ARGUMENTS = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Annotation</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATION_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.QualifiedNameListImpl <em>Qualified Name List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.QualifiedNameListImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getQualifiedNameList()
	 * @generated
	 */
	int QUALIFIED_NAME_LIST = 78;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST__NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Qualified Name List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST___CURRENT_SCOPE = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>Qualified Name List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int QUALIFIED_NAME_LIST_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NonFinalClauseImpl <em>Non Final Clause</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NonFinalClauseImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNonFinalClause()
	 * @generated
	 */
	int NON_FINAL_CLAUSE = 79;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Condition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE__CONDITION = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Body</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE__BODY = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Non Final Clause</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___ASSIGNMENTS_AFTER = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Non Final Clause Assignments Before Body</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___NON_FINAL_CLAUSE_ASSIGNMENTS_BEFORE_BODY__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Non Final Clause Condition Local Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___NON_FINAL_CLAUSE_CONDITION_LOCAL_NAMES__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Non Final Clause Condition Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE___NON_FINAL_CLAUSE_CONDITION_TYPE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The number of operations of the '<em>Non Final Clause</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_FINAL_CLAUSE_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BlockImpl <em>Block</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BlockImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBlock()
	 * @generated
	 */
	int BLOCK = 80;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Statement</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK__STATEMENT = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK__ASSIGNMENT_AFTER = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK__ASSIGNMENT_BEFORE = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Block</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___NEW_ASSIGNMENTS = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Block Assignments Before Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___BLOCK_ASSIGNMENTS_BEFORE_STATEMENTS__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Block Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___BLOCK_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Block Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK___BLOCK_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Block</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BlockStatementImpl <em>Block Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BlockStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBlockStatement()
	 * @generated
	 */
	int BLOCK_STATEMENT = 81;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT__BLOCK = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Parallel</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT__IS_PARALLEL = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Block Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Block Statement Parallel Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___BLOCK_STATEMENT_PARALLEL_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Block Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___BLOCK_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Block Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___BLOCK_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Block Statement Enclosed Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___BLOCK_STATEMENT_ENCLOSED_STATEMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Block Statement Is Parallel Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___BLOCK_STATEMENT_IS_PARALLEL_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Block Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BLOCK_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.DoStatementImpl <em>Do Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.DoStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getDoStatement()
	 * @generated
	 */
	int DO_STATEMENT = 82;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Condition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Body</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT__BODY = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Do Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Do Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___DO_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Do Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___DO_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Do Statement Condition</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___DO_STATEMENT_CONDITION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Do Statement Enclosed Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT___DO_STATEMENT_ENCLOSED_STATEMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Do Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DO_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ConcurrentClausesImpl <em>Concurrent Clauses</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ConcurrentClausesImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getConcurrentClauses()
	 * @generated
	 */
	int CONCURRENT_CLAUSES = 83;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Clause</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES__CLAUSE = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Concurrent Clauses</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Concurrent Clauses Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___CONCURRENT_CLAUSES_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Concurrent Clauses Condition Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES___CONCURRENT_CLAUSES_CONDITION_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Concurrent Clauses</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CONCURRENT_CLAUSES_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BreakStatementImpl <em>Break Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BreakStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBreakStatement()
	 * @generated
	 */
	int BREAK_STATEMENT = 84;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Target</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT__TARGET = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Break Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Break Statement Target Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___BREAK_STATEMENT_TARGET_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Break Statement Nonparallel Target</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___BREAK_STATEMENT_NONPARALLEL_TARGET__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Break Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BREAK_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ExpressionStatementImpl <em>Expression Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ExpressionStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getExpressionStatement()
	 * @generated
	 */
	int EXPRESSION_STATEMENT = 85;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Expression Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Expression Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___EXPRESSION_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Expression Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT___EXPRESSION_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Expression Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EXPRESSION_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ClassifyStatementImpl <em>Classify Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ClassifyStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getClassifyStatement()
	 * @generated
	 */
	int CLASSIFY_STATEMENT = 86;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>From List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__FROM_LIST = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>To List</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__TO_LIST = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>From Class</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__FROM_CLASS = STATEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>To Class</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__TO_CLASS = STATEMENT_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Reclassify All</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT__IS_RECLASSIFY_ALL = STATEMENT_FEATURE_COUNT + 5;

	/**
	 * The number of structural features of the '<em>Classify Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 6;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignment After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___ASSIGNMENT_AFTER = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Classify Statement Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CLASSIFY_STATEMENT_EXPRESSION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Classify Statement Class Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CLASSIFY_STATEMENT_CLASS_NAMES__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Classify Statement Classes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CLASSIFY_STATEMENT_CLASSES__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Classify Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CLASSIFY_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Classify Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CLASSIFY_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Classify Statement From Class Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CLASSIFY_STATEMENT_FROM_CLASS_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Classify Statement To Class Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT___CLASSIFY_STATEMENT_TO_CLASS_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Classify Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFY_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ForStatementImpl <em>For Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ForStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getForStatement()
	 * @generated
	 */
	int FOR_STATEMENT = 87;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Body</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__BODY = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Variable Definition</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__VARIABLE_DEFINITION = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Parallel</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT__IS_PARALLEL = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>For Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Assignments After Variables</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ASSIGNMENTS_AFTER_VARIABLES = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Parallel Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___PARALLEL_NAMES = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>For Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>For Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>For Statement Parallel Annotation Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_PARALLEL_ANNOTATION_NAMES__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>For Statement Parallel Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_PARALLEL_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>For Statement Variable Definitions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_VARIABLE_DEFINITIONS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>For Statement Loop Variables</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_LOOP_VARIABLES__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>For Statement Is Parallel Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_IS_PARALLEL_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>For Statement Enclosed Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___FOR_STATEMENT_ENCLOSED_STATEMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT_OPERATION_COUNT + 13;

	/**
	 * The number of operations of the '<em>For Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FOR_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 14;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.LoopVariableDefinitionImpl <em>Loop Variable Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.LoopVariableDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getLoopVariableDefinition()
	 * @generated
	 */
	int LOOP_VARIABLE_DEFINITION = 88;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Variable</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__VARIABLE = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expression1</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__EXPRESSION1 = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Expression2</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__EXPRESSION2 = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__TYPE_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Type Is Inferred</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__TYPE_IS_INFERRED = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Collection Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__IS_COLLECTION_CONVERSION = SYNTAX_ELEMENT_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__TYPE = SYNTAX_ELEMENT_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Is First</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__IS_FIRST = SYNTAX_ELEMENT_FEATURE_COUNT + 7;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__ASSIGNMENT_BEFORE = SYNTAX_ELEMENT_FEATURE_COUNT + 8;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__ASSIGNMENT_AFTER = SYNTAX_ELEMENT_FEATURE_COUNT + 9;

	/**
	 * The feature id for the '<em><b>Is Any</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION__IS_ANY = SYNTAX_ELEMENT_FEATURE_COUNT + 10;

	/**
	 * The number of structural features of the '<em>Loop Variable Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 11;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___ACTUAL_NAME = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___NEW_ASSIGNMENTS = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Loop Variable Definition Assignment After Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_ASSIGNMENT_AFTER_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Loop Variable Definition Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Loop Variable Definition Range Expressions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_RANGE_EXPRESSIONS__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Loop Variable Definition Type Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_TYPE_NAME__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Loop Variable Definition Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Loop Variable Definition Declared Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_DECLARED_TYPE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Loop Variable Definition Is Collection Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_IS_COLLECTION_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Loop Variable Definition Variable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION___LOOP_VARIABLE_DEFINITION_VARIABLE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Loop Variable Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int LOOP_VARIABLE_DEFINITION_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.IfStatementImpl <em>If Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.IfStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getIfStatement()
	 * @generated
	 */
	int IF_STATEMENT = 89;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Non Final Clauses</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__NON_FINAL_CLAUSES = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Final Clause</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__FINAL_CLAUSE = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Assured</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__IS_ASSURED = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Determinate</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT__IS_DETERMINATE = STATEMENT_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>If Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>If Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IF_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>If Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IF_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>If Statement Enclosed Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IF_STATEMENT_ENCLOSED_STATEMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>If Statement Is Assured Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IF_STATEMENT_IS_ASSURED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>If Statement Is Determinate Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___IF_STATEMENT_IS_DETERMINATE_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>If Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IF_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SwitchStatementImpl <em>Switch Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SwitchStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSwitchStatement()
	 * @generated
	 */
	int SWITCH_STATEMENT = 90;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Non Default Clause</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__NON_DEFAULT_CLAUSE = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Default Clause</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__DEFAULT_CLAUSE = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Assured</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__IS_ASSURED = STATEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is Determinate</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT__IS_DETERMINATE = STATEMENT_FEATURE_COUNT + 4;

	/**
	 * The number of structural features of the '<em>Switch Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 5;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Switch Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Switch Statement Case Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_CASE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Switch Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Switch Statement Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Switch Statement Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_EXPRESSION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Switch Statement Enclosed Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_ENCLOSED_STATEMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Switch Statement Is Determinate Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_IS_DETERMINATE_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Switch Statement Is Assured Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___SWITCH_STATEMENT_IS_ASSURED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT_OPERATION_COUNT + 10;

	/**
	 * The number of operations of the '<em>Switch Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 11;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SwitchClauseImpl <em>Switch Clause</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SwitchClauseImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSwitchClause()
	 * @generated
	 */
	int SWITCH_CLAUSE = 91;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Case</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE__CASE = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE__BLOCK = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Switch Clause</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___ASSIGNMENTS_AFTER = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Switch Clause Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___SWITCH_CLAUSE_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Switch Clause Case Local Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___SWITCH_CLAUSE_CASE_LOCAL_NAMES__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Switch Clause Cases</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE___SWITCH_CLAUSE_CASES__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The number of operations of the '<em>Switch Clause</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SWITCH_CLAUSE_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.WhileStatementImpl <em>While Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.WhileStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getWhileStatement()
	 * @generated
	 */
	int WHILE_STATEMENT = 92;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Body</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT__BODY = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Condition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT__CONDITION = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>While Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>While Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___WHILE_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>While Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___WHILE_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>While Statement Condition</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___WHILE_STATEMENT_CONDITION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>While Statement Enclosed Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT___WHILE_STATEMENT_ENCLOSED_STATEMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>While Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int WHILE_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ReturnStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getReturnStatement()
	 * @generated
	 */
	int RETURN_STATEMENT = 93;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Expression</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__EXPRESSION = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Behavior</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT__BEHAVIOR = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Return Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Return Statement Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___RETURN_STATEMENT_CONTEXT__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Return Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___RETURN_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Return Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT___RETURN_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Return Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.InLineStatementImpl <em>In Line Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.InLineStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getInLineStatement()
	 * @generated
	 */
	int IN_LINE_STATEMENT = 94;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Language</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT__LANGUAGE = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Code</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT__CODE = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>In Line Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>In Line Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT___IN_LINE_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>In Line Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IN_LINE_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AcceptStatementImpl <em>Accept Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AcceptStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAcceptStatement()
	 * @generated
	 */
	int ACCEPT_STATEMENT = 95;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The feature id for the '<em><b>Accept Block</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__ACCEPT_BLOCK = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Behavior</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__BEHAVIOR = STATEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Simple</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT__IS_SIMPLE = STATEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Accept Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Effective Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___EFFECTIVE_BEHAVIOR = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Effective Behavior </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___EFFECTIVE_BEHAVIOR_ = STATEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Accept Statement Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_CONTEXT__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Accept Statement Signals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_SIGNALS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Received Signals</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___RECEIVED_SIGNALS__ELEMENTREFERENCE = STATEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Received Signals </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___RECEIVED_SIGNALS____ELEMENTREFERENCE = STATEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Accept Statement Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_NAMES__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Accept Statement Simple Accept Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_SIMPLE_ACCEPT_LOCAL_NAME__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Accept Statement Compound Accept Local Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_COMPOUND_ACCEPT_LOCAL_NAME__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Accept Statement Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_ASSIGNMENTS_BEFORE__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Accept Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Accept Statement New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_NEW_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Accept Statement Is Simple Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_IS_SIMPLE_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Accept Statement Enclosed Statements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT___ACCEPT_STATEMENT_ENCLOSED_STATEMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 14;

	/**
	 * The number of operations of the '<em>Accept Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 15;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AcceptBlockImpl <em>Accept Block</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AcceptBlockImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAcceptBlock()
	 * @generated
	 */
	int ACCEPT_BLOCK = 96;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK__NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Block</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK__BLOCK = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Signal Names</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK__SIGNAL_NAMES = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Signal</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK__SIGNAL = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Accept Block</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___ACTUAL_NAME = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Accept Block Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___ACCEPT_BLOCK_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Accept Block Signal Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK___ACCEPT_BLOCK_SIGNAL_NAMES__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Accept Block</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACCEPT_BLOCK_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.EmptyStatementImpl <em>Empty Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.EmptyStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getEmptyStatement()
	 * @generated
	 */
	int EMPTY_STATEMENT = 97;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT__OWNER = STATEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Assignment Before</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT__ASSIGNMENT_BEFORE = STATEMENT__ASSIGNMENT_BEFORE;

	/**
	 * The feature id for the '<em><b>Assignment After</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT__ASSIGNMENT_AFTER = STATEMENT__ASSIGNMENT_AFTER;

	/**
	 * The feature id for the '<em><b>Enclosing Statement</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT__ENCLOSING_STATEMENT = STATEMENT__ENCLOSING_STATEMENT;

	/**
	 * The feature id for the '<em><b>Is Isolated</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT__IS_ISOLATED = STATEMENT__IS_ISOLATED;

	/**
	 * The number of structural features of the '<em>Empty Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT_FEATURE_COUNT = STATEMENT_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___TO_REFERENCE = STATEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___OWNER = STATEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___SYNTAX_ELEMENT_OWNER = STATEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___CURRENT_SCOPE = STATEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ENCLOSING_STATEMENT = STATEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ENCLOSING_EXPRESSION = STATEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ASSIGNMENTS_BEFORE = STATEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___UPDATE_ALL__ELIST_ELIST = STATEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___COMMON_ANCESTOR__ELIST = STATEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___COMMON_ANCESTORS__ELIST = STATEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___RESOLVE_IN_LIBRARY__STRING = STATEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___PRIMITIVE_TYPE__STRING = STATEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___PRIMITIVE_TYPE____STRING = STATEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___BOOLEAN_TYPE = STATEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___INTEGER_TYPE = STATEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___STRING_TYPE = STATEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___UNLIMITED_NATURAL_TYPE = STATEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___BIT_STRING_TYPE = STATEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___NATURAL_TYPE = STATEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___COLLECTION_FUNCTION_ADD = STATEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Enclosing Loop Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ENCLOSING_LOOP_STATEMENT = STATEMENT___ENCLOSING_LOOP_STATEMENT;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Statement annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION = STATEMENT___STATEMENT_ANNOTATION_ALLOWED__ANNOTATION;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ANNOTATION = STATEMENT___ANNOTATION;

	/**
	 * The operation id for the '<em>Has Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___HAS_ANNOTATION__STRING = STATEMENT___HAS_ANNOTATION__STRING;

	/**
	 * The operation id for the '<em>New Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___NEW_ASSIGNMENTS = STATEMENT___NEW_ASSIGNMENTS;

	/**
	 * The operation id for the '<em>Resolve</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___RESOLVE__STRING = STATEMENT___RESOLVE__STRING;

	/**
	 * The operation id for the '<em>Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ASSIGNMENTS_AFTER = STATEMENT___ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Statement assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___STATEMENT_ASSIGNMENTS_AFTER = STATEMENT___STATEMENT_ASSIGNMENTS_AFTER;

	/**
	 * The operation id for the '<em>Assignments After Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___ASSIGNMENTS_AFTER_CACHED = STATEMENT___ASSIGNMENTS_AFTER_CACHED;

	/**
	 * The operation id for the '<em>Merge Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___MERGE_ASSIGNMENTS__ELIST = STATEMENT___MERGE_ASSIGNMENTS__ELIST;

	/**
	 * The operation id for the '<em>Merge</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___MERGE__STRING_ELIST = STATEMENT___MERGE__STRING_ELIST;

	/**
	 * The operation id for the '<em>Statement Annotations Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_ANNOTATIONS_ALLOWED__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Unique Assignments</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_UNIQUE_ASSIGNMENTS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP = STATEMENT___STATEMENT_IS_ISOLATED_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Empty Statement Assignments After</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT___EMPTY_STATEMENT_ASSIGNMENTS_AFTER__DIAGNOSTICCHAIN_MAP = STATEMENT_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>Empty Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int EMPTY_STATEMENT_OPERATION_COUNT = STATEMENT_OPERATION_COUNT + 1;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.MemberDefinitionImpl <em>Member Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.MemberDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getMemberDefinition()
	 * @generated
	 */
	int MEMBER_DEFINITION = 100;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION__NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION__IS_STUB = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION__IS_FEATURE = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION__IS_PRIMITIVE = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION__IS_EXTERNAL = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION__SUBUNIT = SYNTAX_ELEMENT_FEATURE_COUNT + 5;

	/**
	 * The number of structural features of the '<em>Member Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 6;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ANNOTATION = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ACTUAL_NAME = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___OUTER_SCOPE = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___QUALIFIED_NAME = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___NAMESPACE_REFERENCE = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ADD_TO_MODEL = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = SYNTAX_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = SYNTAX_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = SYNTAX_ELEMENT_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = SYNTAX_ELEMENT_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___TEMPLATE_PARAMETERS = SYNTAX_ELEMENT_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_TEMPLATE = SYNTAX_ELEMENT_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___IS_FEATURE = SYNTAX_ELEMENT_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION___CONTAINING_MEMBER = SYNTAX_ELEMENT_OPERATION_COUNT + 23;

	/**
	 * The number of operations of the '<em>Member Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_DEFINITION_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 24;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NamespaceDefinitionImpl <em>Namespace Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NamespaceDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNamespaceDefinition()
	 * @generated
	 */
	int NAMESPACE_DEFINITION = 99;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__OWNER = MEMBER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__NAME = MEMBER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__IS_STUB = MEMBER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__IS_FEATURE = MEMBER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__IS_PRIMITIVE = MEMBER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__IS_EXTERNAL = MEMBER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__SUBUNIT = MEMBER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__OWNED_MEMBER = MEMBER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__UNIT = MEMBER_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION__MEMBER = MEMBER_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Namespace Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION_FEATURE_COUNT = MEMBER_DEFINITION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___TO_REFERENCE = MEMBER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___OWNER = MEMBER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___SYNTAX_ELEMENT_OWNER = MEMBER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = MEMBER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ENCLOSING_STATEMENT = MEMBER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ENCLOSING_EXPRESSION = MEMBER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___UPDATE_ALL__ELIST_ELIST = MEMBER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___COMMON_ANCESTOR__ELIST = MEMBER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___COMMON_ANCESTORS__ELIST = MEMBER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = MEMBER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___RESOLVE_IN_LIBRARY__STRING = MEMBER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___PRIMITIVE_TYPE__STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___PRIMITIVE_TYPE____STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___BOOLEAN_TYPE = MEMBER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___INTEGER_TYPE = MEMBER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___STRING_TYPE = MEMBER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___UNLIMITED_NATURAL_TYPE = MEMBER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___BIT_STRING_TYPE = MEMBER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NATURAL_TYPE = MEMBER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___COLLECTION_FUNCTION_ADD = MEMBER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ANNOTATION = MEMBER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ACTUAL_NAME = MEMBER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = MEMBER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___QUALIFIED_NAME = MEMBER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_REFERENCE = MEMBER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ADD_TO_MODEL = MEMBER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = MEMBER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_TEMPLATE = MEMBER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IS_FEATURE = MEMBER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___CONTAINING_MEMBER = MEMBER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___CURRENT_SCOPE = MEMBER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___OUTER_SCOPE = MEMBER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = MEMBER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MODEL_NAMESPACE = MEMBER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MODEL_SCOPE = MEMBER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___RESOLVE_IN_SCOPE__STRING = MEMBER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___APPLIED_PROFILES = MEMBER_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = MEMBER_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___PARAMETERS = MEMBER_DEFINITION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___RETURN_PARAMETER = MEMBER_DEFINITION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = MEMBER_DEFINITION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___SUBUNIT_OWNED_MEMBERS = MEMBER_DEFINITION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = MEMBER_DEFINITION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = MEMBER_DEFINITION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___TEMPLATE_PARAMETERS = MEMBER_DEFINITION_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBERS_CACHED = MEMBER_DEFINITION_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___MEMBERS = MEMBER_DEFINITION_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = MEMBER_DEFINITION_OPERATION_COUNT + 17;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IMPORTED_MEMBERS = MEMBER_DEFINITION_OPERATION_COUNT + 18;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___IMPORT_MEMBERS__ELIST = MEMBER_DEFINITION_OPERATION_COUNT + 19;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___EXCLUDE_COLLISIONS__ELIST = MEMBER_DEFINITION_OPERATION_COUNT + 20;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___REMOVE_DUPLICATES__ELIST = MEMBER_DEFINITION_OPERATION_COUNT + 21;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = MEMBER_DEFINITION_OPERATION_COUNT + 22;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = MEMBER_DEFINITION_OPERATION_COUNT + 23;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___STUB = MEMBER_DEFINITION_OPERATION_COUNT + 24;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___STUB_FOR__UNITDEFINITION = MEMBER_DEFINITION_OPERATION_COUNT + 25;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 26;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 27;

	/**
	 * The number of operations of the '<em>Namespace Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NAMESPACE_DEFINITION_OPERATION_COUNT = MEMBER_DEFINITION_OPERATION_COUNT + 28;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.PackageDefinitionImpl <em>Package Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.PackageDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getPackageDefinition()
	 * @generated
	 */
	int PACKAGE_DEFINITION = 114;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__OWNER = NAMESPACE_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__NAME = NAMESPACE_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__IS_STUB = NAMESPACE_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__IS_FEATURE = NAMESPACE_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__IS_PRIMITIVE = NAMESPACE_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__IS_EXTERNAL = NAMESPACE_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__SUBUNIT = NAMESPACE_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__OWNED_MEMBER = NAMESPACE_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__UNIT = NAMESPACE_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__MEMBER = NAMESPACE_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Applied Profile</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION__APPLIED_PROFILE = NAMESPACE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Package Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION_FEATURE_COUNT = NAMESPACE_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___TO_REFERENCE = NAMESPACE_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___OWNER = NAMESPACE_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___SYNTAX_ELEMENT_OWNER = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ENCLOSING_STATEMENT = NAMESPACE_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ENCLOSING_EXPRESSION = NAMESPACE_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ASSIGNMENTS_BEFORE = NAMESPACE_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = NAMESPACE_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___UPDATE_ALL__ELIST_ELIST = NAMESPACE_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___COMMON_ANCESTOR__ELIST = NAMESPACE_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___COMMON_ANCESTORS__ELIST = NAMESPACE_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = NAMESPACE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___RESOLVE_IN_LIBRARY__STRING = NAMESPACE_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___PRIMITIVE_TYPE__STRING = NAMESPACE_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___PRIMITIVE_TYPE____STRING = NAMESPACE_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___BOOLEAN_TYPE = NAMESPACE_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___INTEGER_TYPE = NAMESPACE_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___STRING_TYPE = NAMESPACE_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___UNLIMITED_NATURAL_TYPE = NAMESPACE_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___BIT_STRING_TYPE = NAMESPACE_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NATURAL_TYPE = NAMESPACE_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___COLLECTION_FUNCTION_ADD = NAMESPACE_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ANNOTATION = NAMESPACE_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ACTUAL_NAME = NAMESPACE_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = NAMESPACE_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___QUALIFIED_NAME = NAMESPACE_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_REFERENCE = NAMESPACE_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ADD_TO_MODEL = NAMESPACE_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = NAMESPACE_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = NAMESPACE_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_TEMPLATE = NAMESPACE_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_FEATURE = NAMESPACE_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___CONTAINING_MEMBER = NAMESPACE_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___CURRENT_SCOPE = NAMESPACE_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___OUTER_SCOPE = NAMESPACE_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MODEL_NAMESPACE = NAMESPACE_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MODEL_SCOPE = NAMESPACE_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___RESOLVE_IN_SCOPE__STRING = NAMESPACE_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___PARAMETERS = NAMESPACE_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___RETURN_PARAMETER = NAMESPACE_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___SUBUNIT_OWNED_MEMBERS = NAMESPACE_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___TEMPLATE_PARAMETERS = NAMESPACE_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBERS_CACHED = NAMESPACE_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MEMBERS = NAMESPACE_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IMPORTED_MEMBERS = NAMESPACE_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IMPORT_MEMBERS__ELIST = NAMESPACE_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___EXCLUDE_COLLISIONS__ELIST = NAMESPACE_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___REMOVE_DUPLICATES__ELIST = NAMESPACE_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___STUB = NAMESPACE_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___STUB_FOR__UNITDEFINITION = NAMESPACE_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Allow Package Only</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ALLOW_PACKAGE_ONLY = NAMESPACE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = NAMESPACE_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = NAMESPACE_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = NAMESPACE_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Package Definition Applied Profile Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___PACKAGE_DEFINITION_APPLIED_PROFILE_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION___APPLIED_PROFILES = NAMESPACE_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The number of operations of the '<em>Package Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_DEFINITION_OPERATION_COUNT = NAMESPACE_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ModelNamespaceImpl <em>Model Namespace</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ModelNamespaceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getModelNamespace()
	 * @generated
	 */
	int MODEL_NAMESPACE = 98;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__OWNER = PACKAGE_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__NAME = PACKAGE_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__IS_STUB = PACKAGE_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__IS_FEATURE = PACKAGE_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__IS_PRIMITIVE = PACKAGE_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__IS_EXTERNAL = PACKAGE_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__SUBUNIT = PACKAGE_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__OWNED_MEMBER = PACKAGE_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__UNIT = PACKAGE_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__MEMBER = PACKAGE_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Applied Profile</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE__APPLIED_PROFILE = PACKAGE_DEFINITION__APPLIED_PROFILE;

	/**
	 * The number of structural features of the '<em>Model Namespace</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE_FEATURE_COUNT = PACKAGE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___TO_REFERENCE = PACKAGE_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___OWNER = PACKAGE_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___SYNTAX_ELEMENT_OWNER = PACKAGE_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___SYNTAX_ELEMENT_CURRENT_SCOPE = PACKAGE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ENCLOSING_STATEMENT = PACKAGE_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ENCLOSING_EXPRESSION = PACKAGE_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ASSIGNMENTS_BEFORE = PACKAGE_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = PACKAGE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = PACKAGE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = PACKAGE_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___UPDATE_ALL__ELIST_ELIST = PACKAGE_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___COMMON_ANCESTOR__ELIST = PACKAGE_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___COMMON_ANCESTORS__ELIST = PACKAGE_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___REMOVE_DUPLICATE_ELEMENTS__ELIST = PACKAGE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___RESOLVE_IN_LIBRARY__STRING = PACKAGE_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___PRIMITIVE_TYPE__STRING = PACKAGE_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___PRIMITIVE_TYPE____STRING = PACKAGE_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___BOOLEAN_TYPE = PACKAGE_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___INTEGER_TYPE = PACKAGE_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_INTEGER_TYPE__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___STRING_TYPE = PACKAGE_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_STRING_TYPE__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___UNLIMITED_NATURAL_TYPE = PACKAGE_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___BIT_STRING_TYPE = PACKAGE_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NATURAL_TYPE = PACKAGE_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_NATURAL_TYPE__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___COLLECTION_FUNCTION_ADD = PACKAGE_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ANNOTATION = PACKAGE_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ACTUAL_NAME = PACKAGE_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_DEFINITION_OUTER_SCOPE = PACKAGE_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_REFERENCE = PACKAGE_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ADD_TO_MODEL = PACKAGE_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = PACKAGE_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = PACKAGE_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_TEMPLATE = PACKAGE_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_FEATURE = PACKAGE_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___CONTAINING_MEMBER = PACKAGE_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___CURRENT_SCOPE = PACKAGE_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_DEFINITION_OUTER_SCOPE = PACKAGE_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MODEL_NAMESPACE = PACKAGE_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_DEFINITION_APPLIED_PROFILES = PACKAGE_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___PARAMETERS = PACKAGE_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___RETURN_PARAMETER = PACKAGE_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_DEFINITION_RETURN_PARAMETER = PACKAGE_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___SUBUNIT_OWNED_MEMBERS = PACKAGE_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = PACKAGE_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___TEMPLATE_PARAMETERS = PACKAGE_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBERS_CACHED = PACKAGE_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MEMBERS = PACKAGE_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_DEFINITION_MEMBERS = PACKAGE_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IMPORTED_MEMBERS = PACKAGE_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IMPORT_MEMBERS__ELIST = PACKAGE_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___EXCLUDE_COLLISIONS__ELIST = PACKAGE_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___REMOVE_DUPLICATES__ELIST = PACKAGE_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = PACKAGE_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___INCLUDE_DISTINGUISHABLE__ELIST = PACKAGE_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___STUB = PACKAGE_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Allow Package Only</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ALLOW_PACKAGE_ONLY = PACKAGE_DEFINITION___ALLOW_PACKAGE_ONLY;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = PACKAGE_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MATCH_FOR_STUB__UNITDEFINITION = PACKAGE_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___IS_SAME_KIND_AS__ELEMENTREFERENCE = PACKAGE_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Package Definition Applied Profile Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___PACKAGE_DEFINITION_APPLIED_PROFILE_DERIVATION__DIAGNOSTICCHAIN_MAP = PACKAGE_DEFINITION___PACKAGE_DEFINITION_APPLIED_PROFILE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Context</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___CONTEXT = PACKAGE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___OUTER_SCOPE = PACKAGE_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MODEL_SCOPE = PACKAGE_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___QUALIFIED_NAME = PACKAGE_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___RESOLVE_IN_SCOPE__STRING = PACKAGE_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Resolve In Root</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___RESOLVE_IN_ROOT__STRING = PACKAGE_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Resolve Path Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___RESOLVE_PATH_NAME__STRING = PACKAGE_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Resolve Association End</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___RESOLVE_ASSOCIATION_END__ELEMENTREFERENCE_STRING = PACKAGE_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___APPLIED_PROFILES = PACKAGE_DEFINITION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___STUB_FOR__UNITDEFINITION = PACKAGE_DEFINITION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Model Namespace applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE___MODEL_NAMESPACE_APPLIED_PROFILES = PACKAGE_DEFINITION_OPERATION_COUNT + 10;

	/**
	 * The number of operations of the '<em>Model Namespace</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MODEL_NAMESPACE_OPERATION_COUNT = PACKAGE_DEFINITION_OPERATION_COUNT + 11;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.StereotypeAnnotationImpl <em>Stereotype Annotation</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.StereotypeAnnotationImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getStereotypeAnnotation()
	 * @generated
	 */
	int STEREOTYPE_ANNOTATION = 101;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Tagged Values</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION__TAGGED_VALUES = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Names</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION__NAMES = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Stereotype Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION__STEREOTYPE_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Stereotype</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION__STEREOTYPE = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Stereotype Annotation</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Stereotype Annotation Stereotype Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STEREOTYPE_ANNOTATION_STEREOTYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Stereotype Annotation Stereotype Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STEREOTYPE_ANNOTATION_STEREOTYPE_NAME__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Stereotype Annotation Apply</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STEREOTYPE_ANNOTATION_APPLY__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Stereotype Annotation Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STEREOTYPE_ANNOTATION_PRIMITIVE__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Stereotype Annotation External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STEREOTYPE_ANNOTATION_EXTERNAL__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Stereotype Annotation Tagged Values</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STEREOTYPE_ANNOTATION_TAGGED_VALUES__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Stereotype Annotation Names</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___STEREOTYPE_ANNOTATION_NAMES__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION___APPLIED_PROFILES = SYNTAX_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Stereotype Annotation</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int STEREOTYPE_ANNOTATION_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.TaggedValueListImpl <em>Tagged Value List</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.TaggedValueListImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getTaggedValueList()
	 * @generated
	 */
	int TAGGED_VALUE_LIST = 102;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Tagged Value</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST__TAGGED_VALUE = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Tagged Value List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The number of operations of the '<em>Tagged Value List</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_LIST_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.TaggedValueImpl <em>Tagged Value</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.TaggedValueImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getTaggedValue()
	 * @generated
	 */
	int TAGGED_VALUE = 103;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE__NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Value</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE__VALUE = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Operator</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE__OPERATOR = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Tagged Value</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The number of operations of the '<em>Tagged Value</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TAGGED_VALUE_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.UnitDefinitionImpl <em>Unit Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.UnitDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getUnitDefinition()
	 * @generated
	 */
	int UNIT_DEFINITION = 104;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__OWNER = DOCUMENTED_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Documentation</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__DOCUMENTATION = DOCUMENTED_ELEMENT__DOCUMENTATION;

	/**
	 * The feature id for the '<em><b>Namespace Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__NAMESPACE_NAME = DOCUMENTED_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Definition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__DEFINITION = DOCUMENTED_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Import</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__IMPORT = DOCUMENTED_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Namespace</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__NAMESPACE = DOCUMENTED_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is Model Library</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__IS_MODEL_LIBRARY = DOCUMENTED_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Applied Profile</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__APPLIED_PROFILE = DOCUMENTED_ELEMENT_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Annotation</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION__ANNOTATION = DOCUMENTED_ELEMENT_FEATURE_COUNT + 6;

	/**
	 * The number of structural features of the '<em>Unit Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION_FEATURE_COUNT = DOCUMENTED_ELEMENT_FEATURE_COUNT + 7;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___TO_REFERENCE = DOCUMENTED_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___OWNER = DOCUMENTED_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___SYNTAX_ELEMENT_OWNER = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___CURRENT_SCOPE = DOCUMENTED_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___ENCLOSING_STATEMENT = DOCUMENTED_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___ENCLOSING_EXPRESSION = DOCUMENTED_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___ASSIGNMENTS_BEFORE = DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___UPDATE_ALL__ELIST_ELIST = DOCUMENTED_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___COMMON_ANCESTOR__ELIST = DOCUMENTED_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___COMMON_ANCESTORS__ELIST = DOCUMENTED_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = DOCUMENTED_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___RESOLVE_IN_LIBRARY__STRING = DOCUMENTED_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___PRIMITIVE_TYPE__STRING = DOCUMENTED_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___PRIMITIVE_TYPE____STRING = DOCUMENTED_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___BOOLEAN_TYPE = DOCUMENTED_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___INTEGER_TYPE = DOCUMENTED_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___STRING_TYPE = DOCUMENTED_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___UNLIMITED_NATURAL_TYPE = DOCUMENTED_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___BIT_STRING_TYPE = DOCUMENTED_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___NATURAL_TYPE = DOCUMENTED_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___COLLECTION_FUNCTION_ADD = DOCUMENTED_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Imports</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IMPORTS = DOCUMENTED_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Implicit Imports</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IMPLICIT_IMPORTS = DOCUMENTED_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Implicit Import For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___IMPLICIT_IMPORT_FOR__STRING = DOCUMENTED_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Unit Definition Namespace Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___UNIT_DEFINITION_NAMESPACE_DERIVATION__DIAGNOSTICCHAIN_MAP = DOCUMENTED_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Unit Definition Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___UNIT_DEFINITION_NAMESPACE__DIAGNOSTICCHAIN_MAP = DOCUMENTED_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Unit Definition Is Model Library Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___UNIT_DEFINITION_IS_MODEL_LIBRARY_DERIVATION__DIAGNOSTICCHAIN_MAP = DOCUMENTED_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Unit Definition Implicit Imports</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___UNIT_DEFINITION_IMPLICIT_IMPORTS__DIAGNOSTICCHAIN_MAP = DOCUMENTED_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Unit Definition Applied Profile Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION___UNIT_DEFINITION_APPLIED_PROFILE_DERIVATION__DIAGNOSTICCHAIN_MAP = DOCUMENTED_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Unit Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int UNIT_DEFINITION_OPERATION_COUNT = DOCUMENTED_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ImportReferenceImpl <em>Import Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ImportReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getImportReference()
	 * @generated
	 */
	int IMPORT_REFERENCE = 105;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE__OWNER = SYNTAX_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Visibility</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE__VISIBILITY = SYNTAX_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Referent Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE__REFERENT_NAME = SYNTAX_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE__REFERENT = SYNTAX_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE__UNIT = SYNTAX_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Import Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE_FEATURE_COUNT = SYNTAX_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___TO_REFERENCE = SYNTAX_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___OWNER = SYNTAX_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___SYNTAX_ELEMENT_OWNER = SYNTAX_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___CURRENT_SCOPE = SYNTAX_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___ENCLOSING_STATEMENT = SYNTAX_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___ENCLOSING_EXPRESSION = SYNTAX_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SYNTAX_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SYNTAX_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___UPDATE_ALL__ELIST_ELIST = SYNTAX_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___COMMON_ANCESTOR__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___COMMON_ANCESTORS__ELIST = SYNTAX_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST = SYNTAX_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___RESOLVE_IN_LIBRARY__STRING = SYNTAX_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___PRIMITIVE_TYPE__STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___PRIMITIVE_TYPE____STRING = SYNTAX_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___BOOLEAN_TYPE = SYNTAX_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___INTEGER_TYPE = SYNTAX_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___STRING_TYPE = SYNTAX_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___UNLIMITED_NATURAL_TYPE = SYNTAX_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___BIT_STRING_TYPE = SYNTAX_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___NATURAL_TYPE = SYNTAX_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___COLLECTION_FUNCTION_ADD = SYNTAX_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SYNTAX_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IMPORTED_MEMBERS = SYNTAX_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Import Reference Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Import Reference Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT__DIAGNOSTICCHAIN_MAP = SYNTAX_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The number of operations of the '<em>Import Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORT_REFERENCE_OPERATION_COUNT = SYNTAX_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ImportedMemberImpl <em>Imported Member</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ImportedMemberImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getImportedMember()
	 * @generated
	 */
	int IMPORTED_MEMBER = 106;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__OWNER = MEMBER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__NAME = MEMBER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__IS_STUB = MEMBER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__IS_FEATURE = MEMBER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__IS_PRIMITIVE = MEMBER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__IS_EXTERNAL = MEMBER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__SUBUNIT = MEMBER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER__REFERENT = MEMBER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Imported Member</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER_FEATURE_COUNT = MEMBER_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___OWNER = MEMBER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___SYNTAX_ELEMENT_OWNER = MEMBER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___CURRENT_SCOPE = MEMBER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___SYNTAX_ELEMENT_CURRENT_SCOPE = MEMBER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ENCLOSING_STATEMENT = MEMBER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ENCLOSING_EXPRESSION = MEMBER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___UPDATE_ALL__ELIST_ELIST = MEMBER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___COMMON_ANCESTOR__ELIST = MEMBER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___COMMON_ANCESTORS__ELIST = MEMBER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___REMOVE_DUPLICATE_ELEMENTS__ELIST = MEMBER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___RESOLVE_IN_LIBRARY__STRING = MEMBER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___PRIMITIVE_TYPE__STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___PRIMITIVE_TYPE____STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___BOOLEAN_TYPE = MEMBER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___INTEGER_TYPE = MEMBER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_INTEGER_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___STRING_TYPE = MEMBER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___UNLIMITED_NATURAL_TYPE = MEMBER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___BIT_STRING_TYPE = MEMBER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___NATURAL_TYPE = MEMBER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_NUMERIC_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___COLLECTION_FUNCTION_ADD = MEMBER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ANNOTATION = MEMBER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___OUTER_SCOPE = MEMBER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_DEFINITION_OUTER_SCOPE = MEMBER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___QUALIFIED_NAME = MEMBER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___NAMESPACE_REFERENCE = MEMBER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ADD_TO_MODEL = MEMBER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MATCH_FOR_STUB__UNITDEFINITION = MEMBER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___TEMPLATE_PARAMETERS = MEMBER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_TEMPLATE = MEMBER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___CONTAINING_MEMBER = MEMBER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ACTUAL_NAME = MEMBER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___TO_REFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = MEMBER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_SAME_KIND_AS__ELEMENTREFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IS_FEATURE = MEMBER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Imported Member Not Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IMPORTED_MEMBER_NOT_STUB__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Imported Member Is Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER___IMPORTED_MEMBER_IS_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Imported Member</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int IMPORTED_MEMBER_OPERATION_COUNT = MEMBER_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.EnumerationLiteralNameImpl <em>Enumeration Literal Name</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.EnumerationLiteralNameImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getEnumerationLiteralName()
	 * @generated
	 */
	int ENUMERATION_LITERAL_NAME = 107;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME__OWNER = MEMBER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME__NAME = MEMBER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME__IS_STUB = MEMBER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME__IS_FEATURE = MEMBER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME__IS_PRIMITIVE = MEMBER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME__IS_EXTERNAL = MEMBER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME__SUBUNIT = MEMBER_DEFINITION__SUBUNIT;

	/**
	 * The number of structural features of the '<em>Enumeration Literal Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME_FEATURE_COUNT = MEMBER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___TO_REFERENCE = MEMBER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___OWNER = MEMBER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___SYNTAX_ELEMENT_OWNER = MEMBER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___CURRENT_SCOPE = MEMBER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___SYNTAX_ELEMENT_CURRENT_SCOPE = MEMBER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ENCLOSING_STATEMENT = MEMBER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ENCLOSING_EXPRESSION = MEMBER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___UPDATE_ALL__ELIST_ELIST = MEMBER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___COMMON_ANCESTOR__ELIST = MEMBER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___COMMON_ANCESTORS__ELIST = MEMBER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___REMOVE_DUPLICATE_ELEMENTS__ELIST = MEMBER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___RESOLVE_IN_LIBRARY__STRING = MEMBER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___PRIMITIVE_TYPE__STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___PRIMITIVE_TYPE____STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___BOOLEAN_TYPE = MEMBER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___INTEGER_TYPE = MEMBER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_INTEGER_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___STRING_TYPE = MEMBER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___UNLIMITED_NATURAL_TYPE = MEMBER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___BIT_STRING_TYPE = MEMBER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___NATURAL_TYPE = MEMBER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_NUMERIC_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___COLLECTION_FUNCTION_ADD = MEMBER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ANNOTATION = MEMBER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ACTUAL_NAME = MEMBER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___OUTER_SCOPE = MEMBER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_DEFINITION_OUTER_SCOPE = MEMBER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___QUALIFIED_NAME = MEMBER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___NAMESPACE_REFERENCE = MEMBER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ADD_TO_MODEL = MEMBER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MATCH_FOR_STUB__UNITDEFINITION = MEMBER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_SAME_KIND_AS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___TEMPLATE_PARAMETERS = MEMBER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_TEMPLATE = MEMBER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___IS_FEATURE = MEMBER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___CONTAINING_MEMBER = MEMBER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = MEMBER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>Enumeration Literal Name</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_LITERAL_NAME_OPERATION_COUNT = MEMBER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.OperationDefinitionImpl <em>Operation Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.OperationDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getOperationDefinition()
	 * @generated
	 */
	int OPERATION_DEFINITION = 108;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__OWNER = NAMESPACE_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__NAME = NAMESPACE_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__IS_STUB = NAMESPACE_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__IS_FEATURE = NAMESPACE_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__IS_PRIMITIVE = NAMESPACE_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__IS_EXTERNAL = NAMESPACE_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__SUBUNIT = NAMESPACE_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__OWNED_MEMBER = NAMESPACE_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__UNIT = NAMESPACE_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__MEMBER = NAMESPACE_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Redefinition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__REDEFINITION = NAMESPACE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__IS_ABSTRACT = NAMESPACE_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Body</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__BODY = NAMESPACE_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Redefined Operation</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__REDEFINED_OPERATION = NAMESPACE_DEFINITION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is Constructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__IS_CONSTRUCTOR = NAMESPACE_DEFINITION_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Is Destructor</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION__IS_DESTRUCTOR = NAMESPACE_DEFINITION_FEATURE_COUNT + 5;

	/**
	 * The number of structural features of the '<em>Operation Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION_FEATURE_COUNT = NAMESPACE_DEFINITION_FEATURE_COUNT + 6;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___TO_REFERENCE = NAMESPACE_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OWNER = NAMESPACE_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___SYNTAX_ELEMENT_OWNER = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ENCLOSING_STATEMENT = NAMESPACE_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ENCLOSING_EXPRESSION = NAMESPACE_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ASSIGNMENTS_BEFORE = NAMESPACE_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___UPDATE_ALL__ELIST_ELIST = NAMESPACE_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___COMMON_ANCESTOR__ELIST = NAMESPACE_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___COMMON_ANCESTORS__ELIST = NAMESPACE_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = NAMESPACE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___RESOLVE_IN_LIBRARY__STRING = NAMESPACE_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___PRIMITIVE_TYPE__STRING = NAMESPACE_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___PRIMITIVE_TYPE____STRING = NAMESPACE_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___BOOLEAN_TYPE = NAMESPACE_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___INTEGER_TYPE = NAMESPACE_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___STRING_TYPE = NAMESPACE_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___UNLIMITED_NATURAL_TYPE = NAMESPACE_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___BIT_STRING_TYPE = NAMESPACE_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NATURAL_TYPE = NAMESPACE_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___COLLECTION_FUNCTION_ADD = NAMESPACE_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ANNOTATION = NAMESPACE_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ACTUAL_NAME = NAMESPACE_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = NAMESPACE_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___QUALIFIED_NAME = NAMESPACE_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_REFERENCE = NAMESPACE_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ADD_TO_MODEL = NAMESPACE_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = NAMESPACE_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = NAMESPACE_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_TEMPLATE = NAMESPACE_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_FEATURE = NAMESPACE_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___CONTAINING_MEMBER = NAMESPACE_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___CURRENT_SCOPE = NAMESPACE_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OUTER_SCOPE = NAMESPACE_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MODEL_NAMESPACE = NAMESPACE_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MODEL_SCOPE = NAMESPACE_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___RESOLVE_IN_SCOPE__STRING = NAMESPACE_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___APPLIED_PROFILES = NAMESPACE_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___PARAMETERS = NAMESPACE_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___SUBUNIT_OWNED_MEMBERS = NAMESPACE_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___TEMPLATE_PARAMETERS = NAMESPACE_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBERS_CACHED = NAMESPACE_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MEMBERS = NAMESPACE_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IMPORTED_MEMBERS = NAMESPACE_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IMPORT_MEMBERS__ELIST = NAMESPACE_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___EXCLUDE_COLLISIONS__ELIST = NAMESPACE_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___REMOVE_DUPLICATES__ELIST = NAMESPACE_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___STUB = NAMESPACE_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___STUB_FOR__UNITDEFINITION = NAMESPACE_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = NAMESPACE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = NAMESPACE_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = NAMESPACE_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = NAMESPACE_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Parameters Match</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___PARAMETERS_MATCH__ELEMENTREFERENCE = NAMESPACE_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Parameters Match Name Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___PARAMETERS_MATCH_NAME_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___RETURN_PARAMETER = NAMESPACE_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Specialization Referents</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___SPECIALIZATION_REFERENTS = NAMESPACE_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Operation Definition Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_NAMESPACE__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Operation Definition Redefined Operation Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_REDEFINED_OPERATION_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 9;

	/**
	 * The operation id for the '<em>Operation Definition Redefinition</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_REDEFINITION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 10;

	/**
	 * The operation id for the '<em>Operation Definition Redefined Operations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_REDEFINED_OPERATIONS__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 11;

	/**
	 * The operation id for the '<em>Operation Definition Is Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_IS_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 12;

	/**
	 * The operation id for the '<em>Operation Definition Is Constructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_IS_CONSTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 13;

	/**
	 * The operation id for the '<em>Operation Definition Is Destructor Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_IS_DESTRUCTOR_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 14;

	/**
	 * The operation id for the '<em>Operation Definition Constructor Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_CONSTRUCTOR_DESTRUCTOR__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 15;

	/**
	 * The operation id for the '<em>Operation Definition Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_CONSTRUCTOR__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 16;

	/**
	 * The operation id for the '<em>Operation Definition Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION___OPERATION_DEFINITION_DESTRUCTOR__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 17;

	/**
	 * The number of operations of the '<em>Operation Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int OPERATION_DEFINITION_OPERATION_COUNT = NAMESPACE_DEFINITION_OPERATION_COUNT + 18;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ClassifierDefinitionImpl <em>Classifier Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ClassifierDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getClassifierDefinition()
	 * @generated
	 */
	int CLASSIFIER_DEFINITION = 110;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__OWNER = NAMESPACE_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__NAME = NAMESPACE_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__IS_STUB = NAMESPACE_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__IS_FEATURE = NAMESPACE_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__IS_PRIMITIVE = NAMESPACE_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__IS_EXTERNAL = NAMESPACE_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__SUBUNIT = NAMESPACE_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__OWNED_MEMBER = NAMESPACE_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__UNIT = NAMESPACE_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__MEMBER = NAMESPACE_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__IS_ABSTRACT = NAMESPACE_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__SPECIALIZATION = NAMESPACE_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT = NAMESPACE_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The number of structural features of the '<em>Classifier Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION_FEATURE_COUNT = NAMESPACE_DEFINITION_FEATURE_COUNT + 3;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___TO_REFERENCE = NAMESPACE_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___OWNER = NAMESPACE_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT = NAMESPACE_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION = NAMESPACE_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE = NAMESPACE_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = NAMESPACE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = NAMESPACE_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST = NAMESPACE_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST = NAMESPACE_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST = NAMESPACE_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = NAMESPACE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING = NAMESPACE_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING = NAMESPACE_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING = NAMESPACE_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___BOOLEAN_TYPE = NAMESPACE_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___INTEGER_TYPE = NAMESPACE_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___STRING_TYPE = NAMESPACE_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE = NAMESPACE_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___BIT_STRING_TYPE = NAMESPACE_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NATURAL_TYPE = NAMESPACE_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD = NAMESPACE_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ANNOTATION = NAMESPACE_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ACTUAL_NAME = NAMESPACE_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = NAMESPACE_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___QUALIFIED_NAME = NAMESPACE_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE = NAMESPACE_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ADD_TO_MODEL = NAMESPACE_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = NAMESPACE_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = NAMESPACE_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = NAMESPACE_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_TEMPLATE = NAMESPACE_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IS_FEATURE = NAMESPACE_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___CONTAINING_MEMBER = NAMESPACE_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___CURRENT_SCOPE = NAMESPACE_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___OUTER_SCOPE = NAMESPACE_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MODEL_NAMESPACE = NAMESPACE_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MODEL_SCOPE = NAMESPACE_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING = NAMESPACE_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___APPLIED_PROFILES = NAMESPACE_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___PARAMETERS = NAMESPACE_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___RETURN_PARAMETER = NAMESPACE_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS = NAMESPACE_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = NAMESPACE_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS = NAMESPACE_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBERS_CACHED = NAMESPACE_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IMPORTED_MEMBERS = NAMESPACE_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST = NAMESPACE_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST = NAMESPACE_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST = NAMESPACE_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = NAMESPACE_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___STUB = NAMESPACE_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION = NAMESPACE_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = NAMESPACE_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = NAMESPACE_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = NAMESPACE_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___MEMBERS = NAMESPACE_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___INHERITED_MEMBERS = NAMESPACE_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___INHERIT__ELIST = NAMESPACE_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = NAMESPACE_DEFINITION_OPERATION_COUNT + 8;

	/**
	 * The number of operations of the '<em>Classifier Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_DEFINITION_OPERATION_COUNT = NAMESPACE_DEFINITION_OPERATION_COUNT + 9;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AssociationDefinitionImpl <em>Association Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AssociationDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAssociationDefinition()
	 * @generated
	 */
	int ASSOCIATION_DEFINITION = 109;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Association Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Association Definition Specialization Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION___ASSOCIATION_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Association Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ASSOCIATION_DEFINITION_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ClassDefinitionImpl <em>Class Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ClassDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getClassDefinition()
	 * @generated
	 */
	int CLASS_DEFINITION = 111;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Class Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Needs Default Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NEEDS_DEFAULT_CONSTRUCTOR = CLASSIFIER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Needs Default Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___NEEDS_DEFAULT_DESTRUCTOR = CLASSIFIER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___INHERIT__ELIST = CLASSIFIER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Inherit Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___INHERIT_CACHED__ELIST = CLASSIFIER_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Class Definition inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASS_DEFINITION_INHERIT__ELIST = CLASSIFIER_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Class Definition Specialization Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASS_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 8;

	/**
	 * The operation id for the '<em>Class Definition Abstract Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION___CLASS_DEFINITION_ABSTRACT_MEMBER__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 9;

	/**
	 * The number of operations of the '<em>Class Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASS_DEFINITION_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 10;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.TypedElementDefinitionImpl <em>Typed Element Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.TypedElementDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getTypedElementDefinition()
	 * @generated
	 */
	int TYPED_ELEMENT_DEFINITION = 112;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__OWNER = ASSIGNABLE_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Upper</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__UPPER = ASSIGNABLE_ELEMENT__UPPER;

	/**
	 * The feature id for the '<em><b>Lower</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__LOWER = ASSIGNABLE_ELEMENT__LOWER;

	/**
	 * The feature id for the '<em><b>Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__TYPE = ASSIGNABLE_ELEMENT__TYPE;

	/**
	 * The feature id for the '<em><b>Lower Bound</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__LOWER_BOUND = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Upper Bound</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__UPPER_BOUND = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Ordered</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__IS_ORDERED = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Nonunique</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__IS_NONUNIQUE = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Is Sequence</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__IS_SEQUENCE = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The feature id for the '<em><b>Type Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__TYPE_NAME = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 5;

	/**
	 * The feature id for the '<em><b>Actual Type</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__ACTUAL_TYPE = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 6;

	/**
	 * The feature id for the '<em><b>Is Any</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__IS_ANY = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 7;

	/**
	 * The feature id for the '<em><b>Is Multiplicity</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION__IS_MULTIPLICITY = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 8;

	/**
	 * The number of structural features of the '<em>Typed Element Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION_FEATURE_COUNT = ASSIGNABLE_ELEMENT_FEATURE_COUNT + 9;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___TO_REFERENCE = ASSIGNABLE_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___OWNER = ASSIGNABLE_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___SYNTAX_ELEMENT_OWNER = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___CURRENT_SCOPE = ASSIGNABLE_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___ENCLOSING_STATEMENT = ASSIGNABLE_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___ENCLOSING_EXPRESSION = ASSIGNABLE_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = ASSIGNABLE_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = ASSIGNABLE_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___UPDATE_ALL__ELIST_ELIST = ASSIGNABLE_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___COMMON_ANCESTOR__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___COMMON_ANCESTORS__ELIST = ASSIGNABLE_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = ASSIGNABLE_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___RESOLVE_IN_LIBRARY__STRING = ASSIGNABLE_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___PRIMITIVE_TYPE__STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___PRIMITIVE_TYPE____STRING = ASSIGNABLE_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___BOOLEAN_TYPE = ASSIGNABLE_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___INTEGER_TYPE = ASSIGNABLE_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___STRING_TYPE = ASSIGNABLE_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___UNLIMITED_NATURAL_TYPE = ASSIGNABLE_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___BIT_STRING_TYPE = ASSIGNABLE_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___NATURAL_TYPE = ASSIGNABLE_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___COLLECTION_FUNCTION_ADD = ASSIGNABLE_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Type Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___TYPE_CACHED = ASSIGNABLE_ELEMENT___TYPE_CACHED;

	/**
	 * The operation id for the '<em>Is Null</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_NULL = ASSIGNABLE_ELEMENT___IS_NULL;

	/**
	 * The operation id for the '<em>Is Assignable From Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Assignable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_ASSIGNABLE_FROM__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Type Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_TYPE_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Conformant With Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE = ASSIGNABLE_ELEMENT___IS_CONFORMANT_WITH_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT = ASSIGNABLE_ELEMENT___IS_MULTIPLICITY_CONFORMANT_WITH__ASSIGNABLEELEMENT;

	/**
	 * The operation id for the '<em>Is Ordered</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_ORDERED = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Is Nonunique</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___IS_NONUNIQUE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Typed Element Definition Lower Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___TYPED_ELEMENT_DEFINITION_LOWER_DERIVATION__DIAGNOSTICCHAIN_MAP = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Typed Element Definition Upper Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___TYPED_ELEMENT_DEFINITION_UPPER_DERIVATION__DIAGNOSTICCHAIN_MAP = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Typed Element Definition Type Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___TYPED_ELEMENT_DEFINITION_TYPE_DERIVATION__DIAGNOSTICCHAIN_MAP = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Typed Element Definition Type Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___TYPED_ELEMENT_DEFINITION_TYPE_NAME__DIAGNOSTICCHAIN_MAP = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___TYPE = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Lower</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___LOWER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 7;

	/**
	 * The operation id for the '<em>Upper</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION___UPPER = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 8;

	/**
	 * The number of operations of the '<em>Typed Element Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int TYPED_ELEMENT_DEFINITION_OPERATION_COUNT = ASSIGNABLE_ELEMENT_OPERATION_COUNT + 9;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.DataTypeDefinitionImpl <em>Data Type Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.DataTypeDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getDataTypeDefinition()
	 * @generated
	 */
	int DATA_TYPE_DEFINITION = 113;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Data Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Data Type Definition Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___DATA_TYPE_DEFINITION_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Data Type Definition Specialization Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION___DATA_TYPE_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The number of operations of the '<em>Data Type Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int DATA_TYPE_DEFINITION_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.PropertyDefinitionImpl <em>Property Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.PropertyDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getPropertyDefinition()
	 * @generated
	 */
	int PROPERTY_DEFINITION = 115;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__OWNER = MEMBER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__NAME = MEMBER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__IS_STUB = MEMBER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__IS_FEATURE = MEMBER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__IS_PRIMITIVE = MEMBER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__IS_EXTERNAL = MEMBER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__SUBUNIT = MEMBER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Is Composite</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__IS_COMPOSITE = MEMBER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Initializer</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__INITIALIZER = MEMBER_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Is Collection Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__IS_COLLECTION_CONVERSION = MEMBER_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Is Bit String Conversion</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__IS_BIT_STRING_CONVERSION = MEMBER_DEFINITION_FEATURE_COUNT + 3;

	/**
	 * The feature id for the '<em><b>Type Part</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION__TYPE_PART = MEMBER_DEFINITION_FEATURE_COUNT + 4;

	/**
	 * The number of structural features of the '<em>Property Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION_FEATURE_COUNT = MEMBER_DEFINITION_FEATURE_COUNT + 5;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___TO_REFERENCE = MEMBER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___OWNER = MEMBER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___SYNTAX_ELEMENT_OWNER = MEMBER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___CURRENT_SCOPE = MEMBER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = MEMBER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ENCLOSING_STATEMENT = MEMBER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ENCLOSING_EXPRESSION = MEMBER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___UPDATE_ALL__ELIST_ELIST = MEMBER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___COMMON_ANCESTOR__ELIST = MEMBER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___COMMON_ANCESTORS__ELIST = MEMBER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = MEMBER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___RESOLVE_IN_LIBRARY__STRING = MEMBER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___PRIMITIVE_TYPE__STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___PRIMITIVE_TYPE____STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___BOOLEAN_TYPE = MEMBER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___INTEGER_TYPE = MEMBER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___STRING_TYPE = MEMBER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___UNLIMITED_NATURAL_TYPE = MEMBER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___BIT_STRING_TYPE = MEMBER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___NATURAL_TYPE = MEMBER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___COLLECTION_FUNCTION_ADD = MEMBER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ANNOTATION = MEMBER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ACTUAL_NAME = MEMBER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___OUTER_SCOPE = MEMBER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = MEMBER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___QUALIFIED_NAME = MEMBER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___NAMESPACE_REFERENCE = MEMBER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ADD_TO_MODEL = MEMBER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = MEMBER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___TEMPLATE_PARAMETERS = MEMBER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_TEMPLATE = MEMBER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___CONTAINING_MEMBER = MEMBER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = MEMBER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = MEMBER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___IS_FEATURE = MEMBER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Property Definition Initializer</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___PROPERTY_DEFINITION_INITIALIZER__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Property Definition Is Collection Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___PROPERTY_DEFINITION_IS_COLLECTION_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Property Definition Is Bit String Conversion Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___PROPERTY_DEFINITION_IS_BIT_STRING_CONVERSION_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The operation id for the '<em>Property Definition Is Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION___PROPERTY_DEFINITION_IS_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The number of operations of the '<em>Property Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PROPERTY_DEFINITION_OPERATION_COUNT = MEMBER_DEFINITION_OPERATION_COUNT + 8;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SignalDefinitionImpl <em>Signal Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SignalDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSignalDefinition()
	 * @generated
	 */
	int SIGNAL_DEFINITION = 116;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Signal Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Signal Definition Specialization Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION___SIGNAL_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Signal Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_DEFINITION_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ActiveClassDefinitionImpl <em>Active Class Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ActiveClassDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getActiveClassDefinition()
	 * @generated
	 */
	int ACTIVE_CLASS_DEFINITION = 117;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__OWNER = CLASS_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__NAME = CLASS_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__IS_STUB = CLASS_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__IS_FEATURE = CLASS_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__IS_PRIMITIVE = CLASS_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__IS_EXTERNAL = CLASS_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__SUBUNIT = CLASS_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__OWNED_MEMBER = CLASS_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__UNIT = CLASS_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__MEMBER = CLASS_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__IS_ABSTRACT = CLASS_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__SPECIALIZATION = CLASS_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__SPECIALIZATION_REFERENT = CLASS_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The feature id for the '<em><b>Classifier Behavior</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION__CLASSIFIER_BEHAVIOR = CLASS_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Active Class Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION_FEATURE_COUNT = CLASS_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___TO_REFERENCE = CLASS_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___OWNER = CLASS_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___SYNTAX_ELEMENT_OWNER = CLASS_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASS_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ENCLOSING_STATEMENT = CLASS_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ENCLOSING_EXPRESSION = CLASS_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ASSIGNMENTS_BEFORE = CLASS_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASS_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASS_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASS_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___UPDATE_ALL__ELIST_ELIST = CLASS_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___COMMON_ANCESTOR__ELIST = CLASS_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___COMMON_ANCESTORS__ELIST = CLASS_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASS_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___RESOLVE_IN_LIBRARY__STRING = CLASS_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___PRIMITIVE_TYPE__STRING = CLASS_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___PRIMITIVE_TYPE____STRING = CLASS_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___BOOLEAN_TYPE = CLASS_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASS_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___INTEGER_TYPE = CLASS_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASS_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___STRING_TYPE = CLASS_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = CLASS_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___UNLIMITED_NATURAL_TYPE = CLASS_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASS_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___BIT_STRING_TYPE = CLASS_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASS_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NATURAL_TYPE = CLASS_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASS_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASS_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___COLLECTION_FUNCTION_ADD = CLASS_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASS_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASS_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASS_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ANNOTATION = CLASS_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ACTUAL_NAME = CLASS_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = CLASS_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___QUALIFIED_NAME = CLASS_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_REFERENCE = CLASS_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ADD_TO_MODEL = CLASS_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASS_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASS_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_TEMPLATE = CLASS_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_FEATURE = CLASS_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CONTAINING_MEMBER = CLASS_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CURRENT_SCOPE = CLASS_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___OUTER_SCOPE = CLASS_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASS_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MODEL_NAMESPACE = CLASS_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MODEL_SCOPE = CLASS_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___RESOLVE_IN_SCOPE__STRING = CLASS_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___APPLIED_PROFILES = CLASS_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASS_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___PARAMETERS = CLASS_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___RETURN_PARAMETER = CLASS_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASS_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___SUBUNIT_OWNED_MEMBERS = CLASS_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASS_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___TEMPLATE_PARAMETERS = CLASS_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBERS_CACHED = CLASS_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IMPORTED_MEMBERS = CLASS_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IMPORT_MEMBERS__ELIST = CLASS_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___EXCLUDE_COLLISIONS__ELIST = CLASS_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___REMOVE_DUPLICATES__ELIST = CLASS_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASS_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = CLASS_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___STUB = CLASS_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___STUB_FOR__UNITDEFINITION = CLASS_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASS_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASS_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MEMBERS = CLASS_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___INHERITED_MEMBERS = CLASS_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASS_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASS_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Needs Default Constructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NEEDS_DEFAULT_CONSTRUCTOR = CLASS_DEFINITION___NEEDS_DEFAULT_CONSTRUCTOR;

	/**
	 * The operation id for the '<em>Needs Default Destructor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___NEEDS_DEFAULT_DESTRUCTOR = CLASS_DEFINITION___NEEDS_DEFAULT_DESTRUCTOR;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___INHERIT__ELIST = CLASS_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Inherit Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___INHERIT_CACHED__ELIST = CLASS_DEFINITION___INHERIT_CACHED__ELIST;

	/**
	 * The operation id for the '<em>Class Definition inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASS_DEFINITION_INHERIT__ELIST = CLASS_DEFINITION___CLASS_DEFINITION_INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Class Definition Specialization Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASS_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___CLASS_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Class Definition Abstract Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___CLASS_DEFINITION_ABSTRACT_MEMBER__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION___CLASS_DEFINITION_ABSTRACT_MEMBER__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = CLASS_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Active Class Definition Classifier Behavior</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION___ACTIVE_CLASS_DEFINITION_CLASSIFIER_BEHAVIOR__DIAGNOSTICCHAIN_MAP = CLASS_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Active Class Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVE_CLASS_DEFINITION_OPERATION_COUNT = CLASS_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ActivityDefinitionImpl <em>Activity Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ActivityDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getActivityDefinition()
	 * @generated
	 */
	int ACTIVITY_DEFINITION = 118;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The feature id for the '<em><b>Body</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION__BODY = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Activity Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___OUTER_SCOPE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Activity Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ACTIVITY_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Activity Definition Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION___ACTIVITY_DEFINITION_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Activity Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ACTIVITY_DEFINITION_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ElementImportReferenceImpl <em>Element Import Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ElementImportReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getElementImportReference()
	 * @generated
	 */
	int ELEMENT_IMPORT_REFERENCE = 119;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE__OWNER = IMPORT_REFERENCE__OWNER;

	/**
	 * The feature id for the '<em><b>Visibility</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE__VISIBILITY = IMPORT_REFERENCE__VISIBILITY;

	/**
	 * The feature id for the '<em><b>Referent Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE__REFERENT_NAME = IMPORT_REFERENCE__REFERENT_NAME;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE__REFERENT = IMPORT_REFERENCE__REFERENT;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE__UNIT = IMPORT_REFERENCE__UNIT;

	/**
	 * The feature id for the '<em><b>Alias</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE__ALIAS = IMPORT_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The number of structural features of the '<em>Element Import Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE_FEATURE_COUNT = IMPORT_REFERENCE_FEATURE_COUNT + 1;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___TO_REFERENCE = IMPORT_REFERENCE___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___OWNER = IMPORT_REFERENCE___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___SYNTAX_ELEMENT_OWNER = IMPORT_REFERENCE___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___CURRENT_SCOPE = IMPORT_REFERENCE___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE = IMPORT_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___ENCLOSING_STATEMENT = IMPORT_REFERENCE___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___ENCLOSING_EXPRESSION = IMPORT_REFERENCE___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___ASSIGNMENTS_BEFORE = IMPORT_REFERENCE___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = IMPORT_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___UPDATE_ALL__ELIST_ELIST = IMPORT_REFERENCE___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___COMMON_ANCESTOR__ELIST = IMPORT_REFERENCE___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___COMMON_ANCESTORS__ELIST = IMPORT_REFERENCE___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST = IMPORT_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___RESOLVE_IN_LIBRARY__STRING = IMPORT_REFERENCE___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___PRIMITIVE_TYPE__STRING = IMPORT_REFERENCE___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___PRIMITIVE_TYPE____STRING = IMPORT_REFERENCE___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___BOOLEAN_TYPE = IMPORT_REFERENCE___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___INTEGER_TYPE = IMPORT_REFERENCE___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___STRING_TYPE = IMPORT_REFERENCE___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___UNLIMITED_NATURAL_TYPE = IMPORT_REFERENCE___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___BIT_STRING_TYPE = IMPORT_REFERENCE___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___NATURAL_TYPE = IMPORT_REFERENCE___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___COLLECTION_FUNCTION_ADD = IMPORT_REFERENCE___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Import Reference Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Import Reference Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT__DIAGNOSTICCHAIN_MAP = IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___IMPORTED_MEMBERS = IMPORT_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Element Import Reference Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE___ELEMENT_IMPORT_REFERENCE_REFERENT__DIAGNOSTICCHAIN_MAP = IMPORT_REFERENCE_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Element Import Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ELEMENT_IMPORT_REFERENCE_OPERATION_COUNT = IMPORT_REFERENCE_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.SignalReceptionDefinitionImpl <em>Signal Reception Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.SignalReceptionDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getSignalReceptionDefinition()
	 * @generated
	 */
	int SIGNAL_RECEPTION_DEFINITION = 120;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__OWNER = SIGNAL_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__NAME = SIGNAL_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__IS_STUB = SIGNAL_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__IS_FEATURE = SIGNAL_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__IS_PRIMITIVE = SIGNAL_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__IS_EXTERNAL = SIGNAL_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__SUBUNIT = SIGNAL_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__OWNED_MEMBER = SIGNAL_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__UNIT = SIGNAL_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__MEMBER = SIGNAL_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__IS_ABSTRACT = SIGNAL_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__SPECIALIZATION = SIGNAL_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION__SPECIALIZATION_REFERENT = SIGNAL_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Signal Reception Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION_FEATURE_COUNT = SIGNAL_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___TO_REFERENCE = SIGNAL_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___OWNER = SIGNAL_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___SYNTAX_ELEMENT_OWNER = SIGNAL_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = SIGNAL_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ENCLOSING_STATEMENT = SIGNAL_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ENCLOSING_EXPRESSION = SIGNAL_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ASSIGNMENTS_BEFORE = SIGNAL_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = SIGNAL_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = SIGNAL_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = SIGNAL_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___UPDATE_ALL__ELIST_ELIST = SIGNAL_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___COMMON_ANCESTOR__ELIST = SIGNAL_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___COMMON_ANCESTORS__ELIST = SIGNAL_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = SIGNAL_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___RESOLVE_IN_LIBRARY__STRING = SIGNAL_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___PRIMITIVE_TYPE__STRING = SIGNAL_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___PRIMITIVE_TYPE____STRING = SIGNAL_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___BOOLEAN_TYPE = SIGNAL_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___INTEGER_TYPE = SIGNAL_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___STRING_TYPE = SIGNAL_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___UNLIMITED_NATURAL_TYPE = SIGNAL_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___BIT_STRING_TYPE = SIGNAL_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NATURAL_TYPE = SIGNAL_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___COLLECTION_FUNCTION_ADD = SIGNAL_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ANNOTATION = SIGNAL_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ACTUAL_NAME = SIGNAL_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = SIGNAL_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___QUALIFIED_NAME = SIGNAL_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_REFERENCE = SIGNAL_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ADD_TO_MODEL = SIGNAL_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = SIGNAL_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = SIGNAL_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_TEMPLATE = SIGNAL_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___CONTAINING_MEMBER = SIGNAL_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___CURRENT_SCOPE = SIGNAL_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___OUTER_SCOPE = SIGNAL_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = SIGNAL_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MODEL_NAMESPACE = SIGNAL_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MODEL_SCOPE = SIGNAL_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___RESOLVE_IN_SCOPE__STRING = SIGNAL_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___APPLIED_PROFILES = SIGNAL_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = SIGNAL_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___PARAMETERS = SIGNAL_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___RETURN_PARAMETER = SIGNAL_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = SIGNAL_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___SUBUNIT_OWNED_MEMBERS = SIGNAL_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = SIGNAL_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___TEMPLATE_PARAMETERS = SIGNAL_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBERS_CACHED = SIGNAL_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = SIGNAL_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IMPORTED_MEMBERS = SIGNAL_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IMPORT_MEMBERS__ELIST = SIGNAL_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___EXCLUDE_COLLISIONS__ELIST = SIGNAL_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___REMOVE_DUPLICATES__ELIST = SIGNAL_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = SIGNAL_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = SIGNAL_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___STUB = SIGNAL_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___STUB_FOR__UNITDEFINITION = SIGNAL_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MEMBERS = SIGNAL_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___INHERITED_MEMBERS = SIGNAL_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___INHERIT__ELIST = SIGNAL_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = SIGNAL_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = SIGNAL_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = SIGNAL_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Signal Definition Specialization Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___SIGNAL_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION___SIGNAL_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___IS_FEATURE = SIGNAL_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Signal Reception Definition Is Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION___SIGNAL_RECEPTION_DEFINITION_IS_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = SIGNAL_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Signal Reception Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int SIGNAL_RECEPTION_DEFINITION_OPERATION_COUNT = SIGNAL_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.EnumerationDefinitionImpl <em>Enumeration Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.EnumerationDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getEnumerationDefinition()
	 * @generated
	 */
	int ENUMERATION_DEFINITION = 121;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Enumeration Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Enumeration Definition Specialization Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION___ENUMERATION_DEFINITION_SPECIALIZATION_REFERENT__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Enumeration Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ENUMERATION_DEFINITION_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.PackageImportReferenceImpl <em>Package Import Reference</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.PackageImportReferenceImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getPackageImportReference()
	 * @generated
	 */
	int PACKAGE_IMPORT_REFERENCE = 122;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE__OWNER = IMPORT_REFERENCE__OWNER;

	/**
	 * The feature id for the '<em><b>Visibility</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE__VISIBILITY = IMPORT_REFERENCE__VISIBILITY;

	/**
	 * The feature id for the '<em><b>Referent Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE__REFERENT_NAME = IMPORT_REFERENCE__REFERENT_NAME;

	/**
	 * The feature id for the '<em><b>Referent</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE__REFERENT = IMPORT_REFERENCE__REFERENT;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE__UNIT = IMPORT_REFERENCE__UNIT;

	/**
	 * The number of structural features of the '<em>Package Import Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE_FEATURE_COUNT = IMPORT_REFERENCE_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___TO_REFERENCE = IMPORT_REFERENCE___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___OWNER = IMPORT_REFERENCE___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___SYNTAX_ELEMENT_OWNER = IMPORT_REFERENCE___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___CURRENT_SCOPE = IMPORT_REFERENCE___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE = IMPORT_REFERENCE___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___ENCLOSING_STATEMENT = IMPORT_REFERENCE___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___ENCLOSING_EXPRESSION = IMPORT_REFERENCE___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___ASSIGNMENTS_BEFORE = IMPORT_REFERENCE___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = IMPORT_REFERENCE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = IMPORT_REFERENCE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___UPDATE_ALL__ELIST_ELIST = IMPORT_REFERENCE___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___COMMON_ANCESTOR__ELIST = IMPORT_REFERENCE___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___COMMON_ANCESTORS__ELIST = IMPORT_REFERENCE___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST = IMPORT_REFERENCE___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___RESOLVE_IN_LIBRARY__STRING = IMPORT_REFERENCE___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___PRIMITIVE_TYPE__STRING = IMPORT_REFERENCE___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___PRIMITIVE_TYPE____STRING = IMPORT_REFERENCE___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___BOOLEAN_TYPE = IMPORT_REFERENCE___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___INTEGER_TYPE = IMPORT_REFERENCE___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___STRING_TYPE = IMPORT_REFERENCE___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___UNLIMITED_NATURAL_TYPE = IMPORT_REFERENCE___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___BIT_STRING_TYPE = IMPORT_REFERENCE___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___NATURAL_TYPE = IMPORT_REFERENCE___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___COLLECTION_FUNCTION_ADD = IMPORT_REFERENCE___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = IMPORT_REFERENCE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Import Reference Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Import Reference Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT__DIAGNOSTICCHAIN_MAP = IMPORT_REFERENCE___IMPORT_REFERENCE_REFERENT__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___IMPORTED_MEMBERS = IMPORT_REFERENCE_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Package Import Reference Referent</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE___PACKAGE_IMPORT_REFERENCE_REFERENT__DIAGNOSTICCHAIN_MAP = IMPORT_REFERENCE_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Package Import Reference</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int PACKAGE_IMPORT_REFERENCE_OPERATION_COUNT = IMPORT_REFERENCE_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ClassifierTemplateParameterImpl <em>Classifier Template Parameter</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ClassifierTemplateParameterImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getClassifierTemplateParameter()
	 * @generated
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER = 123;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Classifier Template Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER___MATCHES__CLASSIFIERTEMPLATEPARAMETER = CLASSIFIER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The number of operations of the '<em>Classifier Template Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int CLASSIFIER_TEMPLATE_PARAMETER_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.FormalParameterImpl <em>Formal Parameter</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.FormalParameterImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getFormalParameter()
	 * @generated
	 */
	int FORMAL_PARAMETER = 124;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__OWNER = MEMBER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__NAME = MEMBER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__IS_STUB = MEMBER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__IS_FEATURE = MEMBER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__IS_PRIMITIVE = MEMBER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__IS_EXTERNAL = MEMBER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__SUBUNIT = MEMBER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Direction</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__DIRECTION = MEMBER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Type Part</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER__TYPE_PART = MEMBER_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Formal Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER_FEATURE_COUNT = MEMBER_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___TO_REFERENCE = MEMBER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___OWNER = MEMBER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___SYNTAX_ELEMENT_OWNER = MEMBER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___SYNTAX_ELEMENT_CURRENT_SCOPE = MEMBER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ENCLOSING_STATEMENT = MEMBER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ENCLOSING_EXPRESSION = MEMBER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___UPDATE_ALL__ELIST_ELIST = MEMBER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___COMMON_ANCESTOR__ELIST = MEMBER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___COMMON_ANCESTORS__ELIST = MEMBER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___REMOVE_DUPLICATE_ELEMENTS__ELIST = MEMBER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___RESOLVE_IN_LIBRARY__STRING = MEMBER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___PRIMITIVE_TYPE__STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___PRIMITIVE_TYPE____STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___BOOLEAN_TYPE = MEMBER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___INTEGER_TYPE = MEMBER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_INTEGER_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___STRING_TYPE = MEMBER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___UNLIMITED_NATURAL_TYPE = MEMBER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___BIT_STRING_TYPE = MEMBER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___NATURAL_TYPE = MEMBER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_NUMERIC_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___COLLECTION_FUNCTION_ADD = MEMBER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ANNOTATION = MEMBER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ACTUAL_NAME = MEMBER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___OUTER_SCOPE = MEMBER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_DEFINITION_OUTER_SCOPE = MEMBER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___QUALIFIED_NAME = MEMBER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___NAMESPACE_REFERENCE = MEMBER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ADD_TO_MODEL = MEMBER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MATCH_FOR_STUB__UNITDEFINITION = MEMBER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___TEMPLATE_PARAMETERS = MEMBER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_TEMPLATE = MEMBER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_FEATURE = MEMBER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___CONTAINING_MEMBER = MEMBER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___CURRENT_SCOPE = MEMBER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = MEMBER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___IS_SAME_KIND_AS__ELEMENTREFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MATCHES__FORMALPARAMETER = MEMBER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Matches Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MATCHES_ELEMENT__ELEMENTREFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Matches Name Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MATCHES_NAME_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Matches Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER___MATCHES_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Formal Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int FORMAL_PARAMETER_OPERATION_COUNT = MEMBER_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ReceptionDefinitionImpl <em>Reception Definition</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ReceptionDefinitionImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getReceptionDefinition()
	 * @generated
	 */
	int RECEPTION_DEFINITION = 125;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__OWNER = MEMBER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__NAME = MEMBER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__IS_STUB = MEMBER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__IS_FEATURE = MEMBER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__IS_PRIMITIVE = MEMBER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__IS_EXTERNAL = MEMBER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__SUBUNIT = MEMBER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Signal Name</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__SIGNAL_NAME = MEMBER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Signal</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION__SIGNAL = MEMBER_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Reception Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION_FEATURE_COUNT = MEMBER_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___TO_REFERENCE = MEMBER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___OWNER = MEMBER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___SYNTAX_ELEMENT_OWNER = MEMBER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___CURRENT_SCOPE = MEMBER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE = MEMBER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ENCLOSING_STATEMENT = MEMBER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ENCLOSING_EXPRESSION = MEMBER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = MEMBER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = MEMBER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___UPDATE_ALL__ELIST_ELIST = MEMBER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___COMMON_ANCESTOR__ELIST = MEMBER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___COMMON_ANCESTORS__ELIST = MEMBER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST = MEMBER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___RESOLVE_IN_LIBRARY__STRING = MEMBER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___PRIMITIVE_TYPE__STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___PRIMITIVE_TYPE____STRING = MEMBER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___BOOLEAN_TYPE = MEMBER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___INTEGER_TYPE = MEMBER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___STRING_TYPE = MEMBER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___UNLIMITED_NATURAL_TYPE = MEMBER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___BIT_STRING_TYPE = MEMBER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___NATURAL_TYPE = MEMBER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___COLLECTION_FUNCTION_ADD = MEMBER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = MEMBER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ANNOTATION = MEMBER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___OUTER_SCOPE = MEMBER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE = MEMBER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___QUALIFIED_NAME = MEMBER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___NAMESPACE_REFERENCE = MEMBER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ADD_TO_MODEL = MEMBER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION = MEMBER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = MEMBER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___TEMPLATE_PARAMETERS = MEMBER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_TEMPLATE = MEMBER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___CONTAINING_MEMBER = MEMBER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ACTUAL_NAME = MEMBER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = MEMBER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE = MEMBER_DEFINITION_OPERATION_COUNT + 2;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___IS_FEATURE = MEMBER_DEFINITION_OPERATION_COUNT + 3;

	/**
	 * The operation id for the '<em>Reception Definition Signal Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___RECEPTION_DEFINITION_SIGNAL_NAME__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 4;

	/**
	 * The operation id for the '<em>Reception Definition Signal Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___RECEPTION_DEFINITION_SIGNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 5;

	/**
	 * The operation id for the '<em>Reception Definition Is Feature Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION___RECEPTION_DEFINITION_IS_FEATURE_DERIVATION__DIAGNOSTICCHAIN_MAP = MEMBER_DEFINITION_OPERATION_COUNT + 6;

	/**
	 * The number of operations of the '<em>Reception Definition</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RECEPTION_DEFINITION_OPERATION_COUNT = MEMBER_DEFINITION_OPERATION_COUNT + 7;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.MemberImpl <em>Member</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.MemberImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getMember()
	 * @generated
	 */
	int MEMBER = 126;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER__OWNER = DOCUMENTED_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Documentation</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER__DOCUMENTATION = DOCUMENTED_ELEMENT__DOCUMENTATION;

	/**
	 * The feature id for the '<em><b>Definition</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER__DEFINITION = DOCUMENTED_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Visibility</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER__VISIBILITY = DOCUMENTED_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The feature id for the '<em><b>Namespace</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER__NAMESPACE = DOCUMENTED_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The feature id for the '<em><b>Annotation</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER__ANNOTATION = DOCUMENTED_ELEMENT_FEATURE_COUNT + 3;

	/**
	 * The number of structural features of the '<em>Member</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_FEATURE_COUNT = DOCUMENTED_ELEMENT_FEATURE_COUNT + 4;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___OWNER = DOCUMENTED_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___SYNTAX_ELEMENT_OWNER = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___CURRENT_SCOPE = DOCUMENTED_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___SYNTAX_ELEMENT_CURRENT_SCOPE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___ENCLOSING_STATEMENT = DOCUMENTED_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___ENCLOSING_EXPRESSION = DOCUMENTED_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___ASSIGNMENTS_BEFORE = DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___UPDATE_ALL__ELIST_ELIST = DOCUMENTED_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___COMMON_ANCESTOR__ELIST = DOCUMENTED_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___COMMON_ANCESTORS__ELIST = DOCUMENTED_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___REMOVE_DUPLICATE_ELEMENTS__ELIST = DOCUMENTED_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___RESOLVE_IN_LIBRARY__STRING = DOCUMENTED_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___PRIMITIVE_TYPE__STRING = DOCUMENTED_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___PRIMITIVE_TYPE____STRING = DOCUMENTED_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___BOOLEAN_TYPE = DOCUMENTED_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___INTEGER_TYPE = DOCUMENTED_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_INTEGER_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___STRING_TYPE = DOCUMENTED_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_STRING_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___UNLIMITED_NATURAL_TYPE = DOCUMENTED_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___BIT_STRING_TYPE = DOCUMENTED_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___NATURAL_TYPE = DOCUMENTED_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_NATURAL_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_NUMERIC_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___COLLECTION_FUNCTION_ADD = DOCUMENTED_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___TO_REFERENCE = DOCUMENTED_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The operation id for the '<em>Visibility</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER___VISIBILITY = DOCUMENTED_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The number of operations of the '<em>Member</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int MEMBER_OPERATION_COUNT = DOCUMENTED_ELEMENT_OPERATION_COUNT + 2;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AnnotatedStatementImpl <em>Annotated Statement</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AnnotatedStatementImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAnnotatedStatement()
	 * @generated
	 */
	int ANNOTATED_STATEMENT = 127;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT__OWNER = DOCUMENTED_ELEMENT__OWNER;

	/**
	 * The feature id for the '<em><b>Documentation</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT__DOCUMENTATION = DOCUMENTED_ELEMENT__DOCUMENTATION;

	/**
	 * The feature id for the '<em><b>Annotation</b></em>' attribute list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT__ANNOTATION = DOCUMENTED_ELEMENT_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Statement</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT__STATEMENT = DOCUMENTED_ELEMENT_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Annotated Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT_FEATURE_COUNT = DOCUMENTED_ELEMENT_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___TO_REFERENCE = DOCUMENTED_ELEMENT___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___OWNER = DOCUMENTED_ELEMENT___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___SYNTAX_ELEMENT_OWNER = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___CURRENT_SCOPE = DOCUMENTED_ELEMENT___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___ENCLOSING_STATEMENT = DOCUMENTED_ELEMENT___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___ENCLOSING_EXPRESSION = DOCUMENTED_ELEMENT___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___ASSIGNMENTS_BEFORE = DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = DOCUMENTED_ELEMENT___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = DOCUMENTED_ELEMENT___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___UPDATE_ALL__ELIST_ELIST = DOCUMENTED_ELEMENT___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___COMMON_ANCESTOR__ELIST = DOCUMENTED_ELEMENT___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___COMMON_ANCESTORS__ELIST = DOCUMENTED_ELEMENT___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST = DOCUMENTED_ELEMENT___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___RESOLVE_IN_LIBRARY__STRING = DOCUMENTED_ELEMENT___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___PRIMITIVE_TYPE__STRING = DOCUMENTED_ELEMENT___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___PRIMITIVE_TYPE____STRING = DOCUMENTED_ELEMENT___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___BOOLEAN_TYPE = DOCUMENTED_ELEMENT___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___INTEGER_TYPE = DOCUMENTED_ELEMENT___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___STRING_TYPE = DOCUMENTED_ELEMENT___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_STRING_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___UNLIMITED_NATURAL_TYPE = DOCUMENTED_ELEMENT___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___BIT_STRING_TYPE = DOCUMENTED_ELEMENT___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___NATURAL_TYPE = DOCUMENTED_ELEMENT___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___COLLECTION_FUNCTION_ADD = DOCUMENTED_ELEMENT___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = DOCUMENTED_ELEMENT___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT___ANNOTATIONS = DOCUMENTED_ELEMENT_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>Annotated Statement</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANNOTATED_STATEMENT_OPERATION_COUNT = DOCUMENTED_ELEMENT_OPERATION_COUNT + 1;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.BoundClassifierImpl <em>Bound Classifier</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.BoundClassifierImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getBoundClassifier()
	 * @generated
	 */
	int BOUND_CLASSIFIER = 128;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The feature id for the '<em><b>Template</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__TEMPLATE = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The feature id for the '<em><b>Actual</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER__ACTUAL = CLASSIFIER_DEFINITION_FEATURE_COUNT + 1;

	/**
	 * The number of structural features of the '<em>Bound Classifier</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 2;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ACTUAL_NAME = CLASSIFIER_DEFINITION___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER___TO_REFERENCE = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>Bound Classifier</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int BOUND_CLASSIFIER_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.ReturnParameterImpl <em>Return Parameter</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.ReturnParameterImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getReturnParameter()
	 * @generated
	 */
	int RETURN_PARAMETER = 129;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__OWNER = FORMAL_PARAMETER__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__NAME = FORMAL_PARAMETER__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__IS_STUB = FORMAL_PARAMETER__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__IS_FEATURE = FORMAL_PARAMETER__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__IS_PRIMITIVE = FORMAL_PARAMETER__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__IS_EXTERNAL = FORMAL_PARAMETER__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__SUBUNIT = FORMAL_PARAMETER__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Direction</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__DIRECTION = FORMAL_PARAMETER__DIRECTION;

	/**
	 * The feature id for the '<em><b>Type Part</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER__TYPE_PART = FORMAL_PARAMETER__TYPE_PART;

	/**
	 * The number of structural features of the '<em>Return Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER_FEATURE_COUNT = FORMAL_PARAMETER_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___TO_REFERENCE = FORMAL_PARAMETER___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___OWNER = FORMAL_PARAMETER___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___SYNTAX_ELEMENT_OWNER = FORMAL_PARAMETER___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___SYNTAX_ELEMENT_CURRENT_SCOPE = FORMAL_PARAMETER___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ENCLOSING_STATEMENT = FORMAL_PARAMETER___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ENCLOSING_EXPRESSION = FORMAL_PARAMETER___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ASSIGNMENTS_BEFORE = FORMAL_PARAMETER___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = FORMAL_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = FORMAL_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = FORMAL_PARAMETER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___UPDATE_ALL__ELIST_ELIST = FORMAL_PARAMETER___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___COMMON_ANCESTOR__ELIST = FORMAL_PARAMETER___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___COMMON_ANCESTORS__ELIST = FORMAL_PARAMETER___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___REMOVE_DUPLICATE_ELEMENTS__ELIST = FORMAL_PARAMETER___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___RESOLVE_IN_LIBRARY__STRING = FORMAL_PARAMETER___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___PRIMITIVE_TYPE__STRING = FORMAL_PARAMETER___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___PRIMITIVE_TYPE____STRING = FORMAL_PARAMETER___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___BOOLEAN_TYPE = FORMAL_PARAMETER___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___INTEGER_TYPE = FORMAL_PARAMETER___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_INTEGER_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___STRING_TYPE = FORMAL_PARAMETER___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_STRING_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___UNLIMITED_NATURAL_TYPE = FORMAL_PARAMETER___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___BIT_STRING_TYPE = FORMAL_PARAMETER___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___NATURAL_TYPE = FORMAL_PARAMETER___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_NATURAL_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_NUMERIC_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___COLLECTION_FUNCTION_ADD = FORMAL_PARAMETER___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_COLLECTION_CLASS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ANNOTATION = FORMAL_PARAMETER___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ACTUAL_NAME = FORMAL_PARAMETER___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___OUTER_SCOPE = FORMAL_PARAMETER___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_DEFINITION_OUTER_SCOPE = FORMAL_PARAMETER___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___QUALIFIED_NAME = FORMAL_PARAMETER___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___NAMESPACE_REFERENCE = FORMAL_PARAMETER___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ADD_TO_MODEL = FORMAL_PARAMETER___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MATCH_FOR_STUB__UNITDEFINITION = FORMAL_PARAMETER___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = FORMAL_PARAMETER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = FORMAL_PARAMETER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___TEMPLATE_PARAMETERS = FORMAL_PARAMETER___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_TEMPLATE = FORMAL_PARAMETER___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_FEATURE = FORMAL_PARAMETER___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___CONTAINING_MEMBER = FORMAL_PARAMETER___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___CURRENT_SCOPE = FORMAL_PARAMETER___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = FORMAL_PARAMETER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___IS_SAME_KIND_AS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MATCHES__FORMALPARAMETER = FORMAL_PARAMETER___MATCHES__FORMALPARAMETER;

	/**
	 * The operation id for the '<em>Matches Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MATCHES_ELEMENT__ELEMENTREFERENCE = FORMAL_PARAMETER___MATCHES_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Matches Name Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MATCHES_NAME_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___MATCHES_NAME_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Matches Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER___MATCHES_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___MATCHES_TYPE__ELEMENTREFERENCE;

	/**
	 * The number of operations of the '<em>Return Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int RETURN_PARAMETER_OPERATION_COUNT = FORMAL_PARAMETER_OPERATION_COUNT + 0;

	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.NonReturnParameterImpl <em>Non Return Parameter</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.NonReturnParameterImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getNonReturnParameter()
	 * @generated
	 */
	int NON_RETURN_PARAMETER = 130;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__OWNER = FORMAL_PARAMETER__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__NAME = FORMAL_PARAMETER__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__IS_STUB = FORMAL_PARAMETER__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__IS_FEATURE = FORMAL_PARAMETER__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__IS_PRIMITIVE = FORMAL_PARAMETER__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__IS_EXTERNAL = FORMAL_PARAMETER__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__SUBUNIT = FORMAL_PARAMETER__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Direction</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__DIRECTION = FORMAL_PARAMETER__DIRECTION;

	/**
	 * The feature id for the '<em><b>Type Part</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER__TYPE_PART = FORMAL_PARAMETER__TYPE_PART;

	/**
	 * The number of structural features of the '<em>Non Return Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER_FEATURE_COUNT = FORMAL_PARAMETER_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___TO_REFERENCE = FORMAL_PARAMETER___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___OWNER = FORMAL_PARAMETER___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___SYNTAX_ELEMENT_OWNER = FORMAL_PARAMETER___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___SYNTAX_ELEMENT_CURRENT_SCOPE = FORMAL_PARAMETER___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ENCLOSING_STATEMENT = FORMAL_PARAMETER___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ENCLOSING_EXPRESSION = FORMAL_PARAMETER___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ASSIGNMENTS_BEFORE = FORMAL_PARAMETER___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = FORMAL_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = FORMAL_PARAMETER___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = FORMAL_PARAMETER___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___UPDATE_ALL__ELIST_ELIST = FORMAL_PARAMETER___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___COMMON_ANCESTOR__ELIST = FORMAL_PARAMETER___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___COMMON_ANCESTORS__ELIST = FORMAL_PARAMETER___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___REMOVE_DUPLICATE_ELEMENTS__ELIST = FORMAL_PARAMETER___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___RESOLVE_IN_LIBRARY__STRING = FORMAL_PARAMETER___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___PRIMITIVE_TYPE__STRING = FORMAL_PARAMETER___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___PRIMITIVE_TYPE____STRING = FORMAL_PARAMETER___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___BOOLEAN_TYPE = FORMAL_PARAMETER___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___INTEGER_TYPE = FORMAL_PARAMETER___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_INTEGER_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___STRING_TYPE = FORMAL_PARAMETER___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_STRING_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___UNLIMITED_NATURAL_TYPE = FORMAL_PARAMETER___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___BIT_STRING_TYPE = FORMAL_PARAMETER___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___NATURAL_TYPE = FORMAL_PARAMETER___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_NATURAL_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_NUMERIC_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___COLLECTION_FUNCTION_ADD = FORMAL_PARAMETER___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_COLLECTION_CLASS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ANNOTATION = FORMAL_PARAMETER___ANNOTATION;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ACTUAL_NAME = FORMAL_PARAMETER___ACTUAL_NAME;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___OUTER_SCOPE = FORMAL_PARAMETER___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_DEFINITION_OUTER_SCOPE = FORMAL_PARAMETER___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___QUALIFIED_NAME = FORMAL_PARAMETER___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___NAMESPACE_REFERENCE = FORMAL_PARAMETER___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ADD_TO_MODEL = FORMAL_PARAMETER___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MATCH_FOR_STUB__UNITDEFINITION = FORMAL_PARAMETER___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = FORMAL_PARAMETER___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = FORMAL_PARAMETER___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___TEMPLATE_PARAMETERS = FORMAL_PARAMETER___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_TEMPLATE = FORMAL_PARAMETER___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_FEATURE = FORMAL_PARAMETER___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = FORMAL_PARAMETER___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___CONTAINING_MEMBER = FORMAL_PARAMETER___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___CURRENT_SCOPE = FORMAL_PARAMETER___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = FORMAL_PARAMETER___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___IS_SAME_KIND_AS__ELEMENTREFERENCE = FORMAL_PARAMETER___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Matches</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MATCHES__FORMALPARAMETER = FORMAL_PARAMETER___MATCHES__FORMALPARAMETER;

	/**
	 * The operation id for the '<em>Matches Element</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MATCHES_ELEMENT__ELEMENTREFERENCE = FORMAL_PARAMETER___MATCHES_ELEMENT__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Matches Name Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MATCHES_NAME_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___MATCHES_NAME_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Matches Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER___MATCHES_TYPE__ELEMENTREFERENCE = FORMAL_PARAMETER___MATCHES_TYPE__ELEMENTREFERENCE;

	/**
	 * The number of operations of the '<em>Non Return Parameter</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int NON_RETURN_PARAMETER_OPERATION_COUNT = FORMAL_PARAMETER_OPERATION_COUNT + 0;


	/**
	 * The meta object id for the '{@link org.eclipse.papyrus.uml.alf.impl.AnyTypeImpl <em>Any Type</em>}' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see org.eclipse.papyrus.uml.alf.impl.AnyTypeImpl
	 * @see org.eclipse.papyrus.uml.alf.impl.AlfPackageImpl#getAnyType()
	 * @generated
	 */
	int ANY_TYPE = 131;

	/**
	 * The feature id for the '<em><b>Owner</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__OWNER = CLASSIFIER_DEFINITION__OWNER;

	/**
	 * The feature id for the '<em><b>Name</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__NAME = CLASSIFIER_DEFINITION__NAME;

	/**
	 * The feature id for the '<em><b>Is Stub</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__IS_STUB = CLASSIFIER_DEFINITION__IS_STUB;

	/**
	 * The feature id for the '<em><b>Is Feature</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__IS_FEATURE = CLASSIFIER_DEFINITION__IS_FEATURE;

	/**
	 * The feature id for the '<em><b>Is Primitive</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__IS_PRIMITIVE = CLASSIFIER_DEFINITION__IS_PRIMITIVE;

	/**
	 * The feature id for the '<em><b>Is External</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__IS_EXTERNAL = CLASSIFIER_DEFINITION__IS_EXTERNAL;

	/**
	 * The feature id for the '<em><b>Subunit</b></em>' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__SUBUNIT = CLASSIFIER_DEFINITION__SUBUNIT;

	/**
	 * The feature id for the '<em><b>Owned Member</b></em>' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__OWNED_MEMBER = CLASSIFIER_DEFINITION__OWNED_MEMBER;

	/**
	 * The feature id for the '<em><b>Unit</b></em>' container reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__UNIT = CLASSIFIER_DEFINITION__UNIT;

	/**
	 * The feature id for the '<em><b>Member</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__MEMBER = CLASSIFIER_DEFINITION__MEMBER;

	/**
	 * The feature id for the '<em><b>Is Abstract</b></em>' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__IS_ABSTRACT = CLASSIFIER_DEFINITION__IS_ABSTRACT;

	/**
	 * The feature id for the '<em><b>Specialization</b></em>' containment reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__SPECIALIZATION = CLASSIFIER_DEFINITION__SPECIALIZATION;

	/**
	 * The feature id for the '<em><b>Specialization Referent</b></em>' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE__SPECIALIZATION_REFERENT = CLASSIFIER_DEFINITION__SPECIALIZATION_REFERENT;

	/**
	 * The number of structural features of the '<em>Any Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE_FEATURE_COUNT = CLASSIFIER_DEFINITION_FEATURE_COUNT + 0;

	/**
	 * The operation id for the '<em>To Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___TO_REFERENCE = CLASSIFIER_DEFINITION___TO_REFERENCE;

	/**
	 * The operation id for the '<em>Owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___OWNER = CLASSIFIER_DEFINITION___OWNER;

	/**
	 * The operation id for the '<em>Syntax Element owner</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___SYNTAX_ELEMENT_OWNER = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_OWNER;

	/**
	 * The operation id for the '<em>Syntax Element current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___SYNTAX_ELEMENT_CURRENT_SCOPE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Enclosing Statement</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ENCLOSING_STATEMENT = CLASSIFIER_DEFINITION___ENCLOSING_STATEMENT;

	/**
	 * The operation id for the '<em>Enclosing Expression</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ENCLOSING_EXPRESSION = CLASSIFIER_DEFINITION___ENCLOSING_EXPRESSION;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE;

	/**
	 * The operation id for the '<em>Syntax Element assignments Before base</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE = CLASSIFIER_DEFINITION___SYNTAX_ELEMENT_ASSIGNMENTS_BEFORE_BASE;

	/**
	 * The operation id for the '<em>Assignments Before</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ASSIGNMENTS_BEFORE__SYNTAXELEMENT = CLASSIFIER_DEFINITION___ASSIGNMENTS_BEFORE__SYNTAXELEMENT;

	/**
	 * The operation id for the '<em>Update All</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___UPDATE_ALL__ELIST_ELIST = CLASSIFIER_DEFINITION___UPDATE_ALL__ELIST_ELIST;

	/**
	 * The operation id for the '<em>Common Ancestor</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___COMMON_ANCESTOR__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTOR__ELIST;

	/**
	 * The operation id for the '<em>Common Ancestors</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___COMMON_ANCESTORS__ELIST = CLASSIFIER_DEFINITION___COMMON_ANCESTORS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicate Elements</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___REMOVE_DUPLICATE_ELEMENTS__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATE_ELEMENTS__ELIST;

	/**
	 * The operation id for the '<em>Resolve In Library</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___RESOLVE_IN_LIBRARY__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_LIBRARY__STRING;

	/**
	 * The operation id for the '<em>Primitive Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___PRIMITIVE_TYPE__STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE__STRING;

	/**
	 * The operation id for the '<em>Primitive Type </em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___PRIMITIVE_TYPE____STRING = CLASSIFIER_DEFINITION___PRIMITIVE_TYPE____STRING;

	/**
	 * The operation id for the '<em>Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___BOOLEAN_TYPE = CLASSIFIER_DEFINITION___BOOLEAN_TYPE;

	/**
	 * The operation id for the '<em>Is Boolean Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_BOOLEAN_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BOOLEAN_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___INTEGER_TYPE = CLASSIFIER_DEFINITION___INTEGER_TYPE;

	/**
	 * The operation id for the '<em>Is Integer Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_INTEGER_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___STRING_TYPE = CLASSIFIER_DEFINITION___STRING_TYPE;

	/**
	 * The operation id for the '<em>Is String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___UNLIMITED_NATURAL_TYPE = CLASSIFIER_DEFINITION___UNLIMITED_NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Unlimited Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_UNLIMITED_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___BIT_STRING_TYPE = CLASSIFIER_DEFINITION___BIT_STRING_TYPE;

	/**
	 * The operation id for the '<em>Is Bit String Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_BIT_STRING_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NATURAL_TYPE = CLASSIFIER_DEFINITION___NATURAL_TYPE;

	/**
	 * The operation id for the '<em>Is Natural Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_NATURAL_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NATURAL_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Numeric Type</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_NUMERIC_TYPE__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_NUMERIC_TYPE__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Collection Function Add</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___COLLECTION_FUNCTION_ADD = CLASSIFIER_DEFINITION___COLLECTION_FUNCTION_ADD;

	/**
	 * The operation id for the '<em>Is Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Integer Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_INTEGER_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Bit String Collection Class</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_BIT_STRING_COLLECTION_CLASS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Annotation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION;

	/**
	 * The operation id for the '<em>Member Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Qualified Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___QUALIFIED_NAME = CLASSIFIER_DEFINITION___QUALIFIED_NAME;

	/**
	 * The operation id for the '<em>Namespace Reference</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_REFERENCE = CLASSIFIER_DEFINITION___NAMESPACE_REFERENCE;

	/**
	 * The operation id for the '<em>Add To Model</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ADD_TO_MODEL = CLASSIFIER_DEFINITION___ADD_TO_MODEL;

	/**
	 * The operation id for the '<em>Is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION = CLASSIFIER_DEFINITION___MEMBER_DEFINITION_IS_DISTINGUISHABLE_FROM__MEMBERDEFINITION;

	/**
	 * The operation id for the '<em>Is Same Kind As</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_SAME_KIND_AS__ELEMENTREFERENCE = CLASSIFIER_DEFINITION___IS_SAME_KIND_AS__ELEMENTREFERENCE;

	/**
	 * The operation id for the '<em>Is Template</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_TEMPLATE = CLASSIFIER_DEFINITION___IS_TEMPLATE;

	/**
	 * The operation id for the '<em>Is Feature</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IS_FEATURE = CLASSIFIER_DEFINITION___IS_FEATURE;

	/**
	 * The operation id for the '<em>Member Annotations</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_ANNOTATIONS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is Primitive Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_PRIMITIVE_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Is External Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_IS_EXTERNAL_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member External</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_EXTERNAL__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_STUB__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Subunit Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_SUBUNIT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Stub Stereotypes</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_STUB_STEREOTYPES__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Member Primitive</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___MEMBER_PRIMITIVE__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Containing Member</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___CONTAINING_MEMBER = CLASSIFIER_DEFINITION___CONTAINING_MEMBER;

	/**
	 * The operation id for the '<em>Current Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___CURRENT_SCOPE = CLASSIFIER_DEFINITION___CURRENT_SCOPE;

	/**
	 * The operation id for the '<em>Outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___OUTER_SCOPE = CLASSIFIER_DEFINITION___OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Namespace Definition outer Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_DEFINITION_OUTER_SCOPE = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_OUTER_SCOPE;

	/**
	 * The operation id for the '<em>Model Namespace</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MODEL_NAMESPACE = CLASSIFIER_DEFINITION___MODEL_NAMESPACE;

	/**
	 * The operation id for the '<em>Model Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MODEL_SCOPE = CLASSIFIER_DEFINITION___MODEL_SCOPE;

	/**
	 * The operation id for the '<em>Resolve In Scope</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___RESOLVE_IN_SCOPE__STRING = CLASSIFIER_DEFINITION___RESOLVE_IN_SCOPE__STRING;

	/**
	 * The operation id for the '<em>Applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___APPLIED_PROFILES = CLASSIFIER_DEFINITION___APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_DEFINITION_APPLIED_PROFILES = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_APPLIED_PROFILES;

	/**
	 * The operation id for the '<em>Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___PARAMETERS = CLASSIFIER_DEFINITION___PARAMETERS;

	/**
	 * The operation id for the '<em>Return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___RETURN_PARAMETER = CLASSIFIER_DEFINITION___RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Namespace Definition return Parameter</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_DEFINITION_RETURN_PARAMETER = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_RETURN_PARAMETER;

	/**
	 * The operation id for the '<em>Subunit Owned Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___SUBUNIT_OWNED_MEMBERS = CLASSIFIER_DEFINITION___SUBUNIT_OWNED_MEMBERS;

	/**
	 * The operation id for the '<em>Annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Template Parameters</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___TEMPLATE_PARAMETERS = CLASSIFIER_DEFINITION___TEMPLATE_PARAMETERS;

	/**
	 * The operation id for the '<em>Members Cached</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBERS_CACHED = CLASSIFIER_DEFINITION___MEMBERS_CACHED;

	/**
	 * The operation id for the '<em>Namespace Definition members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_DEFINITION_MEMBERS = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBERS;

	/**
	 * The operation id for the '<em>Imported Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IMPORTED_MEMBERS = CLASSIFIER_DEFINITION___IMPORTED_MEMBERS;

	/**
	 * The operation id for the '<em>Import Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___IMPORT_MEMBERS__ELIST = CLASSIFIER_DEFINITION___IMPORT_MEMBERS__ELIST;

	/**
	 * The operation id for the '<em>Exclude Collisions</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___EXCLUDE_COLLISIONS__ELIST = CLASSIFIER_DEFINITION___EXCLUDE_COLLISIONS__ELIST;

	/**
	 * The operation id for the '<em>Remove Duplicates</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___REMOVE_DUPLICATES__ELIST = CLASSIFIER_DEFINITION___REMOVE_DUPLICATES__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable Caching</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___INCLUDE_DISTINGUISHABLE_CACHING__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE_CACHING__ELIST;

	/**
	 * The operation id for the '<em>Include Distinguishable</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___INCLUDE_DISTINGUISHABLE__ELIST = CLASSIFIER_DEFINITION___INCLUDE_DISTINGUISHABLE__ELIST;

	/**
	 * The operation id for the '<em>Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___STUB = CLASSIFIER_DEFINITION___STUB;

	/**
	 * The operation id for the '<em>Stub For</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___STUB_FOR__UNITDEFINITION = CLASSIFIER_DEFINITION___STUB_FOR__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___NAMESPACE_DEFINITION_MEMBER_DISTINGUISHABILITY__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_ANNOTATION_ALLOWED__STEREOTYPEANNOTATION;

	/**
	 * The operation id for the '<em>Match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Classifier Definition match For Stub</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_MATCH_FOR_STUB__UNITDEFINITION;

	/**
	 * The operation id for the '<em>Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___MEMBERS = CLASSIFIER_DEFINITION___MEMBERS;

	/**
	 * The operation id for the '<em>Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___INHERITED_MEMBERS = CLASSIFIER_DEFINITION___INHERITED_MEMBERS;

	/**
	 * The operation id for the '<em>Inherit</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___INHERIT__ELIST = CLASSIFIER_DEFINITION___INHERIT__ELIST;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_SPECIALIZATION_REFERENT_DERIVATION__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP = CLASSIFIER_DEFINITION___CLASSIFIER_DEFINITION_INHERITED_MEMBERS__DIAGNOSTICCHAIN_MAP;

	/**
	 * The operation id for the '<em>Actual Name</em>' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE___ACTUAL_NAME = CLASSIFIER_DEFINITION_OPERATION_COUNT + 0;

	/**
	 * The number of operations of the '<em>Any Type</em>' class.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 * @ordered
	 */
	int ANY_TYPE_OPERATION_COUNT = CLASSIFIER_DEFINITION_OPERATION_COUNT + 1;


	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AssignedSource <em>Assigned Source</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Assigned Source</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource
	 * @generated
	 */
	EClass getAssignedSource();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignedSource#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#getName()
	 * @see #getAssignedSource()
	 * @generated
	 */
	EAttribute getAssignedSource_Name();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignedSource#getSource <em>Source</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Source</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#getSource()
	 * @see #getAssignedSource()
	 * @generated
	 */
	EReference getAssignedSource_Source();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignedSource#getUpper <em>Upper</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Upper</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#getUpper()
	 * @see #getAssignedSource()
	 * @generated
	 */
	EAttribute getAssignedSource_Upper();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignedSource#getLower <em>Lower</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Lower</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#getLower()
	 * @see #getAssignedSource()
	 * @generated
	 */
	EAttribute getAssignedSource_Lower();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignedSource#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#getType()
	 * @see #getAssignedSource()
	 * @generated
	 */
	EReference getAssignedSource_Type();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignedSource#isIsParallelLocalName <em>Is Parallel Local Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Parallel Local Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#isIsParallelLocalName()
	 * @see #getAssignedSource()
	 * @generated
	 */
	EAttribute getAssignedSource_IsParallelLocalName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignedSource#isNew(org.eclipse.emf.common.util.EList) <em>Is New</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is New</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#isNew(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getAssignedSource__IsNew__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignedSource#update(org.eclipse.emf.common.util.EList) <em>Update</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#update(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getAssignedSource__Update__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignedSource#copy(org.eclipse.papyrus.uml.alf.SyntaxElement, boolean) <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignedSource#copy(org.eclipse.papyrus.uml.alf.SyntaxElement, boolean)
	 * @generated
	 */
	EOperation getAssignedSource__Copy__SyntaxElement_boolean();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SyntaxElement <em>Syntax Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Syntax Element</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement
	 * @generated
	 */
	EClass getSyntaxElement();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#getOwner <em>Owner</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Owner</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#getOwner()
	 * @see #getSyntaxElement()
	 * @generated
	 */
	EReference getSyntaxElement_Owner();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#toReference() <em>To Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#toReference()
	 * @generated
	 */
	EOperation getSyntaxElement__ToReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#owner() <em>Owner</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Owner</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#owner()
	 * @generated
	 */
	EOperation getSyntaxElement__Owner();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_owner() <em>Syntax Element owner</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Syntax Element owner</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_owner()
	 * @generated
	 */
	EOperation getSyntaxElement__SyntaxElement_owner();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#currentScope() <em>Current Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Current Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#currentScope()
	 * @generated
	 */
	EOperation getSyntaxElement__CurrentScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_currentScope() <em>Syntax Element current Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Syntax Element current Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_currentScope()
	 * @generated
	 */
	EOperation getSyntaxElement__SyntaxElement_currentScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#enclosingStatement() <em>Enclosing Statement</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enclosing Statement</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#enclosingStatement()
	 * @generated
	 */
	EOperation getSyntaxElement__EnclosingStatement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#enclosingExpression() <em>Enclosing Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enclosing Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#enclosingExpression()
	 * @generated
	 */
	EOperation getSyntaxElement__EnclosingExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#assignmentsBefore() <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#assignmentsBefore()
	 * @generated
	 */
	EOperation getSyntaxElement__AssignmentsBefore();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_assignmentsBefore() <em>Syntax Element assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Syntax Element assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_assignmentsBefore()
	 * @generated
	 */
	EOperation getSyntaxElement__SyntaxElement_assignmentsBefore();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_assignmentsBefore_base() <em>Syntax Element assignments Before base</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Syntax Element assignments Before base</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#SyntaxElement_assignmentsBefore_base()
	 * @generated
	 */
	EOperation getSyntaxElement__SyntaxElement_assignmentsBefore_base();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getSyntaxElement__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#updateAll(org.eclipse.emf.common.util.EList, org.eclipse.emf.common.util.EList) <em>Update All</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update All</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#updateAll(org.eclipse.emf.common.util.EList, org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getSyntaxElement__UpdateAll__EList_EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#commonAncestor(org.eclipse.emf.common.util.EList) <em>Common Ancestor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Common Ancestor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#commonAncestor(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getSyntaxElement__CommonAncestor__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#commonAncestors(org.eclipse.emf.common.util.EList) <em>Common Ancestors</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Common Ancestors</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#commonAncestors(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getSyntaxElement__CommonAncestors__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#removeDuplicateElements(org.eclipse.emf.common.util.EList) <em>Remove Duplicate Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Remove Duplicate Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#removeDuplicateElements(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getSyntaxElement__RemoveDuplicateElements__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#resolveInLibrary(java.lang.String) <em>Resolve In Library</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Library</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#resolveInLibrary(java.lang.String)
	 * @generated
	 */
	EOperation getSyntaxElement__ResolveInLibrary__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#primitiveType(java.lang.String) <em>Primitive Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Primitive Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#primitiveType(java.lang.String)
	 * @generated
	 */
	EOperation getSyntaxElement__PrimitiveType__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#primitiveType_(java.lang.String) <em>Primitive Type </em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Primitive Type </em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#primitiveType_(java.lang.String)
	 * @generated
	 */
	EOperation getSyntaxElement__PrimitiveType___String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#booleanType() <em>Boolean Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Boolean Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#booleanType()
	 * @generated
	 */
	EOperation getSyntaxElement__BooleanType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isBooleanType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Boolean Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Boolean Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isBooleanType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsBooleanType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#integerType() <em>Integer Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Integer Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#integerType()
	 * @generated
	 */
	EOperation getSyntaxElement__IntegerType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isIntegerType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Integer Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Integer Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isIntegerType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsIntegerType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#stringType() <em>String Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>String Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#stringType()
	 * @generated
	 */
	EOperation getSyntaxElement__StringType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isStringType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is String Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is String Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isStringType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsStringType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#unlimitedNaturalType() <em>Unlimited Natural Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unlimited Natural Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#unlimitedNaturalType()
	 * @generated
	 */
	EOperation getSyntaxElement__UnlimitedNaturalType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isUnlimitedNaturalType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Unlimited Natural Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unlimited Natural Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isUnlimitedNaturalType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsUnlimitedNaturalType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#bitStringType() <em>Bit String Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bit String Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#bitStringType()
	 * @generated
	 */
	EOperation getSyntaxElement__BitStringType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isBitStringType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Bit String Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Bit String Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isBitStringType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsBitStringType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#naturalType() <em>Natural Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Natural Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#naturalType()
	 * @generated
	 */
	EOperation getSyntaxElement__NaturalType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isNaturalType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Natural Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Natural Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isNaturalType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsNaturalType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isNumericType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Numeric Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Numeric Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isNumericType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsNumericType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#collectionFunctionAdd() <em>Collection Function Add</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collection Function Add</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#collectionFunctionAdd()
	 * @generated
	 */
	EOperation getSyntaxElement__CollectionFunctionAdd();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isCollectionClass(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Collection Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Collection Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isCollectionClass(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsCollectionClass__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isIntegerCollectionClass(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Integer Collection Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Integer Collection Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isIntegerCollectionClass(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsIntegerCollectionClass__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SyntaxElement#isBitStringCollectionClass(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Bit String Collection Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Bit String Collection Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SyntaxElement#isBitStringCollectionClass(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSyntaxElement__IsBitStringCollectionClass__ElementReference();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ElementReference <em>Element Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Element Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference
	 * @generated
	 */
	EClass getElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isUml() <em>Is Uml</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Uml</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isUml()
	 * @generated
	 */
	EOperation getElementReference__IsUml();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isAlf() <em>Is Alf</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Alf</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isAlf()
	 * @generated
	 */
	EOperation getElementReference__IsAlf();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#asUml() <em>As Uml</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Uml</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#asUml()
	 * @generated
	 */
	EOperation getElementReference__AsUml();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#asAlf() <em>As Alf</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Alf</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#asAlf()
	 * @generated
	 */
	EOperation getElementReference__AsAlf();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#asMember() <em>As Member</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Member</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#asMember()
	 * @generated
	 */
	EOperation getElementReference__AsMember();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getElementReference__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isNamedElement() <em>Is Named Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Named Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isNamedElement()
	 * @generated
	 */
	EOperation getElementReference__IsNamedElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isNamespace() <em>Is Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isNamespace()
	 * @generated
	 */
	EOperation getElementReference__IsNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Is Namespace For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getElementReference__IsNamespaceFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isModelNamespace() <em>Is Model Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Model Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isModelNamespace()
	 * @generated
	 */
	EOperation getElementReference__IsModelNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isPackage() <em>Is Package</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Package</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isPackage()
	 * @generated
	 */
	EOperation getElementReference__IsPackage();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isProfile() <em>Is Profile</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Profile</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isProfile()
	 * @generated
	 */
	EOperation getElementReference__IsProfile();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isPackageableElement() <em>Is Packageable Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Packageable Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isPackageableElement()
	 * @generated
	 */
	EOperation getElementReference__IsPackageableElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isClassifier() <em>Is Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isClassifier()
	 * @generated
	 */
	EOperation getElementReference__IsClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isAbstractClassifier() <em>Is Abstract Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Abstract Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isAbstractClassifier()
	 * @generated
	 */
	EOperation getElementReference__IsAbstractClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isAssociation() <em>Is Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isAssociation()
	 * @generated
	 */
	EOperation getElementReference__IsAssociation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isDataType() <em>Is Data Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Data Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isDataType()
	 * @generated
	 */
	EOperation getElementReference__IsDataType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isClass() <em>Is Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isClass()
	 * @generated
	 */
	EOperation getElementReference__IsClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isActiveClass() <em>Is Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isActiveClass()
	 * @generated
	 */
	EOperation getElementReference__IsActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isSignal() <em>Is Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isSignal()
	 * @generated
	 */
	EOperation getElementReference__IsSignal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isEnumeration() <em>Is Enumeration</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isEnumeration()
	 * @generated
	 */
	EOperation getElementReference__IsEnumeration();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isBehavior() <em>Is Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isBehavior()
	 * @generated
	 */
	EOperation getElementReference__IsBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isActivity() <em>Is Activity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Activity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isActivity()
	 * @generated
	 */
	EOperation getElementReference__IsActivity();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isMethod() <em>Is Method</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Method</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isMethod()
	 * @generated
	 */
	EOperation getElementReference__IsMethod();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isPrimitiveType() <em>Is Primitive Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Primitive Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isPrimitiveType()
	 * @generated
	 */
	EOperation getElementReference__IsPrimitiveType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isReception() <em>Is Reception</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Reception</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isReception()
	 * @generated
	 */
	EOperation getElementReference__IsReception();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isOperation() <em>Is Operation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Operation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isOperation()
	 * @generated
	 */
	EOperation getElementReference__IsOperation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isConstructor() <em>Is Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isConstructor()
	 * @generated
	 */
	EOperation getElementReference__IsConstructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isDestructor() <em>Is Destructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Destructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isDestructor()
	 * @generated
	 */
	EOperation getElementReference__IsDestructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isFeature()
	 * @generated
	 */
	EOperation getElementReference__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isProperty() <em>Is Property</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Property</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isProperty()
	 * @generated
	 */
	EOperation getElementReference__IsProperty();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isAssociationEnd() <em>Is Association End</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association End</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isAssociationEnd()
	 * @generated
	 */
	EOperation getElementReference__IsAssociationEnd();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isParameter() <em>Is Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isParameter()
	 * @generated
	 */
	EOperation getElementReference__IsParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isTemplate() <em>Is Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isTemplate()
	 * @generated
	 */
	EOperation getElementReference__IsTemplate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isTemplateParameter() <em>Is Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isTemplateParameter()
	 * @generated
	 */
	EOperation getElementReference__IsTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isClassifierTemplateParameter() <em>Is Classifier Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isClassifierTemplateParameter()
	 * @generated
	 */
	EOperation getElementReference__IsClassifierTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isParameteredElement() <em>Is Parametered Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parametered Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isParameteredElement()
	 * @generated
	 */
	EOperation getElementReference__IsParameteredElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isTemplateBinding() <em>Is Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isTemplateBinding()
	 * @generated
	 */
	EOperation getElementReference__IsTemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isStereotype() <em>Is Stereotype</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Stereotype</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isStereotype()
	 * @generated
	 */
	EOperation getElementReference__IsStereotype();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isEnumerationLiteral() <em>Is Enumeration Literal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration Literal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isEnumerationLiteral()
	 * @generated
	 */
	EOperation getElementReference__IsEnumerationLiteral();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isLoopVariable() <em>Is Loop Variable</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Loop Variable</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isLoopVariable()
	 * @generated
	 */
	EOperation getElementReference__IsLoopVariable();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isAnnotation() <em>Is Annotation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Annotation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isAnnotation()
	 * @generated
	 */
	EOperation getElementReference__IsAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isSequenceExpansionExpression() <em>Is Sequence Expansion Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isSequenceExpansionExpression()
	 * @generated
	 */
	EOperation getElementReference__IsSequenceExpansionExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isAnyType() <em>Is Any Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Any Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isAnyType()
	 * @generated
	 */
	EOperation getElementReference__IsAnyType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isDistinguishableFrom(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Distinguishable From</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Distinguishable From</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isDistinguishableFrom(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getElementReference__IsDistinguishableFrom__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isAssignableFrom(org.eclipse.papyrus.uml.alf.AssignableElement) <em>Is Assignable From</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Assignable From</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isAssignableFrom(org.eclipse.papyrus.uml.alf.AssignableElement)
	 * @generated
	 */
	EOperation getElementReference__IsAssignableFrom__AssignableElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#collectionArgument() <em>Collection Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collection Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#collectionArgument()
	 * @generated
	 */
	EOperation getElementReference__CollectionArgument();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#name() <em>Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#name()
	 * @generated
	 */
	EOperation getElementReference__Name();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#visibility() <em>Visibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Visibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#visibility()
	 * @generated
	 */
	EOperation getElementReference__Visibility();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#ownedMembers() <em>Owned Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Owned Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#ownedMembers()
	 * @generated
	 */
	EOperation getElementReference__OwnedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#members() <em>Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#members()
	 * @generated
	 */
	EOperation getElementReference__Members();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#visibleMembers() <em>Visible Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Visible Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#visibleMembers()
	 * @generated
	 */
	EOperation getElementReference__VisibleMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#nestedClassifiers() <em>Nested Classifiers</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Nested Classifiers</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#nestedClassifiers()
	 * @generated
	 */
	EOperation getElementReference__NestedClassifiers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#properties() <em>Properties</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Properties</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#properties()
	 * @generated
	 */
	EOperation getElementReference__Properties();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#associationEnds() <em>Association Ends</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association Ends</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#associationEnds()
	 * @generated
	 */
	EOperation getElementReference__AssociationEnds();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#opposite() <em>Opposite</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Opposite</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#opposite()
	 * @generated
	 */
	EOperation getElementReference__Opposite();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#receptions() <em>Receptions</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Receptions</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#receptions()
	 * @generated
	 */
	EOperation getElementReference__Receptions();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#signal() <em>Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#signal()
	 * @generated
	 */
	EOperation getElementReference__Signal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#parameters() <em>Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#parameters()
	 * @generated
	 */
	EOperation getElementReference__Parameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#returnParameter() <em>Return Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#returnParameter()
	 * @generated
	 */
	EOperation getElementReference__ReturnParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#specification() <em>Specification</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Specification</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#specification()
	 * @generated
	 */
	EOperation getElementReference__Specification();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#redefinedOperations() <em>Redefined Operations</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Redefined Operations</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#redefinedOperations()
	 * @generated
	 */
	EOperation getElementReference__RedefinedOperations();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#namespace() <em>Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#namespace()
	 * @generated
	 */
	EOperation getElementReference__Namespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#template() <em>Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#template()
	 * @generated
	 */
	EOperation getElementReference__Template();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#templateParameters() <em>Template Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#templateParameters()
	 * @generated
	 */
	EOperation getElementReference__TemplateParameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#parameteredElements() <em>Parametered Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parametered Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#parameteredElements()
	 * @generated
	 */
	EOperation getElementReference__ParameteredElements();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#templateActuals() <em>Template Actuals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Actuals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#templateActuals()
	 * @generated
	 */
	EOperation getElementReference__TemplateActuals();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#direction() <em>Direction</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Direction</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#direction()
	 * @generated
	 */
	EOperation getElementReference__Direction();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#association() <em>Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#association()
	 * @generated
	 */
	EOperation getElementReference__Association();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#type()
	 * @generated
	 */
	EOperation getElementReference__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#lower()
	 * @generated
	 */
	EOperation getElementReference__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#upper()
	 * @generated
	 */
	EOperation getElementReference__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isOrdered() <em>Is Ordered</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Ordered</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isOrdered()
	 * @generated
	 */
	EOperation getElementReference__IsOrdered();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isNonunique() <em>Is Nonunique</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Nonunique</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isNonunique()
	 * @generated
	 */
	EOperation getElementReference__IsNonunique();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#parents() <em>Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#parents()
	 * @generated
	 */
	EOperation getElementReference__Parents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#allParents() <em>All Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>All Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#allParents()
	 * @generated
	 */
	EOperation getElementReference__AllParents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#classifierBehavior() <em>Classifier Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#classifierBehavior()
	 * @generated
	 */
	EOperation getElementReference__ClassifierBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#context() <em>Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#context()
	 * @generated
	 */
	EOperation getElementReference__Context();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#appliedProfiles()
	 * @generated
	 */
	EOperation getElementReference__AppliedProfiles();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#base() <em>Base</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Base</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#base()
	 * @generated
	 */
	EOperation getElementReference__Base();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#reference() <em>Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#reference()
	 * @generated
	 */
	EOperation getElementReference__Reference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#templateBinding() <em>Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#templateBinding()
	 * @generated
	 */
	EOperation getElementReference__TemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#bind(org.eclipse.emf.common.util.EList) <em>Bind</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bind</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#bind(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getElementReference__Bind__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#boundElementName(org.eclipse.emf.common.util.EList) <em>Bound Element Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bound Element Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#boundElementName(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getElementReference__BoundElementName__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#boundPathName() <em>Bound Path Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bound Path Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#boundPathName()
	 * @generated
	 */
	EOperation getElementReference__BoundPathName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#qualifiedName() <em>Qualified Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#qualifiedName()
	 * @generated
	 */
	EOperation getElementReference__QualifiedName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#activeClass() <em>Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#activeClass()
	 * @generated
	 */
	EOperation getElementReference__ActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#isActiveBehavior() <em>Is Active Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Active Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#isActiveBehavior()
	 * @generated
	 */
	EOperation getElementReference__IsActiveBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Conforms To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conforms To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getElementReference__ConformsTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference) <em>Equals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getElementReference__Equals__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#containedIn(org.eclipse.emf.common.util.EList) <em>Contained In</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Contained In</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#containedIn(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getElementReference__ContainedIn__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#countIn(org.eclipse.emf.common.util.EList) <em>Count In</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Count In</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#countIn(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getElementReference__CountIn__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#positionIn(org.eclipse.emf.common.util.EList) <em>Position In</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Position In</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#positionIn(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getElementReference__PositionIn__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#copy()
	 * @generated
	 */
	EOperation getElementReference__Copy();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#modelScope() <em>Model Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#modelScope()
	 * @generated
	 */
	EOperation getElementReference__ModelScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#resolvePathName(java.lang.String) <em>Resolve Path Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Path Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#resolvePathName(java.lang.String)
	 * @generated
	 */
	EOperation getElementReference__ResolvePathName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#resolve(java.lang.String) <em>Resolve</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#resolve(java.lang.String)
	 * @generated
	 */
	EOperation getElementReference__Resolve__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#resolveInScope(java.lang.String) <em>Resolve In Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#resolveInScope(java.lang.String)
	 * @generated
	 */
	EOperation getElementReference__ResolveInScope__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#resolveStereotype(java.lang.String) <em>Resolve Stereotype</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Stereotype</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#resolveStereotype(java.lang.String)
	 * @generated
	 */
	EOperation getElementReference__ResolveStereotype__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#resolveVisible(java.lang.String, org.eclipse.papyrus.uml.alf.ElementReference) <em>Resolve Visible</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Visible</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#resolveVisible(java.lang.String, org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getElementReference__ResolveVisible__String_ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#resolveAssociationEnd(org.eclipse.papyrus.uml.alf.ElementReference, java.lang.String) <em>Resolve Association End</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Association End</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#resolveAssociationEnd(org.eclipse.papyrus.uml.alf.ElementReference, java.lang.String)
	 * @generated
	 */
	EOperation getElementReference__ResolveAssociationEnd__ElementReference_String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#containsMember(org.eclipse.papyrus.uml.alf.ElementReference) <em>Contains Member</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Contains Member</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#containsMember(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getElementReference__ContainsMember__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#allowPackageOnly() <em>Allow Package Only</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Allow Package Only</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#allowPackageOnly()
	 * @generated
	 */
	EOperation getElementReference__AllowPackageOnly();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#stub() <em>Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#stub()
	 * @generated
	 */
	EOperation getElementReference__Stub();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Stub For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getElementReference__StubFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementReference#constructorReference() <em>Constructor Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Constructor Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementReference#constructorReference()
	 * @generated
	 */
	EOperation getElementReference__ConstructorReference();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.InternalElementReference <em>Internal Element Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Internal Element Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference
	 * @generated
	 */
	EClass getInternalElementReference();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#getElement <em>Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Element</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#getElement()
	 * @see #getInternalElementReference()
	 * @generated
	 */
	EReference getInternalElementReference_Element();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isAlf() <em>Is Alf</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Alf</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isAlf()
	 * @generated
	 */
	EOperation getInternalElementReference__IsAlf();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#asAlf() <em>As Alf</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Alf</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#asAlf()
	 * @generated
	 */
	EOperation getInternalElementReference__AsAlf();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#asMember() <em>As Member</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Member</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#asMember()
	 * @generated
	 */
	EOperation getInternalElementReference__AsMember();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getInternalElementReference__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isNamedElement() <em>Is Named Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Named Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isNamedElement()
	 * @generated
	 */
	EOperation getInternalElementReference__IsNamedElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isNamespace() <em>Is Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isNamespace()
	 * @generated
	 */
	EOperation getInternalElementReference__IsNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Is Namespace For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getInternalElementReference__IsNamespaceFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isModelNamespace() <em>Is Model Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Model Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isModelNamespace()
	 * @generated
	 */
	EOperation getInternalElementReference__IsModelNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isPackage() <em>Is Package</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Package</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isPackage()
	 * @generated
	 */
	EOperation getInternalElementReference__IsPackage();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isProfile() <em>Is Profile</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Profile</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isProfile()
	 * @generated
	 */
	EOperation getInternalElementReference__IsProfile();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isPackageableElement() <em>Is Packageable Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Packageable Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isPackageableElement()
	 * @generated
	 */
	EOperation getInternalElementReference__IsPackageableElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isClassifier() <em>Is Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isClassifier()
	 * @generated
	 */
	EOperation getInternalElementReference__IsClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isAbstractClassifier() <em>Is Abstract Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Abstract Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isAbstractClassifier()
	 * @generated
	 */
	EOperation getInternalElementReference__IsAbstractClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isAssociation() <em>Is Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isAssociation()
	 * @generated
	 */
	EOperation getInternalElementReference__IsAssociation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isDataType() <em>Is Data Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Data Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isDataType()
	 * @generated
	 */
	EOperation getInternalElementReference__IsDataType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isClass() <em>Is Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isClass()
	 * @generated
	 */
	EOperation getInternalElementReference__IsClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isActiveClass() <em>Is Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isActiveClass()
	 * @generated
	 */
	EOperation getInternalElementReference__IsActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isSignal() <em>Is Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isSignal()
	 * @generated
	 */
	EOperation getInternalElementReference__IsSignal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isEnumeration() <em>Is Enumeration</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isEnumeration()
	 * @generated
	 */
	EOperation getInternalElementReference__IsEnumeration();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isBehavior() <em>Is Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isBehavior()
	 * @generated
	 */
	EOperation getInternalElementReference__IsBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isActivity() <em>Is Activity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Activity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isActivity()
	 * @generated
	 */
	EOperation getInternalElementReference__IsActivity();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isMethod() <em>Is Method</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Method</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isMethod()
	 * @generated
	 */
	EOperation getInternalElementReference__IsMethod();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isReception() <em>Is Reception</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Reception</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isReception()
	 * @generated
	 */
	EOperation getInternalElementReference__IsReception();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isPrimitiveType() <em>Is Primitive Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Primitive Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isPrimitiveType()
	 * @generated
	 */
	EOperation getInternalElementReference__IsPrimitiveType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isOperation() <em>Is Operation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Operation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isOperation()
	 * @generated
	 */
	EOperation getInternalElementReference__IsOperation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isConstructor() <em>Is Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isConstructor()
	 * @generated
	 */
	EOperation getInternalElementReference__IsConstructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isDestructor() <em>Is Destructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Destructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isDestructor()
	 * @generated
	 */
	EOperation getInternalElementReference__IsDestructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isFeature()
	 * @generated
	 */
	EOperation getInternalElementReference__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isProperty() <em>Is Property</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Property</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isProperty()
	 * @generated
	 */
	EOperation getInternalElementReference__IsProperty();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isAssociationEnd() <em>Is Association End</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association End</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isAssociationEnd()
	 * @generated
	 */
	EOperation getInternalElementReference__IsAssociationEnd();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isParameter() <em>Is Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isParameter()
	 * @generated
	 */
	EOperation getInternalElementReference__IsParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isTemplate() <em>Is Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isTemplate()
	 * @generated
	 */
	EOperation getInternalElementReference__IsTemplate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isTemplateParameter() <em>Is Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isTemplateParameter()
	 * @generated
	 */
	EOperation getInternalElementReference__IsTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isClassifierTemplateParameter() <em>Is Classifier Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isClassifierTemplateParameter()
	 * @generated
	 */
	EOperation getInternalElementReference__IsClassifierTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isParameteredElement() <em>Is Parametered Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parametered Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isParameteredElement()
	 * @generated
	 */
	EOperation getInternalElementReference__IsParameteredElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isTemplateBinding() <em>Is Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isTemplateBinding()
	 * @generated
	 */
	EOperation getInternalElementReference__IsTemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isEnumerationLiteral() <em>Is Enumeration Literal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration Literal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isEnumerationLiteral()
	 * @generated
	 */
	EOperation getInternalElementReference__IsEnumerationLiteral();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isLoopVariable() <em>Is Loop Variable</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Loop Variable</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isLoopVariable()
	 * @generated
	 */
	EOperation getInternalElementReference__IsLoopVariable();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isAnnotation() <em>Is Annotation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Annotation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isAnnotation()
	 * @generated
	 */
	EOperation getInternalElementReference__IsAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isSequenceExpansionExpression() <em>Is Sequence Expansion Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isSequenceExpansionExpression()
	 * @generated
	 */
	EOperation getInternalElementReference__IsSequenceExpansionExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isAnyType() <em>Is Any Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Any Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isAnyType()
	 * @generated
	 */
	EOperation getInternalElementReference__IsAnyType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isStereotype() <em>Is Stereotype</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Stereotype</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isStereotype()
	 * @generated
	 */
	EOperation getInternalElementReference__IsStereotype();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#name() <em>Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#name()
	 * @generated
	 */
	EOperation getInternalElementReference__Name();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#visibility() <em>Visibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Visibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#visibility()
	 * @generated
	 */
	EOperation getInternalElementReference__Visibility();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#ownedMembers() <em>Owned Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Owned Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#ownedMembers()
	 * @generated
	 */
	EOperation getInternalElementReference__OwnedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#members() <em>Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#members()
	 * @generated
	 */
	EOperation getInternalElementReference__Members();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#nestedClassifiers() <em>Nested Classifiers</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Nested Classifiers</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#nestedClassifiers()
	 * @generated
	 */
	EOperation getInternalElementReference__NestedClassifiers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#opposite() <em>Opposite</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Opposite</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#opposite()
	 * @generated
	 */
	EOperation getInternalElementReference__Opposite();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#signal() <em>Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#signal()
	 * @generated
	 */
	EOperation getInternalElementReference__Signal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#parameters() <em>Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#parameters()
	 * @generated
	 */
	EOperation getInternalElementReference__Parameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#returnParameter() <em>Return Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#returnParameter()
	 * @generated
	 */
	EOperation getInternalElementReference__ReturnParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#specification() <em>Specification</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Specification</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#specification()
	 * @generated
	 */
	EOperation getInternalElementReference__Specification();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#redefinedOperaions() <em>Redefined Operaions</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Redefined Operaions</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#redefinedOperaions()
	 * @generated
	 */
	EOperation getInternalElementReference__RedefinedOperaions();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#namespace() <em>Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#namespace()
	 * @generated
	 */
	EOperation getInternalElementReference__Namespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#template() <em>Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#template()
	 * @generated
	 */
	EOperation getInternalElementReference__Template();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#templateParameters() <em>Template Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#templateParameters()
	 * @generated
	 */
	EOperation getInternalElementReference__TemplateParameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#parameteredElements() <em>Parametered Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parametered Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#parameteredElements()
	 * @generated
	 */
	EOperation getInternalElementReference__ParameteredElements();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#templateActuals() <em>Template Actuals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Actuals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#templateActuals()
	 * @generated
	 */
	EOperation getInternalElementReference__TemplateActuals();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#direction() <em>Direction</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Direction</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#direction()
	 * @generated
	 */
	EOperation getInternalElementReference__Direction();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#association() <em>Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#association()
	 * @generated
	 */
	EOperation getInternalElementReference__Association();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#type()
	 * @generated
	 */
	EOperation getInternalElementReference__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#lower()
	 * @generated
	 */
	EOperation getInternalElementReference__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#upper()
	 * @generated
	 */
	EOperation getInternalElementReference__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isOrdered() <em>Is Ordered</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Ordered</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isOrdered()
	 * @generated
	 */
	EOperation getInternalElementReference__IsOrdered();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#isNonunique() <em>Is Nonunique</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Nonunique</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#isNonunique()
	 * @generated
	 */
	EOperation getInternalElementReference__IsNonunique();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#parents() <em>Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#parents()
	 * @generated
	 */
	EOperation getInternalElementReference__Parents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#allParents() <em>All Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>All Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#allParents()
	 * @generated
	 */
	EOperation getInternalElementReference__AllParents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#classifierBehavior() <em>Classifier Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#classifierBehavior()
	 * @generated
	 */
	EOperation getInternalElementReference__ClassifierBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#appliedProfiles()
	 * @generated
	 */
	EOperation getInternalElementReference__AppliedProfiles();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#activeClass() <em>Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#activeClass()
	 * @generated
	 */
	EOperation getInternalElementReference__ActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#context() <em>Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#context()
	 * @generated
	 */
	EOperation getInternalElementReference__Context();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Conforms To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conforms To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getInternalElementReference__ConformsTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference) <em>Equals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getInternalElementReference__Equals__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#copy()
	 * @generated
	 */
	EOperation getInternalElementReference__Copy();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#modelScope() <em>Model Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#modelScope()
	 * @generated
	 */
	EOperation getInternalElementReference__ModelScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#resolvePathName(java.lang.String) <em>Resolve Path Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Path Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#resolvePathName(java.lang.String)
	 * @generated
	 */
	EOperation getInternalElementReference__ResolvePathName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#resolveInScope(java.lang.String) <em>Resolve In Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#resolveInScope(java.lang.String)
	 * @generated
	 */
	EOperation getInternalElementReference__ResolveInScope__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#resolveStereotypeName(java.lang.String) <em>Resolve Stereotype Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Stereotype Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#resolveStereotypeName(java.lang.String)
	 * @generated
	 */
	EOperation getInternalElementReference__ResolveStereotypeName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#stub() <em>Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#stub()
	 * @generated
	 */
	EOperation getInternalElementReference__Stub();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InternalElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Stub For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InternalElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getInternalElementReference__StubFor__UnitDefinition();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference <em>External Element Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>External Element Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference
	 * @generated
	 */
	EClass getExternalElementReference();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#getElement <em>Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Element</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#getElement()
	 * @see #getExternalElementReference()
	 * @generated
	 */
	EReference getExternalElementReference_Element();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#getAlias <em>Alias</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Alias</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#getAlias()
	 * @see #getExternalElementReference()
	 * @generated
	 */
	EAttribute getExternalElementReference_Alias();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isUml() <em>Is Uml</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Uml</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isUml()
	 * @generated
	 */
	EOperation getExternalElementReference__IsUml();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#asUml() <em>As Uml</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Uml</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#asUml()
	 * @generated
	 */
	EOperation getExternalElementReference__AsUml();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#asMember() <em>As Member</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Member</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#asMember()
	 * @generated
	 */
	EOperation getExternalElementReference__AsMember();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getExternalElementReference__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isNamedElement() <em>Is Named Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Named Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isNamedElement()
	 * @generated
	 */
	EOperation getExternalElementReference__IsNamedElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isNamespace() <em>Is Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isNamespace()
	 * @generated
	 */
	EOperation getExternalElementReference__IsNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Is Namespace For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getExternalElementReference__IsNamespaceFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isModelNamespace() <em>Is Model Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Model Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isModelNamespace()
	 * @generated
	 */
	EOperation getExternalElementReference__IsModelNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isPackage() <em>Is Package</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Package</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isPackage()
	 * @generated
	 */
	EOperation getExternalElementReference__IsPackage();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isProfile() <em>Is Profile</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Profile</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isProfile()
	 * @generated
	 */
	EOperation getExternalElementReference__IsProfile();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isPackageableElement() <em>Is Packageable Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Packageable Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isPackageableElement()
	 * @generated
	 */
	EOperation getExternalElementReference__IsPackageableElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isClassifier() <em>Is Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isClassifier()
	 * @generated
	 */
	EOperation getExternalElementReference__IsClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isAbstractClassifier() <em>Is Abstract Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Abstract Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isAbstractClassifier()
	 * @generated
	 */
	EOperation getExternalElementReference__IsAbstractClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isAssociation() <em>Is Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isAssociation()
	 * @generated
	 */
	EOperation getExternalElementReference__IsAssociation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isDataType() <em>Is Data Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Data Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isDataType()
	 * @generated
	 */
	EOperation getExternalElementReference__IsDataType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isClass() <em>Is Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isClass()
	 * @generated
	 */
	EOperation getExternalElementReference__IsClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isActiveClass() <em>Is Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isActiveClass()
	 * @generated
	 */
	EOperation getExternalElementReference__IsActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isSignal() <em>Is Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isSignal()
	 * @generated
	 */
	EOperation getExternalElementReference__IsSignal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isEnumeration() <em>Is Enumeration</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isEnumeration()
	 * @generated
	 */
	EOperation getExternalElementReference__IsEnumeration();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isBehavior() <em>Is Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isBehavior()
	 * @generated
	 */
	EOperation getExternalElementReference__IsBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isActivity() <em>Is Activity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Activity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isActivity()
	 * @generated
	 */
	EOperation getExternalElementReference__IsActivity();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isMethod() <em>Is Method</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Method</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isMethod()
	 * @generated
	 */
	EOperation getExternalElementReference__IsMethod();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isReception() <em>Is Reception</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Reception</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isReception()
	 * @generated
	 */
	EOperation getExternalElementReference__IsReception();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isPrimitiveType() <em>Is Primitive Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Primitive Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isPrimitiveType()
	 * @generated
	 */
	EOperation getExternalElementReference__IsPrimitiveType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isOperation() <em>Is Operation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Operation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isOperation()
	 * @generated
	 */
	EOperation getExternalElementReference__IsOperation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isConstructor() <em>Is Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isConstructor()
	 * @generated
	 */
	EOperation getExternalElementReference__IsConstructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isDestructor() <em>Is Destructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Destructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isDestructor()
	 * @generated
	 */
	EOperation getExternalElementReference__IsDestructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isFeature()
	 * @generated
	 */
	EOperation getExternalElementReference__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isProperty() <em>Is Property</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Property</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isProperty()
	 * @generated
	 */
	EOperation getExternalElementReference__IsProperty();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isAssociationEnd() <em>Is Association End</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association End</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isAssociationEnd()
	 * @generated
	 */
	EOperation getExternalElementReference__IsAssociationEnd();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isParameter() <em>Is Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isParameter()
	 * @generated
	 */
	EOperation getExternalElementReference__IsParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isTemplate() <em>Is Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isTemplate()
	 * @generated
	 */
	EOperation getExternalElementReference__IsTemplate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isTemplateParameter() <em>Is Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isTemplateParameter()
	 * @generated
	 */
	EOperation getExternalElementReference__IsTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isClassifierTemplateParameter() <em>Is Classifier Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isClassifierTemplateParameter()
	 * @generated
	 */
	EOperation getExternalElementReference__IsClassifierTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isParameteredElement() <em>Is Parametered Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parametered Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isParameteredElement()
	 * @generated
	 */
	EOperation getExternalElementReference__IsParameteredElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isTemplateBinding() <em>Is Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isTemplateBinding()
	 * @generated
	 */
	EOperation getExternalElementReference__IsTemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isStereotype() <em>Is Stereotype</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Stereotype</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isStereotype()
	 * @generated
	 */
	EOperation getExternalElementReference__IsStereotype();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isEnumerationLiteral() <em>Is Enumeration Literal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration Literal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isEnumerationLiteral()
	 * @generated
	 */
	EOperation getExternalElementReference__IsEnumerationLiteral();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isLoopVariable() <em>Is Loop Variable</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Loop Variable</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isLoopVariable()
	 * @generated
	 */
	EOperation getExternalElementReference__IsLoopVariable();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isAnnotation() <em>Is Annotation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Annotation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isAnnotation()
	 * @generated
	 */
	EOperation getExternalElementReference__IsAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isSequenceExpansionExpression() <em>Is Sequence Expansion Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isSequenceExpansionExpression()
	 * @generated
	 */
	EOperation getExternalElementReference__IsSequenceExpansionExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#name() <em>Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#name()
	 * @generated
	 */
	EOperation getExternalElementReference__Name();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#visibility() <em>Visibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Visibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#visibility()
	 * @generated
	 */
	EOperation getExternalElementReference__Visibility();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#ownedMembers() <em>Owned Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Owned Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#ownedMembers()
	 * @generated
	 */
	EOperation getExternalElementReference__OwnedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#enumerationMembers() <em>Enumeration Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enumeration Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#enumerationMembers()
	 * @generated
	 */
	EOperation getExternalElementReference__EnumerationMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#members() <em>Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#members()
	 * @generated
	 */
	EOperation getExternalElementReference__Members();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#additionalMembers() <em>Additional Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Additional Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#additionalMembers()
	 * @generated
	 */
	EOperation getExternalElementReference__AdditionalMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#inherit(org.eclipse.emf.common.util.EList) <em>Inherit</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Inherit</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#inherit(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getExternalElementReference__Inherit__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#nestedClassifiers() <em>Nested Classifiers</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Nested Classifiers</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#nestedClassifiers()
	 * @generated
	 */
	EOperation getExternalElementReference__NestedClassifiers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#properties() <em>Properties</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Properties</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#properties()
	 * @generated
	 */
	EOperation getExternalElementReference__Properties();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#associationEnds() <em>Association Ends</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association Ends</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#associationEnds()
	 * @generated
	 */
	EOperation getExternalElementReference__AssociationEnds();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#opposite() <em>Opposite</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Opposite</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#opposite()
	 * @generated
	 */
	EOperation getExternalElementReference__Opposite();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#signal() <em>Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#signal()
	 * @generated
	 */
	EOperation getExternalElementReference__Signal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#namespace() <em>Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#namespace()
	 * @generated
	 */
	EOperation getExternalElementReference__Namespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#ownedParameters() <em>Owned Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Owned Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#ownedParameters()
	 * @generated
	 */
	EOperation getExternalElementReference__OwnedParameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#parameters() <em>Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#parameters()
	 * @generated
	 */
	EOperation getExternalElementReference__Parameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#returnParameter() <em>Return Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#returnParameter()
	 * @generated
	 */
	EOperation getExternalElementReference__ReturnParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#specification() <em>Specification</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Specification</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#specification()
	 * @generated
	 */
	EOperation getExternalElementReference__Specification();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#redefinedOperations() <em>Redefined Operations</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Redefined Operations</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#redefinedOperations()
	 * @generated
	 */
	EOperation getExternalElementReference__RedefinedOperations();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#template() <em>Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#template()
	 * @generated
	 */
	EOperation getExternalElementReference__Template();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#umlTemplateBinding() <em>Uml Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Uml Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#umlTemplateBinding()
	 * @generated
	 */
	EOperation getExternalElementReference__UmlTemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#templateParameters() <em>Template Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#templateParameters()
	 * @generated
	 */
	EOperation getExternalElementReference__TemplateParameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#parameteredElements() <em>Parametered Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parametered Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#parameteredElements()
	 * @generated
	 */
	EOperation getExternalElementReference__ParameteredElements();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#templateActuals() <em>Template Actuals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Actuals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#templateActuals()
	 * @generated
	 */
	EOperation getExternalElementReference__TemplateActuals();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#direction() <em>Direction</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Direction</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#direction()
	 * @generated
	 */
	EOperation getExternalElementReference__Direction();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#association() <em>Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#association()
	 * @generated
	 */
	EOperation getExternalElementReference__Association();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#type()
	 * @generated
	 */
	EOperation getExternalElementReference__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#lower()
	 * @generated
	 */
	EOperation getExternalElementReference__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#upper()
	 * @generated
	 */
	EOperation getExternalElementReference__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isOrdered() <em>Is Ordered</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Ordered</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isOrdered()
	 * @generated
	 */
	EOperation getExternalElementReference__IsOrdered();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#isNonunique() <em>Is Nonunique</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Nonunique</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#isNonunique()
	 * @generated
	 */
	EOperation getExternalElementReference__IsNonunique();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#parents() <em>Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#parents()
	 * @generated
	 */
	EOperation getExternalElementReference__Parents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#allParents() <em>All Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>All Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#allParents()
	 * @generated
	 */
	EOperation getExternalElementReference__AllParents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#classifierBehavior() <em>Classifier Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#classifierBehavior()
	 * @generated
	 */
	EOperation getExternalElementReference__ClassifierBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#appliedProfiles()
	 * @generated
	 */
	EOperation getExternalElementReference__AppliedProfiles();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#activeClass() <em>Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#activeClass()
	 * @generated
	 */
	EOperation getExternalElementReference__ActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#context() <em>Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#context()
	 * @generated
	 */
	EOperation getExternalElementReference__Context();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Conforms To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conforms To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getExternalElementReference__ConformsTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference) <em>Equals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getExternalElementReference__Equals__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#copy()
	 * @generated
	 */
	EOperation getExternalElementReference__Copy();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#modelScope() <em>Model Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#modelScope()
	 * @generated
	 */
	EOperation getExternalElementReference__ModelScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#resolvePathName(java.lang.String) <em>Resolve Path Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Path Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#resolvePathName(java.lang.String)
	 * @generated
	 */
	EOperation getExternalElementReference__ResolvePathName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#ExternalElementReference_resolvePathName(java.lang.String) <em>External Element Reference resolve Path Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>External Element Reference resolve Path Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#ExternalElementReference_resolvePathName(java.lang.String)
	 * @generated
	 */
	EOperation getExternalElementReference__ExternalElementReference_resolvePathName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#resolveInScope(java.lang.String) <em>Resolve In Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#resolveInScope(java.lang.String)
	 * @generated
	 */
	EOperation getExternalElementReference__ResolveInScope__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#resolveStereotype(java.lang.String) <em>Resolve Stereotype</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Stereotype</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#resolveStereotype(java.lang.String)
	 * @generated
	 */
	EOperation getExternalElementReference__ResolveStereotype__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#stub() <em>Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#stub()
	 * @generated
	 */
	EOperation getExternalElementReference__Stub();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Stub For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getExternalElementReference__StubFor__UnitDefinition();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference <em>External Enumeration Literal Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>External Enumeration Literal Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference
	 * @generated
	 */
	EClass getExternalEnumerationLiteralReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isNamedEement() <em>Is Named Eement</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Named Eement</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isNamedEement()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__IsNamedEement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isClassifier() <em>Is Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isClassifier()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__IsClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isParameter() <em>Is Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isParameter()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__IsParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isEnumerationLiteral() <em>Is Enumeration Literal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration Literal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#isEnumerationLiteral()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__IsEnumerationLiteral();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#ExternalEnumerationLiteralReference_visibility() <em>External Enumeration Literal Reference visibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>External Enumeration Literal Reference visibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#ExternalEnumerationLiteralReference_visibility()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__ExternalEnumerationLiteralReference_visibility();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#visibility() <em>Visibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Visibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#visibility()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__Visibility();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#ExternalEnumerationLiteralReference_type() <em>External Enumeration Literal Reference type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>External Enumeration Literal Reference type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#ExternalEnumerationLiteralReference_type()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__ExternalEnumerationLiteralReference_type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExternalEnumerationLiteralReference#type()
	 * @generated
	 */
	EOperation getExternalEnumerationLiteralReference__Type();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BoundElementReference <em>Bound Element Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Bound Element Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference
	 * @generated
	 */
	EClass getBoundElementReference();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#getReferent()
	 * @see #getBoundElementReference()
	 * @generated
	 */
	EReference getBoundElementReference_Referent();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#getNamespace <em>Namespace</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Namespace</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#getNamespace()
	 * @see #getBoundElementReference()
	 * @generated
	 */
	EReference getBoundElementReference_Namespace();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#getTemplateBinding <em>Template Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Template Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#getTemplateBinding()
	 * @see #getBoundElementReference()
	 * @generated
	 */
	EReference getBoundElementReference_TemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isUml() <em>Is Uml</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Uml</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isUml()
	 * @generated
	 */
	EOperation getBoundElementReference__IsUml();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isAlf() <em>Is Alf</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Alf</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isAlf()
	 * @generated
	 */
	EOperation getBoundElementReference__IsAlf();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#asUml() <em>As Uml</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Uml</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#asUml()
	 * @generated
	 */
	EOperation getBoundElementReference__AsUml();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#asAlf() <em>As Alf</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Alf</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#asAlf()
	 * @generated
	 */
	EOperation getBoundElementReference__AsAlf();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#asMember() <em>As Member</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>As Member</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#asMember()
	 * @generated
	 */
	EOperation getBoundElementReference__AsMember();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getBoundElementReference__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isNamedElement() <em>Is Named Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Named Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isNamedElement()
	 * @generated
	 */
	EOperation getBoundElementReference__IsNamedElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isNamespace() <em>Is Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isNamespace()
	 * @generated
	 */
	EOperation getBoundElementReference__IsNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Is Namespace For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Namespace For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isNamespaceFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getBoundElementReference__IsNamespaceFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isModelNamespace() <em>Is Model Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Model Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isModelNamespace()
	 * @generated
	 */
	EOperation getBoundElementReference__IsModelNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isPackage() <em>Is Package</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Package</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isPackage()
	 * @generated
	 */
	EOperation getBoundElementReference__IsPackage();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isProfile() <em>Is Profile</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Profile</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isProfile()
	 * @generated
	 */
	EOperation getBoundElementReference__IsProfile();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isPackageableElement() <em>Is Packageable Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Packageable Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isPackageableElement()
	 * @generated
	 */
	EOperation getBoundElementReference__IsPackageableElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isClassifier() <em>Is Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isClassifier()
	 * @generated
	 */
	EOperation getBoundElementReference__IsClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isAbstractClassifier() <em>Is Abstract Classifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Abstract Classifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isAbstractClassifier()
	 * @generated
	 */
	EOperation getBoundElementReference__IsAbstractClassifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isAssociation() <em>Is Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isAssociation()
	 * @generated
	 */
	EOperation getBoundElementReference__IsAssociation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isDataType() <em>Is Data Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Data Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isDataType()
	 * @generated
	 */
	EOperation getBoundElementReference__IsDataType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isClass() <em>Is Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isClass()
	 * @generated
	 */
	EOperation getBoundElementReference__IsClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isActiveClass() <em>Is Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isActiveClass()
	 * @generated
	 */
	EOperation getBoundElementReference__IsActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isSignal() <em>Is Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isSignal()
	 * @generated
	 */
	EOperation getBoundElementReference__IsSignal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isEnumeration() <em>Is Enumeration</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isEnumeration()
	 * @generated
	 */
	EOperation getBoundElementReference__IsEnumeration();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isBehavior() <em>Is Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isBehavior()
	 * @generated
	 */
	EOperation getBoundElementReference__IsBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isActivity() <em>Is Activity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Activity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isActivity()
	 * @generated
	 */
	EOperation getBoundElementReference__IsActivity();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isMethod() <em>Is Method</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Method</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isMethod()
	 * @generated
	 */
	EOperation getBoundElementReference__IsMethod();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isPrimitiveType() <em>Is Primitive Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Primitive Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isPrimitiveType()
	 * @generated
	 */
	EOperation getBoundElementReference__IsPrimitiveType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isReception() <em>Is Reception</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Reception</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isReception()
	 * @generated
	 */
	EOperation getBoundElementReference__IsReception();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isOperation() <em>Is Operation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Operation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isOperation()
	 * @generated
	 */
	EOperation getBoundElementReference__IsOperation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isConstructor() <em>Is Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isConstructor()
	 * @generated
	 */
	EOperation getBoundElementReference__IsConstructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isDestructor() <em>Is Destructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Destructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isDestructor()
	 * @generated
	 */
	EOperation getBoundElementReference__IsDestructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isFeature()
	 * @generated
	 */
	EOperation getBoundElementReference__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isProperty() <em>Is Property</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Property</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isProperty()
	 * @generated
	 */
	EOperation getBoundElementReference__IsProperty();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isAssociationEnd() <em>Is Association End</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Association End</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isAssociationEnd()
	 * @generated
	 */
	EOperation getBoundElementReference__IsAssociationEnd();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isParameter() <em>Is Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isParameter()
	 * @generated
	 */
	EOperation getBoundElementReference__IsParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isTemplate() <em>Is Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isTemplate()
	 * @generated
	 */
	EOperation getBoundElementReference__IsTemplate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isTemplateParameter() <em>Is Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isTemplateParameter()
	 * @generated
	 */
	EOperation getBoundElementReference__IsTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isClassifierTemplateParameter() <em>Is Classifier Template Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Classifier Template Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isClassifierTemplateParameter()
	 * @generated
	 */
	EOperation getBoundElementReference__IsClassifierTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isParameteredElement() <em>Is Parametered Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Parametered Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isParameteredElement()
	 * @generated
	 */
	EOperation getBoundElementReference__IsParameteredElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isStereotype() <em>Is Stereotype</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Stereotype</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isStereotype()
	 * @generated
	 */
	EOperation getBoundElementReference__IsStereotype();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isEnumerationLiteral() <em>Is Enumeration Literal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Enumeration Literal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isEnumerationLiteral()
	 * @generated
	 */
	EOperation getBoundElementReference__IsEnumerationLiteral();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isLoopVariable() <em>Is Loop Variable</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Loop Variable</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isLoopVariable()
	 * @generated
	 */
	EOperation getBoundElementReference__IsLoopVariable();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isAnnotation() <em>Is Annotation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Annotation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isAnnotation()
	 * @generated
	 */
	EOperation getBoundElementReference__IsAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isSequenceExpansionExpression() <em>Is Sequence Expansion Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Sequence Expansion Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isSequenceExpansionExpression()
	 * @generated
	 */
	EOperation getBoundElementReference__IsSequenceExpansionExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isDistinguishableFrom(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Distinguishable From</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Distinguishable From</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isDistinguishableFrom(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getBoundElementReference__IsDistinguishableFrom__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#name() <em>Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#name()
	 * @generated
	 */
	EOperation getBoundElementReference__Name();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#visibility() <em>Visibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Visibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#visibility()
	 * @generated
	 */
	EOperation getBoundElementReference__Visibility();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#ownedMembers() <em>Owned Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Owned Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#ownedMembers()
	 * @generated
	 */
	EOperation getBoundElementReference__OwnedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#members() <em>Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#members()
	 * @generated
	 */
	EOperation getBoundElementReference__Members();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#nestedClassifiers() <em>Nested Classifiers</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Nested Classifiers</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#nestedClassifiers()
	 * @generated
	 */
	EOperation getBoundElementReference__NestedClassifiers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#properties() <em>Properties</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Properties</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#properties()
	 * @generated
	 */
	EOperation getBoundElementReference__Properties();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#associationEnds() <em>Association Ends</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association Ends</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#associationEnds()
	 * @generated
	 */
	EOperation getBoundElementReference__AssociationEnds();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#opposite() <em>Opposite</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Opposite</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#opposite()
	 * @generated
	 */
	EOperation getBoundElementReference__Opposite();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#signal() <em>Signal</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Signal</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#signal()
	 * @generated
	 */
	EOperation getBoundElementReference__Signal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#parameters() <em>Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#parameters()
	 * @generated
	 */
	EOperation getBoundElementReference__Parameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#returnParameter() <em>Return Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#returnParameter()
	 * @generated
	 */
	EOperation getBoundElementReference__ReturnParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#specification() <em>Specification</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Specification</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#specification()
	 * @generated
	 */
	EOperation getBoundElementReference__Specification();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#redefinedOperations() <em>Redefined Operations</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Redefined Operations</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#redefinedOperations()
	 * @generated
	 */
	EOperation getBoundElementReference__RedefinedOperations();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#namespace() <em>Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#namespace()
	 * @generated
	 */
	EOperation getBoundElementReference__Namespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#template() <em>Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#template()
	 * @generated
	 */
	EOperation getBoundElementReference__Template();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#templateParameters() <em>Template Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#templateParameters()
	 * @generated
	 */
	EOperation getBoundElementReference__TemplateParameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#parameteredElements() <em>Parametered Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parametered Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#parameteredElements()
	 * @generated
	 */
	EOperation getBoundElementReference__ParameteredElements();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isTemplateBinding() <em>Is Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isTemplateBinding()
	 * @generated
	 */
	EOperation getBoundElementReference__IsTemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#templateActuals() <em>Template Actuals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Actuals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#templateActuals()
	 * @generated
	 */
	EOperation getBoundElementReference__TemplateActuals();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#direction() <em>Direction</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Direction</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#direction()
	 * @generated
	 */
	EOperation getBoundElementReference__Direction();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#association() <em>Association</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#association()
	 * @generated
	 */
	EOperation getBoundElementReference__Association();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#type()
	 * @generated
	 */
	EOperation getBoundElementReference__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#lower()
	 * @generated
	 */
	EOperation getBoundElementReference__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#upper()
	 * @generated
	 */
	EOperation getBoundElementReference__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isOrdered() <em>Is Ordered</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Ordered</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isOrdered()
	 * @generated
	 */
	EOperation getBoundElementReference__IsOrdered();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isNonunique() <em>Is Nonunique</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Nonunique</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isNonunique()
	 * @generated
	 */
	EOperation getBoundElementReference__IsNonunique();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#parents() <em>Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#parents()
	 * @generated
	 */
	EOperation getBoundElementReference__Parents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#allParents() <em>All Parents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>All Parents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#allParents()
	 * @generated
	 */
	EOperation getBoundElementReference__AllParents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#classifierBehavior() <em>Classifier Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#classifierBehavior()
	 * @generated
	 */
	EOperation getBoundElementReference__ClassifierBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#appliedProfiles()
	 * @generated
	 */
	EOperation getBoundElementReference__AppliedProfiles();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#reference() <em>Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#reference()
	 * @generated
	 */
	EOperation getBoundElementReference__Reference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#templateBinding() <em>Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#templateBinding()
	 * @generated
	 */
	EOperation getBoundElementReference__TemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#activeClass() <em>Active Class</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Active Class</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#activeClass()
	 * @generated
	 */
	EOperation getBoundElementReference__ActiveClass();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#context() <em>Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#context()
	 * @generated
	 */
	EOperation getBoundElementReference__Context();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#isActiveBehavior() <em>Is Active Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Active Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#isActiveBehavior()
	 * @generated
	 */
	EOperation getBoundElementReference__IsActiveBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Conforms To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conforms To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getBoundElementReference__ConformsTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference) <em>Equals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#equals(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getBoundElementReference__Equals__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#copy()
	 * @generated
	 */
	EOperation getBoundElementReference__Copy();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#modelScope() <em>Model Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#modelScope()
	 * @generated
	 */
	EOperation getBoundElementReference__ModelScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#resolvePathName(java.lang.String) <em>Resolve Path Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Path Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#resolvePathName(java.lang.String)
	 * @generated
	 */
	EOperation getBoundElementReference__ResolvePathName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#resolveInScope(java.lang.String) <em>Resolve In Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#resolveInScope(java.lang.String)
	 * @generated
	 */
	EOperation getBoundElementReference__ResolveInScope__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#resolveStereotype(java.lang.String) <em>Resolve Stereotype</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Stereotype</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#resolveStereotype(java.lang.String)
	 * @generated
	 */
	EOperation getBoundElementReference__ResolveStereotype__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#stub() <em>Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#stub()
	 * @generated
	 */
	EOperation getBoundElementReference__Stub();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Stub For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getBoundElementReference__StubFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#boundReferenceTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Bound Reference To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bound Reference To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#boundReferenceTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getBoundElementReference__BoundReferenceTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#boundReferenceTo1(org.eclipse.papyrus.uml.alf.ElementReference) <em>Bound Reference To1</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bound Reference To1</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#boundReferenceTo1(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getBoundElementReference__BoundReferenceTo1__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundElementReference#boundReferencesTo(org.eclipse.emf.common.util.EList) <em>Bound References To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bound References To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundElementReference#boundReferencesTo(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getBoundElementReference__BoundReferencesTo__EList();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.DocumentedElement <em>Documented Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Documented Element</em>'.
	 * @see org.eclipse.papyrus.uml.alf.DocumentedElement
	 * @generated
	 */
	EClass getDocumentedElement();

	/**
	 * Returns the meta object for the attribute list '{@link org.eclipse.papyrus.uml.alf.DocumentedElement#getDocumentation <em>Documentation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute list '<em>Documentation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.DocumentedElement#getDocumentation()
	 * @see #getDocumentedElement()
	 * @generated
	 */
	EAttribute getDocumentedElement_Documentation();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression <em>Sequence Expansion Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Expansion Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression
	 * @generated
	 */
	EClass getSequenceExpansionExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getOperation <em>Operation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Operation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getOperation()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EAttribute getSequenceExpansionExpression_Operation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getVariable <em>Variable</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Variable</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getVariable()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EAttribute getSequenceExpansionExpression_Variable();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getVariableSource <em>Variable Source</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Variable Source</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getVariableSource()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EReference getSequenceExpansionExpression_VariableSource();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getArgument <em>Argument</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Argument</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getArgument()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EReference getSequenceExpansionExpression_Argument();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getPrimary <em>Primary</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Primary</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#getPrimary()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EReference getSequenceExpansionExpression_Primary();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsSelectOrReject <em>Is Select Or Reject</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Select Or Reject</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsSelectOrReject()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EAttribute getSequenceExpansionExpression_IsSelectOrReject();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsCollectOrIterate <em>Is Collect Or Iterate</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Collect Or Iterate</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsCollectOrIterate()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EAttribute getSequenceExpansionExpression_IsCollectOrIterate();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsForAllOrExistsOrOne <em>Is For All Or Exists Or One</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is For All Or Exists Or One</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsForAllOrExistsOrOne()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EAttribute getSequenceExpansionExpression_IsForAllOrExistsOrOne();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsIsUnique <em>Is Is Unique</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Is Unique</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isIsIsUnique()
	 * @see #getSequenceExpansionExpression()
	 * @generated
	 */
	EAttribute getSequenceExpansionExpression_IsIsUnique();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#assignmentsAfterPrimary() <em>Assignments After Primary</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After Primary</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#assignmentsAfterPrimary()
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__AssignmentsAfterPrimary();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#type()
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#lower()
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#upper()
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionVariableSourceDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expansion Expression Variable Source Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expansion Expression Variable Source Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionVariableSourceDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SequenceExpansionExpressionVariableSourceDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionAssignmentsBeforePrimary(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expansion Expression Assignments Before Primary</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expansion Expression Assignments Before Primary</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionAssignmentsBeforePrimary(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SequenceExpansionExpressionAssignmentsBeforePrimary__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionAssignmentsBeforeArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expansion Expression Assignments Before Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expansion Expression Assignments Before Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionAssignmentsBeforeArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SequenceExpansionExpressionAssignmentsBeforeArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionVariableName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expansion Expression Variable Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expansion Expression Variable Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionVariableName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SequenceExpansionExpressionVariableName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionAssignmentsAfterArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expansion Expression Assignments After Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expansion Expression Assignments After Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionAssignmentsAfterArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SequenceExpansionExpressionAssignmentsAfterArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SelectOrRejectExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SelectOrRejectExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SelectOrRejectExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#selectOrRejectExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SelectOrRejectExpressionArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#collectOrIterateExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Collect Or Iterate Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collect Or Iterate Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#collectOrIterateExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__CollectOrIterateExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#collectOrIterateExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Collect Or Iterate Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collect Or Iterate Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#collectOrIterateExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__CollectOrIterateExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#collectOrIterateExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Collect Or Iterate Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collect Or Iterate Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#collectOrIterateExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__CollectOrIterateExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__ForAllOrExistsOrOneExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__ForAllOrExistsOrOneExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__ForAllOrExistsOrOneExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#forAllOrExistsOrOneExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__ForAllOrExistsOrOneExpressionArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__IsUniqueExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__IsUniqueExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__IsUniqueExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Expression Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Expression Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#isUniqueExpressionExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__IsUniqueExpressionExpressionArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#updateAssignments()
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__UpdateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionOperation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expansion Expression Operation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expansion Expression Operation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpansionExpression#sequenceExpansionExpressionOperation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpansionExpression__SequenceExpansionExpressionOperation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AssignableElement <em>Assignable Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Assignable Element</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement
	 * @generated
	 */
	EClass getAssignableElement();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignableElement#getUpper <em>Upper</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Upper</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#getUpper()
	 * @see #getAssignableElement()
	 * @generated
	 */
	EAttribute getAssignableElement_Upper();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignableElement#getLower <em>Lower</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Lower</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#getLower()
	 * @see #getAssignableElement()
	 * @generated
	 */
	EAttribute getAssignableElement_Lower();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignableElement#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#getType()
	 * @see #getAssignableElement()
	 * @generated
	 */
	EReference getAssignableElement_Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#typeCached() <em>Type Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#typeCached()
	 * @generated
	 */
	EOperation getAssignableElement__TypeCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#type()
	 * @generated
	 */
	EOperation getAssignableElement__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#lower()
	 * @generated
	 */
	EOperation getAssignableElement__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#upper()
	 * @generated
	 */
	EOperation getAssignableElement__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#isNull() <em>Is Null</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Null</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#isNull()
	 * @generated
	 */
	EOperation getAssignableElement__IsNull();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#isAssignableFromElement(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Assignable From Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Assignable From Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#isAssignableFromElement(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getAssignableElement__IsAssignableFromElement__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#isAssignableFrom(org.eclipse.papyrus.uml.alf.AssignableElement) <em>Is Assignable From</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Assignable From</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#isAssignableFrom(org.eclipse.papyrus.uml.alf.AssignableElement)
	 * @generated
	 */
	EOperation getAssignableElement__IsAssignableFrom__AssignableElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#isTypeConformantWith(org.eclipse.papyrus.uml.alf.AssignableElement) <em>Is Type Conformant With</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Type Conformant With</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#isTypeConformantWith(org.eclipse.papyrus.uml.alf.AssignableElement)
	 * @generated
	 */
	EOperation getAssignableElement__IsTypeConformantWith__AssignableElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#isConformantWithType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Conformant With Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Conformant With Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#isConformantWithType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getAssignableElement__IsConformantWithType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElement#isMultiplicityConformantWith(org.eclipse.papyrus.uml.alf.AssignableElement) <em>Is Multiplicity Conformant With</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Multiplicity Conformant With</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElement#isMultiplicityConformantWith(org.eclipse.papyrus.uml.alf.AssignableElement)
	 * @generated
	 */
	EOperation getAssignableElement__IsMultiplicityConformantWith__AssignableElement();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AssignableElementReference <em>Assignable Element Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Assignable Element Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElementReference
	 * @generated
	 */
	EClass getAssignableElementReference();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignableElementReference#getReference <em>Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElementReference#getReference()
	 * @see #getAssignableElementReference()
	 * @generated
	 */
	EReference getAssignableElementReference_Reference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElementReference#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElementReference#type()
	 * @generated
	 */
	EOperation getAssignableElementReference__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElementReference#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElementReference#lower()
	 * @generated
	 */
	EOperation getAssignableElementReference__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableElementReference#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableElementReference#upper()
	 * @generated
	 */
	EOperation getAssignableElementReference__Upper();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.Expression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Expression
	 * @generated
	 */
	EClass getExpression();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Expression#getAssignmentBefore <em>Assignment Before</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment Before</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Expression#getAssignmentBefore()
	 * @see #getExpression()
	 * @generated
	 */
	EReference getExpression_AssignmentBefore();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Expression#getAssignmentAfter <em>Assignment After</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment After</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Expression#getAssignmentAfter()
	 * @see #getExpression()
	 * @generated
	 */
	EReference getExpression_AssignmentAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#reference() <em>Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#reference()
	 * @generated
	 */
	EOperation getExpression__Reference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#newAssignments() <em>New Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>New Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#newAssignments()
	 * @generated
	 */
	EOperation getExpression__NewAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#updateAssignments()
	 * @generated
	 */
	EOperation getExpression__UpdateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#Expression_updateAssignments() <em>Expression update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#Expression_updateAssignments()
	 * @generated
	 */
	EOperation getExpression__Expression_updateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#updateAssignmentsCached() <em>Update Assignments Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#updateAssignmentsCached()
	 * @generated
	 */
	EOperation getExpression__UpdateAssignmentsCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#resolve(java.lang.String) <em>Resolve</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#resolve(java.lang.String)
	 * @generated
	 */
	EOperation getExpression__Resolve__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression) <em>Is Add Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Add Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getExpression__IsAddTarget__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#expressionAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Expression Assignment After Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression Assignment After Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#expressionAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getExpression__ExpressionAssignmentAfterDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Expression#expressionUniqueAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Expression Unique Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression Unique Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Expression#expressionUniqueAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getExpression__ExpressionUniqueAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ExpressionReference <em>Expression Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference
	 * @generated
	 */
	EClass getExpressionReference();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ExpressionReference#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference#getExpression()
	 * @see #getExpressionReference()
	 * @generated
	 */
	EReference getExpressionReference_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionReference#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference#type()
	 * @generated
	 */
	EOperation getExpressionReference__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionReference#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference#lower()
	 * @generated
	 */
	EOperation getExpressionReference__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionReference#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference#upper()
	 * @generated
	 */
	EOperation getExpressionReference__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionReference#isAddTarget(org.eclipse.papyrus.uml.alf.Expression) <em>Is Add Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Add Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference#isAddTarget(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getExpressionReference__IsAddTarget__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionReference#assignmentsBefore() <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference#assignmentsBefore()
	 * @generated
	 */
	EOperation getExpressionReference__AssignmentsBefore();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionReference#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionReference#updateAssignments()
	 * @generated
	 */
	EOperation getExpressionReference__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression <em>Extent Or Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Extent Or Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression
	 * @generated
	 */
	EClass getExtentOrExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression#getName()
	 * @see #getExtentOrExpression()
	 * @generated
	 */
	EReference getExtentOrExpression_Name();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression#getExpression()
	 * @see #getExtentOrExpression()
	 * @generated
	 */
	EReference getExtentOrExpression_Expression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression#getNonNameExpression <em>Non Name Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Non Name Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression#getNonNameExpression()
	 * @see #getExtentOrExpression()
	 * @generated
	 */
	EReference getExtentOrExpression_NonNameExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression) <em>Is Add Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Add Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getExtentOrExpression__IsAddTarget__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression#extentOrExpressionExpressionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Extent Or Expression Expression Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Extent Or Expression Expression Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression#extentOrExpressionExpressionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getExtentOrExpression__ExtentOrExpressionExpressionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression#extentOrExpressionExtentType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Extent Or Expression Extent Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Extent Or Expression Extent Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression#extentOrExpressionExtentType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getExtentOrExpression__ExtentOrExpressionExtentType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExtentOrExpression#extentOrExpressionResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Extent Or Expression Resolution</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Extent Or Expression Resolution</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExtentOrExpression#extentOrExpressionResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getExtentOrExpression__ExtentOrExpressionResolution__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.QualifiedName <em>Qualified Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Qualified Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName
	 * @generated
	 */
	EClass getQualifiedName();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.QualifiedName#isIsAmbiguous <em>Is Ambiguous</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Ambiguous</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#isIsAmbiguous()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EAttribute getQualifiedName_IsAmbiguous();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.QualifiedName#getPathName <em>Path Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Path Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#getPathName()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EAttribute getQualifiedName_PathName();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.QualifiedName#isIsFeatureReference <em>Is Feature Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Feature Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#isIsFeatureReference()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EAttribute getQualifiedName_IsFeatureReference();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.QualifiedName#getQualification <em>Qualification</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Qualification</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#getQualification()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EReference getQualifiedName_Qualification();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.QualifiedName#getDisambiguation <em>Disambiguation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Disambiguation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#getDisambiguation()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EReference getQualifiedName_Disambiguation();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.QualifiedName#getNameBinding <em>Name Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Name Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#getNameBinding()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EReference getQualifiedName_NameBinding();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.QualifiedName#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#getReferent()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EReference getQualifiedName_Referent();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.QualifiedName#getUnqualifiedName <em>Unqualified Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Unqualified Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#getUnqualifiedName()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EReference getQualifiedName_UnqualifiedName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.QualifiedName#getTemplateName <em>Template Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Template Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#getTemplateName()
	 * @see #getQualifiedName()
	 * @generated
	 */
	EReference getQualifiedName_TemplateName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#copy()
	 * @generated
	 */
	EOperation getQualifiedName__Copy();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#addName(java.lang.String) <em>Add Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Add Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#addName(java.lang.String)
	 * @generated
	 */
	EOperation getQualifiedName__AddName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#addNameBindings(org.eclipse.emf.common.util.EList) <em>Add Name Bindings</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Add Name Bindings</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#addNameBindings(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getQualifiedName__AddNameBindings__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#modelReferents() <em>Model Referents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Referents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#modelReferents()
	 * @generated
	 */
	EOperation getQualifiedName__ModelReferents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameUnqualifiedNameDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Unqualified Name Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Unqualified Name Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameUnqualifiedNameDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameUnqualifiedNameDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNamePathNameDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Path Name Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Path Name Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNamePathNameDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNamePathNameDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameIsFeatureReferenceDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Is Feature Reference Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Is Feature Reference Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameIsFeatureReferenceDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameIsFeatureReferenceDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameQualificationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Qualification Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Qualification Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameQualificationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameQualificationDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameDisambiguationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Disambiguation Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Disambiguation Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameDisambiguationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameDisambiguationDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Local Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Local Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameLocalName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameNonLocalUnqualifiedName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Non Local Unqualified Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Non Local Unqualified Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameNonLocalUnqualifiedName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameNonLocalUnqualifiedName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameQualifiedResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Qualified Resolution</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Qualified Resolution</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameQualifiedResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameQualifiedResolution__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameTemplateBinding(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Template Binding</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Template Binding</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameTemplateBinding(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameTemplateBinding__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameTemplateNameDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Qualified Name Template Name Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name Template Name Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#qualifiedNameTemplateNameDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getQualifiedName__QualifiedNameTemplateNameDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#disambiguationCached() <em>Disambiguation Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Disambiguation Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#disambiguationCached()
	 * @generated
	 */
	EOperation getQualifiedName__DisambiguationCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#disambiguation() <em>Disambiguation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Disambiguation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#disambiguation()
	 * @generated
	 */
	EOperation getQualifiedName__Disambiguation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#referentCached() <em>Referent Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#referentCached()
	 * @generated
	 */
	EOperation getQualifiedName__ReferentCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedName#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedName#referent()
	 * @generated
	 */
	EOperation getQualifiedName__Referent();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.FeatureReference <em>Feature Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Feature Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference
	 * @generated
	 */
	EClass getFeatureReference();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.FeatureReference#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#getExpression()
	 * @see #getFeatureReference()
	 * @generated
	 */
	EReference getFeatureReference_Expression();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.FeatureReference#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#getReferent()
	 * @see #getFeatureReference()
	 * @generated
	 */
	EReference getFeatureReference_Referent();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.FeatureReference#getNameBinding <em>Name Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Name Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#getNameBinding()
	 * @see #getFeatureReference()
	 * @generated
	 */
	EReference getFeatureReference_NameBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureReference#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#updateAssignments()
	 * @generated
	 */
	EOperation getFeatureReference__UpdateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureReference#behavioralFeatureReferent(org.eclipse.papyrus.uml.alf.InvocationExpression) <em>Behavioral Feature Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Behavioral Feature Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#behavioralFeatureReferent(org.eclipse.papyrus.uml.alf.InvocationExpression)
	 * @generated
	 */
	EOperation getFeatureReference__BehavioralFeatureReferent__InvocationExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureReference#featureReferenceReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Reference Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Reference Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#featureReferenceReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureReference__FeatureReferenceReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureReference#featureReferenceTargetType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Reference Target Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Reference Target Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#featureReferenceTargetType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureReference__FeatureReferenceTargetType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureReference#referentCached() <em>Referent Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#referentCached()
	 * @generated
	 */
	EOperation getFeatureReference__ReferentCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureReference#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#referent()
	 * @generated
	 */
	EOperation getFeatureReference__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureReference#FeatureReference_referent() <em>Feature Reference referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Reference referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureReference#FeatureReference_referent()
	 * @generated
	 */
	EOperation getFeatureReference__FeatureReference_referent();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NameBinding <em>Name Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Name Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding
	 * @generated
	 */
	EClass getNameBinding();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NameBinding#getBinding <em>Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#getBinding()
	 * @see #getNameBinding()
	 * @generated
	 */
	EReference getNameBinding_Binding();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.NameBinding#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#getName()
	 * @see #getNameBinding()
	 * @generated
	 */
	EAttribute getNameBinding_Name();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameBinding#toString() <em>To String</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To String</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#toString()
	 * @generated
	 */
	EOperation getNameBinding__ToString();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameBinding#toName() <em>To Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#toName()
	 * @generated
	 */
	EOperation getNameBinding__ToName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameBinding#process(java.lang.String) <em>Process</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Process</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#process(java.lang.String)
	 * @generated
	 */
	EOperation getNameBinding__Process__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameBinding#escape(java.lang.String) <em>Escape</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Escape</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#escape(java.lang.String)
	 * @generated
	 */
	EOperation getNameBinding__Escape__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameBinding#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#copy()
	 * @generated
	 */
	EOperation getNameBinding__Copy();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameBinding#toQualifiedName(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>To Qualified Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To Qualified Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#toQualifiedName(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getNameBinding__ToQualifiedName__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameBinding#toQualifiedNameWith(org.eclipse.papyrus.uml.alf.NameBinding, org.eclipse.papyrus.uml.alf.SyntaxElement) <em>To Qualified Name With</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To Qualified Name With</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameBinding#toQualifiedNameWith(org.eclipse.papyrus.uml.alf.NameBinding, org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getNameBinding__ToQualifiedNameWith__NameBinding_SyntaxElement();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.TemplateBinding <em>Template Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Template Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TemplateBinding
	 * @generated
	 */
	EClass getTemplateBinding();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TemplateBinding#toString() <em>To String</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To String</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TemplateBinding#toString()
	 * @generated
	 */
	EOperation getTemplateBinding__ToString();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference) <em>Matches</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getTemplateBinding__Matches__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TemplateBinding#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TemplateBinding#copy()
	 * @generated
	 */
	EOperation getTemplateBinding__Copy();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TemplateBinding#bindTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Bind To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bind To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TemplateBinding#bindTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getTemplateBinding__BindTo__ElementReference();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NamedTemplateBinding <em>Named Template Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Named Template Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedTemplateBinding
	 * @generated
	 */
	EClass getNamedTemplateBinding();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.NamedTemplateBinding#getSubstitution <em>Substitution</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Substitution</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedTemplateBinding#getSubstitution()
	 * @see #getNamedTemplateBinding()
	 * @generated
	 */
	EReference getNamedTemplateBinding_Substitution();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTemplateBinding#toString() <em>To String</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To String</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTemplateBinding#toString()
	 * @generated
	 */
	EOperation getNamedTemplateBinding__ToString();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference) <em>Matches</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getNamedTemplateBinding__Matches__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTemplateBinding#matchesParameter(org.eclipse.papyrus.uml.alf.ElementReference) <em>Matches Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTemplateBinding#matchesParameter(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getNamedTemplateBinding__MatchesParameter__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTemplateBinding#bindTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Bind To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bind To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTemplateBinding#bindTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getNamedTemplateBinding__BindTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTemplateBinding#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTemplateBinding#copy()
	 * @generated
	 */
	EOperation getNamedTemplateBinding__Copy();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution <em>Template Parameter Substitution</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Template Parameter Substitution</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution
	 * @generated
	 */
	EClass getTemplateParameterSubstitution();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#getParameterName <em>Parameter Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Parameter Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#getParameterName()
	 * @see #getTemplateParameterSubstitution()
	 * @generated
	 */
	EAttribute getTemplateParameterSubstitution_ParameterName();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#getArgumentName <em>Argument Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Argument Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#getArgumentName()
	 * @see #getTemplateParameterSubstitution()
	 * @generated
	 */
	EReference getTemplateParameterSubstitution_ArgumentName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#getReferent()
	 * @see #getTemplateParameterSubstitution()
	 * @generated
	 */
	EReference getTemplateParameterSubstitution_Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#actualParameterName() <em>Actual Parameter Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Parameter Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#actualParameterName()
	 * @generated
	 */
	EOperation getTemplateParameterSubstitution__ActualParameterName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#toString() <em>To String</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To String</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#toString()
	 * @generated
	 */
	EOperation getTemplateParameterSubstitution__ToString();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TemplateParameterSubstitution#copy()
	 * @generated
	 */
	EOperation getTemplateParameterSubstitution__Copy();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression <em>Numeric Unary Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Numeric Unary Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression
	 * @generated
	 */
	EClass getNumericUnaryExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression#type()
	 * @generated
	 */
	EOperation getNumericUnaryExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression#lower()
	 * @generated
	 */
	EOperation getNumericUnaryExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression#upper()
	 * @generated
	 */
	EOperation getNumericUnaryExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Numeric Unary Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Numeric Unary Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNumericUnaryExpression__NumericUnaryExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Numeric Unary Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Numeric Unary Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNumericUnaryExpression__NumericUnaryExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Numeric Unary Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Numeric Unary Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNumericUnaryExpression__NumericUnaryExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Numeric Unary Expression Operand</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Numeric Unary Expression Operand</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NumericUnaryExpression#numericUnaryExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNumericUnaryExpression__NumericUnaryExpressionOperand__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.UnaryExpression <em>Unary Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Unary Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnaryExpression
	 * @generated
	 */
	EClass getUnaryExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.UnaryExpression#getOperator <em>Operator</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Operator</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnaryExpression#getOperator()
	 * @see #getUnaryExpression()
	 * @generated
	 */
	EAttribute getUnaryExpression_Operator();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.UnaryExpression#getOperand <em>Operand</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnaryExpression#getOperand()
	 * @see #getUnaryExpression()
	 * @generated
	 */
	EReference getUnaryExpression_Operand();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnaryExpression#unaryExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Unary Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unary Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnaryExpression#unaryExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getUnaryExpression__UnaryExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnaryExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnaryExpression#updateAssignments()
	 * @generated
	 */
	EOperation getUnaryExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression <em>For All Or Exists Or One Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>For All Or Exists Or One Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression
	 * @generated
	 */
	EClass getForAllOrExistsOrOneExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForAllOrExistsOrOneExpression__ForAllOrExistsOrOneExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForAllOrExistsOrOneExpression__ForAllOrExistsOrOneExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForAllOrExistsOrOneExpression__ForAllOrExistsOrOneExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For All Or Exists Or One Expression Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For All Or Exists Or One Expression Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForAllOrExistsOrOneExpression#forAllOrExistsOrOneExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForAllOrExistsOrOneExpression__ForAllOrExistsOrOneExpressionArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.IsolationExpression <em>Isolation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Isolation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IsolationExpression
	 * @generated
	 */
	EClass getIsolationExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsolationExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsolationExpression#type()
	 * @generated
	 */
	EOperation getIsolationExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsolationExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsolationExpression#lower()
	 * @generated
	 */
	EOperation getIsolationExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsolationExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsolationExpression#upper()
	 * @generated
	 */
	EOperation getIsolationExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsolationExpression#isolationExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Isolation Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Isolation Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsolationExpression#isolationExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIsolationExpression__IsolationExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsolationExpression#isolationExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Isolation Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Isolation Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsolationExpression#isolationExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIsolationExpression__IsolationExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsolationExpression#isolationExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Isolation Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Isolation Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsolationExpression#isolationExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIsolationExpression__IsolationExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BinaryExpression <em>Binary Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Binary Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression
	 * @generated
	 */
	EClass getBinaryExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#getOperand1 <em>Operand1</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand1</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#getOperand1()
	 * @see #getBinaryExpression()
	 * @generated
	 */
	EReference getBinaryExpression_Operand1();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#getOperand2 <em>Operand2</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand2</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#getOperand2()
	 * @see #getBinaryExpression()
	 * @generated
	 */
	EReference getBinaryExpression_Operand2();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#getOperator <em>Operator</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Operator</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#getOperator()
	 * @see #getBinaryExpression()
	 * @generated
	 */
	EAttribute getBinaryExpression_Operator();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#validateAssignments() <em>Validate Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Validate Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#validateAssignments()
	 * @generated
	 */
	EOperation getBinaryExpression__ValidateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#noNullArguments() <em>No Null Arguments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>No Null Arguments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#noNullArguments()
	 * @generated
	 */
	EOperation getBinaryExpression__NoNullArguments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#binaryExpressionOperandMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Binary Expression Operand Multiplicity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Binary Expression Operand Multiplicity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#binaryExpressionOperandMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBinaryExpression__BinaryExpressionOperandMultiplicity__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#binaryExpressionOperandAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Binary Expression Operand Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Binary Expression Operand Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#binaryExpressionOperandAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBinaryExpression__BinaryExpressionOperandAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BinaryExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BinaryExpression#updateAssignments()
	 * @generated
	 */
	EOperation getBinaryExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression <em>Boolean Unary Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Boolean Unary Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression
	 * @generated
	 */
	EClass getBooleanUnaryExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#type()
	 * @generated
	 */
	EOperation getBooleanUnaryExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#lower()
	 * @generated
	 */
	EOperation getBooleanUnaryExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#upper()
	 * @generated
	 */
	EOperation getBooleanUnaryExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Boolean Unary Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Boolean Unary Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBooleanUnaryExpression__BooleanUnaryExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Boolean Unary Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Boolean Unary Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBooleanUnaryExpression__BooleanUnaryExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Boolean Unary Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Boolean Unary Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBooleanUnaryExpression__BooleanUnaryExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Boolean Unary Expression Operand</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Boolean Unary Expression Operand</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanUnaryExpression#booleanUnaryExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBooleanUnaryExpression__BooleanUnaryExpressionOperand__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.CastExpression <em>Cast Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Cast Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression
	 * @generated
	 */
	EClass getCastExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.CastExpression#getOperand <em>Operand</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand</em>'.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#getOperand()
	 * @see #getCastExpression()
	 * @generated
	 */
	EReference getCastExpression_Operand();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.CastExpression#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#getTypeName()
	 * @see #getCastExpression()
	 * @generated
	 */
	EReference getCastExpression_TypeName();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.CastExpression#isIsAny <em>Is Any</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Any</em>'.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#isIsAny()
	 * @see #getCastExpression()
	 * @generated
	 */
	EAttribute getCastExpression_IsAny();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#type()
	 * @generated
	 */
	EOperation getCastExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#lower()
	 * @generated
	 */
	EOperation getCastExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#upper()
	 * @generated
	 */
	EOperation getCastExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#castExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Cast Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Cast Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#castExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCastExpression__CastExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#castExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Cast Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Cast Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#castExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCastExpression__CastExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#castExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Cast Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Cast Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#castExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCastExpression__CastExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#castExpressionTypeResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Cast Expression Type Resolution</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Cast Expression Type Resolution</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#castExpressionTypeResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCastExpression__CastExpressionTypeResolution__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#castExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Cast Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Cast Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#castExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCastExpression__CastExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CastExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CastExpression#updateAssignments()
	 * @generated
	 */
	EOperation getCastExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.PositionalTuple <em>Positional Tuple</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Positional Tuple</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTuple
	 * @generated
	 */
	EClass getPositionalTuple();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.PositionalTuple#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTuple#getExpression()
	 * @see #getPositionalTuple()
	 * @generated
	 */
	EReference getPositionalTuple_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTuple#size() <em>Size</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Size</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTuple#size()
	 * @generated
	 */
	EOperation getPositionalTuple__Size();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTuple#inputFor(org.eclipse.emf.common.util.EList) <em>Input For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Input For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTuple#inputFor(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getPositionalTuple__InputFor__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTuple#outputFor(org.eclipse.emf.common.util.EList) <em>Output For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTuple#outputFor(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getPositionalTuple__OutputFor__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTuple#outputForExpression(org.eclipse.papyrus.uml.alf.Expression) <em>Output For Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output For Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTuple#outputForExpression(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getPositionalTuple__OutputForExpression__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTuple#positionalTupleArguments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Positional Tuple Arguments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Positional Tuple Arguments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTuple#positionalTupleArguments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPositionalTuple__PositionalTupleArguments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.Tuple <em>Tuple</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Tuple</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Tuple
	 * @generated
	 */
	EClass getTuple();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Tuple#getInput <em>Input</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Input</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#getInput()
	 * @see #getTuple()
	 * @generated
	 */
	EReference getTuple_Input();

	/**
	 * Returns the meta object for the container reference '{@link org.eclipse.papyrus.uml.alf.Tuple#getInvocation <em>Invocation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the container reference '<em>Invocation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#getInvocation()
	 * @see #getTuple()
	 * @generated
	 */
	EReference getTuple_Invocation();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Tuple#getOutput <em>Output</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Output</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#getOutput()
	 * @see #getTuple()
	 * @generated
	 */
	EReference getTuple_Output();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#size() <em>Size</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Size</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#size()
	 * @generated
	 */
	EOperation getTuple__Size();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#inputCached() <em>Input Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Input Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#inputCached()
	 * @generated
	 */
	EOperation getTuple__InputCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#input() <em>Input</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Input</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#input()
	 * @generated
	 */
	EOperation getTuple__Input();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#inputFor(org.eclipse.emf.common.util.EList) <em>Input For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Input For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#inputFor(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getTuple__InputFor__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#outputCached() <em>Output Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#outputCached()
	 * @generated
	 */
	EOperation getTuple__OutputCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#output() <em>Output</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#output()
	 * @generated
	 */
	EOperation getTuple__Output();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#outputFor(org.eclipse.emf.common.util.EList) <em>Output For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#outputFor(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getTuple__OutputFor__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#outputForExpression(org.eclipse.papyrus.uml.alf.Expression) <em>Output For Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output For Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#outputForExpression(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getTuple__OutputForExpression__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getTuple__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#assignmentsAfter()
	 * @generated
	 */
	EOperation getTuple__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#newAssignments() <em>New Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>New Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#newAssignments()
	 * @generated
	 */
	EOperation getTuple__NewAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#updateFor(org.eclipse.emf.common.util.EList, org.eclipse.papyrus.uml.alf.OutputNamedExpression) <em>Update For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#updateFor(org.eclipse.emf.common.util.EList, org.eclipse.papyrus.uml.alf.OutputNamedExpression)
	 * @generated
	 */
	EOperation getTuple__UpdateFor__EList_OutputNamedExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#tupleInputDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Tuple Input Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Tuple Input Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#tupleInputDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTuple__TupleInputDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#tupleOutputDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Tuple Output Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Tuple Output Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#tupleOutputDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTuple__TupleOutputDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#tupleNullInputs(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Tuple Null Inputs</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Tuple Null Inputs</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#tupleNullInputs(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTuple__TupleNullInputs__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#tupleOutputs(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Tuple Outputs</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Tuple Outputs</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#tupleOutputs(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTuple__TupleOutputs__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#tupleAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Tuple Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Tuple Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#tupleAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTuple__TupleAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Tuple#tupleAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Tuple Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Tuple Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Tuple#tupleAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTuple__TupleAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NamedExpression <em>Named Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Named Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedExpression
	 * @generated
	 */
	EClass getNamedExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.NamedExpression#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedExpression#getName()
	 * @see #getNamedExpression()
	 * @generated
	 */
	EAttribute getNamedExpression_Name();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NamedExpression#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedExpression#getExpression()
	 * @see #getNamedExpression()
	 * @generated
	 */
	EReference getNamedExpression_Expression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NamedExpression#getIndex <em>Index</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Index</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedExpression#getIndex()
	 * @see #getNamedExpression()
	 * @generated
	 */
	EReference getNamedExpression_Index();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedExpression#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedExpression#actualName()
	 * @generated
	 */
	EOperation getNamedExpression__ActualName();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression <em>Input Named Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Input Named Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression
	 * @generated
	 */
	EClass getInputNamedExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#getName()
	 * @see #getInputNamedExpression()
	 * @generated
	 */
	EAttribute getInputNamedExpression_Name();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#getExpression()
	 * @see #getInputNamedExpression()
	 * @generated
	 */
	EReference getInputNamedExpression_Expression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#getIndex <em>Index</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Index</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#getIndex()
	 * @see #getInputNamedExpression()
	 * @generated
	 */
	EReference getInputNamedExpression_Index();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#isIsCollectionConversion <em>Is Collection Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Collection Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#isIsCollectionConversion()
	 * @see #getInputNamedExpression()
	 * @generated
	 */
	EAttribute getInputNamedExpression_IsCollectionConversion();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#isIsBitStringConversion <em>Is Bit String Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#isIsBitStringConversion()
	 * @see #getInputNamedExpression()
	 * @generated
	 */
	EAttribute getInputNamedExpression_IsBitStringConversion();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#tuple() <em>Tuple</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Tuple</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#tuple()
	 * @generated
	 */
	EOperation getInputNamedExpression__Tuple();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#namedExpressionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Named Expression Is Collection Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Named Expression Is Collection Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#namedExpressionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInputNamedExpression__NamedExpressionIsCollectionConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InputNamedExpression#namedExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Named Expression Is Bit String Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Named Expression Is Bit String Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InputNamedExpression#namedExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInputNamedExpression__NamedExpressionIsBitStringConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.InvocationExpression <em>Invocation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Invocation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression
	 * @generated
	 */
	EClass getInvocationExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#isIsBehavior <em>Is Behavior</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Behavior</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#isIsBehavior()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EAttribute getInvocationExpression_IsBehavior();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#isIsAssociationEnd <em>Is Association End</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Association End</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#isIsAssociationEnd()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EAttribute getInvocationExpression_IsAssociationEnd();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#getFeature <em>Feature</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Feature</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#getFeature()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EReference getInvocationExpression_Feature();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#isIsOperation <em>Is Operation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Operation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#isIsOperation()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EAttribute getInvocationExpression_IsOperation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#isIsDestructor <em>Is Destructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Destructor</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#isIsDestructor()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EAttribute getInvocationExpression_IsDestructor();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#isIsImplicit <em>Is Implicit</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Implicit</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#isIsImplicit()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EAttribute getInvocationExpression_IsImplicit();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#getReferent()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EReference getInvocationExpression_Referent();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#getParameter <em>Parameter</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Parameter</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#getParameter()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EReference getInvocationExpression_Parameter();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#isIsSignal <em>Is Signal</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Signal</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#isIsSignal()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EAttribute getInvocationExpression_IsSignal();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#getTuple <em>Tuple</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Tuple</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#getTuple()
	 * @see #getInvocationExpression()
	 * @generated
	 */
	EReference getInvocationExpression_Tuple();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getInvocationExpression__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#feature()
	 * @generated
	 */
	EOperation getInvocationExpression__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#type()
	 * @generated
	 */
	EOperation getInvocationExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_type() <em>Invocation Expression type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_type()
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpression_type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#upper()
	 * @generated
	 */
	EOperation getInvocationExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_upper() <em>Invocation Expression upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_upper()
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpression_upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#lower()
	 * @generated
	 */
	EOperation getInvocationExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_lower() <em>Invocation Expression lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_lower()
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpression_lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#parameterNamed(java.lang.String) <em>Parameter Named</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Named</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#parameterNamed(java.lang.String)
	 * @generated
	 */
	EOperation getInvocationExpression__ParameterNamed__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#parameterCount() <em>Parameter Count</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Count</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#parameterCount()
	 * @generated
	 */
	EOperation getInvocationExpression__ParameterCount();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#parameterIsAssignableFrom(org.eclipse.papyrus.uml.alf.InputNamedExpression) <em>Parameter Is Assignable From</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Is Assignable From</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#parameterIsAssignableFrom(org.eclipse.papyrus.uml.alf.InputNamedExpression)
	 * @generated
	 */
	EOperation getInvocationExpression__ParameterIsAssignableFrom__InputNamedExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#parameterIsAssignableTo(org.eclipse.papyrus.uml.alf.OutputNamedExpression) <em>Parameter Is Assignable To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Is Assignable To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#parameterIsAssignableTo(org.eclipse.papyrus.uml.alf.OutputNamedExpression)
	 * @generated
	 */
	EOperation getInvocationExpression__ParameterIsAssignableTo__OutputNamedExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#alternativeConstructorIsValid() <em>Alternative Constructor Is Valid</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Alternative Constructor Is Valid</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#alternativeConstructorIsValid()
	 * @generated
	 */
	EOperation getInvocationExpression__AlternativeConstructorIsValid();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#bindTemplateImplicitArguments(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.Expression) <em>Bind Template Implicit Arguments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bind Template Implicit Arguments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#bindTemplateImplicitArguments(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getInvocationExpression__BindTemplateImplicitArguments__ElementReference_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#bindTemplateImplicitArguments1(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.Expression) <em>Bind Template Implicit Arguments1</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bind Template Implicit Arguments1</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#bindTemplateImplicitArguments1(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getInvocationExpression__BindTemplateImplicitArguments1__ElementReference_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#effectiveType(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.Expression) <em>Effective Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Effective Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#effectiveType(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getInvocationExpression__EffectiveType__ElementReference_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#parameterElements() <em>Parameter Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#parameterElements()
	 * @generated
	 */
	EOperation getInvocationExpression__ParameterElements();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_parameterElements() <em>Invocation Expression parameter Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression parameter Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#InvocationExpression_parameterElements()
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpression_parameterElements();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#parameterFromProperty(org.eclipse.papyrus.uml.alf.ElementReference) <em>Parameter From Property</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter From Property</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#parameterFromProperty(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getInvocationExpression__ParameterFromProperty__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#parameterFromPropertyWithMultiplicity(org.eclipse.papyrus.uml.alf.ElementReference, java.lang.String, java.lang.String) <em>Parameter From Property With Multiplicity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter From Property With Multiplicity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#parameterFromPropertyWithMultiplicity(org.eclipse.papyrus.uml.alf.ElementReference, java.lang.String, java.lang.String)
	 * @generated
	 */
	EOperation getInvocationExpression__ParameterFromPropertyWithMultiplicity__ElementReference_String_String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#referent()
	 * @generated
	 */
	EOperation getInvocationExpression__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#referentCached() <em>Referent Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#referentCached()
	 * @generated
	 */
	EOperation getInvocationExpression__ReferentCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsBehaviorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Is Behavior Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Is Behavior Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsBehaviorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionIsBehaviorDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsAssociationEndDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Is Association End Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Is Association End Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsAssociationEndDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionIsAssociationEndDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsOperationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Is Operation Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Is Operation Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsOperationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionIsOperationDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsDestructorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Is Destructor Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Is Destructor Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsDestructorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionIsDestructorDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsImplicitDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Is Implicit Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Is Implicit Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsImplicitDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionIsImplicitDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsSignalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Is Signal Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Is Signal Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionIsSignalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionIsSignalDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionParameterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Parameter Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Parameter Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionParameterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionParameterDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#updateAssignments()
	 * @generated
	 */
	EOperation getInvocationExpression__UpdateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionTemplateParameters(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Invocation Expression Template Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Invocation Expression Template Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InvocationExpression#invocationExpressionTemplateParameters(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInvocationExpression__InvocationExpressionTemplateParameters__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.OutputNamedExpression <em>Output Named Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Output Named Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OutputNamedExpression
	 * @generated
	 */
	EClass getOutputNamedExpression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.OutputNamedExpression#getLeftHandSide <em>Left Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Left Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OutputNamedExpression#getLeftHandSide()
	 * @see #getOutputNamedExpression()
	 * @generated
	 */
	EReference getOutputNamedExpression_LeftHandSide();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OutputNamedExpression#outputNamedExpressionLeftHandSideDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Output Named Expression Left Hand Side Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output Named Expression Left Hand Side Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OutputNamedExpression#outputNamedExpressionLeftHandSideDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOutputNamedExpression__OutputNamedExpressionLeftHandSideDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OutputNamedExpression#outputNamedExpressionForm(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Output Named Expression Form</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output Named Expression Form</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OutputNamedExpression#outputNamedExpressionForm(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOutputNamedExpression__OutputNamedExpressionForm__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OutputNamedExpression#hasLegalExpression() <em>Has Legal Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Has Legal Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OutputNamedExpression#hasLegalExpression()
	 * @generated
	 */
	EOperation getOutputNamedExpression__HasLegalExpression();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.LeftHandSide <em>Left Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Left Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide
	 * @generated
	 */
	EClass getLeftHandSide();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#getAssignmentBefore <em>Assignment Before</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment Before</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#getAssignmentBefore()
	 * @see #getLeftHandSide()
	 * @generated
	 */
	EReference getLeftHandSide_AssignmentBefore();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#getAssignmentAfter <em>Assignment After</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment After</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#getAssignmentAfter()
	 * @see #getLeftHandSide()
	 * @generated
	 */
	EReference getLeftHandSide_AssignmentAfter();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#getReferent()
	 * @see #getLeftHandSide()
	 * @generated
	 */
	EReference getLeftHandSide_Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getLeftHandSide__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#assignmentsAfter()
	 * @generated
	 */
	EOperation getLeftHandSide__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#type()
	 * @generated
	 */
	EOperation getLeftHandSide__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#LeftHandSide_type() <em>Left Hand Side type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Left Hand Side type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#LeftHandSide_type()
	 * @generated
	 */
	EOperation getLeftHandSide__LeftHandSide_type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#upper()
	 * @generated
	 */
	EOperation getLeftHandSide__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#LeftHandSide_upper() <em>Left Hand Side upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Left Hand Side upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#LeftHandSide_upper()
	 * @generated
	 */
	EOperation getLeftHandSide__LeftHandSide_upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#lower()
	 * @generated
	 */
	EOperation getLeftHandSide__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#LeftHandSide_lower() <em>Left Hand Side lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Left Hand Side lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#LeftHandSide_lower()
	 * @generated
	 */
	EOperation getLeftHandSide__LeftHandSide_lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#referent()
	 * @generated
	 */
	EOperation getLeftHandSide__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#assignedName() <em>Assigned Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assigned Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#assignedName()
	 * @generated
	 */
	EOperation getLeftHandSide__AssignedName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#localName() <em>Local Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#localName()
	 * @generated
	 */
	EOperation getLeftHandSide__LocalName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#feature()
	 * @generated
	 */
	EOperation getLeftHandSide__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#expression() <em>Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#expression()
	 * @generated
	 */
	EOperation getLeftHandSide__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#isDataValueUpdate() <em>Is Data Value Update</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Data Value Update</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#isDataValueUpdate()
	 * @generated
	 */
	EOperation getLeftHandSide__IsDataValueUpdate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#leftHandSideIndexExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Left Hand Side Index Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Left Hand Side Index Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#leftHandSideIndexExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLeftHandSide__LeftHandSideIndexExpression__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LeftHandSide#index() <em>Index</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Index</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LeftHandSide#index()
	 * @generated
	 */
	EOperation getLeftHandSide__Index();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression <em>Sequence Access Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Access Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression
	 * @generated
	 */
	EClass getSequenceAccessExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#getPrimary <em>Primary</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Primary</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#getPrimary()
	 * @see #getSequenceAccessExpression()
	 * @generated
	 */
	EReference getSequenceAccessExpression_Primary();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#getIndex <em>Index</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Index</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#getIndex()
	 * @see #getSequenceAccessExpression()
	 * @generated
	 */
	EReference getSequenceAccessExpression_Index();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#type()
	 * @generated
	 */
	EOperation getSequenceAccessExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#lower()
	 * @generated
	 */
	EOperation getSequenceAccessExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#upper()
	 * @generated
	 */
	EOperation getSequenceAccessExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#updateAssignments()
	 * @generated
	 */
	EOperation getSequenceAccessExpression__UpdateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Access Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Access Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceAccessExpression__SequenceAccessExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Access Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Access Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceAccessExpression__SequenceAccessExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Access Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Access Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceAccessExpression__SequenceAccessExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionIndexType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Access Expression Index Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Access Expression Index Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionIndexType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceAccessExpression__SequenceAccessExpressionIndexType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionIndexMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Access Expression Index Multiplicity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Access Expression Index Multiplicity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceAccessExpression#sequenceAccessExpressionIndexMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceAccessExpression__SequenceAccessExpressionIndexMultiplicity__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.StringLiteralExpression <em>String Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>String Literal Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.StringLiteralExpression
	 * @generated
	 */
	EClass getStringLiteralExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.StringLiteralExpression#getImage <em>Image</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Image</em>'.
	 * @see org.eclipse.papyrus.uml.alf.StringLiteralExpression#getImage()
	 * @see #getStringLiteralExpression()
	 * @generated
	 */
	EAttribute getStringLiteralExpression_Image();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StringLiteralExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StringLiteralExpression#type()
	 * @generated
	 */
	EOperation getStringLiteralExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StringLiteralExpression#stringLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>String Literal Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>String Literal Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StringLiteralExpression#stringLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStringLiteralExpression__StringLiteralExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.LiteralExpression <em>Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Literal Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LiteralExpression
	 * @generated
	 */
	EClass getLiteralExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LiteralExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LiteralExpression#upper()
	 * @generated
	 */
	EOperation getLiteralExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LiteralExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LiteralExpression#lower()
	 * @generated
	 */
	EOperation getLiteralExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LiteralExpression#literalExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Literal Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Literal Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LiteralExpression#literalExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLiteralExpression__LiteralExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LiteralExpression#literalExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Literal Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Literal Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LiteralExpression#literalExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLiteralExpression__LiteralExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression <em>Sequence Operation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Operation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression
	 * @generated
	 */
	EClass getSequenceOperationExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#getPrimary <em>Primary</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Primary</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#getPrimary()
	 * @see #getSequenceOperationExpression()
	 * @generated
	 */
	EReference getSequenceOperationExpression_Primary();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#getOperation <em>Operation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#getOperation()
	 * @see #getSequenceOperationExpression()
	 * @generated
	 */
	EReference getSequenceOperationExpression_Operation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#isIsCollectionConversion <em>Is Collection Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Collection Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#isIsCollectionConversion()
	 * @see #getSequenceOperationExpression()
	 * @generated
	 */
	EAttribute getSequenceOperationExpression_IsCollectionConversion();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#isIsBitStringConversion <em>Is Bit String Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#isIsBitStringConversion()
	 * @see #getSequenceOperationExpression()
	 * @generated
	 */
	EAttribute getSequenceOperationExpression_IsBitStringConversion();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#getLeftHandSide <em>Left Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Left Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#getLeftHandSide()
	 * @see #getSequenceOperationExpression()
	 * @generated
	 */
	EReference getSequenceOperationExpression_LeftHandSide();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#feature()
	 * @generated
	 */
	EOperation getSequenceOperationExpression__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#referent()
	 * @generated
	 */
	EOperation getSequenceOperationExpression__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression) <em>Is Add Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Add Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__IsAddTarget__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#firstParameter() <em>First Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>First Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#firstParameter()
	 * @generated
	 */
	EOperation getSequenceOperationExpression__FirstParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#firstArgument() <em>First Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>First Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#firstArgument()
	 * @generated
	 */
	EOperation getSequenceOperationExpression__FirstArgument();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionOperationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Operation Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Operation Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionOperationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionOperationReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionTargetCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Target Compatibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Target Compatibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionTargetCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionTargetCompatibility__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionArgumentCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Argument Compatibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Argument Compatibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionArgumentCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionArgumentCompatibility__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Is Collection Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Is Collection Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionIsCollectionConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Is Bit String Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Is Bit String Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionIsBitStringConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionLeftHandSideDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Operation Expression Left Hand Side Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Operation Expression Left Hand Side Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#sequenceOperationExpressionLeftHandSideDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceOperationExpression__SequenceOperationExpressionLeftHandSideDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#updateAssignments()
	 * @generated
	 */
	EOperation getSequenceOperationExpression__UpdateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceOperationExpression#parameterElements() <em>Parameter Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceOperationExpression#parameterElements()
	 * @generated
	 */
	EOperation getSequenceOperationExpression__ParameterElements();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SelectOrRejectExpression <em>Select Or Reject Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Select Or Reject Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SelectOrRejectExpression
	 * @generated
	 */
	EClass getSelectOrRejectExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSelectOrRejectExpression__SelectOrRejectExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSelectOrRejectExpression__SelectOrRejectExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSelectOrRejectExpression__SelectOrRejectExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Select Or Reject Expression Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Select Or Reject Expression Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SelectOrRejectExpression#selectOrRejectExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSelectOrRejectExpression__SelectOrRejectExpressionArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression <em>Class Extent Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Class Extent Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression
	 * @generated
	 */
	EClass getClassExtentExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#getClassName <em>Class Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Class Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#getClassName()
	 * @see #getClassExtentExpression()
	 * @generated
	 */
	EReference getClassExtentExpression_ClassName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#type()
	 * @generated
	 */
	EOperation getClassExtentExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#upper()
	 * @generated
	 */
	EOperation getClassExtentExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#lower()
	 * @generated
	 */
	EOperation getClassExtentExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Class Extent Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Class Extent Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassExtentExpression__ClassExtentExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Class Extent Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Class Extent Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassExtentExpression__ClassExtentExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Class Extent Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Class Extent Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassExtentExpression__ClassExtentExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionExtentType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Class Extent Expression Extent Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Class Extent Expression Extent Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#classExtentExpressionExtentType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassExtentExpression__ClassExtentExpressionExtentType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassExtentExpression#validateClassExtentExpressionExtentType() <em>Validate Class Extent Expression Extent Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Validate Class Extent Expression Extent Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassExtentExpression#validateClassExtentExpressionExtentType()
	 * @generated
	 */
	EOperation getClassExtentExpression__ValidateClassExtentExpressionExtentType();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.PositionalTemplateBinding <em>Positional Template Binding</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Positional Template Binding</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTemplateBinding
	 * @generated
	 */
	EClass getPositionalTemplateBinding();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#getArgumentName <em>Argument Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Argument Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#getArgumentName()
	 * @see #getPositionalTemplateBinding()
	 * @generated
	 */
	EReference getPositionalTemplateBinding_ArgumentName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#toString() <em>To String</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To String</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#toString()
	 * @generated
	 */
	EOperation getPositionalTemplateBinding__ToString();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference) <em>Matches</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getPositionalTemplateBinding__Matches__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.QualifiedName) <em>Matches</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#matches(org.eclipse.papyrus.uml.alf.ElementReference, org.eclipse.papyrus.uml.alf.QualifiedName)
	 * @generated
	 */
	EOperation getPositionalTemplateBinding__Matches__ElementReference_QualifiedName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#bindTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Bind To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bind To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#bindTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getPositionalTemplateBinding__BindTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#copy() <em>Copy</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Copy</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PositionalTemplateBinding#copy()
	 * @generated
	 */
	EOperation getPositionalTemplateBinding__Copy();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression <em>Conditional Logical Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Conditional Logical Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression
	 * @generated
	 */
	EClass getConditionalLogicalExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#type()
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#lower()
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#upper()
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Logical Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Logical Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__ConditionalLogicalExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionLower(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Logical Expression Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Logical Expression Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionLower(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__ConditionalLogicalExpressionLower__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionUpper(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Logical Expression Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Logical Expression Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionUpper(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__ConditionalLogicalExpressionUpper__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionOperands(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Logical Expression Operands</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Logical Expression Operands</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#conditionalLogicalExpressionOperands(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__ConditionalLogicalExpressionOperands__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#validateAssignments() <em>Validate Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Validate Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#validateAssignments()
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__ValidateAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalLogicalExpression#updateAssignments()
	 * @generated
	 */
	EOperation getConditionalLogicalExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression <em>Link Operation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Link Operation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression
	 * @generated
	 */
	EClass getLinkOperationExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#getOperation <em>Operation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Operation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#getOperation()
	 * @see #getLinkOperationExpression()
	 * @generated
	 */
	EAttribute getLinkOperationExpression_Operation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#isIsCreation <em>Is Creation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Creation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#isIsCreation()
	 * @see #getLinkOperationExpression()
	 * @generated
	 */
	EAttribute getLinkOperationExpression_IsCreation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#isIsClear <em>Is Clear</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Clear</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#isIsClear()
	 * @see #getLinkOperationExpression()
	 * @generated
	 */
	EAttribute getLinkOperationExpression_IsClear();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#getAssociationName <em>Association Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Association Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#getAssociationName()
	 * @see #getLinkOperationExpression()
	 * @generated
	 */
	EReference getLinkOperationExpression_AssociationName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#referent()
	 * @generated
	 */
	EOperation getLinkOperationExpression__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#feature()
	 * @generated
	 */
	EOperation getLinkOperationExpression__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionIsCreationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Link Operation Expression Is Creation Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Link Operation Expression Is Creation Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionIsCreationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLinkOperationExpression__LinkOperationExpressionIsCreationDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionIsClearDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Link Operation Expression Is Clear Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Link Operation Expression Is Clear Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionIsClearDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLinkOperationExpression__LinkOperationExpressionIsClearDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Link Operation Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Link Operation Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLinkOperationExpression__LinkOperationExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Link Operation Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Link Operation Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLinkOperationExpression__LinkOperationExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionAssociationReference(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Link Operation Expression Association Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Link Operation Expression Association Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionAssociationReference(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLinkOperationExpression__LinkOperationExpressionAssociationReference__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionArgumentCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Link Operation Expression Argument Compatibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Link Operation Expression Argument Compatibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#linkOperationExpressionArgumentCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLinkOperationExpression__LinkOperationExpressionArgumentCompatibility__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LinkOperationExpression#parameterElements() <em>Parameter Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LinkOperationExpression#parameterElements()
	 * @generated
	 */
	EOperation getLinkOperationExpression__ParameterElements();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.EqualityExpression <em>Equality Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Equality Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression
	 * @generated
	 */
	EClass getEqualityExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#isIsNegated <em>Is Negated</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Negated</em>'.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#isIsNegated()
	 * @see #getEqualityExpression()
	 * @generated
	 */
	EAttribute getEqualityExpression_IsNegated();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#type()
	 * @generated
	 */
	EOperation getEqualityExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#lower()
	 * @generated
	 */
	EOperation getEqualityExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#upper()
	 * @generated
	 */
	EOperation getEqualityExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionIsNegatedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Equality Expression Is Negated Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equality Expression Is Negated Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionIsNegatedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getEqualityExpression__EqualityExpressionIsNegatedDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Equality Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equality Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getEqualityExpression__EqualityExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Equality Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equality Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getEqualityExpression__EqualityExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Equality Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Equality Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#equalityExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getEqualityExpression__EqualityExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EqualityExpression#noNullArguments() <em>No Null Arguments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>No Null Arguments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EqualityExpression#noNullArguments()
	 * @generated
	 */
	EOperation getEqualityExpression__NoNullArguments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression <em>Assignment Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Assignment Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression
	 * @generated
	 */
	EClass getAssignmentExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#getOperator <em>Operator</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Operator</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#getOperator()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_Operator();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#getLeftHandSide <em>Left Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Left Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#getLeftHandSide()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EReference getAssignmentExpression_LeftHandSide();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#getRightHandSide <em>Right Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Right Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#getRightHandSide()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EReference getAssignmentExpression_RightHandSide();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#getAssignment <em>Assignment</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Assignment</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#getAssignment()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EReference getAssignmentExpression_Assignment();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#getFeature <em>Feature</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Feature</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#getFeature()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EReference getAssignmentExpression_Feature();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsIndexed <em>Is Indexed</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Indexed</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsIndexed()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsIndexed();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsArithmetic <em>Is Arithmetic</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Arithmetic</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsArithmetic()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsArithmetic();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsLogical <em>Is Logical</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Logical</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsLogical()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsLogical();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsShift <em>Is Shift</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Shift</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsShift()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsShift();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsConcatenation <em>Is Concatenation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Concatenation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsConcatenation()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsConcatenation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsDefinition <em>Is Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsDefinition()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsDefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsSimple <em>Is Simple</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Simple</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsSimple()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsSimple();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#getExpression()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EReference getAssignmentExpression_Expression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsFeature <em>Is Feature</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Feature</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsFeature()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsFeature();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsDataValueUpdate <em>Is Data Value Update</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Data Value Update</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsDataValueUpdate()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsDataValueUpdate();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsCollectionConversion <em>Is Collection Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Collection Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsCollectionConversion()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsCollectionConversion();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsBitStringConversion <em>Is Bit String Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#isIsBitStringConversion()
	 * @see #getAssignmentExpression()
	 * @generated
	 */
	EAttribute getAssignmentExpression_IsBitStringConversion();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#type()
	 * @generated
	 */
	EOperation getAssignmentExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#upper()
	 * @generated
	 */
	EOperation getAssignmentExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#lower()
	 * @generated
	 */
	EOperation getAssignmentExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsSimpleDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Simple Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Simple Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsSimpleDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsSimpleDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsArithmeticDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Arithmetic Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Arithmetic Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsArithmeticDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsArithmeticDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsDefinitionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Definition Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Definition Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsDefinitionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsDefinitionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsIndexedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Indexed Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Indexed Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsIndexedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsIndexedDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsDataValueUpdateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Data Value Update Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Data Value Update Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsDataValueUpdateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsDataValueUpdateDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionAssignmentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Assignment Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Assignment Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionAssignmentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionAssignmentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionExpressionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Expression Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Expression Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionExpressionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionExpressionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionSimpleAssignmentTypeConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Simple Assignment Type Conformance</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Simple Assignment Type Conformance</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionSimpleAssignmentTypeConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionSimpleAssignmentTypeConformance__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionSimpleAssignmentMultiplicityConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Simple Assignment Multiplicity Conformance</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Simple Assignment Multiplicity Conformance</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionSimpleAssignmentMultiplicityConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionSimpleAssignmentMultiplicityConformance__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionCompoundAssignmentTypeConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Compound Assignment Type Conformance</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Compound Assignment Type Conformance</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionCompoundAssignmentTypeConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionCompoundAssignmentTypeConformance__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionCompoundAssignmentMultiplicityConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Compound Assignment Multiplicity Conformance</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Compound Assignment Multiplicity Conformance</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionCompoundAssignmentMultiplicityConformance(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionCompoundAssignmentMultiplicityConformance__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Collection Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Collection Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsCollectionConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Is Bit String Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Is Bit String Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionIsBitStringConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionDataValueUpdateLegality(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Assignment Expression Data Value Update Legality</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment Expression Data Value Update Legality</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#assignmentExpressionDataValueUpdateLegality(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssignmentExpression__AssignmentExpressionDataValueUpdateLegality__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignmentExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignmentExpression#updateAssignments()
	 * @generated
	 */
	EOperation getAssignmentExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.LogicalExpression <em>Logical Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Logical Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression
	 * @generated
	 */
	EClass getLogicalExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#isIsBitWise <em>Is Bit Wise</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit Wise</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#isIsBitWise()
	 * @see #getLogicalExpression()
	 * @generated
	 */
	EAttribute getLogicalExpression_IsBitWise();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#isIsBitStringConversion1 <em>Is Bit String Conversion1</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion1</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#isIsBitStringConversion1()
	 * @see #getLogicalExpression()
	 * @generated
	 */
	EAttribute getLogicalExpression_IsBitStringConversion1();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#isIsBitStringConversion2 <em>Is Bit String Conversion2</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion2</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#isIsBitStringConversion2()
	 * @see #getLogicalExpression()
	 * @generated
	 */
	EAttribute getLogicalExpression_IsBitStringConversion2();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#type()
	 * @generated
	 */
	EOperation getLogicalExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#lower()
	 * @generated
	 */
	EOperation getLogicalExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#upper()
	 * @generated
	 */
	EOperation getLogicalExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Logical Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Logical Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLogicalExpression__LogicalExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Logical Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Logical Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLogicalExpression__LogicalExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Logical Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Logical Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLogicalExpression__LogicalExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionOperands(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Logical Expression Operands</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Logical Expression Operands</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionOperands(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLogicalExpression__LogicalExpressionOperands__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionIsBitStringConversion1Derivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Logical Expression Is Bit String Conversion1 Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Logical Expression Is Bit String Conversion1 Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionIsBitStringConversion1Derivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLogicalExpression__LogicalExpressionIsBitStringConversion1Derivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionIsBitStringConversion2Derivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Logical Expression Is Bit String Conversion2 Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Logical Expression Is Bit String Conversion2 Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionIsBitStringConversion2Derivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLogicalExpression__LogicalExpressionIsBitStringConversion2Derivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionIsBitWiseDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Logical Expression Is Bit Wise Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Logical Expression Is Bit Wise Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LogicalExpression#logicalExpressionIsBitWiseDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLogicalExpression__LogicalExpressionIsBitWiseDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression <em>Sequence Construction Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Construction Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression
	 * @generated
	 */
	EClass getSequenceConstructionExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#getElements <em>Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Elements</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#getElements()
	 * @see #getSequenceConstructionExpression()
	 * @generated
	 */
	EReference getSequenceConstructionExpression_Elements();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#isHasMultiplicity <em>Has Multiplicity</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Has Multiplicity</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#isHasMultiplicity()
	 * @see #getSequenceConstructionExpression()
	 * @generated
	 */
	EAttribute getSequenceConstructionExpression_HasMultiplicity();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#getTypeName()
	 * @see #getSequenceConstructionExpression()
	 * @generated
	 */
	EReference getSequenceConstructionExpression_TypeName();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#isIsAny <em>Is Any</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Any</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#isIsAny()
	 * @see #getSequenceConstructionExpression()
	 * @generated
	 */
	EAttribute getSequenceConstructionExpression_IsAny();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#collectionType() <em>Collection Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collection Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#collectionType()
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__CollectionType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#type()
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#constructorReference() <em>Constructor Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Constructor Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#constructorReference()
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__ConstructorReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#upper()
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#lower()
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Construction Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Construction Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__SequenceConstructionExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Construction Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Construction Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__SequenceConstructionExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Construction Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Construction Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__SequenceConstructionExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Construction Expression Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Construction Expression Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__SequenceConstructionExpressionType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionElementType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Construction Expression Element Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Construction Expression Element Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionElementType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__SequenceConstructionExpressionElementType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Construction Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Construction Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#sequenceConstructionExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__SequenceConstructionExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceConstructionExpression#updateAssignments()
	 * @generated
	 */
	EOperation getSequenceConstructionExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceElements <em>Sequence Elements</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Elements</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceElements
	 * @generated
	 */
	EClass getSequenceElements();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceElements#getUpper <em>Upper</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Upper</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceElements#getUpper()
	 * @see #getSequenceElements()
	 * @generated
	 */
	EAttribute getSequenceElements_Upper();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceElements#getLower <em>Lower</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Lower</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceElements#getLower()
	 * @see #getSequenceElements()
	 * @generated
	 */
	EAttribute getSequenceElements_Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceElements#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Conforms To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conforms To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceElements#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSequenceElements__ConformsTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceElements#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceElements#assignmentsAfter()
	 * @generated
	 */
	EOperation getSequenceElements__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceElements#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceElements#upper()
	 * @generated
	 */
	EOperation getSequenceElements__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceElements#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceElements#lower()
	 * @generated
	 */
	EOperation getSequenceElements__Lower();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.CollectOrIterateExpression <em>Collect Or Iterate Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Collect Or Iterate Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.CollectOrIterateExpression
	 * @generated
	 */
	EClass getCollectOrIterateExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CollectOrIterateExpression#collectOrIterateExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Collect Or Iterate Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collect Or Iterate Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CollectOrIterateExpression#collectOrIterateExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCollectOrIterateExpression__CollectOrIterateExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CollectOrIterateExpression#collectOrIterateExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Collect Or Iterate Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collect Or Iterate Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CollectOrIterateExpression#collectOrIterateExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCollectOrIterateExpression__CollectOrIterateExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.CollectOrIterateExpression#collectOrIterateExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Collect Or Iterate Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Collect Or Iterate Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.CollectOrIterateExpression#collectOrIterateExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getCollectOrIterateExpression__CollectOrIterateExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.IsUniqueExpression <em>Is Unique Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Is Unique Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IsUniqueExpression
	 * @generated
	 */
	EClass getIsUniqueExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIsUniqueExpression__IsUniqueExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIsUniqueExpression__IsUniqueExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIsUniqueExpression__IsUniqueExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Is Unique Expression Expression Argument</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Unique Expression Expression Argument</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IsUniqueExpression#isUniqueExpressionExpressionArgument(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIsUniqueExpression__IsUniqueExpressionExpressionArgument__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression <em>Arithmetic Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Arithmetic Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression
	 * @generated
	 */
	EClass getArithmeticExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#isIsConcatenation <em>Is Concatenation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Concatenation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#isIsConcatenation()
	 * @see #getArithmeticExpression()
	 * @generated
	 */
	EAttribute getArithmeticExpression_IsConcatenation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#type()
	 * @generated
	 */
	EOperation getArithmeticExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#lower()
	 * @generated
	 */
	EOperation getArithmeticExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#upper()
	 * @generated
	 */
	EOperation getArithmeticExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionIsConcatenationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Arithmetic Expression Is Concatenation Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Arithmetic Expression Is Concatenation Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionIsConcatenationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getArithmeticExpression__ArithmeticExpressionIsConcatenationDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Arithmetic Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Arithmetic Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getArithmeticExpression__ArithmeticExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Arithmetic Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Arithmetic Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getArithmeticExpression__ArithmeticExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Arithmetic Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Arithmetic Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getArithmeticExpression__ArithmeticExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionOperandTypes(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Arithmetic Expression Operand Types</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Arithmetic Expression Operand Types</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ArithmeticExpression#arithmeticExpressionOperandTypes(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getArithmeticExpression__ArithmeticExpressionOperandTypes__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide <em>Feature Left Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Feature Left Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide
	 * @generated
	 */
	EClass getFeatureLeftHandSide();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#getExpression()
	 * @see #getFeatureLeftHandSide()
	 * @generated
	 */
	EReference getFeatureLeftHandSide_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#referent()
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#feature()
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#expression() <em>Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#expression()
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#index() <em>Index</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Index</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#index()
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__Index();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#localName() <em>Local Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#localName()
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__LocalName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideAssignmentBeforeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Assignment Before Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Assignment Before Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideAssignmentBeforeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideAssignmentBeforeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Assignment After Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Assignment After Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideAssignmentAfterDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideFeatureExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Feature Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Feature Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideFeatureExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideFeatureExpression__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideReferentConstraint(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Referent Constraint</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Referent Constraint</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideReferentConstraint(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideReferentConstraint__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideIndexedFeature(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Left Hand Side Indexed Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Left Hand Side Indexed Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureLeftHandSide#featureLeftHandSideIndexedFeature(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureLeftHandSide__FeatureLeftHandSideIndexedFeature__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression <em>Conditional Test Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Conditional Test Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression
	 * @generated
	 */
	EClass getConditionalTestExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#getOperand1 <em>Operand1</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand1</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#getOperand1()
	 * @see #getConditionalTestExpression()
	 * @generated
	 */
	EReference getConditionalTestExpression_Operand1();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#getOperand2 <em>Operand2</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand2</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#getOperand2()
	 * @see #getConditionalTestExpression()
	 * @generated
	 */
	EReference getConditionalTestExpression_Operand2();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#getOperand3 <em>Operand3</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand3</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#getOperand3()
	 * @see #getConditionalTestExpression()
	 * @generated
	 */
	EReference getConditionalTestExpression_Operand3();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#type()
	 * @generated
	 */
	EOperation getConditionalTestExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#lower()
	 * @generated
	 */
	EOperation getConditionalTestExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#upper()
	 * @generated
	 */
	EOperation getConditionalTestExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getConditionalTestExpression__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Test Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Test Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalTestExpression__ConditionalTestExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Test Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Test Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalTestExpression__ConditionalTestExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Test Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Test Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalTestExpression__ConditionalTestExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionCondition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Test Expression Condition</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Test Expression Condition</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionCondition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalTestExpression__ConditionalTestExpressionCondition__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Test Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Test Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalTestExpression__ConditionalTestExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Conditional Test Expression Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conditional Test Expression Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#conditionalTestExpressionAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConditionalTestExpression__ConditionalTestExpressionAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConditionalTestExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConditionalTestExpression#updateAssignments()
	 * @generated
	 */
	EOperation getConditionalTestExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression <em>Instance Creation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Instance Creation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression
	 * @generated
	 */
	EClass getInstanceCreationExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#isIsConstructorless <em>Is Constructorless</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Constructorless</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#isIsConstructorless()
	 * @see #getInstanceCreationExpression()
	 * @generated
	 */
	EAttribute getInstanceCreationExpression_IsConstructorless();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#isIsObjectCreation <em>Is Object Creation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Object Creation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#isIsObjectCreation()
	 * @see #getInstanceCreationExpression()
	 * @generated
	 */
	EAttribute getInstanceCreationExpression_IsObjectCreation();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#getConstructor <em>Constructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Constructor</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#getConstructor()
	 * @see #getInstanceCreationExpression()
	 * @generated
	 */
	EReference getInstanceCreationExpression_Constructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#referent()
	 * @generated
	 */
	EOperation getInstanceCreationExpression__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#feature()
	 * @generated
	 */
	EOperation getInstanceCreationExpression__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#type()
	 * @generated
	 */
	EOperation getInstanceCreationExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#lower()
	 * @generated
	 */
	EOperation getInstanceCreationExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#upper()
	 * @generated
	 */
	EOperation getInstanceCreationExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionIsObjectCreationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Is Object Creation Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Is Object Creation Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionIsObjectCreationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionIsObjectCreationDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionIsConstructorlessDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Is Constructorless Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Is Constructorless Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionIsConstructorlessDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionIsConstructorlessDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionConstructor__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionConstructorlessLegality(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Constructorless Legality</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Constructorless Legality</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionConstructorlessLegality(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionConstructorlessLegality__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionDataTypeCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Data Type Compatibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Data Type Compatibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionDataTypeCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionDataTypeCompatibility__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Instance Creation Expression Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Instance Creation Expression Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#instanceCreationExpressionReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInstanceCreationExpression__InstanceCreationExpressionReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InstanceCreationExpression#parameterElements() <em>Parameter Elements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Elements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InstanceCreationExpression#parameterElements()
	 * @generated
	 */
	EOperation getInstanceCreationExpression__ParameterElements();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression <em>Property Access Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Property Access Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression
	 * @generated
	 */
	EClass getPropertyAccessExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#getFeatureReference <em>Feature Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Feature Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#getFeatureReference()
	 * @see #getPropertyAccessExpression()
	 * @generated
	 */
	EReference getPropertyAccessExpression_FeatureReference();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#getFeature <em>Feature</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Feature</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#getFeature()
	 * @see #getPropertyAccessExpression()
	 * @generated
	 */
	EReference getPropertyAccessExpression_Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#type()
	 * @generated
	 */
	EOperation getPropertyAccessExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#upper()
	 * @generated
	 */
	EOperation getPropertyAccessExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#lower()
	 * @generated
	 */
	EOperation getPropertyAccessExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Access Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Access Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyAccessExpression__PropertyAccessExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Access Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Access Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyAccessExpression__PropertyAccessExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Access Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Access Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyAccessExpression__PropertyAccessExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Access Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Access Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyAccessExpression__PropertyAccessExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionFeatureResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Access Expression Feature Resolution</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Access Expression Feature Resolution</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionFeatureResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyAccessExpression__PropertyAccessExpressionFeatureResolution__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Access Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Access Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#propertyAccessExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyAccessExpression__PropertyAccessExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyAccessExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyAccessExpression#updateAssignments()
	 * @generated
	 */
	EOperation getPropertyAccessExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NameExpression <em>Name Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Name Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression
	 * @generated
	 */
	EClass getNameExpression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.NameExpression#getEnumerationLiteral <em>Enumeration Literal</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Enumeration Literal</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#getEnumerationLiteral()
	 * @see #getNameExpression()
	 * @generated
	 */
	EReference getNameExpression_EnumerationLiteral();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.NameExpression#getAssignment <em>Assignment</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Assignment</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#getAssignment()
	 * @see #getNameExpression()
	 * @generated
	 */
	EReference getNameExpression_Assignment();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.NameExpression#getPropertyAccess <em>Property Access</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Property Access</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#getPropertyAccess()
	 * @see #getNameExpression()
	 * @generated
	 */
	EReference getNameExpression_PropertyAccess();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NameExpression#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#getName()
	 * @see #getNameExpression()
	 * @generated
	 */
	EReference getNameExpression_Name();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#type()
	 * @generated
	 */
	EOperation getNameExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#upper()
	 * @generated
	 */
	EOperation getNameExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#lower()
	 * @generated
	 */
	EOperation getNameExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#parameterReferent() <em>Parameter Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#parameterReferent()
	 * @generated
	 */
	EOperation getNameExpression__ParameterReferent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#assignmentFor(java.lang.String) <em>Assignment For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#assignmentFor(java.lang.String)
	 * @generated
	 */
	EOperation getNameExpression__AssignmentFor__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#assignmentFor_(java.lang.String) <em>Assignment For </em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment For </em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#assignmentFor_(java.lang.String)
	 * @generated
	 */
	EOperation getNameExpression__AssignmentFor___String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#isAddTargetName() <em>Is Add Target Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Add Target Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#isAddTargetName()
	 * @generated
	 */
	EOperation getNameExpression__IsAddTargetName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionAssignmentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Expression Assignment Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Expression Assignment Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionAssignmentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameExpression__NameExpressionAssignmentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionEnumerationLiteralDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Expression Enumeration Literal Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Expression Enumeration Literal Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionEnumerationLiteralDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameExpression__NameExpressionEnumerationLiteralDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionPropertyAccessDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Expression Property Access Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Expression Property Access Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionPropertyAccessDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameExpression__NameExpressionPropertyAccessDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameExpression__NameExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameExpression__NameExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameExpression__NameExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Expression Resolution</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Expression Resolution</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#nameExpressionResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameExpression__NameExpressionResolution__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#validateNameExpressionResolution() <em>Validate Name Expression Resolution</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Validate Name Expression Resolution</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#validateNameExpressionResolution()
	 * @generated
	 */
	EOperation getNameExpression__ValidateNameExpressionResolution();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameExpression#updateAssignments()
	 * @generated
	 */
	EOperation getNameExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression <em>Bit String Unary Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Bit String Unary Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression
	 * @generated
	 */
	EClass getBitStringUnaryExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#isIsBitStringConversion <em>Is Bit String Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#isIsBitStringConversion()
	 * @see #getBitStringUnaryExpression()
	 * @generated
	 */
	EAttribute getBitStringUnaryExpression_IsBitStringConversion();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#type()
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#lower()
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#upper()
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Bit String Unary Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bit String Unary Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__BitStringUnaryExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Bit String Unary Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bit String Unary Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__BitStringUnaryExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Bit String Unary Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bit String Unary Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__BitStringUnaryExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Bit String Unary Expression Operand</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bit String Unary Expression Operand</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__BitStringUnaryExpressionOperand__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Bit String Unary Expression Is Bit String Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Bit String Unary Expression Is Bit String Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BitStringUnaryExpression#bitStringUnaryExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBitStringUnaryExpression__BitStringUnaryExpressionIsBitStringConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression <em>Feature Invocation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Feature Invocation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression
	 * @generated
	 */
	EClass getFeatureInvocationExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Target</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#getTarget()
	 * @see #getFeatureInvocationExpression()
	 * @generated
	 */
	EReference getFeatureInvocationExpression_Target();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#feature()
	 * @generated
	 */
	EOperation getFeatureInvocationExpression__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#referent()
	 * @generated
	 */
	EOperation getFeatureInvocationExpression__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Invocation Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Invocation Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureInvocationExpression__FeatureInvocationExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Invocation Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Invocation Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureInvocationExpression__FeatureInvocationExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionReferentExists(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Invocation Expression Referent Exists</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Invocation Expression Referent Exists</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionReferentExists(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureInvocationExpression__FeatureInvocationExpressionReferentExists__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionAlternativeConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Invocation Expression Alternative Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Invocation Expression Alternative Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionAlternativeConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureInvocationExpression__FeatureInvocationExpressionAlternativeConstructor__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionImplicitAlternativeConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Feature Invocation Expression Implicit Alternative Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature Invocation Expression Implicit Alternative Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FeatureInvocationExpression#featureInvocationExpressionImplicitAlternativeConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getFeatureInvocationExpression__FeatureInvocationExpressionImplicitAlternativeConstructor__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression <em>Behavior Invocation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Behavior Invocation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression
	 * @generated
	 */
	EClass getBehaviorInvocationExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Target</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#getTarget()
	 * @see #getBehaviorInvocationExpression()
	 * @generated
	 */
	EReference getBehaviorInvocationExpression_Target();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression) <em>Is Add Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Add Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#isAddTarget(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__IsAddTarget__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#referent()
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#referent1() <em>Referent1</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent1</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#referent1()
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__Referent1();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#BehaviorInvocation_referent() <em>Behavior Invocation referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Behavior Invocation referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#BehaviorInvocation_referent()
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__BehaviorInvocation_referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#feature()
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Behavior Invocation Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Behavior Invocation Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__BehaviorInvocationExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Behavior Invocation Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Behavior Invocation Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__BehaviorInvocationExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionReferentConstraint(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Behavior Invocation Expression Referent Constraint</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Behavior Invocation Expression Referent Constraint</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionReferentConstraint(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__BehaviorInvocationExpressionReferentConstraint__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionArgumentCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Behavior Invocation Expression Argument Compatibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Behavior Invocation Expression Argument Compatibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionArgumentCompatibility(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__BehaviorInvocationExpressionArgumentCompatibility__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionAlternativeConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Behavior Invocation Expression Alternative Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Behavior Invocation Expression Alternative Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BehaviorInvocationExpression#behaviorInvocationExpressionAlternativeConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBehaviorInvocationExpression__BehaviorInvocationExpressionAlternativeConstructor__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ShiftExpression <em>Shift Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Shift Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression
	 * @generated
	 */
	EClass getShiftExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#isIsBitStringConversion <em>Is Bit String Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#isIsBitStringConversion()
	 * @see #getShiftExpression()
	 * @generated
	 */
	EAttribute getShiftExpression_IsBitStringConversion();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#type()
	 * @generated
	 */
	EOperation getShiftExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#lower()
	 * @generated
	 */
	EOperation getShiftExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#upper()
	 * @generated
	 */
	EOperation getShiftExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Shift Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Shift Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getShiftExpression__ShiftExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Shift Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Shift Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getShiftExpression__ShiftExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Shift Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Shift Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getShiftExpression__ShiftExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionOperands(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Shift Expression Operands</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Shift Expression Operands</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionOperands(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getShiftExpression__ShiftExpressionOperands__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Shift Expression Is Bit String Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Shift Expression Is Bit String Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ShiftExpression#shiftExpressionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getShiftExpression__ShiftExpressionIsBitStringConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.UnboundedLiteralExpression <em>Unbounded Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Unbounded Literal Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnboundedLiteralExpression
	 * @generated
	 */
	EClass getUnboundedLiteralExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnboundedLiteralExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnboundedLiteralExpression#type()
	 * @generated
	 */
	EOperation getUnboundedLiteralExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnboundedLiteralExpression#unboundedLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Unbounded Literal Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unbounded Literal Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnboundedLiteralExpression#unboundedLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getUnboundedLiteralExpression__UnboundedLiteralExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ThisExpression <em>This Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>This Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ThisExpression
	 * @generated
	 */
	EClass getThisExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ThisExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ThisExpression#type()
	 * @generated
	 */
	EOperation getThisExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ThisExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ThisExpression#upper()
	 * @generated
	 */
	EOperation getThisExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ThisExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ThisExpression#lower()
	 * @generated
	 */
	EOperation getThisExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ThisExpression#thisExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>This Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>This Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ThisExpression#thisExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getThisExpression__ThisExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ThisExpression#thisExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>This Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>This Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ThisExpression#thisExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getThisExpression__ThisExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ThisExpression#thisExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>This Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>This Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ThisExpression#thisExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getThisExpression__ThisExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression <em>Classification Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Classification Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression
	 * @generated
	 */
	EClass getClassificationExpression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#getReferent()
	 * @see #getClassificationExpression()
	 * @generated
	 */
	EReference getClassificationExpression_Referent();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#isIsDirect <em>Is Direct</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Direct</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#isIsDirect()
	 * @see #getClassificationExpression()
	 * @generated
	 */
	EAttribute getClassificationExpression_IsDirect();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#getTypeName()
	 * @see #getClassificationExpression()
	 * @generated
	 */
	EReference getClassificationExpression_TypeName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#type()
	 * @generated
	 */
	EOperation getClassificationExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#lower()
	 * @generated
	 */
	EOperation getClassificationExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#upper()
	 * @generated
	 */
	EOperation getClassificationExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionIsDirectDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classification Expression Is Direct Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classification Expression Is Direct Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionIsDirectDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassificationExpression__ClassificationExpressionIsDirectDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classification Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classification Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassificationExpression__ClassificationExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classification Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classification Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassificationExpression__ClassificationExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classification Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classification Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassificationExpression__ClassificationExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classification Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classification Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassificationExpression__ClassificationExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionTypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classification Expression Type Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classification Expression Type Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionTypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassificationExpression__ClassificationExpressionTypeName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classification Expression Operand</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classification Expression Operand</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassificationExpression#classificationExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassificationExpression__ClassificationExpressionOperand__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression <em>Super Invocation Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Super Invocation Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression
	 * @generated
	 */
	EClass getSuperInvocationExpression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Target</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#getTarget()
	 * @see #getSuperInvocationExpression()
	 * @generated
	 */
	EReference getSuperInvocationExpression_Target();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#referent()
	 * @generated
	 */
	EOperation getSuperInvocationExpression__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#feature()
	 * @generated
	 */
	EOperation getSuperInvocationExpression__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#context() <em>Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#context()
	 * @generated
	 */
	EOperation getSuperInvocationExpression__Context();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Super Invocation Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Super Invocation Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSuperInvocationExpression__SuperInvocationExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Super Invocation Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Super Invocation Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSuperInvocationExpression__SuperInvocationExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionQualification(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Super Invocation Expression Qualification</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Super Invocation Expression Qualification</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionQualification(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSuperInvocationExpression__SuperInvocationExpressionQualification__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionImplicitTarget(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Super Invocation Expression Implicit Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Super Invocation Expression Implicit Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionImplicitTarget(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSuperInvocationExpression__SuperInvocationExpressionImplicitTarget__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionConstructorCall(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Super Invocation Expression Constructor Call</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Super Invocation Expression Constructor Call</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionConstructorCall(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSuperInvocationExpression__SuperInvocationExpressionConstructorCall__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionDestructorCall(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Super Invocation Expression Destructor Call</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Super Invocation Expression Destructor Call</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionDestructorCall(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSuperInvocationExpression__SuperInvocationExpressionDestructorCall__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionOperation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Super Invocation Expression Operation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Super Invocation Expression Operation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SuperInvocationExpression#superInvocationExpressionOperation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSuperInvocationExpression__SuperInvocationExpressionOperation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression <em>Increment Or Decrement Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Increment Or Decrement Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression
	 * @generated
	 */
	EClass getIncrementOrDecrementExpression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getAssignment <em>Assignment</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Assignment</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getAssignment()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EReference getIncrementOrDecrementExpression_Assignment();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getOperand <em>Operand</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Operand</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getOperand()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EReference getIncrementOrDecrementExpression_Operand();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getExpression()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EReference getIncrementOrDecrementExpression_Expression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getFeature <em>Feature</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Feature</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getFeature()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EReference getIncrementOrDecrementExpression_Feature();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsPrefix <em>Is Prefix</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Prefix</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsPrefix()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EAttribute getIncrementOrDecrementExpression_IsPrefix();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsFeature <em>Is Feature</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Feature</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsFeature()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EAttribute getIncrementOrDecrementExpression_IsFeature();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsIndexed <em>Is Indexed</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Indexed</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsIndexed()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EAttribute getIncrementOrDecrementExpression_IsIndexed();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsDataValueUpdate <em>Is Data Value Update</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Data Value Update</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#isIsDataValueUpdate()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EAttribute getIncrementOrDecrementExpression_IsDataValueUpdate();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getOperator <em>Operator</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Operator</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#getOperator()
	 * @see #getIncrementOrDecrementExpression()
	 * @generated
	 */
	EAttribute getIncrementOrDecrementExpression_Operator();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#type()
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#lower()
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#upper()
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionAssignmentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Assignment Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Assignment Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionAssignmentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionAssignmentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Is Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Is Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionIsFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionIsIndexedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Is Indexed Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Is Indexed Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionIsIndexedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionIsIndexedDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionIsDataValueUpdateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Is Data Value Update Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Is Data Value Update Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionIsDataValueUpdateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionIsDataValueUpdateDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionExpressionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Expression Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Expression Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionExpressionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionExpressionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Operand</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Operand</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionOperand(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionOperand__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Increment Or Decrement Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Increment Or Decrement Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#incrementOrDecrementExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__IncrementOrDecrementExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IncrementOrDecrementExpression#updateAssignments()
	 * @generated
	 */
	EOperation getIncrementOrDecrementExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BooleanLiteralExpression <em>Boolean Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Boolean Literal Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BooleanLiteralExpression
	 * @generated
	 */
	EClass getBooleanLiteralExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.BooleanLiteralExpression#getImage <em>Image</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Image</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BooleanLiteralExpression#getImage()
	 * @see #getBooleanLiteralExpression()
	 * @generated
	 */
	EAttribute getBooleanLiteralExpression_Image();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanLiteralExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanLiteralExpression#type()
	 * @generated
	 */
	EOperation getBooleanLiteralExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BooleanLiteralExpression#booleanLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Boolean Literal Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Boolean Literal Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BooleanLiteralExpression#booleanLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBooleanLiteralExpression__BooleanLiteralExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NamedTuple <em>Named Tuple</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Named Tuple</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedTuple
	 * @generated
	 */
	EClass getNamedTuple();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.NamedTuple#getNamedExpression <em>Named Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Named Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamedTuple#getNamedExpression()
	 * @see #getNamedTuple()
	 * @generated
	 */
	EReference getNamedTuple_NamedExpression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTuple#size() <em>Size</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Size</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTuple#size()
	 * @generated
	 */
	EOperation getNamedTuple__Size();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTuple#inputFor(org.eclipse.emf.common.util.EList) <em>Input For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Input For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTuple#inputFor(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getNamedTuple__InputFor__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTuple#outputFor(org.eclipse.emf.common.util.EList) <em>Output For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTuple#outputFor(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getNamedTuple__OutputFor__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTuple#outputForExpression(org.eclipse.papyrus.uml.alf.Expression) <em>Output For Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Output For Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTuple#outputForExpression(org.eclipse.papyrus.uml.alf.Expression)
	 * @generated
	 */
	EOperation getNamedTuple__OutputForExpression__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamedTuple#namedTupleArgumentNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Named Tuple Argument Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Named Tuple Argument Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamedTuple#namedTupleArgumentNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNamedTuple__NamedTupleArgumentNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NaturalLiteralExpression <em>Natural Literal Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Natural Literal Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NaturalLiteralExpression
	 * @generated
	 */
	EClass getNaturalLiteralExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.NaturalLiteralExpression#getImage <em>Image</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Image</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NaturalLiteralExpression#getImage()
	 * @see #getNaturalLiteralExpression()
	 * @generated
	 */
	EAttribute getNaturalLiteralExpression_Image();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NaturalLiteralExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NaturalLiteralExpression#type()
	 * @generated
	 */
	EOperation getNaturalLiteralExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NaturalLiteralExpression#naturalLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Natural Literal Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Natural Literal Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NaturalLiteralExpression#naturalLiteralExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNaturalLiteralExpression__NaturalLiteralExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceRange <em>Sequence Range</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Range</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange
	 * @generated
	 */
	EClass getSequenceRange();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceRange#getRangeLower <em>Range Lower</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Range Lower</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#getRangeLower()
	 * @see #getSequenceRange()
	 * @generated
	 */
	EReference getSequenceRange_RangeLower();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceRange#getRangeUpper <em>Range Upper</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Range Upper</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#getRangeUpper()
	 * @see #getSequenceRange()
	 * @generated
	 */
	EReference getSequenceRange_RangeUpper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Conforms To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conforms To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSequenceRange__ConformsTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#assignmentsAfter()
	 * @generated
	 */
	EOperation getSequenceRange__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#upper()
	 * @generated
	 */
	EOperation getSequenceRange__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#lower()
	 * @generated
	 */
	EOperation getSequenceRange__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Range Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Range Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceRange__SequenceRangeLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Range Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Range Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceRange__SequenceRangeUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeExpressionMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Range Expression Multiplicity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Range Expression Multiplicity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeExpressionMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceRange__SequenceRangeExpressionMultiplicity__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Range Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Range Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceRange#sequenceRangeAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceRange__SequenceRangeAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide <em>Name Left Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Name Left Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide
	 * @generated
	 */
	EClass getNameLeftHandSide();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Target</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#getTarget()
	 * @see #getNameLeftHandSide()
	 * @generated
	 */
	EReference getNameLeftHandSide_Target();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#getIndex <em>Index</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Index</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#getIndex()
	 * @see #getNameLeftHandSide()
	 * @generated
	 */
	EReference getNameLeftHandSide_Index();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#target() <em>Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#target()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Target();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#index() <em>Index</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Index</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#index()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Index();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#referent() <em>Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#referent()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#parameterReferent() <em>Parameter Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameter Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#parameterReferent()
	 * @generated
	 */
	EOperation getNameLeftHandSide__ParameterReferent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#type()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#upper()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#lower()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#oldAssignment() <em>Old Assignment</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Old Assignment</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#oldAssignment()
	 * @generated
	 */
	EOperation getNameLeftHandSide__OldAssignment();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#feature()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#expression() <em>Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#expression()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#primary() <em>Primary</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Primary</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#primary()
	 * @generated
	 */
	EOperation getNameLeftHandSide__Primary();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#localName() <em>Local Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#localName()
	 * @generated
	 */
	EOperation getNameLeftHandSide__LocalName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Assignment After Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Assignment After Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideAssignmentAfterDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideTargetAssignment(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Target Assignment</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Target Assignment</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideTargetAssignment(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideTargetAssignment__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideTargetResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Target Resolution</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Target Resolution</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideTargetResolution(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideTargetResolution__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideIndexedFeature(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Indexed Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Indexed Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideIndexedFeature(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideIndexedFeature__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideNontemplateTarget(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Name Left Hand Side Nontemplate Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Name Left Hand Side Nontemplate Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NameLeftHandSide#nameLeftHandSideNontemplateTarget(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNameLeftHandSide__NameLeftHandSideNontemplateTarget__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide <em>Effective Left Hand Side</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Effective Left Hand Side</em>'.
	 * @see org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide
	 * @generated
	 */
	EClass getEffectiveLeftHandSide();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#getExpression()
	 * @see #getEffectiveLeftHandSide()
	 * @generated
	 */
	EReference getEffectiveLeftHandSide_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#target() <em>Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#target()
	 * @generated
	 */
	EOperation getEffectiveLeftHandSide__Target();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#index() <em>Index</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Index</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#index()
	 * @generated
	 */
	EOperation getEffectiveLeftHandSide__Index();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#feature() <em>Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#feature()
	 * @generated
	 */
	EOperation getEffectiveLeftHandSide__Feature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#primary() <em>Primary</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Primary</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#primary()
	 * @generated
	 */
	EOperation getEffectiveLeftHandSide__Primary();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#expression() <em>Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EffectiveLeftHandSide#expression()
	 * @generated
	 */
	EOperation getEffectiveLeftHandSide__Expression();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression <em>Sequence Reduction Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Reduction Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression
	 * @generated
	 */
	EClass getSequenceReductionExpression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#getReferent()
	 * @see #getSequenceReductionExpression()
	 * @generated
	 */
	EReference getSequenceReductionExpression_Referent();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#isIsOrdered <em>Is Ordered</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Ordered</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#isIsOrdered()
	 * @see #getSequenceReductionExpression()
	 * @generated
	 */
	EAttribute getSequenceReductionExpression_IsOrdered();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#getPrimary <em>Primary</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Primary</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#getPrimary()
	 * @see #getSequenceReductionExpression()
	 * @generated
	 */
	EReference getSequenceReductionExpression_Primary();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#getBehaviorName <em>Behavior Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Behavior Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#getBehaviorName()
	 * @see #getSequenceReductionExpression()
	 * @generated
	 */
	EReference getSequenceReductionExpression_BehaviorName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#type()
	 * @generated
	 */
	EOperation getSequenceReductionExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#upper()
	 * @generated
	 */
	EOperation getSequenceReductionExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#lower()
	 * @generated
	 */
	EOperation getSequenceReductionExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Reduction Expression Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Reduction Expression Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceReductionExpression__SequenceReductionExpressionReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Reduction Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Reduction Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceReductionExpression__SequenceReductionExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Reduction Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Reduction Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceReductionExpression__SequenceReductionExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Reduction Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Reduction Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceReductionExpression__SequenceReductionExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionBehavior(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Reduction Expression Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Reduction Expression Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionBehavior(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceReductionExpression__SequenceReductionExpressionBehavior__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionBehaviorParameters(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Reduction Expression Behavior Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Reduction Expression Behavior Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionBehaviorParameters(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceReductionExpression__SequenceReductionExpressionBehaviorParameters__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Reduction Expression Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Reduction Expression Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#sequenceReductionExpressionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceReductionExpression__SequenceReductionExpressionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceReductionExpression#updateAssignments() <em>Update Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Update Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceReductionExpression#updateAssignments()
	 * @generated
	 */
	EOperation getSequenceReductionExpression__UpdateAssignments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList <em>Sequence Expression List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Sequence Expression List</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList
	 * @generated
	 */
	EClass getSequenceExpressionList();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#getElement <em>Element</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Element</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#getElement()
	 * @see #getSequenceExpressionList()
	 * @generated
	 */
	EReference getSequenceExpressionList_Element();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference) <em>Conforms To</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Conforms To</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#conformsTo(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSequenceExpressionList__ConformsTo__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getSequenceExpressionList__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#assignmentsAfter()
	 * @generated
	 */
	EOperation getSequenceExpressionList__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#lower()
	 * @generated
	 */
	EOperation getSequenceExpressionList__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#upper()
	 * @generated
	 */
	EOperation getSequenceExpressionList__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#sequenceExpressionListLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expression List Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expression List Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#sequenceExpressionListLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpressionList__SequenceExpressionListLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SequenceExpressionList#sequenceExpressionListUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Sequence Expression List Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Sequence Expression List Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SequenceExpressionList#sequenceExpressionListUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSequenceExpressionList__SequenceExpressionListUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.RelationalExpression <em>Relational Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Relational Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression
	 * @generated
	 */
	EClass getRelationalExpression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#isIsUnlimitedNatural <em>Is Unlimited Natural</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Unlimited Natural</em>'.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#isIsUnlimitedNatural()
	 * @see #getRelationalExpression()
	 * @generated
	 */
	EAttribute getRelationalExpression_IsUnlimitedNatural();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#type()
	 * @generated
	 */
	EOperation getRelationalExpression__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#lower()
	 * @generated
	 */
	EOperation getRelationalExpression__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#upper()
	 * @generated
	 */
	EOperation getRelationalExpression__Upper();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionIsUnlimitedNaturalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Relational Expression Is Unlimited Natural Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Relational Expression Is Unlimited Natural Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionIsUnlimitedNaturalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getRelationalExpression__RelationalExpressionIsUnlimitedNaturalDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Relational Expression Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Relational Expression Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getRelationalExpression__RelationalExpressionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Relational Expression Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Relational Expression Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getRelationalExpression__RelationalExpressionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Relational Expression Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Relational Expression Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getRelationalExpression__RelationalExpressionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionOperandTypes(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Relational Expression Operand Types</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Relational Expression Operand Types</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.RelationalExpression#relationalExpressionOperandTypes(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getRelationalExpression__RelationalExpressionOperandTypes__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement <em>Local Name Declaration Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Local Name Declaration Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement
	 * @generated
	 */
	EClass getLocalNameDeclarationStatement();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getName()
	 * @see #getLocalNameDeclarationStatement()
	 * @generated
	 */
	EAttribute getLocalNameDeclarationStatement_Name();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getExpression()
	 * @see #getLocalNameDeclarationStatement()
	 * @generated
	 */
	EReference getLocalNameDeclarationStatement_Expression();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#isHasMultiplicity <em>Has Multiplicity</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Has Multiplicity</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#isHasMultiplicity()
	 * @see #getLocalNameDeclarationStatement()
	 * @generated
	 */
	EAttribute getLocalNameDeclarationStatement_HasMultiplicity();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getTypeName()
	 * @see #getLocalNameDeclarationStatement()
	 * @generated
	 */
	EReference getLocalNameDeclarationStatement_TypeName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#getType()
	 * @see #getLocalNameDeclarationStatement()
	 * @generated
	 */
	EReference getLocalNameDeclarationStatement_Type();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#isIsAny <em>Is Any</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Any</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#isIsAny()
	 * @see #getLocalNameDeclarationStatement()
	 * @generated
	 */
	EAttribute getLocalNameDeclarationStatement_IsAny();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#actualName()
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__ActualName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Local Name Declaration Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name Declaration Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__LocalNameDeclarationStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Local Name Declaration Statement Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name Declaration Statement Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__LocalNameDeclarationStatementType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Local Name Declaration Statement Local Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name Declaration Statement Local Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__LocalNameDeclarationStatementLocalName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Local Name Declaration Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name Declaration Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__LocalNameDeclarationStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementExpressionMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Local Name Declaration Statement Expression Multiplicity</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name Declaration Statement Expression Multiplicity</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementExpressionMultiplicity(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__LocalNameDeclarationStatementExpressionMultiplicity__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Local Name Declaration Statement Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Local Name Declaration Statement Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#localNameDeclarationStatementTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__LocalNameDeclarationStatementTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#typeCached() <em>Type Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#typeCached()
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__TypeCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LocalNameDeclarationStatement#type()
	 * @generated
	 */
	EOperation getLocalNameDeclarationStatement__Type();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration <em>Assignable Local Name Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Assignable Local Name Declaration</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration
	 * @generated
	 */
	EClass getAssignableLocalNameDeclaration();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#getLocalNameDeclaration <em>Local Name Declaration</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Local Name Declaration</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#getLocalNameDeclaration()
	 * @see #getAssignableLocalNameDeclaration()
	 * @generated
	 */
	EReference getAssignableLocalNameDeclaration_LocalNameDeclaration();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#type()
	 * @generated
	 */
	EOperation getAssignableLocalNameDeclaration__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#lower()
	 * @generated
	 */
	EOperation getAssignableLocalNameDeclaration__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssignableLocalNameDeclaration#upper()
	 * @generated
	 */
	EOperation getAssignableLocalNameDeclaration__Upper();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.Statement <em>Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Statement
	 * @generated
	 */
	EClass getStatement();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Statement#getAssignmentBefore <em>Assignment Before</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment Before</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Statement#getAssignmentBefore()
	 * @see #getStatement()
	 * @generated
	 */
	EReference getStatement_AssignmentBefore();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Statement#getAssignmentAfter <em>Assignment After</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment After</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Statement#getAssignmentAfter()
	 * @see #getStatement()
	 * @generated
	 */
	EReference getStatement_AssignmentAfter();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.Statement#getEnclosingStatement <em>Enclosing Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Enclosing Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Statement#getEnclosingStatement()
	 * @see #getStatement()
	 * @generated
	 */
	EReference getStatement_EnclosingStatement();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.Statement#isIsIsolated <em>Is Isolated</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Isolated</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Statement#isIsIsolated()
	 * @see #getStatement()
	 * @generated
	 */
	EAttribute getStatement_IsIsolated();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#enclosingLoopStatement() <em>Enclosing Loop Statement</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enclosing Loop Statement</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#enclosingLoopStatement()
	 * @generated
	 */
	EOperation getStatement__EnclosingLoopStatement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation)
	 * @generated
	 */
	EOperation getStatement__AnnotationAllowed__Annotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#Statement_annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation) <em>Statement annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Statement annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#Statement_annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation)
	 * @generated
	 */
	EOperation getStatement__Statement_annotationAllowed__Annotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#annotation() <em>Annotation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#annotation()
	 * @generated
	 */
	EOperation getStatement__Annotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#hasAnnotation(java.lang.String) <em>Has Annotation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Has Annotation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#hasAnnotation(java.lang.String)
	 * @generated
	 */
	EOperation getStatement__HasAnnotation__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#newAssignments() <em>New Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>New Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#newAssignments()
	 * @generated
	 */
	EOperation getStatement__NewAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#resolve(java.lang.String) <em>Resolve</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#resolve(java.lang.String)
	 * @generated
	 */
	EOperation getStatement__Resolve__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#assignmentsAfter()
	 * @generated
	 */
	EOperation getStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#Statement_assignmentsAfter() <em>Statement assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Statement assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#Statement_assignmentsAfter()
	 * @generated
	 */
	EOperation getStatement__Statement_assignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#assignmentsAfterCached() <em>Assignments After Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#assignmentsAfterCached()
	 * @generated
	 */
	EOperation getStatement__AssignmentsAfterCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#mergeAssignments(org.eclipse.emf.common.util.EList) <em>Merge Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Merge Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#mergeAssignments(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getStatement__MergeAssignments__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#merge(java.lang.String, org.eclipse.emf.common.util.EList) <em>Merge</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Merge</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#merge(java.lang.String, org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getStatement__Merge__String_EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#statementAnnotationsAllowed(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Statement Annotations Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Statement Annotations Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#statementAnnotationsAllowed(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStatement__StatementAnnotationsAllowed__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#statementUniqueAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Statement Unique Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Statement Unique Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#statementUniqueAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStatement__StatementUniqueAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Statement#statementIsIsolatedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Statement Is Isolated Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Statement Is Isolated Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Statement#statementIsIsolatedDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStatement__StatementIsIsolatedDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.Annotation <em>Annotation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Annotation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Annotation
	 * @generated
	 */
	EClass getAnnotation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.Annotation#getText <em>Text</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Text</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Annotation#getText()
	 * @see #getAnnotation()
	 * @generated
	 */
	EAttribute getAnnotation_Text();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.Annotation#getIdentifier <em>Identifier</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Identifier</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Annotation#getIdentifier()
	 * @see #getAnnotation()
	 * @generated
	 */
	EAttribute getAnnotation_Identifier();

	/**
	 * Returns the meta object for the attribute list '{@link org.eclipse.papyrus.uml.alf.Annotation#getArgument <em>Argument</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute list '<em>Argument</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Annotation#getArgument()
	 * @see #getAnnotation()
	 * @generated
	 */
	EAttribute getAnnotation_Argument();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Annotation#identifier() <em>Identifier</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Identifier</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Annotation#identifier()
	 * @generated
	 */
	EOperation getAnnotation__Identifier();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Annotation#arguments() <em>Arguments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Arguments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Annotation#arguments()
	 * @generated
	 */
	EOperation getAnnotation__Arguments();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.QualifiedNameList <em>Qualified Name List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Qualified Name List</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedNameList
	 * @generated
	 */
	EClass getQualifiedNameList();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.QualifiedNameList#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedNameList#getName()
	 * @see #getQualifiedNameList()
	 * @generated
	 */
	EReference getQualifiedNameList_Name();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.QualifiedNameList#currentScope() <em>Current Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Current Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.QualifiedNameList#currentScope()
	 * @generated
	 */
	EOperation getQualifiedNameList__CurrentScope();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NonFinalClause <em>Non Final Clause</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Non Final Clause</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause
	 * @generated
	 */
	EClass getNonFinalClause();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#getCondition <em>Condition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Condition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#getCondition()
	 * @see #getNonFinalClause()
	 * @generated
	 */
	EReference getNonFinalClause_Condition();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#getBody <em>Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Body</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#getBody()
	 * @see #getNonFinalClause()
	 * @generated
	 */
	EReference getNonFinalClause_Body();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getNonFinalClause__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#assignmentsBefore() <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#assignmentsBefore()
	 * @generated
	 */
	EOperation getNonFinalClause__AssignmentsBefore();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#assignmentsAfter()
	 * @generated
	 */
	EOperation getNonFinalClause__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#nonFinalClauseAssignmentsBeforeBody(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Non Final Clause Assignments Before Body</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Non Final Clause Assignments Before Body</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#nonFinalClauseAssignmentsBeforeBody(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNonFinalClause__NonFinalClauseAssignmentsBeforeBody__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#nonFinalClauseConditionLocalNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Non Final Clause Condition Local Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Non Final Clause Condition Local Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#nonFinalClauseConditionLocalNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNonFinalClause__NonFinalClauseConditionLocalNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NonFinalClause#nonFinalClauseConditionType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Non Final Clause Condition Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Non Final Clause Condition Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NonFinalClause#nonFinalClauseConditionType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNonFinalClause__NonFinalClauseConditionType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.Block <em>Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Block</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Block
	 * @generated
	 */
	EClass getBlock();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.Block#getStatement <em>Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Block#getStatement()
	 * @see #getBlock()
	 * @generated
	 */
	EReference getBlock_Statement();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Block#getAssignmentAfter <em>Assignment After</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment After</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Block#getAssignmentAfter()
	 * @see #getBlock()
	 * @generated
	 */
	EReference getBlock_AssignmentAfter();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.Block#getAssignmentBefore <em>Assignment Before</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment Before</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Block#getAssignmentBefore()
	 * @see #getBlock()
	 * @generated
	 */
	EReference getBlock_AssignmentBefore();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Block#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Block#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getBlock__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Block#newAssignments() <em>New Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>New Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Block#newAssignments()
	 * @generated
	 */
	EOperation getBlock__NewAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Block#blockAssignmentsBeforeStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Assignments Before Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Assignments Before Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Block#blockAssignmentsBeforeStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlock__BlockAssignmentsBeforeStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Block#blockAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Block#blockAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlock__BlockAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Block#blockAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Assignment After Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Assignment After Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Block#blockAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlock__BlockAssignmentAfterDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BlockStatement <em>Block Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Block Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement
	 * @generated
	 */
	EClass getBlockStatement();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.BlockStatement#getBlock <em>Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Block</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#getBlock()
	 * @see #getBlockStatement()
	 * @generated
	 */
	EReference getBlockStatement_Block();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.BlockStatement#isIsParallel <em>Is Parallel</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Parallel</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#isIsParallel()
	 * @see #getBlockStatement()
	 * @generated
	 */
	EAttribute getBlockStatement_IsParallel();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BlockStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getBlockStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementParallelAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Statement Parallel Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Statement Parallel Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementParallelAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlockStatement__BlockStatementParallelAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlockStatement__BlockStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlockStatement__BlockStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Statement Enclosed Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Statement Enclosed Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlockStatement__BlockStatementEnclosedStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementIsParallelDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Block Statement Is Parallel Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Block Statement Is Parallel Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#blockStatementIsParallelDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBlockStatement__BlockStatementIsParallelDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BlockStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BlockStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation)
	 * @generated
	 */
	EOperation getBlockStatement__AnnotationAllowed__Annotation();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.DoStatement <em>Do Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Do Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement
	 * @generated
	 */
	EClass getDoStatement();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.DoStatement#getCondition <em>Condition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Condition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#getCondition()
	 * @see #getDoStatement()
	 * @generated
	 */
	EReference getDoStatement_Condition();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.DoStatement#getBody <em>Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Body</em>'.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#getBody()
	 * @see #getDoStatement()
	 * @generated
	 */
	EReference getDoStatement_Body();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DoStatement#enclosingLoopStatement() <em>Enclosing Loop Statement</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enclosing Loop Statement</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#enclosingLoopStatement()
	 * @generated
	 */
	EOperation getDoStatement__EnclosingLoopStatement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DoStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getDoStatement__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DoStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getDoStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DoStatement#doStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Do Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Do Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#doStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getDoStatement__DoStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DoStatement#doStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Do Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Do Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#doStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getDoStatement__DoStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DoStatement#doStatementCondition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Do Statement Condition</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Do Statement Condition</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#doStatementCondition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getDoStatement__DoStatementCondition__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DoStatement#doStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Do Statement Enclosed Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Do Statement Enclosed Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DoStatement#doStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getDoStatement__DoStatementEnclosedStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ConcurrentClauses <em>Concurrent Clauses</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Concurrent Clauses</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ConcurrentClauses
	 * @generated
	 */
	EClass getConcurrentClauses();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.ConcurrentClauses#getClause <em>Clause</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Clause</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ConcurrentClauses#getClause()
	 * @see #getConcurrentClauses()
	 * @generated
	 */
	EReference getConcurrentClauses_Clause();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConcurrentClauses#concurrentClausesAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Concurrent Clauses Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Concurrent Clauses Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConcurrentClauses#concurrentClausesAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConcurrentClauses__ConcurrentClausesAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ConcurrentClauses#concurrentClausesConditionAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Concurrent Clauses Condition Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Concurrent Clauses Condition Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ConcurrentClauses#concurrentClausesConditionAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getConcurrentClauses__ConcurrentClausesConditionAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BreakStatement <em>Break Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Break Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BreakStatement
	 * @generated
	 */
	EClass getBreakStatement();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.BreakStatement#getTarget <em>Target</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Target</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BreakStatement#getTarget()
	 * @see #getBreakStatement()
	 * @generated
	 */
	EReference getBreakStatement_Target();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BreakStatement#breakStatementTargetDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Break Statement Target Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Break Statement Target Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BreakStatement#breakStatementTargetDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBreakStatement__BreakStatementTargetDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BreakStatement#breakStatementNonparallelTarget(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Break Statement Nonparallel Target</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Break Statement Nonparallel Target</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BreakStatement#breakStatementNonparallelTarget(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getBreakStatement__BreakStatementNonparallelTarget__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BreakStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BreakStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation)
	 * @generated
	 */
	EOperation getBreakStatement__AnnotationAllowed__Annotation();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ExpressionStatement <em>Expression Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Expression Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionStatement
	 * @generated
	 */
	EClass getExpressionStatement();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ExpressionStatement#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionStatement#getExpression()
	 * @see #getExpressionStatement()
	 * @generated
	 */
	EReference getExpressionStatement_Expression();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getExpressionStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionStatement#expressionStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Expression Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionStatement#expressionStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getExpressionStatement__ExpressionStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ExpressionStatement#expressionStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Expression Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Expression Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ExpressionStatement#expressionStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getExpressionStatement__ExpressionStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement <em>Classify Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Classify Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement
	 * @generated
	 */
	EClass getClassifyStatement();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#getExpression()
	 * @see #getClassifyStatement()
	 * @generated
	 */
	EReference getClassifyStatement_Expression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#getFromList <em>From List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>From List</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#getFromList()
	 * @see #getClassifyStatement()
	 * @generated
	 */
	EReference getClassifyStatement_FromList();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#getToList <em>To List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>To List</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#getToList()
	 * @see #getClassifyStatement()
	 * @generated
	 */
	EReference getClassifyStatement_ToList();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#getFromClass <em>From Class</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>From Class</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#getFromClass()
	 * @see #getClassifyStatement()
	 * @generated
	 */
	EReference getClassifyStatement_FromClass();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#getToClass <em>To Class</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>To Class</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#getToClass()
	 * @see #getClassifyStatement()
	 * @generated
	 */
	EReference getClassifyStatement_ToClass();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#isIsReclassifyAll <em>Is Reclassify All</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Reclassify All</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#isIsReclassifyAll()
	 * @see #getClassifyStatement()
	 * @generated
	 */
	EAttribute getClassifyStatement_IsReclassifyAll();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#assignmentAfter() <em>Assignment After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignment After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#assignmentAfter()
	 * @generated
	 */
	EOperation getClassifyStatement__AssignmentAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classify Statement Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classify Statement Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifyStatement__ClassifyStatementExpression__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementClassNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classify Statement Class Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classify Statement Class Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementClassNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifyStatement__ClassifyStatementClassNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementClasses(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classify Statement Classes</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classify Statement Classes</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementClasses(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifyStatement__ClassifyStatementClasses__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classify Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classify Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifyStatement__ClassifyStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classify Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classify Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifyStatement__ClassifyStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementFromClassDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classify Statement From Class Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classify Statement From Class Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementFromClassDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifyStatement__ClassifyStatementFromClassDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementToClassDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classify Statement To Class Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classify Statement To Class Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifyStatement#classifyStatementToClassDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifyStatement__ClassifyStatementToClassDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ForStatement <em>For Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>For Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement
	 * @generated
	 */
	EClass getForStatement();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ForStatement#getBody <em>Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Body</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#getBody()
	 * @see #getForStatement()
	 * @generated
	 */
	EReference getForStatement_Body();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.ForStatement#getVariableDefinition <em>Variable Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Variable Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#getVariableDefinition()
	 * @see #getForStatement()
	 * @generated
	 */
	EReference getForStatement_VariableDefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ForStatement#isIsParallel <em>Is Parallel</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Parallel</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#isIsParallel()
	 * @see #getForStatement()
	 * @generated
	 */
	EAttribute getForStatement_IsParallel();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#enclosingLoopStatement() <em>Enclosing Loop Statement</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enclosing Loop Statement</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#enclosingLoopStatement()
	 * @generated
	 */
	EOperation getForStatement__EnclosingLoopStatement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getForStatement__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#assignmentsAfterVariables() <em>Assignments After Variables</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After Variables</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#assignmentsAfterVariables()
	 * @generated
	 */
	EOperation getForStatement__AssignmentsAfterVariables();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getForStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#parallelNames() <em>Parallel Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parallel Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#parallelNames()
	 * @generated
	 */
	EOperation getForStatement__ParallelNames();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementParallelAnnotationNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Parallel Annotation Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Parallel Annotation Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementParallelAnnotationNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementParallelAnnotationNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementParallelAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Parallel Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Parallel Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementParallelAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementParallelAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementVariableDefinitions(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Variable Definitions</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Variable Definitions</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementVariableDefinitions(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementVariableDefinitions__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementLoopVariables(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Loop Variables</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Loop Variables</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementLoopVariables(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementLoopVariables__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementIsParallelDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Is Parallel Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Is Parallel Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementIsParallelDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementIsParallelDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#forStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>For Statement Enclosed Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>For Statement Enclosed Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#forStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getForStatement__ForStatementEnclosedStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ForStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ForStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation)
	 * @generated
	 */
	EOperation getForStatement__AnnotationAllowed__Annotation();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition <em>Loop Variable Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Loop Variable Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition
	 * @generated
	 */
	EClass getLoopVariableDefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getVariable <em>Variable</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Variable</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getVariable()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EAttribute getLoopVariableDefinition_Variable();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getExpression1 <em>Expression1</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression1</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getExpression1()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EReference getLoopVariableDefinition_Expression1();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getExpression2 <em>Expression2</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression2</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getExpression2()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EReference getLoopVariableDefinition_Expression2();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getTypeName()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EReference getLoopVariableDefinition_TypeName();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isTypeIsInferred <em>Type Is Inferred</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Type Is Inferred</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isTypeIsInferred()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EAttribute getLoopVariableDefinition_TypeIsInferred();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isIsCollectionConversion <em>Is Collection Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Collection Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isIsCollectionConversion()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EAttribute getLoopVariableDefinition_IsCollectionConversion();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getType <em>Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Type</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getType()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EReference getLoopVariableDefinition_Type();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isIsFirst <em>Is First</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is First</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isIsFirst()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EAttribute getLoopVariableDefinition_IsFirst();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getAssignmentBefore <em>Assignment Before</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment Before</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getAssignmentBefore()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EReference getLoopVariableDefinition_AssignmentBefore();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getAssignmentAfter <em>Assignment After</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Assignment After</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#getAssignmentAfter()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EReference getLoopVariableDefinition_AssignmentAfter();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isIsAny <em>Is Any</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Any</em>'.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#isIsAny()
	 * @see #getLoopVariableDefinition()
	 * @generated
	 */
	EAttribute getLoopVariableDefinition_IsAny();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#actualName()
	 * @generated
	 */
	EOperation getLoopVariableDefinition__ActualName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#newAssignments() <em>New Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>New Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#newAssignments()
	 * @generated
	 */
	EOperation getLoopVariableDefinition__NewAssignments();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Assignment After Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Assignment After Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionAssignmentAfterDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionAssignmentAfterDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionRangeExpressions(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Range Expressions</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Range Expressions</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionRangeExpressions(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionRangeExpressions__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionTypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Type Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Type Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionTypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionTypeName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionDeclaredType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Declared Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Declared Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionDeclaredType(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionDeclaredType__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Is Collection Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Is Collection Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionIsCollectionConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionVariable(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Loop Variable Definition Variable</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Loop Variable Definition Variable</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.LoopVariableDefinition#loopVariableDefinitionVariable(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getLoopVariableDefinition__LoopVariableDefinitionVariable__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.IfStatement <em>If Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>If Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement
	 * @generated
	 */
	EClass getIfStatement();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.IfStatement#getNonFinalClauses <em>Non Final Clauses</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Non Final Clauses</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#getNonFinalClauses()
	 * @see #getIfStatement()
	 * @generated
	 */
	EReference getIfStatement_NonFinalClauses();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.IfStatement#getFinalClause <em>Final Clause</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Final Clause</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#getFinalClause()
	 * @see #getIfStatement()
	 * @generated
	 */
	EReference getIfStatement_FinalClause();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.IfStatement#isIsAssured <em>Is Assured</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Assured</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#isIsAssured()
	 * @see #getIfStatement()
	 * @generated
	 */
	EAttribute getIfStatement_IsAssured();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.IfStatement#isIsDeterminate <em>Is Determinate</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Determinate</em>'.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#isIsDeterminate()
	 * @see #getIfStatement()
	 * @generated
	 */
	EAttribute getIfStatement_IsDeterminate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IfStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getIfStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IfStatement#ifStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>If Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>If Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#ifStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIfStatement__IfStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IfStatement#ifStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>If Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>If Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#ifStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIfStatement__IfStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IfStatement#ifStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>If Statement Enclosed Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>If Statement Enclosed Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#ifStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIfStatement__IfStatementEnclosedStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IfStatement#ifStatementIsAssuredDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>If Statement Is Assured Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>If Statement Is Assured Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#ifStatementIsAssuredDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIfStatement__IfStatementIsAssuredDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IfStatement#ifStatementIsDeterminateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>If Statement Is Determinate Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>If Statement Is Determinate Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#ifStatementIsDeterminateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getIfStatement__IfStatementIsDeterminateDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.IfStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.IfStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation)
	 * @generated
	 */
	EOperation getIfStatement__AnnotationAllowed__Annotation();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SwitchStatement <em>Switch Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Switch Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement
	 * @generated
	 */
	EClass getSwitchStatement();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#getNonDefaultClause <em>Non Default Clause</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Non Default Clause</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#getNonDefaultClause()
	 * @see #getSwitchStatement()
	 * @generated
	 */
	EReference getSwitchStatement_NonDefaultClause();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#getExpression()
	 * @see #getSwitchStatement()
	 * @generated
	 */
	EReference getSwitchStatement_Expression();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#getDefaultClause <em>Default Clause</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Default Clause</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#getDefaultClause()
	 * @see #getSwitchStatement()
	 * @generated
	 */
	EReference getSwitchStatement_DefaultClause();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#isIsAssured <em>Is Assured</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Assured</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#isIsAssured()
	 * @see #getSwitchStatement()
	 * @generated
	 */
	EAttribute getSwitchStatement_IsAssured();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#isIsDeterminate <em>Is Determinate</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Determinate</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#isIsDeterminate()
	 * @see #getSwitchStatement()
	 * @generated
	 */
	EAttribute getSwitchStatement_IsDeterminate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getSwitchStatement__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getSwitchStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementCaseAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Case Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Case Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementCaseAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementCaseAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Expression</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Expression</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementExpression(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementExpression__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Enclosed Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Enclosed Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementEnclosedStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementIsDeterminateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Is Determinate Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Is Determinate Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementIsDeterminateDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementIsDeterminateDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementIsAssuredDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Statement Is Assured Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Statement Is Assured Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#switchStatementIsAssuredDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchStatement__SwitchStatementIsAssuredDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchStatement#annotationAllowed(org.eclipse.papyrus.uml.alf.Annotation)
	 * @generated
	 */
	EOperation getSwitchStatement__AnnotationAllowed__Annotation();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SwitchClause <em>Switch Clause</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Switch Clause</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause
	 * @generated
	 */
	EClass getSwitchClause();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.SwitchClause#getCase <em>Case</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Case</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#getCase()
	 * @see #getSwitchClause()
	 * @generated
	 */
	EReference getSwitchClause_Case();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.SwitchClause#getBlock <em>Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Block</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#getBlock()
	 * @see #getSwitchClause()
	 * @generated
	 */
	EReference getSwitchClause_Block();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchClause#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getSwitchClause__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchClause#assignmentsBefore() <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#assignmentsBefore()
	 * @generated
	 */
	EOperation getSwitchClause__AssignmentsBefore();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchClause#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#assignmentsAfter()
	 * @generated
	 */
	EOperation getSwitchClause__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchClause#switchClauseAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Clause Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Clause Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#switchClauseAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchClause__SwitchClauseAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchClause#switchClauseCaseLocalNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Clause Case Local Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Clause Case Local Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#switchClauseCaseLocalNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchClause__SwitchClauseCaseLocalNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SwitchClause#switchClauseCases(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Switch Clause Cases</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Switch Clause Cases</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SwitchClause#switchClauseCases(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSwitchClause__SwitchClauseCases__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.WhileStatement <em>While Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>While Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement
	 * @generated
	 */
	EClass getWhileStatement();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.WhileStatement#getBody <em>Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Body</em>'.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#getBody()
	 * @see #getWhileStatement()
	 * @generated
	 */
	EReference getWhileStatement_Body();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.WhileStatement#getCondition <em>Condition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Condition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#getCondition()
	 * @see #getWhileStatement()
	 * @generated
	 */
	EReference getWhileStatement_Condition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.WhileStatement#enclosingLoopStatement() <em>Enclosing Loop Statement</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enclosing Loop Statement</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#enclosingLoopStatement()
	 * @generated
	 */
	EOperation getWhileStatement__EnclosingLoopStatement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.WhileStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getWhileStatement__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.WhileStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getWhileStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>While Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>While Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getWhileStatement__WhileStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>While Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>While Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getWhileStatement__WhileStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementCondition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>While Statement Condition</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>While Statement Condition</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementCondition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getWhileStatement__WhileStatementCondition__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>While Statement Enclosed Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>While Statement Enclosed Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.WhileStatement#whileStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getWhileStatement__WhileStatementEnclosedStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ReturnStatement <em>Return Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Return Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ReturnStatement
	 * @generated
	 */
	EClass getReturnStatement();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ReturnStatement#getExpression <em>Expression</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Expression</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ReturnStatement#getExpression()
	 * @see #getReturnStatement()
	 * @generated
	 */
	EReference getReturnStatement_Expression();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ReturnStatement#getBehavior <em>Behavior</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Behavior</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ReturnStatement#getBehavior()
	 * @see #getReturnStatement()
	 * @generated
	 */
	EReference getReturnStatement_Behavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReturnStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReturnStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getReturnStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReturnStatement#returnStatementContext(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Return Statement Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Statement Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReturnStatement#returnStatementContext(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getReturnStatement__ReturnStatementContext__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReturnStatement#returnStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Return Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReturnStatement#returnStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getReturnStatement__ReturnStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReturnStatement#returnStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Return Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReturnStatement#returnStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getReturnStatement__ReturnStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.InLineStatement <em>In Line Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>In Line Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InLineStatement
	 * @generated
	 */
	EClass getInLineStatement();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InLineStatement#getLanguage <em>Language</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Language</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InLineStatement#getLanguage()
	 * @see #getInLineStatement()
	 * @generated
	 */
	EAttribute getInLineStatement_Language();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.InLineStatement#getCode <em>Code</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Code</em>'.
	 * @see org.eclipse.papyrus.uml.alf.InLineStatement#getCode()
	 * @see #getInLineStatement()
	 * @generated
	 */
	EAttribute getInLineStatement_Code();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.InLineStatement#inLineStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>In Line Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>In Line Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.InLineStatement#inLineStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getInLineStatement__InLineStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AcceptStatement <em>Accept Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Accept Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement
	 * @generated
	 */
	EClass getAcceptStatement();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#getAcceptBlock <em>Accept Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Accept Block</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#getAcceptBlock()
	 * @see #getAcceptStatement()
	 * @generated
	 */
	EReference getAcceptStatement_AcceptBlock();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#getBehavior <em>Behavior</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Behavior</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#getBehavior()
	 * @see #getAcceptStatement()
	 * @generated
	 */
	EReference getAcceptStatement_Behavior();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#isIsSimple <em>Is Simple</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Simple</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#isIsSimple()
	 * @see #getAcceptStatement()
	 * @generated
	 */
	EAttribute getAcceptStatement_IsSimple();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#assignmentsAfter() <em>Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#assignmentsAfter()
	 * @generated
	 */
	EOperation getAcceptStatement__AssignmentsAfter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#effectiveBehavior() <em>Effective Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Effective Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#effectiveBehavior()
	 * @generated
	 */
	EOperation getAcceptStatement__EffectiveBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#effectiveBehavior_() <em>Effective Behavior </em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Effective Behavior </em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#effectiveBehavior_()
	 * @generated
	 */
	EOperation getAcceptStatement__EffectiveBehavior_();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementContext(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementContext(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementContext__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementSignals(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Signals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Signals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementSignals(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementSignals__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#receivedSignals(org.eclipse.papyrus.uml.alf.ElementReference) <em>Received Signals</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Received Signals</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#receivedSignals(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getAcceptStatement__ReceivedSignals__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#receivedSignals_(org.eclipse.papyrus.uml.alf.ElementReference) <em>Received Signals </em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Received Signals </em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#receivedSignals_(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getAcceptStatement__ReceivedSignals___ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementSimpleAcceptLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Simple Accept Local Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Simple Accept Local Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementSimpleAcceptLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementSimpleAcceptLocalName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementCompoundAcceptLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Compound Accept Local Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Compound Accept Local Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementCompoundAcceptLocalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementCompoundAcceptLocalName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementAssignmentsBefore(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementAssignmentsBefore__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementNewAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement New Assignments</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement New Assignments</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementNewAssignments(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementNewAssignments__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementIsSimpleDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Is Simple Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Is Simple Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementIsSimpleDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementIsSimpleDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Statement Enclosed Statements</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Statement Enclosed Statements</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptStatement#acceptStatementEnclosedStatements(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptStatement__AcceptStatementEnclosedStatements__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AcceptBlock <em>Accept Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Accept Block</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock
	 * @generated
	 */
	EClass getAcceptBlock();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#getName()
	 * @see #getAcceptBlock()
	 * @generated
	 */
	EAttribute getAcceptBlock_Name();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#getBlock <em>Block</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Block</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#getBlock()
	 * @see #getAcceptBlock()
	 * @generated
	 */
	EReference getAcceptBlock_Block();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#getSignalNames <em>Signal Names</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Signal Names</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#getSignalNames()
	 * @see #getAcceptBlock()
	 * @generated
	 */
	EReference getAcceptBlock_SignalNames();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#getSignal <em>Signal</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Signal</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#getSignal()
	 * @see #getAcceptBlock()
	 * @generated
	 */
	EReference getAcceptBlock_Signal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#actualName()
	 * @generated
	 */
	EOperation getAcceptBlock__ActualName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getAcceptBlock__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#acceptBlockSignalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Block Signal Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Block Signal Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#acceptBlockSignalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptBlock__AcceptBlockSignalDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AcceptBlock#acceptBlockSignalNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Accept Block Signal Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Accept Block Signal Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AcceptBlock#acceptBlockSignalNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAcceptBlock__AcceptBlockSignalNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.EmptyStatement <em>Empty Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Empty Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.EmptyStatement
	 * @generated
	 */
	EClass getEmptyStatement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EmptyStatement#emptyStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Empty Statement Assignments After</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Empty Statement Assignments After</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EmptyStatement#emptyStatementAssignmentsAfter(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getEmptyStatement__EmptyStatementAssignmentsAfter__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ModelNamespace <em>Model Namespace</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Model Namespace</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace
	 * @generated
	 */
	EClass getModelNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#context() <em>Context</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Context</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#context()
	 * @generated
	 */
	EOperation getModelNamespace__Context();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#outerScope() <em>Outer Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Outer Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#outerScope()
	 * @generated
	 */
	EOperation getModelNamespace__OuterScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#modelScope() <em>Model Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#modelScope()
	 * @generated
	 */
	EOperation getModelNamespace__ModelScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#qualifiedName() <em>Qualified Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#qualifiedName()
	 * @generated
	 */
	EOperation getModelNamespace__QualifiedName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#resolveInScope(java.lang.String) <em>Resolve In Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#resolveInScope(java.lang.String)
	 * @generated
	 */
	EOperation getModelNamespace__ResolveInScope__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#resolveInRoot(java.lang.String) <em>Resolve In Root</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Root</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#resolveInRoot(java.lang.String)
	 * @generated
	 */
	EOperation getModelNamespace__ResolveInRoot__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#resolvePathName(java.lang.String) <em>Resolve Path Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Path Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#resolvePathName(java.lang.String)
	 * @generated
	 */
	EOperation getModelNamespace__ResolvePathName__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#resolveAssociationEnd(org.eclipse.papyrus.uml.alf.ElementReference, java.lang.String) <em>Resolve Association End</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve Association End</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#resolveAssociationEnd(org.eclipse.papyrus.uml.alf.ElementReference, java.lang.String)
	 * @generated
	 */
	EOperation getModelNamespace__ResolveAssociationEnd__ElementReference_String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#appliedProfiles()
	 * @generated
	 */
	EOperation getModelNamespace__AppliedProfiles();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Stub For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getModelNamespace__StubFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ModelNamespace#ModelNamespace_appliedProfiles() <em>Model Namespace applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Namespace applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ModelNamespace#ModelNamespace_appliedProfiles()
	 * @generated
	 */
	EOperation getModelNamespace__ModelNamespace_appliedProfiles();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition <em>Namespace Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Namespace Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition
	 * @generated
	 */
	EClass getNamespaceDefinition();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#getOwnedMember <em>Owned Member</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Owned Member</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#getOwnedMember()
	 * @see #getNamespaceDefinition()
	 * @generated
	 */
	EReference getNamespaceDefinition_OwnedMember();

	/**
	 * Returns the meta object for the container reference '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#getUnit <em>Unit</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the container reference '<em>Unit</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#getUnit()
	 * @see #getNamespaceDefinition()
	 * @generated
	 */
	EReference getNamespaceDefinition_Unit();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#getMember <em>Member</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Member</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#getMember()
	 * @see #getNamespaceDefinition()
	 * @generated
	 */
	EReference getNamespaceDefinition_Member();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#currentScope() <em>Current Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Current Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#currentScope()
	 * @generated
	 */
	EOperation getNamespaceDefinition__CurrentScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#outerScope() <em>Outer Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Outer Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#outerScope()
	 * @generated
	 */
	EOperation getNamespaceDefinition__OuterScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_outerScope() <em>Namespace Definition outer Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Definition outer Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_outerScope()
	 * @generated
	 */
	EOperation getNamespaceDefinition__NamespaceDefinition_outerScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#modelNamespace() <em>Model Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#modelNamespace()
	 * @generated
	 */
	EOperation getNamespaceDefinition__ModelNamespace();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#modelScope() <em>Model Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Model Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#modelScope()
	 * @generated
	 */
	EOperation getNamespaceDefinition__ModelScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#resolveInScope(java.lang.String) <em>Resolve In Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Resolve In Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#resolveInScope(java.lang.String)
	 * @generated
	 */
	EOperation getNamespaceDefinition__ResolveInScope__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#appliedProfiles()
	 * @generated
	 */
	EOperation getNamespaceDefinition__AppliedProfiles();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_appliedProfiles() <em>Namespace Definition applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Definition applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_appliedProfiles()
	 * @generated
	 */
	EOperation getNamespaceDefinition__NamespaceDefinition_appliedProfiles();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#parameters() <em>Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#parameters()
	 * @generated
	 */
	EOperation getNamespaceDefinition__Parameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#returnParameter() <em>Return Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#returnParameter()
	 * @generated
	 */
	EOperation getNamespaceDefinition__ReturnParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_returnParameter() <em>Namespace Definition return Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Definition return Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_returnParameter()
	 * @generated
	 */
	EOperation getNamespaceDefinition__NamespaceDefinition_returnParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#subunitOwnedMembers() <em>Subunit Owned Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Subunit Owned Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#subunitOwnedMembers()
	 * @generated
	 */
	EOperation getNamespaceDefinition__SubunitOwnedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getNamespaceDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Namespace Definition annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Definition annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getNamespaceDefinition__NamespaceDefinition_annotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#templateParameters() <em>Template Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#templateParameters()
	 * @generated
	 */
	EOperation getNamespaceDefinition__TemplateParameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#membersCached() <em>Members Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Members Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#membersCached()
	 * @generated
	 */
	EOperation getNamespaceDefinition__MembersCached();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#members() <em>Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#members()
	 * @generated
	 */
	EOperation getNamespaceDefinition__Members();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_members() <em>Namespace Definition members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Definition members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#NamespaceDefinition_members()
	 * @generated
	 */
	EOperation getNamespaceDefinition__NamespaceDefinition_members();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#importedMembers() <em>Imported Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Imported Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#importedMembers()
	 * @generated
	 */
	EOperation getNamespaceDefinition__ImportedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#importMembers(org.eclipse.emf.common.util.EList) <em>Import Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Import Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#importMembers(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getNamespaceDefinition__ImportMembers__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#excludeCollisions(org.eclipse.emf.common.util.EList) <em>Exclude Collisions</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Exclude Collisions</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#excludeCollisions(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getNamespaceDefinition__ExcludeCollisions__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#removeDuplicates(org.eclipse.emf.common.util.EList) <em>Remove Duplicates</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Remove Duplicates</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#removeDuplicates(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getNamespaceDefinition__RemoveDuplicates__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#includeDistinguishableCaching(org.eclipse.emf.common.util.EList) <em>Include Distinguishable Caching</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Include Distinguishable Caching</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#includeDistinguishableCaching(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getNamespaceDefinition__IncludeDistinguishableCaching__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#includeDistinguishable(org.eclipse.emf.common.util.EList) <em>Include Distinguishable</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Include Distinguishable</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#includeDistinguishable(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getNamespaceDefinition__IncludeDistinguishable__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#stub() <em>Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#stub()
	 * @generated
	 */
	EOperation getNamespaceDefinition__Stub();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Stub For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stub For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#stubFor(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getNamespaceDefinition__StubFor__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#namespaceDefinitionMemberDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Namespace Definition Member Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Definition Member Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#namespaceDefinitionMemberDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNamespaceDefinition__NamespaceDefinitionMemberDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.NamespaceDefinition#namespaceDefinitionMemberDistinguishability(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Namespace Definition Member Distinguishability</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Definition Member Distinguishability</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.NamespaceDefinition#namespaceDefinitionMemberDistinguishability(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getNamespaceDefinition__NamespaceDefinitionMemberDistinguishability__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.MemberDefinition <em>Member Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Member Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition
	 * @generated
	 */
	EClass getMemberDefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#getName()
	 * @see #getMemberDefinition()
	 * @generated
	 */
	EAttribute getMemberDefinition_Name();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isIsStub <em>Is Stub</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Stub</em>'.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isIsStub()
	 * @see #getMemberDefinition()
	 * @generated
	 */
	EAttribute getMemberDefinition_IsStub();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isIsFeature <em>Is Feature</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Feature</em>'.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isIsFeature()
	 * @see #getMemberDefinition()
	 * @generated
	 */
	EAttribute getMemberDefinition_IsFeature();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isIsPrimitive <em>Is Primitive</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Primitive</em>'.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isIsPrimitive()
	 * @see #getMemberDefinition()
	 * @generated
	 */
	EAttribute getMemberDefinition_IsPrimitive();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isIsExternal <em>Is External</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is External</em>'.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isIsExternal()
	 * @see #getMemberDefinition()
	 * @generated
	 */
	EAttribute getMemberDefinition_IsExternal();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#getSubunit <em>Subunit</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Subunit</em>'.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#getSubunit()
	 * @see #getMemberDefinition()
	 * @generated
	 */
	EReference getMemberDefinition_Subunit();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#annotation() <em>Annotation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#annotation()
	 * @generated
	 */
	EOperation getMemberDefinition__Annotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#actualName()
	 * @generated
	 */
	EOperation getMemberDefinition__ActualName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#outerScope() <em>Outer Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Outer Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#outerScope()
	 * @generated
	 */
	EOperation getMemberDefinition__OuterScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#MemberDefinition_outerScope() <em>Member Definition outer Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Definition outer Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#MemberDefinition_outerScope()
	 * @generated
	 */
	EOperation getMemberDefinition__MemberDefinition_outerScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#qualifiedName() <em>Qualified Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Qualified Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#qualifiedName()
	 * @generated
	 */
	EOperation getMemberDefinition__QualifiedName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#namespaceReference() <em>Namespace Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Namespace Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#namespaceReference()
	 * @generated
	 */
	EOperation getMemberDefinition__NamespaceReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#addToModel() <em>Add To Model</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Add To Model</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#addToModel()
	 * @generated
	 */
	EOperation getMemberDefinition__AddToModel();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getMemberDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getMemberDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isDistinguishableFrom(org.eclipse.papyrus.uml.alf.MemberDefinition) <em>Is Distinguishable From</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Distinguishable From</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isDistinguishableFrom(org.eclipse.papyrus.uml.alf.MemberDefinition)
	 * @generated
	 */
	EOperation getMemberDefinition__IsDistinguishableFrom__MemberDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#MemberDefinition_isDistinguishableFrom(org.eclipse.papyrus.uml.alf.MemberDefinition) <em>Member Definition is Distinguishable From</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Definition is Distinguishable From</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#MemberDefinition_isDistinguishableFrom(org.eclipse.papyrus.uml.alf.MemberDefinition)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberDefinition_isDistinguishableFrom__MemberDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getMemberDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#templateParameters() <em>Template Parameters</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Template Parameters</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#templateParameters()
	 * @generated
	 */
	EOperation getMemberDefinition__TemplateParameters();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isTemplate() <em>Is Template</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Template</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isTemplate()
	 * @generated
	 */
	EOperation getMemberDefinition__IsTemplate();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#isFeature()
	 * @generated
	 */
	EOperation getMemberDefinition__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberAnnotations(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member Annotations</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Annotations</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberAnnotations(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberAnnotations__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberIsPrimitiveDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member Is Primitive Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Is Primitive Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberIsPrimitiveDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberIsPrimitiveDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberIsExternalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member Is External Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Is External Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberIsExternalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberIsExternalDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberExternal(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member External</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member External</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberExternal(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberExternal__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberStub(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberStub(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberStub__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberSubunitDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member Subunit Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Subunit Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberSubunitDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberSubunitDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberStubStereotypes(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member Stub Stereotypes</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Stub Stereotypes</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberStubStereotypes(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberStubStereotypes__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#memberPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Member Primitive</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Member Primitive</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#memberPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getMemberDefinition__MemberPrimitive__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.MemberDefinition#containingMember() <em>Containing Member</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Containing Member</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.MemberDefinition#containingMember()
	 * @generated
	 */
	EOperation getMemberDefinition__ContainingMember();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation <em>Stereotype Annotation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Stereotype Annotation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation
	 * @generated
	 */
	EClass getStereotypeAnnotation();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getTaggedValues <em>Tagged Values</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Tagged Values</em>'.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getTaggedValues()
	 * @see #getStereotypeAnnotation()
	 * @generated
	 */
	EReference getStereotypeAnnotation_TaggedValues();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getNames <em>Names</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Names</em>'.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getNames()
	 * @see #getStereotypeAnnotation()
	 * @generated
	 */
	EReference getStereotypeAnnotation_Names();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getStereotypeName <em>Stereotype Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Stereotype Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getStereotypeName()
	 * @see #getStereotypeAnnotation()
	 * @generated
	 */
	EReference getStereotypeAnnotation_StereotypeName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getStereotype <em>Stereotype</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Stereotype</em>'.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#getStereotype()
	 * @see #getStereotypeAnnotation()
	 * @generated
	 */
	EReference getStereotypeAnnotation_Stereotype();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationStereotypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Stereotype Annotation Stereotype Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stereotype Annotation Stereotype Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationStereotypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStereotypeAnnotation__StereotypeAnnotationStereotypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationStereotypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Stereotype Annotation Stereotype Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stereotype Annotation Stereotype Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationStereotypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStereotypeAnnotation__StereotypeAnnotationStereotypeName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationApply(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Stereotype Annotation Apply</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stereotype Annotation Apply</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationApply(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStereotypeAnnotation__StereotypeAnnotationApply__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Stereotype Annotation Primitive</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stereotype Annotation Primitive</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStereotypeAnnotation__StereotypeAnnotationPrimitive__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationExternal(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Stereotype Annotation External</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stereotype Annotation External</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationExternal(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStereotypeAnnotation__StereotypeAnnotationExternal__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationTaggedValues(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Stereotype Annotation Tagged Values</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stereotype Annotation Tagged Values</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationTaggedValues(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStereotypeAnnotation__StereotypeAnnotationTaggedValues__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Stereotype Annotation Names</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Stereotype Annotation Names</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#stereotypeAnnotationNames(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getStereotypeAnnotation__StereotypeAnnotationNames__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.StereotypeAnnotation#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.StereotypeAnnotation#appliedProfiles()
	 * @generated
	 */
	EOperation getStereotypeAnnotation__AppliedProfiles();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.TaggedValueList <em>Tagged Value List</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Tagged Value List</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TaggedValueList
	 * @generated
	 */
	EClass getTaggedValueList();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.TaggedValueList#getTaggedValue <em>Tagged Value</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Tagged Value</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TaggedValueList#getTaggedValue()
	 * @see #getTaggedValueList()
	 * @generated
	 */
	EReference getTaggedValueList_TaggedValue();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.TaggedValue <em>Tagged Value</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Tagged Value</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TaggedValue
	 * @generated
	 */
	EClass getTaggedValue();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TaggedValue#getName <em>Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TaggedValue#getName()
	 * @see #getTaggedValue()
	 * @generated
	 */
	EAttribute getTaggedValue_Name();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TaggedValue#getValue <em>Value</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Value</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TaggedValue#getValue()
	 * @see #getTaggedValue()
	 * @generated
	 */
	EAttribute getTaggedValue_Value();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TaggedValue#getOperator <em>Operator</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Operator</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TaggedValue#getOperator()
	 * @see #getTaggedValue()
	 * @generated
	 */
	EAttribute getTaggedValue_Operator();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.UnitDefinition <em>Unit Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Unit Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition
	 * @generated
	 */
	EClass getUnitDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#getNamespaceName <em>Namespace Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Namespace Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#getNamespaceName()
	 * @see #getUnitDefinition()
	 * @generated
	 */
	EReference getUnitDefinition_NamespaceName();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#getDefinition <em>Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#getDefinition()
	 * @see #getUnitDefinition()
	 * @generated
	 */
	EReference getUnitDefinition_Definition();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#getImport <em>Import</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Import</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#getImport()
	 * @see #getUnitDefinition()
	 * @generated
	 */
	EReference getUnitDefinition_Import();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#getNamespace <em>Namespace</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Namespace</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#getNamespace()
	 * @see #getUnitDefinition()
	 * @generated
	 */
	EReference getUnitDefinition_Namespace();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#isIsModelLibrary <em>Is Model Library</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Model Library</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#isIsModelLibrary()
	 * @see #getUnitDefinition()
	 * @generated
	 */
	EAttribute getUnitDefinition_IsModelLibrary();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#getAppliedProfile <em>Applied Profile</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Applied Profile</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#getAppliedProfile()
	 * @see #getUnitDefinition()
	 * @generated
	 */
	EReference getUnitDefinition_AppliedProfile();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#getAnnotation <em>Annotation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Annotation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#getAnnotation()
	 * @see #getUnitDefinition()
	 * @generated
	 */
	EReference getUnitDefinition_Annotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#imports() <em>Imports</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Imports</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#imports()
	 * @generated
	 */
	EOperation getUnitDefinition__Imports();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#implicitImports() <em>Implicit Imports</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Implicit Imports</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#implicitImports()
	 * @generated
	 */
	EOperation getUnitDefinition__ImplicitImports();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#implicitImportFor(java.lang.String) <em>Implicit Import For</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Implicit Import For</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#implicitImportFor(java.lang.String)
	 * @generated
	 */
	EOperation getUnitDefinition__ImplicitImportFor__String();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionNamespaceDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Unit Definition Namespace Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unit Definition Namespace Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionNamespaceDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getUnitDefinition__UnitDefinitionNamespaceDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionNamespace(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Unit Definition Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unit Definition Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionNamespace(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getUnitDefinition__UnitDefinitionNamespace__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionIsModelLibraryDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Unit Definition Is Model Library Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unit Definition Is Model Library Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionIsModelLibraryDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getUnitDefinition__UnitDefinitionIsModelLibraryDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionImplicitImports(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Unit Definition Implicit Imports</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unit Definition Implicit Imports</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionImplicitImports(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getUnitDefinition__UnitDefinitionImplicitImports__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionAppliedProfileDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Unit Definition Applied Profile Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Unit Definition Applied Profile Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.UnitDefinition#unitDefinitionAppliedProfileDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getUnitDefinition__UnitDefinitionAppliedProfileDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ImportReference <em>Import Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Import Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference
	 * @generated
	 */
	EClass getImportReference();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ImportReference#getVisibility <em>Visibility</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Visibility</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference#getVisibility()
	 * @see #getImportReference()
	 * @generated
	 */
	EAttribute getImportReference_Visibility();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ImportReference#getReferentName <em>Referent Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Referent Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference#getReferentName()
	 * @see #getImportReference()
	 * @generated
	 */
	EReference getImportReference_ReferentName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ImportReference#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference#getReferent()
	 * @see #getImportReference()
	 * @generated
	 */
	EReference getImportReference_Referent();

	/**
	 * Returns the meta object for the container reference '{@link org.eclipse.papyrus.uml.alf.ImportReference#getUnit <em>Unit</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the container reference '<em>Unit</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference#getUnit()
	 * @see #getImportReference()
	 * @generated
	 */
	EReference getImportReference_Unit();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportReference#importedMembers() <em>Imported Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Imported Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference#importedMembers()
	 * @generated
	 */
	EOperation getImportReference__ImportedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportReference#importReferenceReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Import Reference Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Import Reference Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference#importReferenceReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getImportReference__ImportReferenceReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportReference#importReferenceReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Import Reference Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Import Reference Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportReference#importReferenceReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getImportReference__ImportReferenceReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ImportedMember <em>Imported Member</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Imported Member</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember
	 * @generated
	 */
	EClass getImportedMember();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ImportedMember#getReferent <em>Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#getReferent()
	 * @see #getImportedMember()
	 * @generated
	 */
	EReference getImportedMember_Referent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportedMember#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#actualName()
	 * @generated
	 */
	EOperation getImportedMember__ActualName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportedMember#toReference() <em>To Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#toReference()
	 * @generated
	 */
	EOperation getImportedMember__ToReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportedMember#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getImportedMember__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportedMember#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getImportedMember__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportedMember#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#isFeature()
	 * @generated
	 */
	EOperation getImportedMember__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportedMember#importedMemberNotStub(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Imported Member Not Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Imported Member Not Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#importedMemberNotStub(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getImportedMember__ImportedMemberNotStub__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ImportedMember#importedMemberIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Imported Member Is Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Imported Member Is Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ImportedMember#importedMemberIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getImportedMember__ImportedMemberIsFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.EnumerationLiteralName <em>Enumeration Literal Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Enumeration Literal Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.EnumerationLiteralName
	 * @generated
	 */
	EClass getEnumerationLiteralName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EnumerationLiteralName#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EnumerationLiteralName#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getEnumerationLiteralName__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.OperationDefinition <em>Operation Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Operation Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition
	 * @generated
	 */
	EClass getOperationDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#getRedefinition <em>Redefinition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Redefinition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#getRedefinition()
	 * @see #getOperationDefinition()
	 * @generated
	 */
	EReference getOperationDefinition_Redefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#isIsAbstract <em>Is Abstract</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Abstract</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#isIsAbstract()
	 * @see #getOperationDefinition()
	 * @generated
	 */
	EAttribute getOperationDefinition_IsAbstract();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#getBody <em>Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Body</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#getBody()
	 * @see #getOperationDefinition()
	 * @generated
	 */
	EReference getOperationDefinition_Body();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#getRedefinedOperation <em>Redefined Operation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Redefined Operation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#getRedefinedOperation()
	 * @see #getOperationDefinition()
	 * @generated
	 */
	EReference getOperationDefinition_RedefinedOperation();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#isIsConstructor <em>Is Constructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Constructor</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#isIsConstructor()
	 * @see #getOperationDefinition()
	 * @generated
	 */
	EAttribute getOperationDefinition_IsConstructor();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#isIsDestructor <em>Is Destructor</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Destructor</em>'.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#isIsDestructor()
	 * @see #getOperationDefinition()
	 * @generated
	 */
	EAttribute getOperationDefinition_IsDestructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getOperationDefinition__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getOperationDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getOperationDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getOperationDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#parametersMatch(org.eclipse.papyrus.uml.alf.ElementReference) <em>Parameters Match</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameters Match</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#parametersMatch(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getOperationDefinition__ParametersMatch__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#parametersMatchNameType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Parameters Match Name Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Parameters Match Name Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#parametersMatchNameType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getOperationDefinition__ParametersMatchNameType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#returnParameter() <em>Return Parameter</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Return Parameter</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#returnParameter()
	 * @generated
	 */
	EOperation getOperationDefinition__ReturnParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#specializationReferents() <em>Specialization Referents</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Specialization Referents</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#specializationReferents()
	 * @generated
	 */
	EOperation getOperationDefinition__SpecializationReferents();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionNamespace(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Namespace</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Namespace</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionNamespace(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionNamespace__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionRedefinedOperationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Redefined Operation Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Redefined Operation Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionRedefinedOperationDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionRedefinedOperationDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionRedefinition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Redefinition</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Redefinition</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionRedefinition(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionRedefinition__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionRedefinedOperations(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Redefined Operations</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Redefined Operations</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionRedefinedOperations(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionRedefinedOperations__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Is Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Is Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionIsFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionIsConstructorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Is Constructor Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Is Constructor Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionIsConstructorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionIsConstructorDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionIsDestructorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Is Destructor Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Is Destructor Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionIsDestructorDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionIsDestructorDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionConstructorDestructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Constructor Destructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Constructor Destructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionConstructorDestructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionConstructorDestructor__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionConstructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionConstructor__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionDestructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Operation Definition Destructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Operation Definition Destructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.OperationDefinition#operationDefinitionDestructor(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getOperationDefinition__OperationDefinitionDestructor__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AssociationDefinition <em>Association Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Association Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AssociationDefinition
	 * @generated
	 */
	EClass getAssociationDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssociationDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssociationDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getAssociationDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssociationDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssociationDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getAssociationDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssociationDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssociationDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getAssociationDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AssociationDefinition#associationDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Association Definition Specialization Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Association Definition Specialization Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AssociationDefinition#associationDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getAssociationDefinition__AssociationDefinitionSpecializationReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition <em>Classifier Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Classifier Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition
	 * @generated
	 */
	EClass getClassifierDefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#isIsAbstract <em>Is Abstract</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Abstract</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#isIsAbstract()
	 * @see #getClassifierDefinition()
	 * @generated
	 */
	EAttribute getClassifierDefinition_IsAbstract();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#getSpecialization <em>Specialization</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Specialization</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#getSpecialization()
	 * @see #getClassifierDefinition()
	 * @generated
	 */
	EReference getClassifierDefinition_Specialization();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#getSpecializationReferent <em>Specialization Referent</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Specialization Referent</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#getSpecializationReferent()
	 * @see #getClassifierDefinition()
	 * @generated
	 */
	EReference getClassifierDefinition_SpecializationReferent();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#ClassifierDefinition_annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Classifier Definition annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Definition annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#ClassifierDefinition_annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getClassifierDefinition__ClassifierDefinition_annotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getClassifierDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#ClassifierDefinition_matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Classifier Definition match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Definition match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#ClassifierDefinition_matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getClassifierDefinition__ClassifierDefinition_matchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#members() <em>Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#members()
	 * @generated
	 */
	EOperation getClassifierDefinition__Members();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#inheritedMembers() <em>Inherited Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Inherited Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#inheritedMembers()
	 * @generated
	 */
	EOperation getClassifierDefinition__InheritedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#inherit(org.eclipse.emf.common.util.EList) <em>Inherit</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Inherit</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#inherit(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getClassifierDefinition__Inherit__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#classifierDefinitionSpecialization(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classifier Definition Specialization</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Definition Specialization</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#classifierDefinitionSpecialization(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifierDefinition__ClassifierDefinitionSpecialization__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#classifierDefinitionSpecializationReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classifier Definition Specialization Referent Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Definition Specialization Referent Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#classifierDefinitionSpecializationReferentDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifierDefinition__ClassifierDefinitionSpecializationReferentDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierDefinition#classifierDefinitionInheritedMembers(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Classifier Definition Inherited Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Classifier Definition Inherited Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierDefinition#classifierDefinitionInheritedMembers(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassifierDefinition__ClassifierDefinitionInheritedMembers__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ClassDefinition <em>Class Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Class Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition
	 * @generated
	 */
	EClass getClassDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getClassDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getClassDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getClassDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#needsDefaultConstructor() <em>Needs Default Constructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Needs Default Constructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#needsDefaultConstructor()
	 * @generated
	 */
	EOperation getClassDefinition__NeedsDefaultConstructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#needsDefaultDestructor() <em>Needs Default Destructor</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Needs Default Destructor</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#needsDefaultDestructor()
	 * @generated
	 */
	EOperation getClassDefinition__NeedsDefaultDestructor();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#inherit(org.eclipse.emf.common.util.EList) <em>Inherit</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Inherit</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#inherit(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getClassDefinition__Inherit__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#inheritCached(org.eclipse.emf.common.util.EList) <em>Inherit Cached</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Inherit Cached</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#inheritCached(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getClassDefinition__InheritCached__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#ClassDefinition_inherit(org.eclipse.emf.common.util.EList) <em>Class Definition inherit</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Class Definition inherit</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#ClassDefinition_inherit(org.eclipse.emf.common.util.EList)
	 * @generated
	 */
	EOperation getClassDefinition__ClassDefinition_inherit__EList();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#classDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Class Definition Specialization Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Class Definition Specialization Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#classDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassDefinition__ClassDefinitionSpecializationReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassDefinition#classDefinitionAbstractMember(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Class Definition Abstract Member</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Class Definition Abstract Member</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassDefinition#classDefinitionAbstractMember(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getClassDefinition__ClassDefinitionAbstractMember__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition <em>Typed Element Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Typed Element Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition
	 * @generated
	 */
	EClass getTypedElementDefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#getLowerBound <em>Lower Bound</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Lower Bound</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#getLowerBound()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EAttribute getTypedElementDefinition_LowerBound();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#getUpperBound <em>Upper Bound</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Upper Bound</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#getUpperBound()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EAttribute getTypedElementDefinition_UpperBound();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsOrdered <em>Is Ordered</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Ordered</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsOrdered()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EAttribute getTypedElementDefinition_IsOrdered();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsNonunique <em>Is Nonunique</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Nonunique</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsNonunique()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EAttribute getTypedElementDefinition_IsNonunique();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#getTypeName <em>Type Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#getTypeName()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EReference getTypedElementDefinition_TypeName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#getActualType <em>Actual Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Actual Type</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#getActualType()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EReference getTypedElementDefinition_ActualType();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsAny <em>Is Any</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Any</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsAny()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EAttribute getTypedElementDefinition_IsAny();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsSequence <em>Is Sequence</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Sequence</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsSequence()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EAttribute getTypedElementDefinition_IsSequence();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsMultiplicity <em>Is Multiplicity</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Multiplicity</em>'.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#isIsMultiplicity()
	 * @see #getTypedElementDefinition()
	 * @generated
	 */
	EAttribute getTypedElementDefinition_IsMultiplicity();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#isOrdered() <em>Is Ordered</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Ordered</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#isOrdered()
	 * @generated
	 */
	EOperation getTypedElementDefinition__IsOrdered();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#isNonunique() <em>Is Nonunique</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Nonunique</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#isNonunique()
	 * @generated
	 */
	EOperation getTypedElementDefinition__IsNonunique();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Typed Element Definition Lower Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Typed Element Definition Lower Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionLowerDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTypedElementDefinition__TypedElementDefinitionLowerDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Typed Element Definition Upper Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Typed Element Definition Upper Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionUpperDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTypedElementDefinition__TypedElementDefinitionUpperDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Typed Element Definition Type Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Typed Element Definition Type Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionTypeDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTypedElementDefinition__TypedElementDefinitionTypeDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionTypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Typed Element Definition Type Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Typed Element Definition Type Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#typedElementDefinitionTypeName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getTypedElementDefinition__TypedElementDefinitionTypeName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#type() <em>Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#type()
	 * @generated
	 */
	EOperation getTypedElementDefinition__Type();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#lower() <em>Lower</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Lower</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#lower()
	 * @generated
	 */
	EOperation getTypedElementDefinition__Lower();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.TypedElementDefinition#upper() <em>Upper</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Upper</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.TypedElementDefinition#upper()
	 * @generated
	 */
	EOperation getTypedElementDefinition__Upper();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.DataTypeDefinition <em>Data Type Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Data Type Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.DataTypeDefinition
	 * @generated
	 */
	EClass getDataTypeDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DataTypeDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DataTypeDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getDataTypeDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DataTypeDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DataTypeDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getDataTypeDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DataTypeDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DataTypeDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getDataTypeDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DataTypeDefinition#dataTypeDefinitionPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Data Type Definition Primitive</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Data Type Definition Primitive</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DataTypeDefinition#dataTypeDefinitionPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getDataTypeDefinition__DataTypeDefinitionPrimitive__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.DataTypeDefinition#dataTypeDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Data Type Definition Specialization Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Data Type Definition Specialization Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.DataTypeDefinition#dataTypeDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getDataTypeDefinition__DataTypeDefinitionSpecializationReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.PackageDefinition <em>Package Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Package Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition
	 * @generated
	 */
	EClass getPackageDefinition();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.PackageDefinition#getAppliedProfile <em>Applied Profile</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Applied Profile</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition#getAppliedProfile()
	 * @see #getPackageDefinition()
	 * @generated
	 */
	EReference getPackageDefinition_AppliedProfile();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageDefinition#allowPackageOnly() <em>Allow Package Only</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Allow Package Only</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition#allowPackageOnly()
	 * @generated
	 */
	EOperation getPackageDefinition__AllowPackageOnly();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getPackageDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getPackageDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getPackageDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageDefinition#packageDefinitionAppliedProfileDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Package Definition Applied Profile Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Package Definition Applied Profile Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition#packageDefinitionAppliedProfileDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPackageDefinition__PackageDefinitionAppliedProfileDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageDefinition#appliedProfiles() <em>Applied Profiles</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Applied Profiles</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageDefinition#appliedProfiles()
	 * @generated
	 */
	EOperation getPackageDefinition__AppliedProfiles();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition <em>Property Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Property Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition
	 * @generated
	 */
	EClass getPropertyDefinition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#isIsComposite <em>Is Composite</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Composite</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#isIsComposite()
	 * @see #getPropertyDefinition()
	 * @generated
	 */
	EAttribute getPropertyDefinition_IsComposite();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#getInitializer <em>Initializer</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Initializer</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#getInitializer()
	 * @see #getPropertyDefinition()
	 * @generated
	 */
	EReference getPropertyDefinition_Initializer();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#isIsCollectionConversion <em>Is Collection Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Collection Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#isIsCollectionConversion()
	 * @see #getPropertyDefinition()
	 * @generated
	 */
	EAttribute getPropertyDefinition_IsCollectionConversion();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#isIsBitStringConversion <em>Is Bit String Conversion</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Is Bit String Conversion</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#isIsBitStringConversion()
	 * @see #getPropertyDefinition()
	 * @generated
	 */
	EAttribute getPropertyDefinition_IsBitStringConversion();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#getTypePart <em>Type Part</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Part</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#getTypePart()
	 * @see #getPropertyDefinition()
	 * @generated
	 */
	EReference getPropertyDefinition_TypePart();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getPropertyDefinition__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getPropertyDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getPropertyDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#isFeature()
	 * @generated
	 */
	EOperation getPropertyDefinition__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionInitializer(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Definition Initializer</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Definition Initializer</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionInitializer(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyDefinition__PropertyDefinitionInitializer__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Definition Is Collection Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Definition Is Collection Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionIsCollectionConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyDefinition__PropertyDefinitionIsCollectionConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Definition Is Bit String Conversion Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Definition Is Bit String Conversion Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionIsBitStringConversionDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyDefinition__PropertyDefinitionIsBitStringConversionDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Property Definition Is Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Property Definition Is Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PropertyDefinition#propertyDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPropertyDefinition__PropertyDefinitionIsFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SignalDefinition <em>Signal Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Signal Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SignalDefinition
	 * @generated
	 */
	EClass getSignalDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SignalDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SignalDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getSignalDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SignalDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SignalDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getSignalDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SignalDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SignalDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getSignalDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SignalDefinition#signalDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Signal Definition Specialization Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Signal Definition Specialization Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SignalDefinition#signalDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSignalDefinition__SignalDefinitionSpecializationReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ActiveClassDefinition <em>Active Class Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Active Class Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ActiveClassDefinition
	 * @generated
	 */
	EClass getActiveClassDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ActiveClassDefinition#getClassifierBehavior <em>Classifier Behavior</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Classifier Behavior</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ActiveClassDefinition#getClassifierBehavior()
	 * @see #getActiveClassDefinition()
	 * @generated
	 */
	EReference getActiveClassDefinition_ClassifierBehavior();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActiveClassDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActiveClassDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getActiveClassDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActiveClassDefinition#activeClassDefinitionClassifierBehavior(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Active Class Definition Classifier Behavior</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Active Class Definition Classifier Behavior</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActiveClassDefinition#activeClassDefinitionClassifierBehavior(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getActiveClassDefinition__ActiveClassDefinitionClassifierBehavior__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition <em>Activity Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Activity Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition
	 * @generated
	 */
	EClass getActivityDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#getBody <em>Body</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Body</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#getBody()
	 * @see #getActivityDefinition()
	 * @generated
	 */
	EReference getActivityDefinition_Body();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement) <em>Assignments Before</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Assignments Before</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#assignmentsBefore(org.eclipse.papyrus.uml.alf.SyntaxElement)
	 * @generated
	 */
	EOperation getActivityDefinition__AssignmentsBefore__SyntaxElement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#outerScope() <em>Outer Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Outer Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#outerScope()
	 * @generated
	 */
	EOperation getActivityDefinition__OuterScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getActivityDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getActivityDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getActivityDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#activityDefinitionSpecialization(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Activity Definition Specialization</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Activity Definition Specialization</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#activityDefinitionSpecialization(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getActivityDefinition__ActivityDefinitionSpecialization__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ActivityDefinition#activityDefinitionPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Activity Definition Primitive</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Activity Definition Primitive</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ActivityDefinition#activityDefinitionPrimitive(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getActivityDefinition__ActivityDefinitionPrimitive__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ElementImportReference <em>Element Import Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Element Import Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ElementImportReference
	 * @generated
	 */
	EClass getElementImportReference();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.ElementImportReference#getAlias <em>Alias</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Alias</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ElementImportReference#getAlias()
	 * @see #getElementImportReference()
	 * @generated
	 */
	EAttribute getElementImportReference_Alias();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementImportReference#importedMembers() <em>Imported Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Imported Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementImportReference#importedMembers()
	 * @generated
	 */
	EOperation getElementImportReference__ImportedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ElementImportReference#elementImportReferenceReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Element Import Reference Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Element Import Reference Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ElementImportReference#elementImportReferenceReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getElementImportReference__ElementImportReferenceReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.SignalReceptionDefinition <em>Signal Reception Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Signal Reception Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.SignalReceptionDefinition
	 * @generated
	 */
	EClass getSignalReceptionDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SignalReceptionDefinition#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SignalReceptionDefinition#isFeature()
	 * @generated
	 */
	EOperation getSignalReceptionDefinition__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.SignalReceptionDefinition#signalReceptionDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Signal Reception Definition Is Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Signal Reception Definition Is Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.SignalReceptionDefinition#signalReceptionDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getSignalReceptionDefinition__SignalReceptionDefinitionIsFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.EnumerationDefinition <em>Enumeration Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Enumeration Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.EnumerationDefinition
	 * @generated
	 */
	EClass getEnumerationDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EnumerationDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EnumerationDefinition#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getEnumerationDefinition__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EnumerationDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EnumerationDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getEnumerationDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EnumerationDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EnumerationDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getEnumerationDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.EnumerationDefinition#enumerationDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Enumeration Definition Specialization Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Enumeration Definition Specialization Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.EnumerationDefinition#enumerationDefinitionSpecializationReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getEnumerationDefinition__EnumerationDefinitionSpecializationReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.PackageImportReference <em>Package Import Reference</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Package Import Reference</em>'.
	 * @see org.eclipse.papyrus.uml.alf.PackageImportReference
	 * @generated
	 */
	EClass getPackageImportReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageImportReference#importedMembers() <em>Imported Members</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Imported Members</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageImportReference#importedMembers()
	 * @generated
	 */
	EOperation getPackageImportReference__ImportedMembers();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.PackageImportReference#packageImportReferenceReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Package Import Reference Referent</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Package Import Reference Referent</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.PackageImportReference#packageImportReferenceReferent(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getPackageImportReference__PackageImportReferenceReferent__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter <em>Classifier Template Parameter</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Classifier Template Parameter</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter
	 * @generated
	 */
	EClass getClassifierTemplateParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getClassifierTemplateParameter__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition) <em>Match For Stub</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Match For Stub</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#matchForStub(org.eclipse.papyrus.uml.alf.UnitDefinition)
	 * @generated
	 */
	EOperation getClassifierTemplateParameter__MatchForStub__UnitDefinition();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getClassifierTemplateParameter__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#matches(org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter) <em>Matches</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter#matches(org.eclipse.papyrus.uml.alf.ClassifierTemplateParameter)
	 * @generated
	 */
	EOperation getClassifierTemplateParameter__Matches__ClassifierTemplateParameter();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.FormalParameter <em>Formal Parameter</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Formal Parameter</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter
	 * @generated
	 */
	EClass getFormalParameter();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.FormalParameter#getDirection <em>Direction</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Direction</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#getDirection()
	 * @see #getFormalParameter()
	 * @generated
	 */
	EAttribute getFormalParameter_Direction();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.FormalParameter#getTypePart <em>Type Part</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Type Part</em>'.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#getTypePart()
	 * @see #getFormalParameter()
	 * @generated
	 */
	EReference getFormalParameter_TypePart();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FormalParameter#currentScope() <em>Current Scope</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Current Scope</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#currentScope()
	 * @generated
	 */
	EOperation getFormalParameter__CurrentScope();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FormalParameter#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getFormalParameter__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FormalParameter#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getFormalParameter__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FormalParameter#matches(org.eclipse.papyrus.uml.alf.FormalParameter) <em>Matches</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#matches(org.eclipse.papyrus.uml.alf.FormalParameter)
	 * @generated
	 */
	EOperation getFormalParameter__Matches__FormalParameter();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FormalParameter#matchesElement(org.eclipse.papyrus.uml.alf.ElementReference) <em>Matches Element</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches Element</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#matchesElement(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getFormalParameter__MatchesElement__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FormalParameter#matchesNameType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Matches Name Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches Name Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#matchesNameType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getFormalParameter__MatchesNameType__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.FormalParameter#matchesType(org.eclipse.papyrus.uml.alf.ElementReference) <em>Matches Type</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Matches Type</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.FormalParameter#matchesType(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getFormalParameter__MatchesType__ElementReference();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition <em>Reception Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Reception Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition
	 * @generated
	 */
	EClass getReceptionDefinition();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#getSignalName <em>Signal Name</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Signal Name</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#getSignalName()
	 * @see #getReceptionDefinition()
	 * @generated
	 */
	EReference getReceptionDefinition_SignalName();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#getSignal <em>Signal</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Signal</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#getSignal()
	 * @see #getReceptionDefinition()
	 * @generated
	 */
	EReference getReceptionDefinition_Signal();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#actualName()
	 * @generated
	 */
	EOperation getReceptionDefinition__ActualName();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation) <em>Annotation Allowed</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotation Allowed</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#annotationAllowed(org.eclipse.papyrus.uml.alf.StereotypeAnnotation)
	 * @generated
	 */
	EOperation getReceptionDefinition__AnnotationAllowed__StereotypeAnnotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference) <em>Is Same Kind As</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Same Kind As</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#isSameKindAs(org.eclipse.papyrus.uml.alf.ElementReference)
	 * @generated
	 */
	EOperation getReceptionDefinition__IsSameKindAs__ElementReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#isFeature() <em>Is Feature</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Is Feature</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#isFeature()
	 * @generated
	 */
	EOperation getReceptionDefinition__IsFeature();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#receptionDefinitionSignalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Reception Definition Signal Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Reception Definition Signal Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#receptionDefinitionSignalName(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getReceptionDefinition__ReceptionDefinitionSignalName__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#receptionDefinitionSignalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Reception Definition Signal Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Reception Definition Signal Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#receptionDefinitionSignalDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getReceptionDefinition__ReceptionDefinitionSignalDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.ReceptionDefinition#receptionDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map) <em>Reception Definition Is Feature Derivation</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Reception Definition Is Feature Derivation</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.ReceptionDefinition#receptionDefinitionIsFeatureDerivation(org.eclipse.emf.common.util.DiagnosticChain, java.util.Map)
	 * @generated
	 */
	EOperation getReceptionDefinition__ReceptionDefinitionIsFeatureDerivation__DiagnosticChain_Map();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.Member <em>Member</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Member</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Member
	 * @generated
	 */
	EClass getMember();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.Member#getDefinition <em>Definition</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Definition</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Member#getDefinition()
	 * @see #getMember()
	 * @generated
	 */
	EReference getMember_Definition();

	/**
	 * Returns the meta object for the attribute '{@link org.eclipse.papyrus.uml.alf.Member#getVisibility <em>Visibility</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute '<em>Visibility</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Member#getVisibility()
	 * @see #getMember()
	 * @generated
	 */
	EAttribute getMember_Visibility();

	/**
	 * Returns the meta object for the container reference '{@link org.eclipse.papyrus.uml.alf.Member#getNamespace <em>Namespace</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the container reference '<em>Namespace</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Member#getNamespace()
	 * @see #getMember()
	 * @generated
	 */
	EReference getMember_Namespace();

	/**
	 * Returns the meta object for the containment reference list '{@link org.eclipse.papyrus.uml.alf.Member#getAnnotation <em>Annotation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference list '<em>Annotation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.Member#getAnnotation()
	 * @see #getMember()
	 * @generated
	 */
	EReference getMember_Annotation();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Member#toReference() <em>To Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Member#toReference()
	 * @generated
	 */
	EOperation getMember__ToReference();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.Member#visibility() <em>Visibility</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Visibility</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.Member#visibility()
	 * @generated
	 */
	EOperation getMember__Visibility();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AnnotatedStatement <em>Annotated Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Annotated Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AnnotatedStatement
	 * @generated
	 */
	EClass getAnnotatedStatement();

	/**
	 * Returns the meta object for the attribute list '{@link org.eclipse.papyrus.uml.alf.AnnotatedStatement#getAnnotation <em>Annotation</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the attribute list '<em>Annotation</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AnnotatedStatement#getAnnotation()
	 * @see #getAnnotatedStatement()
	 * @generated
	 */
	EAttribute getAnnotatedStatement_Annotation();

	/**
	 * Returns the meta object for the containment reference '{@link org.eclipse.papyrus.uml.alf.AnnotatedStatement#getStatement <em>Statement</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the containment reference '<em>Statement</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AnnotatedStatement#getStatement()
	 * @see #getAnnotatedStatement()
	 * @generated
	 */
	EReference getAnnotatedStatement_Statement();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AnnotatedStatement#annotations() <em>Annotations</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Annotations</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AnnotatedStatement#annotations()
	 * @generated
	 */
	EOperation getAnnotatedStatement__Annotations();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.BoundClassifier <em>Bound Classifier</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Bound Classifier</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BoundClassifier
	 * @generated
	 */
	EClass getBoundClassifier();

	/**
	 * Returns the meta object for the reference '{@link org.eclipse.papyrus.uml.alf.BoundClassifier#getTemplate <em>Template</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference '<em>Template</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BoundClassifier#getTemplate()
	 * @see #getBoundClassifier()
	 * @generated
	 */
	EReference getBoundClassifier_Template();

	/**
	 * Returns the meta object for the reference list '{@link org.eclipse.papyrus.uml.alf.BoundClassifier#getActual <em>Actual</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the reference list '<em>Actual</em>'.
	 * @see org.eclipse.papyrus.uml.alf.BoundClassifier#getActual()
	 * @see #getBoundClassifier()
	 * @generated
	 */
	EReference getBoundClassifier_Actual();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.BoundClassifier#toReference() <em>To Reference</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>To Reference</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.BoundClassifier#toReference()
	 * @generated
	 */
	EOperation getBoundClassifier__ToReference();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.ReturnParameter <em>Return Parameter</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Return Parameter</em>'.
	 * @see org.eclipse.papyrus.uml.alf.ReturnParameter
	 * @generated
	 */
	EClass getReturnParameter();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.NonReturnParameter <em>Non Return Parameter</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Non Return Parameter</em>'.
	 * @see org.eclipse.papyrus.uml.alf.NonReturnParameter
	 * @generated
	 */
	EClass getNonReturnParameter();

	/**
	 * Returns the meta object for class '{@link org.eclipse.papyrus.uml.alf.AnyType <em>Any Type</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for class '<em>Any Type</em>'.
	 * @see org.eclipse.papyrus.uml.alf.AnyType
	 * @generated
	 */
	EClass getAnyType();

	/**
	 * Returns the meta object for the '{@link org.eclipse.papyrus.uml.alf.AnyType#actualName() <em>Actual Name</em>}' operation.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the meta object for the '<em>Actual Name</em>' operation.
	 * @see org.eclipse.papyrus.uml.alf.AnyType#actualName()
	 * @generated
	 */
	EOperation getAnyType__ActualName();

	/**
	 * Returns the factory that creates the instances of the model.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the factory that creates the instances of the model.
	 * @generated
	 */
	AlfFactory getAlfFactory();

} // AlfPackage
