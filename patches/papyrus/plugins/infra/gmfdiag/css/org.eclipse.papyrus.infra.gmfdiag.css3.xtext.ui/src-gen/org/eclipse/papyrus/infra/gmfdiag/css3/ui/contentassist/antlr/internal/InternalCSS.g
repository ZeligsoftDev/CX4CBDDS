/*
 * generated by Xtext
 */
grammar InternalCSS;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.eclipse.papyrus.infra.gmfdiag.css3.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipse.papyrus.infra.gmfdiag.css3.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipse.papyrus.infra.gmfdiag.css3.services.CSSGrammarAccess;

}

@parser::members {
 
 	private CSSGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(CSSGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulestylesheet
entryRulestylesheet 
:
{ before(grammarAccess.getStylesheetRule()); }
	 rulestylesheet
{ after(grammarAccess.getStylesheetRule()); } 
	 EOF 
;

// Rule stylesheet
rulestylesheet
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStylesheetAccess().getGroup()); }
(rule__Stylesheet__Group__0)
{ after(grammarAccess.getStylesheetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecharset
entryRulecharset 
:
{ before(grammarAccess.getCharsetRule()); }
	 rulecharset
{ after(grammarAccess.getCharsetRule()); } 
	 EOF 
;

// Rule charset
rulecharset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCharsetAccess().getGroup()); }
(rule__Charset__Group__0)
{ after(grammarAccess.getCharsetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleimportExpression
entryRuleimportExpression 
:
{ before(grammarAccess.getImportExpressionRule()); }
	 ruleimportExpression
{ after(grammarAccess.getImportExpressionRule()); } 
	 EOF 
;

// Rule importExpression
ruleimportExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportExpressionAccess().getGroup()); }
(rule__ImportExpression__Group__0)
{ after(grammarAccess.getImportExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepage
entryRulepage 
:
{ before(grammarAccess.getPageRule()); }
	 rulepage
{ after(grammarAccess.getPageRule()); } 
	 EOF 
;

// Rule page
rulepage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPageAccess().getGroup()); }
(rule__Page__Group__0)
{ after(grammarAccess.getPageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulepseudo_page
entryRulepseudo_page 
:
{ before(grammarAccess.getPseudo_pageRule()); }
	 rulepseudo_page
{ after(grammarAccess.getPseudo_pageRule()); } 
	 EOF 
;

// Rule pseudo_page
rulepseudo_page
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudo_pageAccess().getGroup()); }
(rule__Pseudo_page__Group__0)
{ after(grammarAccess.getPseudo_pageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedia
entryRulemedia 
:
{ before(grammarAccess.getMediaRule()); }
	 rulemedia
{ after(grammarAccess.getMediaRule()); } 
	 EOF 
;

// Rule media
rulemedia
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMediaAccess().getGroup()); }
(rule__Media__Group__0)
{ after(grammarAccess.getMediaAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedia_list
entryRulemedia_list 
:
{ before(grammarAccess.getMedia_listRule()); }
	 rulemedia_list
{ after(grammarAccess.getMedia_listRule()); } 
	 EOF 
;

// Rule media_list
rulemedia_list
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMedia_listAccess().getGroup()); }
(rule__Media_list__Group__0)
{ after(grammarAccess.getMedia_listAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulemedium
entryRulemedium 
:
{ before(grammarAccess.getMediumRule()); }
	 rulemedium
{ after(grammarAccess.getMediumRule()); } 
	 EOF 
;

// Rule medium
rulemedium
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMediumAccess().getIdentifierParserRuleCall()); }
	ruleIdentifier
{ after(grammarAccess.getMediumAccess().getIdentifierParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulefont_face
entryRulefont_face 
:
{ before(grammarAccess.getFont_faceRule()); }
	 rulefont_face
{ after(grammarAccess.getFont_faceRule()); } 
	 EOF 
;

// Rule font_face
rulefont_face
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFont_faceAccess().getGroup()); }
(rule__Font_face__Group__0)
{ after(grammarAccess.getFont_faceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulekeyframes
entryRulekeyframes 
:
{ before(grammarAccess.getKeyframesRule()); }
	 rulekeyframes
{ after(grammarAccess.getKeyframesRule()); } 
	 EOF 
;

// Rule keyframes
rulekeyframes
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyframesAccess().getGroup()); }
(rule__Keyframes__Group__0)
{ after(grammarAccess.getKeyframesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulekeyframe_selector
entryRulekeyframe_selector 
:
{ before(grammarAccess.getKeyframe_selectorRule()); }
	 rulekeyframe_selector
{ after(grammarAccess.getKeyframe_selectorRule()); } 
	 EOF 
;

// Rule keyframe_selector
rulekeyframe_selector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getGroup()); }
(rule__Keyframe_selector__Group__0)
{ after(grammarAccess.getKeyframe_selectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleruleset
entryRuleruleset 
:
{ before(grammarAccess.getRulesetRule()); }
	 ruleruleset
{ after(grammarAccess.getRulesetRule()); } 
	 EOF 
;

// Rule ruleset
ruleruleset
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRulesetAccess().getGroup()); }
(rule__Ruleset__Group__0)
{ after(grammarAccess.getRulesetAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleselector
entryRuleselector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleselector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule selector
ruleselector
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelectorAccess().getGroup()); }
(rule__Selector__Group__0)
{ after(grammarAccess.getSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSimpleSelectorForNegation
entryRuleSimpleSelectorForNegation 
:
{ before(grammarAccess.getSimpleSelectorForNegationRule()); }
	 ruleSimpleSelectorForNegation
{ after(grammarAccess.getSimpleSelectorForNegationRule()); } 
	 EOF 
;

// Rule SimpleSelectorForNegation
ruleSimpleSelectorForNegation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives()); }
(rule__SimpleSelectorForNegation__Alternatives)
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubSelectorForNegation
entryRuleSubSelectorForNegation 
:
{ before(grammarAccess.getSubSelectorForNegationRule()); }
	 ruleSubSelectorForNegation
{ after(grammarAccess.getSubSelectorForNegationRule()); } 
	 EOF 
;

// Rule SubSelectorForNegation
ruleSubSelectorForNegation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubSelectorForNegationAccess().getAlternatives()); }
(rule__SubSelectorForNegation__Alternatives)
{ after(grammarAccess.getSubSelectorForNegationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulesimple_selector
entryRulesimple_selector 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getSimple_selectorRule()); }
	 rulesimple_selector
{ after(grammarAccess.getSimple_selectorRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule simple_selector
rulesimple_selector
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple_selectorAccess().getAlternatives()); }
(rule__Simple_selector__Alternatives)
{ after(grammarAccess.getSimple_selectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSubSelector
entryRuleSubSelector 
:
{ before(grammarAccess.getSubSelectorRule()); }
	 ruleSubSelector
{ after(grammarAccess.getSubSelectorRule()); } 
	 EOF 
;

// Rule SubSelector
ruleSubSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubSelectorAccess().getAlternatives()); }
(rule__SubSelector__Alternatives)
{ after(grammarAccess.getSubSelectorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttributeSelector
entryRuleAttributeSelector 
:
{ before(grammarAccess.getAttributeSelectorRule()); }
	 ruleAttributeSelector
{ after(grammarAccess.getAttributeSelectorRule()); } 
	 EOF 
;

// Rule AttributeSelector
ruleAttributeSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeSelectorAccess().getGroup()); }
(rule__AttributeSelector__Group__0)
{ after(grammarAccess.getAttributeSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassSelector
entryRuleClassSelector 
:
{ before(grammarAccess.getClassSelectorRule()); }
	 ruleClassSelector
{ after(grammarAccess.getClassSelectorRule()); } 
	 EOF 
;

// Rule ClassSelector
ruleClassSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassSelectorAccess().getGroup()); }
(rule__ClassSelector__Group__0)
{ after(grammarAccess.getClassSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElementSelector
entryRuleElementSelector 
:
{ before(grammarAccess.getElementSelectorRule()); }
	 ruleElementSelector
{ after(grammarAccess.getElementSelectorRule()); } 
	 EOF 
;

// Rule ElementSelector
ruleElementSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElementSelectorAccess().getGroup()); }
(rule__ElementSelector__Group__0)
{ after(grammarAccess.getElementSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUniversalSelector
entryRuleUniversalSelector 
:
{ before(grammarAccess.getUniversalSelectorRule()); }
	 ruleUniversalSelector
{ after(grammarAccess.getUniversalSelectorRule()); } 
	 EOF 
;

// Rule UniversalSelector
ruleUniversalSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUniversalSelectorAccess().getGroup()); }
(rule__UniversalSelector__Group__0)
{ after(grammarAccess.getUniversalSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdSelector
entryRuleIdSelector 
:
{ before(grammarAccess.getIdSelectorRule()); }
	 ruleIdSelector
{ after(grammarAccess.getIdSelectorRule()); } 
	 EOF 
;

// Rule IdSelector
ruleIdSelector
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdSelectorAccess().getGroup()); }
(rule__IdSelector__Group__0)
{ after(grammarAccess.getIdSelectorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_namespace_prefix
entryRulecss_namespace_prefix 
:
{ before(grammarAccess.getCss_namespace_prefixRule()); }
	 rulecss_namespace_prefix
{ after(grammarAccess.getCss_namespace_prefixRule()); } 
	 EOF 
;

// Rule css_namespace_prefix
rulecss_namespace_prefix
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getGroup()); }
(rule__Css_namespace_prefix__Group__0)
{ after(grammarAccess.getCss_namespace_prefixAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulecss_declaration
entryRulecss_declaration 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getCss_declarationRule()); }
	 rulecss_declaration
{ after(grammarAccess.getCss_declarationRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule css_declaration
rulecss_declaration
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_declarationAccess().getGroup()); }
(rule__Css_declaration__Group__0)
{ after(grammarAccess.getCss_declarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulecss_property
entryRulecss_property 
:
{ before(grammarAccess.getCss_propertyRule()); }
	 rulecss_property
{ after(grammarAccess.getCss_propertyRule()); } 
	 EOF 
;

// Rule css_property
rulecss_property
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCss_propertyAccess().getGroup()); }
(rule__Css_property__Group__0)
{ after(grammarAccess.getCss_propertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidPropertyIdent
entryRuleValidPropertyIdent 
:
{ before(grammarAccess.getValidPropertyIdentRule()); }
	 ruleValidPropertyIdent
{ after(grammarAccess.getValidPropertyIdentRule()); } 
	 EOF 
;

// Rule ValidPropertyIdent
ruleValidPropertyIdent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidPropertyIdentAccess().getIdentifierParserRuleCall()); }
	ruleIdentifier
{ after(grammarAccess.getValidPropertyIdentAccess().getIdentifierParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudoClassOrFunc
entryRulePseudoClassOrFunc 
:
{ before(grammarAccess.getPseudoClassOrFuncRule()); }
	 rulePseudoClassOrFunc
{ after(grammarAccess.getPseudoClassOrFuncRule()); } 
	 EOF 
;

// Rule PseudoClassOrFunc
rulePseudoClassOrFunc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudoClassOrFuncAccess().getAlternatives()); }
(rule__PseudoClassOrFunc__Alternatives)
{ after(grammarAccess.getPseudoClassOrFuncAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudoClass
entryRulePseudoClass 
:
{ before(grammarAccess.getPseudoClassRule()); }
	 rulePseudoClass
{ after(grammarAccess.getPseudoClassRule()); } 
	 EOF 
;

// Rule PseudoClass
rulePseudoClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudoClassAccess().getGroup()); }
(rule__PseudoClass__Group__0)
{ after(grammarAccess.getPseudoClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudoClassName
entryRulePseudoClassName 
:
{ before(grammarAccess.getPseudoClassNameRule()); }
	 rulePseudoClassName
{ after(grammarAccess.getPseudoClassNameRule()); } 
	 EOF 
;

// Rule PseudoClassName
rulePseudoClassName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudoClassNameAccess().getNameAssignment()); }
(rule__PseudoClassName__NameAssignment)
{ after(grammarAccess.getPseudoClassNameAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePseudoClassFunction
entryRulePseudoClassFunction 
:
{ before(grammarAccess.getPseudoClassFunctionRule()); }
	 rulePseudoClassFunction
{ after(grammarAccess.getPseudoClassFunctionRule()); } 
	 EOF 
;

// Rule PseudoClassFunction
rulePseudoClassFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getAlternatives()); }
(rule__PseudoClassFunction__Alternatives)
{ after(grammarAccess.getPseudoClassFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotFunctionCall
entryRuleNotFunctionCall 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNotFunctionCallRule()); }
	 ruleNotFunctionCall
{ after(grammarAccess.getNotFunctionCallRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NotFunctionCall
ruleNotFunctionCall
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotFunctionCallAccess().getGroup()); }
(rule__NotFunctionCall__Group__0)
{ after(grammarAccess.getNotFunctionCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRulecombinator
entryRulecombinator 
:
{ before(grammarAccess.getCombinatorRule()); }
	 rulecombinator
{ after(grammarAccess.getCombinatorRule()); } 
	 EOF 
;

// Rule combinator
rulecombinator
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCombinatorAccess().getAlternatives()); }
(rule__Combinator__Alternatives)
{ after(grammarAccess.getCombinatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleSymbolTok
entryRuleSymbolTok 
:
{ before(grammarAccess.getSymbolTokRule()); }
	 ruleSymbolTok
{ after(grammarAccess.getSymbolTokRule()); } 
	 EOF 
;

// Rule SymbolTok
ruleSymbolTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSymbolTokAccess().getGroup()); }
(rule__SymbolTok__Group__0)
{ after(grammarAccess.getSymbolTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWSTok
entryRuleWSTok 
:
{ before(grammarAccess.getWSTokRule()); }
	 ruleWSTok
{ after(grammarAccess.getWSTokRule()); } 
	 EOF 
;

// Rule WSTok
ruleWSTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWSTokAccess().getGroup()); }
(rule__WSTok__Group__0)
{ after(grammarAccess.getWSTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringTok
entryRuleStringTok 
:
{ before(grammarAccess.getStringTokRule()); }
	 ruleStringTok
{ after(grammarAccess.getStringTokRule()); } 
	 EOF 
;

// Rule StringTok
ruleStringTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringTokAccess().getGroup()); }
(rule__StringTok__Group__0)
{ after(grammarAccess.getStringTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberTok
entryRuleNumberTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumberTokRule()); }
	 ruleNumberTok
{ after(grammarAccess.getNumberTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NumberTok
ruleNumberTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberTokAccess().getGroup()); }
(rule__NumberTok__Group__0)
{ after(grammarAccess.getNumberTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleUrlTok
entryRuleUrlTok 
:
{ before(grammarAccess.getUrlTokRule()); }
	 ruleUrlTok
{ after(grammarAccess.getUrlTokRule()); } 
	 EOF 
;

// Rule UrlTok
ruleUrlTok
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUrlTokAccess().getGroup()); }
(rule__UrlTok__Group__0)
{ after(grammarAccess.getUrlTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleColorTok
entryRuleColorTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getColorTokRule()); }
	 ruleColorTok
{ after(grammarAccess.getColorTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ColorTok
ruleColorTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getColorTokAccess().getGroup()); }
(rule__ColorTok__Group__0)
{ after(grammarAccess.getColorTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIdentifierOrFuncTok
entryRuleIdentifierOrFuncTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getIdentifierOrFuncTokRule()); }
	 ruleIdentifierOrFuncTok
{ after(grammarAccess.getIdentifierOrFuncTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IdentifierOrFuncTok
ruleIdentifierOrFuncTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getGroup()); }
(rule__IdentifierOrFuncTok__Group__0)
{ after(grammarAccess.getIdentifierOrFuncTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIntegerTok
entryRuleIntegerTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getIntegerTokRule()); }
	 ruleIntegerTok
{ after(grammarAccess.getIntegerTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule IntegerTok
ruleIntegerTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerTokAccess().getGroup()); }
(rule__IntegerTok__Group__0)
{ after(grammarAccess.getIntegerTokAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleCssTok
entryRuleCssTok 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getCssTokRule()); }
	 ruleCssTok
{ after(grammarAccess.getCssTokRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule CssTok
ruleCssTok
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCssTokAccess().getAlternatives()); }
(rule__CssTok__Alternatives)
{ after(grammarAccess.getCssTokAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleURLType
entryRuleURLType 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getURLTypeRule()); }
	 ruleURLType
{ after(grammarAccess.getURLTypeRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule URLType
ruleURLType
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getURLTypeAccess().getGroup()); }
(rule__URLType__Group__0)
{ after(grammarAccess.getURLTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleValidURLSymbol
entryRuleValidURLSymbol 
:
{ before(grammarAccess.getValidURLSymbolRule()); }
	 ruleValidURLSymbol
{ after(grammarAccess.getValidURLSymbolRule()); } 
	 EOF 
;

// Rule ValidURLSymbol
ruleValidURLSymbol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidURLSymbolAccess().getAlternatives()); }
(rule__ValidURLSymbol__Alternatives)
{ after(grammarAccess.getValidURLSymbolAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeywordHack
entryRuleKeywordHack 
:
{ before(grammarAccess.getKeywordHackRule()); }
	 ruleKeywordHack
{ after(grammarAccess.getKeywordHackRule()); } 
	 EOF 
;

// Rule KeywordHack
ruleKeywordHack
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeywordHackAccess().getAlternatives()); }
(rule__KeywordHack__Alternatives)
{ after(grammarAccess.getKeywordHackAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValidURL
entryRuleValidURL 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getValidURLRule()); }
	 ruleValidURL
{ after(grammarAccess.getValidURLRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ValidURL
ruleValidURL
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValidURLAccess().getAlternatives()); }
(rule__ValidURL__Alternatives)
{ after(grammarAccess.getValidURLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleIdentifier
entryRuleIdentifier 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getIdentifierRule()); }
	 ruleIdentifier
{ after(grammarAccess.getIdentifierRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Identifier
ruleIdentifier
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentifierAccess().getGroup()); }
(rule__Identifier__Group__0)
{ after(grammarAccess.getIdentifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNum
entryRuleNum 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumRule()); }
	 ruleNum
{ after(grammarAccess.getNumRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Num
ruleNum
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumAccess().getGroup()); }
(rule__Num__Group__0)
{ after(grammarAccess.getNumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleNumInt
entryRuleNumInt 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getNumIntRule()); }
	 ruleNumInt
{ after(grammarAccess.getNumIntRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule NumInt
ruleNumInt
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumIntAccess().getGroup()); }
(rule__NumInt__Group__0)
{ after(grammarAccess.getNumIntAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleHex
entryRuleHex 
:
{ before(grammarAccess.getHexRule()); }
	 ruleHex
{ after(grammarAccess.getHexRule()); } 
	 EOF 
;

// Rule Hex
ruleHex
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHexAccess().getGroup()); }
(rule__Hex__Group__0)
{ after(grammarAccess.getHexAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Stylesheet__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getRulesetAssignment_2_0()); }
(rule__Stylesheet__RulesetAssignment_2_0)
{ after(grammarAccess.getStylesheetAccess().getRulesetAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getMediaAssignment_2_1()); }
(rule__Stylesheet__MediaAssignment_2_1)
{ after(grammarAccess.getStylesheetAccess().getMediaAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getPageAssignment_2_2()); }
(rule__Stylesheet__PageAssignment_2_2)
{ after(grammarAccess.getStylesheetAccess().getPageAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getFont_faceAssignment_2_3()); }
(rule__Stylesheet__Font_faceAssignment_2_3)
{ after(grammarAccess.getStylesheetAccess().getFont_faceAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getStylesheetAccess().getKeyframesAssignment_2_4()); }
(rule__Stylesheet__KeyframesAssignment_2_4)
{ after(grammarAccess.getStylesheetAccess().getKeyframesAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getCharsetKeyword_0_0()); }

	'@charset' 

{ after(grammarAccess.getCharsetAccess().getCharsetKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCharsetAccess().getCHARSETKeyword_0_1()); }

	'@CHARSET' 

{ after(grammarAccess.getCharsetAccess().getCHARSETKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getImportKeyword_0_0()); }

	'@import' 

{ after(grammarAccess.getImportExpressionAccess().getImportKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getImportExpressionAccess().getIMPORTKeyword_0_1()); }

	'@IMPORT' 

{ after(grammarAccess.getImportExpressionAccess().getIMPORTKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getValueAssignment_1_0()); }
(rule__ImportExpression__ValueAssignment_1_0)
{ after(grammarAccess.getImportExpressionAccess().getValueAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getImportExpressionAccess().getGroup_1_1()); }
(rule__ImportExpression__Group_1_1__0)
{ after(grammarAccess.getImportExpressionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageKeyword_1_0()); }

	'@page' 

{ after(grammarAccess.getPageAccess().getPageKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getPageAccess().getPAGEKeyword_1_1()); }

	'@PAGE' 

{ after(grammarAccess.getPageAccess().getPAGEKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMediaKeyword_0_0()); }

	'@media' 

{ after(grammarAccess.getMediaAccess().getMediaKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getMediaAccess().getMEDIAKeyword_0_1()); }

	'@MEDIA' 

{ after(grammarAccess.getMediaAccess().getMEDIAKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getFontFaceKeyword_1_0()); }

	'@font-face' 

{ after(grammarAccess.getFont_faceAccess().getFontFaceKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getFont_faceAccess().getFONTFACEKeyword_1_1()); }

	'@FONT-FACE' 

{ after(grammarAccess.getFont_faceAccess().getFONTFACEKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getKeyframesKeyword_1_0()); }

	'@keyframes' 

{ after(grammarAccess.getKeyframesAccess().getKeyframesKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getKeyframesAccess().getKEYFRAMESKeyword_1_1()); }

	'@KEYFRAMES' 

{ after(grammarAccess.getKeyframesAccess().getKEYFRAMESKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getTypeAssignment_0_0()); }
(rule__Keyframe_selector__TypeAssignment_0_0)
{ after(grammarAccess.getKeyframe_selectorAccess().getTypeAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getKeyframe_selectorAccess().getGroup_0_1()); }
(rule__Keyframe_selector__Group_0_1__0)
{ after(grammarAccess.getKeyframe_selectorAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1_0()); }
(rule__Selector__Group_1_0__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getSelectorAccess().getGroup_1_1()); }
(rule__Selector__Group_1_1__0)
{ after(grammarAccess.getSelectorAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getGroup_0()); }
(rule__SimpleSelectorForNegation__Group_0__0)
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getGroup_0()); }
)

    |(
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
(rule__SimpleSelectorForNegation__SubSelectorsAssignment_1)
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
)
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
(rule__SimpleSelectorForNegation__SubSelectorsAssignment_1)*
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getElementAssignment_0_0_0()); }
(rule__SimpleSelectorForNegation__ElementAssignment_0_0_0)
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getElementAssignment_0_0_0()); }
)

    |(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalAssignment_0_0_1()); }
(rule__SimpleSelectorForNegation__UniversalAssignment_0_0_1)
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubSelectorForNegation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubSelectorForNegationAccess().getIdSelectorParserRuleCall_0()); }
	ruleIdSelector
{ after(grammarAccess.getSubSelectorForNegationAccess().getIdSelectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSubSelectorForNegationAccess().getClassSelectorParserRuleCall_1()); }
	ruleClassSelector
{ after(grammarAccess.getSubSelectorForNegationAccess().getClassSelectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSubSelectorForNegationAccess().getAttributeSelectorParserRuleCall_2()); }
	ruleAttributeSelector
{ after(grammarAccess.getSubSelectorForNegationAccess().getAttributeSelectorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSubSelectorForNegationAccess().getPseudoClassParserRuleCall_3()); }
	rulePseudoClass
{ after(grammarAccess.getSubSelectorForNegationAccess().getPseudoClassParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getGroup_0()); }
(rule__Simple_selector__Group_0__0)
{ after(grammarAccess.getSimple_selectorAccess().getGroup_0()); }
)

    |(
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
(rule__Simple_selector__SubSelectorsAssignment_1)
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
)
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
(rule__Simple_selector__SubSelectorsAssignment_1)*
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getElementAssignment_0_0_0()); }
(rule__Simple_selector__ElementAssignment_0_0_0)
{ after(grammarAccess.getSimple_selectorAccess().getElementAssignment_0_0_0()); }
)

    |(
{ before(grammarAccess.getSimple_selectorAccess().getUniversalAssignment_0_0_1()); }
(rule__Simple_selector__UniversalAssignment_0_0_1)
{ after(grammarAccess.getSimple_selectorAccess().getUniversalAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubSelector__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubSelectorAccess().getIdSelectorParserRuleCall_0()); }
	ruleIdSelector
{ after(grammarAccess.getSubSelectorAccess().getIdSelectorParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSubSelectorAccess().getClassSelectorParserRuleCall_1()); }
	ruleClassSelector
{ after(grammarAccess.getSubSelectorAccess().getClassSelectorParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSubSelectorAccess().getAttributeSelectorParserRuleCall_2()); }
	ruleAttributeSelector
{ after(grammarAccess.getSubSelectorAccess().getAttributeSelectorParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSubSelectorAccess().getPseudoClassOrFuncParserRuleCall_3()); }
	rulePseudoClassOrFunc
{ after(grammarAccess.getSubSelectorAccess().getPseudoClassOrFuncParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__OpAlternatives_3_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getOpCircumflexAccentEqualsSignKeyword_3_0_0_0()); }

	'^=' 

{ after(grammarAccess.getAttributeSelectorAccess().getOpCircumflexAccentEqualsSignKeyword_3_0_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorAccess().getOpDollarSignEqualsSignKeyword_3_0_0_1()); }

	'$=' 

{ after(grammarAccess.getAttributeSelectorAccess().getOpDollarSignEqualsSignKeyword_3_0_0_1()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorAccess().getOpAsteriskEqualsSignKeyword_3_0_0_2()); }

	'*=' 

{ after(grammarAccess.getAttributeSelectorAccess().getOpAsteriskEqualsSignKeyword_3_0_0_2()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorAccess().getOpEqualsSignKeyword_3_0_0_3()); }

	'=' 

{ after(grammarAccess.getAttributeSelectorAccess().getOpEqualsSignKeyword_3_0_0_3()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorAccess().getOpINCLUDESTerminalRuleCall_3_0_0_4()); }
	RULE_INCLUDES
{ after(grammarAccess.getAttributeSelectorAccess().getOpINCLUDESTerminalRuleCall_3_0_0_4()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorAccess().getOpDASHMATCHTerminalRuleCall_3_0_0_5()); }
	RULE_DASHMATCH
{ after(grammarAccess.getAttributeSelectorAccess().getOpDASHMATCHTerminalRuleCall_3_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__ValueAlternatives_3_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getValueIdentifierParserRuleCall_3_1_0_0()); }
	ruleIdentifier
{ after(grammarAccess.getAttributeSelectorAccess().getValueIdentifierParserRuleCall_3_1_0_0()); }
)

    |(
{ before(grammarAccess.getAttributeSelectorAccess().getValueCSSSTRINGTerminalRuleCall_3_1_0_1()); }
	RULE_CSSSTRING
{ after(grammarAccess.getAttributeSelectorAccess().getValueCSSSTRINGTerminalRuleCall_3_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_namespace_prefix__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getIdentifierParserRuleCall_0_0()); }
	ruleIdentifier
{ after(grammarAccess.getCss_namespace_prefixAccess().getIdentifierParserRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getCss_namespace_prefixAccess().getAsteriskKeyword_0_1()); }

	'*' 

{ after(grammarAccess.getCss_namespace_prefixAccess().getAsteriskKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassOrFunc__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassParserRuleCall_0()); }
	rulePseudoClass
{ after(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassFunctionParserRuleCall_1()); }
	rulePseudoClassFunction
{ after(grammarAccess.getPseudoClassOrFuncAccess().getPseudoClassFunctionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getGroup_0()); }
(rule__PseudoClassFunction__Group_0__0)
{ after(grammarAccess.getPseudoClassFunctionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPseudoClassFunctionAccess().getGroup_1()); }
(rule__PseudoClassFunction__Group_1__0)
{ after(grammarAccess.getPseudoClassFunctionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Combinator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombinatorAccess().getPLUSTerminalRuleCall_0()); }
	RULE_PLUS
{ after(grammarAccess.getCombinatorAccess().getPLUSTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_1()); }

	'>' 

{ after(grammarAccess.getCombinatorAccess().getGreaterThanSignKeyword_1()); }
)

    |(
{ before(grammarAccess.getCombinatorAccess().getTildeKeyword_2()); }

	'~' 

{ after(grammarAccess.getCombinatorAccess().getTildeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SymbolTok__SymbolAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0_0()); }
	RULE_COMMA
{ after(grammarAccess.getSymbolTokAccess().getSymbolCOMMATerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getSymbolTokAccess().getSymbolPERCENTTerminalRuleCall_1_0_1()); }
	RULE_PERCENT
{ after(grammarAccess.getSymbolTokAccess().getSymbolPERCENTTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CssTok__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCssTokAccess().getIdentifierOrFuncTokParserRuleCall_0()); }
	ruleIdentifierOrFuncTok
{ after(grammarAccess.getCssTokAccess().getIdentifierOrFuncTokParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_1()); }
	ruleSymbolTok
{ after(grammarAccess.getCssTokAccess().getSymbolTokParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_2()); }
	ruleWSTok
{ after(grammarAccess.getCssTokAccess().getWSTokParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_3()); }
	ruleStringTok
{ after(grammarAccess.getCssTokAccess().getStringTokParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4()); }
	ruleNumberTok
{ after(grammarAccess.getCssTokAccess().getNumberTokParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_5()); }
	ruleUrlTok
{ after(grammarAccess.getCssTokAccess().getUrlTokParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_6()); }
	ruleColorTok
{ after(grammarAccess.getCssTokAccess().getColorTokParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getCssTokAccess().getIntegerTokParserRuleCall_7()); }
	ruleIntegerTok
{ after(grammarAccess.getCssTokAccess().getIntegerTokParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURLSymbol__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLSymbolAccess().getDASHTerminalRuleCall_0()); }
	RULE_DASH
{ after(grammarAccess.getValidURLSymbolAccess().getDASHTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getValidURLSymbolAccess().getFullStopKeyword_1()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getUNDERSCORETerminalRuleCall_2()); }
	RULE_UNDERSCORE
{ after(grammarAccess.getValidURLSymbolAccess().getUNDERSCORETerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getTildeKeyword_3()); }

	'~' 

{ after(grammarAccess.getValidURLSymbolAccess().getTildeKeyword_3()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getCOLONTerminalRuleCall_4()); }
	RULE_COLON
{ after(grammarAccess.getValidURLSymbolAccess().getCOLONTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getSolidusKeyword_5()); }

	'/' 

{ after(grammarAccess.getValidURLSymbolAccess().getSolidusKeyword_5()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getQuestionMarkKeyword_6()); }

	'?' 

{ after(grammarAccess.getValidURLSymbolAccess().getQuestionMarkKeyword_6()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getHASHMARKTerminalRuleCall_7()); }
	RULE_HASHMARK
{ after(grammarAccess.getValidURLSymbolAccess().getHASHMARKTerminalRuleCall_7()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getLeftSquareBracketKeyword_8()); }

	'[' 

{ after(grammarAccess.getValidURLSymbolAccess().getLeftSquareBracketKeyword_8()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getRightSquareBracketKeyword_9()); }

	']' 

{ after(grammarAccess.getValidURLSymbolAccess().getRightSquareBracketKeyword_9()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getCommercialAtKeyword_10()); }

	'@' 

{ after(grammarAccess.getValidURLSymbolAccess().getCommercialAtKeyword_10()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getExclamationMarkKeyword_11()); }

	'!' 

{ after(grammarAccess.getValidURLSymbolAccess().getExclamationMarkKeyword_11()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getDollarSignKeyword_12()); }

	'$' 

{ after(grammarAccess.getValidURLSymbolAccess().getDollarSignKeyword_12()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getAmpersandKeyword_13()); }

	'&' 

{ after(grammarAccess.getValidURLSymbolAccess().getAmpersandKeyword_13()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getAsteriskKeyword_14()); }

	'*' 

{ after(grammarAccess.getValidURLSymbolAccess().getAsteriskKeyword_14()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getPLUSTerminalRuleCall_15()); }
	RULE_PLUS
{ after(grammarAccess.getValidURLSymbolAccess().getPLUSTerminalRuleCall_15()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getCOMMATerminalRuleCall_16()); }
	RULE_COMMA
{ after(grammarAccess.getValidURLSymbolAccess().getCOMMATerminalRuleCall_16()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getSemicolonKeyword_17()); }

	';' 

{ after(grammarAccess.getValidURLSymbolAccess().getSemicolonKeyword_17()); }
)

    |(
{ before(grammarAccess.getValidURLSymbolAccess().getGroup_18()); }
(rule__ValidURLSymbol__Group_18__0)
{ after(grammarAccess.getValidURLSymbolAccess().getGroup_18()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeywordHack__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeywordHackAccess().getNotKeyword_0()); }

	'not' 

{ after(grammarAccess.getKeywordHackAccess().getNotKeyword_0()); }
)

    |(
{ before(grammarAccess.getKeywordHackAccess().getNoKeyword_1()); }

	'no' 

{ after(grammarAccess.getKeywordHackAccess().getNoKeyword_1()); }
)

    |(
{ before(grammarAccess.getKeywordHackAccess().getUrlKeyword_2()); }

	'url' 

{ after(grammarAccess.getKeywordHackAccess().getUrlKeyword_2()); }
)

    |(
{ before(grammarAccess.getKeywordHackAccess().getUrKeyword_3()); }

	'ur' 

{ after(grammarAccess.getKeywordHackAccess().getUrKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLAccess().getCSSSTRINGTerminalRuleCall_0()); }
	RULE_CSSSTRING
{ after(grammarAccess.getValidURLAccess().getCSSSTRINGTerminalRuleCall_0()); }
)

    |(
(
{ before(grammarAccess.getValidURLAccess().getAlternatives_1()); }
(rule__ValidURL__Alternatives_1)
{ after(grammarAccess.getValidURLAccess().getAlternatives_1()); }
)
(
{ before(grammarAccess.getValidURLAccess().getAlternatives_1()); }
(rule__ValidURL__Alternatives_1)*
{ after(grammarAccess.getValidURLAccess().getAlternatives_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLAccess().getValidURLSymbolParserRuleCall_1_0()); }
	ruleValidURLSymbol
{ after(grammarAccess.getValidURLAccess().getValidURLSymbolParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getKeywordHackParserRuleCall_1_1()); }
	ruleKeywordHack
{ after(grammarAccess.getValidURLAccess().getKeywordHackParserRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_2()); }
	RULE_ONE_HEX_LETTER
{ after(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_3()); }
	RULE_ONE_NON_HEX_LETTER
{ after(grammarAccess.getValidURLAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_3()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_4()); }
	RULE_ONE_INT
{ after(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_4()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getReverseSolidusSpaceKeyword_1_5()); }

	'\\ ' 

{ after(grammarAccess.getValidURLAccess().getReverseSolidusSpaceKeyword_1_5()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getReverseSolidusLeftParenthesisKeyword_1_6()); }

	'\\(' 

{ after(grammarAccess.getValidURLAccess().getReverseSolidusLeftParenthesisKeyword_1_6()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getReverseSolidusRightParenthesisKeyword_1_7()); }

	'\\)' 

{ after(grammarAccess.getValidURLAccess().getReverseSolidusRightParenthesisKeyword_1_7()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getReverseSolidusApostropheKeyword_1_8()); }

	'\\\'' 

{ after(grammarAccess.getValidURLAccess().getReverseSolidusApostropheKeyword_1_8()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getReverseSolidusQuotationMarkKeyword_1_9()); }

	'\\"' 

{ after(grammarAccess.getValidURLAccess().getReverseSolidusQuotationMarkKeyword_1_9()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getGroup_1_10()); }
(rule__ValidURL__Group_1_10__0)
{ after(grammarAccess.getValidURLAccess().getGroup_1_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives_1_10_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_1_0()); }
	RULE_ONE_INT
{ after(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_1_0()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_1_1()); }
	RULE_ONE_HEX_LETTER
{ after(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Alternatives_1_10_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_2_0()); }
	RULE_ONE_INT
{ after(grammarAccess.getValidURLAccess().getONE_INTTerminalRuleCall_1_10_2_0()); }
)

    |(
{ before(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_2_1()); }
	RULE_ONE_HEX_LETTER
{ after(grammarAccess.getValidURLAccess().getONE_HEX_LETTERTerminalRuleCall_1_10_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_0()); }
	RULE_UNDERSCORE
{ after(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_1_1()); }
	RULE_ONE_HEX_LETTER
{ after(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_1_1()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_2()); }
	RULE_ONE_NON_HEX_LETTER
{ after(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_1_2()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_1_3()); }
	ruleKeywordHack
{ after(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Alternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_2_0_0()); }
	RULE_UNDERSCORE
{ after(grammarAccess.getIdentifierAccess().getUNDERSCORETerminalRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_2_0_1()); }
	RULE_DASH
{ after(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_2_0_2()); }
	RULE_ONE_HEX_LETTER
{ after(grammarAccess.getIdentifierAccess().getONE_HEX_LETTERTerminalRuleCall_2_0_2()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_2_0_3()); }
	RULE_ONE_NON_HEX_LETTER
{ after(grammarAccess.getIdentifierAccess().getONE_NON_HEX_LETTERTerminalRuleCall_2_0_3()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getONE_INTTerminalRuleCall_2_0_4()); }
	RULE_ONE_INT
{ after(grammarAccess.getIdentifierAccess().getONE_INTTerminalRuleCall_2_0_4()); }
)

    |(
{ before(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_2_0_5()); }
	ruleKeywordHack
{ after(grammarAccess.getIdentifierAccess().getKeywordHackParserRuleCall_2_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getPLUSTerminalRuleCall_0_0()); }
	RULE_PLUS
{ after(grammarAccess.getNumAccess().getPLUSTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getNumAccess().getDASHTerminalRuleCall_0_1()); }
	RULE_DASH
{ after(grammarAccess.getNumAccess().getDASHTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getGroup_1_0()); }
(rule__Num__Group_1_0__0)
{ after(grammarAccess.getNumAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getNumAccess().getGroup_1_1()); }
(rule__Num__Group_1_1__0)
{ after(grammarAccess.getNumAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumInt__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumIntAccess().getPLUSTerminalRuleCall_0_0()); }
	RULE_PLUS
{ after(grammarAccess.getNumIntAccess().getPLUSTerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getNumIntAccess().getDASHTerminalRuleCall_0_1()); }
	RULE_DASH
{ after(grammarAccess.getNumIntAccess().getDASHTerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexAccess().getONE_INTTerminalRuleCall_1_0_0()); }
	RULE_ONE_INT
{ after(grammarAccess.getHexAccess().getONE_INTTerminalRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getHexAccess().getONE_HEX_LETTERTerminalRuleCall_1_0_1()); }
	RULE_ONE_HEX_LETTER
{ after(grammarAccess.getHexAccess().getONE_HEX_LETTERTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Stylesheet__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__0__Impl
	rule__Stylesheet__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetAssignment_0()); }
(rule__Stylesheet__CharsetAssignment_0)?
{ after(grammarAccess.getStylesheetAccess().getCharsetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__1__Impl
	rule__Stylesheet__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
(rule__Stylesheet__ImportsAssignment_1)*
{ after(grammarAccess.getStylesheetAccess().getImportsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Stylesheet__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Stylesheet__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getAlternatives_2()); }
(rule__Stylesheet__Alternatives_2)*
{ after(grammarAccess.getStylesheetAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Charset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Charset__Group__0__Impl
	rule__Charset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getAlternatives_0()); }
(rule__Charset__Alternatives_0)
{ after(grammarAccess.getCharsetAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Charset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Charset__Group__1__Impl
	rule__Charset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getCharsetAssignment_1()); }
(rule__Charset__CharsetAssignment_1)
{ after(grammarAccess.getCharsetAccess().getCharsetAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Charset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Charset__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getCharsetAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group__0__Impl
	rule__ImportExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getAlternatives_0()); }
(rule__ImportExpression__Alternatives_0)
{ after(grammarAccess.getImportExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group__1__Impl
	rule__ImportExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getAlternatives_1()); }
(rule__ImportExpression__Alternatives_1)
{ after(grammarAccess.getImportExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportExpressionAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportExpression__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group_1_1__0__Impl
	rule__ImportExpression__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getURLTypeParserRuleCall_1_1_0()); }
	ruleURLType
{ after(grammarAccess.getImportExpressionAccess().getURLTypeParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportExpression__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportExpression__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getMediaListAssignment_1_1_1()); }
(rule__ImportExpression__MediaListAssignment_1_1_1)?
{ after(grammarAccess.getImportExpressionAccess().getMediaListAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__0__Impl
	rule__Page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPageAction_0()); }
(

)
{ after(grammarAccess.getPageAccess().getPageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__1__Impl
	rule__Page__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getAlternatives_1()); }
(rule__Page__Alternatives_1)
{ after(grammarAccess.getPageAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__2__Impl
	rule__Page__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPseudoPageAssignment_2()); }
(rule__Page__PseudoPageAssignment_2)?
{ after(grammarAccess.getPageAccess().getPseudoPageAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__3__Impl
	rule__Page__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getPageAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__4__Impl
	rule__Page__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsAssignment_4()); }
(rule__Page__DeclarationsAssignment_4)?
{ after(grammarAccess.getPageAccess().getDeclarationsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__5__Impl
	rule__Page__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getGroup_5()); }
(rule__Page__Group_5__0)*
{ after(grammarAccess.getPageAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getPageAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Page__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_5__0__Impl
	rule__Page__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getSemicolonKeyword_5_0()); }

	';' 

{ after(grammarAccess.getPageAccess().getSemicolonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Page__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Page__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Page__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsAssignment_5_1()); }
(rule__Page__DeclarationsAssignment_5_1)?
{ after(grammarAccess.getPageAccess().getDeclarationsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pseudo_page__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_page__Group__0__Impl
	rule__Pseudo_page__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_page__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_pageAccess().getCOLONTerminalRuleCall_0()); }
	RULE_COLON
{ after(grammarAccess.getPseudo_pageAccess().getCOLONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pseudo_page__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pseudo_page__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pseudo_page__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudo_pageAccess().getIdentifierParserRuleCall_1()); }
	ruleIdentifier
{ after(grammarAccess.getPseudo_pageAccess().getIdentifierParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Media__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__0__Impl
	rule__Media__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getAlternatives_0()); }
(rule__Media__Alternatives_0)
{ after(grammarAccess.getMediaAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__1__Impl
	rule__Media__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMedialistAssignment_1()); }
(rule__Media__MedialistAssignment_1)
{ after(grammarAccess.getMediaAccess().getMedialistAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__2__Impl
	rule__Media__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMediaAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__3__Impl
	rule__Media__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesetsAssignment_3()); }
(rule__Media__RulesetsAssignment_3)*
{ after(grammarAccess.getMediaAccess().getRulesetsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMediaAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Media_list__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group__0__Impl
	rule__Media_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_0()); }
	rulemedium
{ after(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media_list__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getGroup_1()); }
(rule__Media_list__Group_1__0)*
{ after(grammarAccess.getMedia_listAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Media_list__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group_1__0__Impl
	rule__Media_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getCOMMATerminalRuleCall_1_0()); }
	RULE_COMMA
{ after(grammarAccess.getMedia_listAccess().getCOMMATerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Media_list__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Media_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Media_list__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_1_1()); }
	rulemedium
{ after(grammarAccess.getMedia_listAccess().getMediumParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Font_face__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group__0__Impl
	rule__Font_face__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getFont_faceAction_0()); }
(

)
{ after(grammarAccess.getFont_faceAccess().getFont_faceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font_face__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group__1__Impl
	rule__Font_face__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getAlternatives_1()); }
(rule__Font_face__Alternatives_1)
{ after(grammarAccess.getFont_faceAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font_face__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group__2__Impl
	rule__Font_face__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getFont_faceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font_face__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group__3__Impl
	rule__Font_face__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getDeclarationsAssignment_3()); }
(rule__Font_face__DeclarationsAssignment_3)?
{ after(grammarAccess.getFont_faceAccess().getDeclarationsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font_face__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group__4__Impl
	rule__Font_face__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getGroup_4()); }
(rule__Font_face__Group_4__0)*
{ after(grammarAccess.getFont_faceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font_face__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getFont_faceAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Font_face__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group_4__0__Impl
	rule__Font_face__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getSemicolonKeyword_4_0()); }

	';' 

{ after(grammarAccess.getFont_faceAccess().getSemicolonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Font_face__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Font_face__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getDeclarationsAssignment_4_1()); }
(rule__Font_face__DeclarationsAssignment_4_1)?
{ after(grammarAccess.getFont_faceAccess().getDeclarationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Keyframes__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group__0__Impl
	rule__Keyframes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getFont_faceAction_0()); }
(

)
{ after(grammarAccess.getKeyframesAccess().getFont_faceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframes__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group__1__Impl
	rule__Keyframes__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getAlternatives_1()); }
(rule__Keyframes__Alternatives_1)
{ after(grammarAccess.getKeyframesAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframes__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group__2__Impl
	rule__Keyframes__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getNameAssignment_2()); }
(rule__Keyframes__NameAssignment_2)
{ after(grammarAccess.getKeyframesAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframes__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group__3__Impl
	rule__Keyframes__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getKeyframesAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframes__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group__4__Impl
	rule__Keyframes__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getKeyframeselectorsAssignment_4()); }
(rule__Keyframes__KeyframeselectorsAssignment_4)?
{ after(grammarAccess.getKeyframesAccess().getKeyframeselectorsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframes__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group__5__Impl
	rule__Keyframes__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getGroup_5()); }
(rule__Keyframes__Group_5__0)*
{ after(grammarAccess.getKeyframesAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframes__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getKeyframesAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Keyframes__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group_5__0__Impl
	rule__Keyframes__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getSemicolonKeyword_5_0()); }

	';' 

{ after(grammarAccess.getKeyframesAccess().getSemicolonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframes__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframes__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getKeyframeselectorsAssignment_5_1()); }
(rule__Keyframes__KeyframeselectorsAssignment_5_1)?
{ after(grammarAccess.getKeyframesAccess().getKeyframeselectorsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Keyframe_selector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group__0__Impl
	rule__Keyframe_selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getAlternatives_0()); }
(rule__Keyframe_selector__Alternatives_0)
{ after(grammarAccess.getKeyframe_selectorAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframe_selector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group__1__Impl
	rule__Keyframe_selector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getKeyframe_selectorAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframe_selector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group__2__Impl
	rule__Keyframe_selector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getDeclarationsAssignment_2()); }
(rule__Keyframe_selector__DeclarationsAssignment_2)?
{ after(grammarAccess.getKeyframe_selectorAccess().getDeclarationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframe_selector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group__3__Impl
	rule__Keyframe_selector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getGroup_3()); }
(rule__Keyframe_selector__Group_3__0)*
{ after(grammarAccess.getKeyframe_selectorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframe_selector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getKeyframe_selectorAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Keyframe_selector__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group_0_1__0__Impl
	rule__Keyframe_selector__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getPercentageAssignment_0_1_0()); }
(rule__Keyframe_selector__PercentageAssignment_0_1_0)
{ after(grammarAccess.getKeyframe_selectorAccess().getPercentageAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframe_selector__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getPERCENTTerminalRuleCall_0_1_1()); }
	RULE_PERCENT
{ after(grammarAccess.getKeyframe_selectorAccess().getPERCENTTerminalRuleCall_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Keyframe_selector__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group_3__0__Impl
	rule__Keyframe_selector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getSemicolonKeyword_3_0()); }

	';' 

{ after(grammarAccess.getKeyframe_selectorAccess().getSemicolonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Keyframe_selector__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Keyframe_selector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getDeclarationsAssignment_3_1()); }
(rule__Keyframe_selector__DeclarationsAssignment_3_1)?
{ after(grammarAccess.getKeyframe_selectorAccess().getDeclarationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Ruleset__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__0__Impl
	rule__Ruleset__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
(rule__Ruleset__SelectorsAssignment_0)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__1__Impl
	rule__Ruleset__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_1()); }
(rule__Ruleset__Group_1__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__2__Impl
	rule__Ruleset__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__3__Impl
	rule__Ruleset__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getRulesetAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__4__Impl
	rule__Ruleset__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_4()); }
(rule__Ruleset__Group_4__0)?
{ after(grammarAccess.getRulesetAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRulesetAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Ruleset__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__0__Impl
	rule__Ruleset__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_0()); }
(	RULE_WS)*
{ after(grammarAccess.getRulesetAccess().getWSTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__1__Impl
	rule__Ruleset__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_1()); }
	RULE_COMMA
{ after(grammarAccess.getRulesetAccess().getCOMMATerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_2()); }
(rule__Ruleset__SelectorsAssignment_1_2)
{ after(grammarAccess.getRulesetAccess().getSelectorsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ruleset__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_4__0__Impl
	rule__Ruleset__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_0()); }
(rule__Ruleset__DeclarationsAssignment_4_0)
{ after(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_4__1__Impl
	rule__Ruleset__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getGroup_4_1()); }
(rule__Ruleset__Group_4_1__0)*
{ after(grammarAccess.getRulesetAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_2()); }
(
	';' 
)?
{ after(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Ruleset__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_4_1__0__Impl
	rule__Ruleset__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_1_0()); }

	';' 

{ after(grammarAccess.getRulesetAccess().getSemicolonKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Ruleset__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Ruleset__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_1_1()); }
(rule__Ruleset__DeclarationsAssignment_4_1_1)
{ after(grammarAccess.getRulesetAccess().getDeclarationsAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
(rule__Selector__SimpleselectorsAssignment_0)
{ after(grammarAccess.getSelectorAccess().getSimpleselectorsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getAlternatives_1()); }
(rule__Selector__Alternatives_1)?
{ after(grammarAccess.getSelectorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Selector__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__0__Impl
	rule__Selector__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
(rule__Selector__CombinatorAssignment_1_0_0)
{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__1__Impl
	rule__Selector__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_0_1()); }
(	RULE_WS)*
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_2()); }
(rule__Selector__SelectorAssignment_1_0_2)
{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selector__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__0__Impl
	rule__Selector__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
(	RULE_WS)
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
)
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
(	RULE_WS)*
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__1__Impl
	rule__Selector__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
(rule__Selector__Group_1_1_1__0)?
{ after(grammarAccess.getSelectorAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_2()); }
(rule__Selector__SelectorAssignment_1_1_2)
{ after(grammarAccess.getSelectorAccess().getSelectorAssignment_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Selector__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1_1__0__Impl
	rule__Selector__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
(rule__Selector__CombinatorAssignment_1_1_1_0)
{ after(grammarAccess.getSelectorAccess().getCombinatorAssignment_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Selector__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_1_1()); }
(	RULE_WS)*
{ after(grammarAccess.getSelectorAccess().getWSTerminalRuleCall_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleSelectorForNegation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectorForNegation__Group_0__0__Impl
	rule__SimpleSelectorForNegation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives_0_0()); }
(rule__SimpleSelectorForNegation__Alternatives_0_0)
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleSelectorForNegation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleSelectorForNegation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_0_1()); }
(rule__SimpleSelectorForNegation__SubSelectorsAssignment_0_1)*
{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Simple_selector__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_selector__Group_0__0__Impl
	rule__Simple_selector__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getAlternatives_0_0()); }
(rule__Simple_selector__Alternatives_0_0)
{ after(grammarAccess.getSimple_selectorAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_selector__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Simple_selector__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_0_1()); }
(rule__Simple_selector__SubSelectorsAssignment_0_1)*
{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AttributeSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__0__Impl
	rule__AttributeSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getAttributeSelectorAction_0()); }
(

)
{ after(grammarAccess.getAttributeSelectorAccess().getAttributeSelectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__1__Impl
	rule__AttributeSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getAttributeSelectorAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__2__Impl
	rule__AttributeSelector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getNameAssignment_2()); }
(rule__AttributeSelector__NameAssignment_2)
{ after(grammarAccess.getAttributeSelectorAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__3__Impl
	rule__AttributeSelector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getGroup_3()); }
(rule__AttributeSelector__Group_3__0)?
{ after(grammarAccess.getAttributeSelectorAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getAttributeSelectorAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AttributeSelector__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group_3__0__Impl
	rule__AttributeSelector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getOpAssignment_3_0()); }
(rule__AttributeSelector__OpAssignment_3_0)
{ after(grammarAccess.getAttributeSelectorAccess().getOpAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AttributeSelector__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AttributeSelector__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getValueAssignment_3_1()); }
(rule__AttributeSelector__ValueAssignment_3_1)
{ after(grammarAccess.getAttributeSelectorAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ClassSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassSelector__Group__0__Impl
	rule__ClassSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassSelectorAccess().getClassSelectorAction_0()); }
(

)
{ after(grammarAccess.getClassSelectorAccess().getClassSelectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassSelector__Group__1__Impl
	rule__ClassSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassSelectorAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getClassSelectorAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassSelectorAccess().getNameAssignment_2()); }
(rule__ClassSelector__NameAssignment_2)
{ after(grammarAccess.getClassSelectorAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ElementSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSelector__Group__0__Impl
	rule__ElementSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSelectorAccess().getElementSelectorAction_0()); }
(

)
{ after(grammarAccess.getElementSelectorAccess().getElementSelectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElementSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElementSelector__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSelectorAccess().getNameAssignment_1()); }
(rule__ElementSelector__NameAssignment_1)
{ after(grammarAccess.getElementSelectorAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UniversalSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniversalSelector__Group__0__Impl
	rule__UniversalSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0()); }
(

)
{ after(grammarAccess.getUniversalSelectorAccess().getUniversalSelectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniversalSelector__Group__1__Impl
	rule__UniversalSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getNamespaceAssignment_1()); }
(rule__UniversalSelector__NamespaceAssignment_1)?
{ after(grammarAccess.getUniversalSelectorAccess().getNamespaceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UniversalSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UniversalSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2()); }

	'*' 

{ after(grammarAccess.getUniversalSelectorAccess().getAsteriskKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IdSelector__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdSelector__Group__0__Impl
	rule__IdSelector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdSelectorAccess().getIdSelectorAction_0()); }
(

)
{ after(grammarAccess.getIdSelectorAccess().getIdSelectorAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdSelector__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdSelector__Group__1__Impl
	rule__IdSelector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdSelectorAccess().getHASHMARKTerminalRuleCall_1()); }
	RULE_HASHMARK
{ after(grammarAccess.getIdSelectorAccess().getHASHMARKTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdSelector__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdSelector__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdSelectorAccess().getNameAssignment_2()); }
(rule__IdSelector__NameAssignment_2)
{ after(grammarAccess.getIdSelectorAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Css_namespace_prefix__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_namespace_prefix__Group__0__Impl
	rule__Css_namespace_prefix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_namespace_prefix__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getAlternatives_0()); }
(rule__Css_namespace_prefix__Alternatives_0)?
{ after(grammarAccess.getCss_namespace_prefixAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_namespace_prefix__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_namespace_prefix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_namespace_prefix__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_namespace_prefixAccess().getVerticalLineKeyword_1()); }

	'|' 

{ after(grammarAccess.getCss_namespace_prefixAccess().getVerticalLineKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Css_declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__0__Impl
	rule__Css_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_0()); }
(	RULE_WS)*
{ after(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__1__Impl
	rule__Css_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getPropertyAssignment_1()); }
(rule__Css_declaration__PropertyAssignment_1)
{ after(grammarAccess.getCss_declarationAccess().getPropertyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__2__Impl
	rule__Css_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_2()); }
(	RULE_WS)*
{ after(grammarAccess.getCss_declarationAccess().getWSTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__3__Impl
	rule__Css_declaration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getCOLONTerminalRuleCall_3()); }
	RULE_COLON
{ after(grammarAccess.getCss_declarationAccess().getCOLONTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__4__Impl
	rule__Css_declaration__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
(rule__Css_declaration__ValueTokensAssignment_4)
{ after(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
)
(
{ before(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
(rule__Css_declaration__ValueTokensAssignment_4)*
{ after(grammarAccess.getCss_declarationAccess().getValueTokensAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_declaration__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_declaration__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getImportantAssignment_5()); }
(rule__Css_declaration__ImportantAssignment_5)?
{ after(grammarAccess.getCss_declarationAccess().getImportantAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Css_property__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_property__Group__0__Impl
	rule__Css_property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getCss_propertyAction_0()); }
(

)
{ after(grammarAccess.getCss_propertyAccess().getCss_propertyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Css_property__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Css_property__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getNameAssignment_1()); }
(rule__Css_property__NameAssignment_1)
{ after(grammarAccess.getCss_propertyAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PseudoClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClass__Group__0__Impl
	rule__PseudoClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_0()); }
	RULE_COLON
{ after(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClass__Group__1__Impl
	rule__PseudoClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_1()); }
(	RULE_COLON)?
{ after(grammarAccess.getPseudoClassAccess().getCOLONTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClass__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassAccess().getPseudoClassNameParserRuleCall_2()); }
	rulePseudoClassName
{ after(grammarAccess.getPseudoClassAccess().getPseudoClassNameParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PseudoClassFunction__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_0__0__Impl
	rule__PseudoClassFunction__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getNotAssignment_0_0()); }
(rule__PseudoClassFunction__NotAssignment_0_0)
{ after(grammarAccess.getPseudoClassFunctionAccess().getNotAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_0__1__Impl
	rule__PseudoClassFunction__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorAssignment_0_1()); }
(rule__PseudoClassFunction__ParamSelectorAssignment_0_1)
{ after(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PseudoClassFunction__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_1__0__Impl
	rule__PseudoClassFunction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getCOLONTerminalRuleCall_1_0()); }
	RULE_COLON
{ after(grammarAccess.getPseudoClassFunctionAccess().getCOLONTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_1__1__Impl
	rule__PseudoClassFunction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getNameAssignment_1_1()); }
(rule__PseudoClassFunction__NameAssignment_1_1)
{ after(grammarAccess.getPseudoClassFunctionAccess().getNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_1__2__Impl
	rule__PseudoClassFunction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getLeftParenthesisKeyword_1_2()); }

	'(' 

{ after(grammarAccess.getPseudoClassFunctionAccess().getLeftParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_1__3__Impl
	rule__PseudoClassFunction__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getParamsAssignment_1_3()); }
(rule__PseudoClassFunction__ParamsAssignment_1_3)*
{ after(grammarAccess.getPseudoClassFunctionAccess().getParamsAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PseudoClassFunction__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PseudoClassFunction__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_1_4()); }

	')' 

{ after(grammarAccess.getPseudoClassFunctionAccess().getRightParenthesisKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NotFunctionCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotFunctionCall__Group__0__Impl
	rule__NotFunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFunctionCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotFunctionCallAccess().getCOLONTerminalRuleCall_0()); }
	RULE_COLON
{ after(grammarAccess.getNotFunctionCallAccess().getCOLONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotFunctionCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotFunctionCall__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotFunctionCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotFunctionCallAccess().getNotKeyword_1()); }

	'not(' 

{ after(grammarAccess.getNotFunctionCallAccess().getNotKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SymbolTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolTok__Group__0__Impl
	rule__SymbolTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolTokAccess().getSymbolTokAction_0()); }
(

)
{ after(grammarAccess.getSymbolTokAccess().getSymbolTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SymbolTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolTokAccess().getSymbolAssignment_1()); }
(rule__SymbolTok__SymbolAssignment_1)
{ after(grammarAccess.getSymbolTokAccess().getSymbolAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WSTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WSTok__Group__0__Impl
	rule__WSTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WSTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWSTokAccess().getWSTokAction_0()); }
(

)
{ after(grammarAccess.getWSTokAccess().getWSTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WSTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WSTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WSTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1()); }
	RULE_WS
{ after(grammarAccess.getWSTokAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StringTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTok__Group__0__Impl
	rule__StringTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTokAccess().getStringTokAction_0()); }
(

)
{ after(grammarAccess.getStringTokAccess().getStringTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StringTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StringTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTokAccess().getValueAssignment_1()); }
(rule__StringTok__ValueAssignment_1)
{ after(grammarAccess.getStringTokAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumberTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTok__Group__0__Impl
	rule__NumberTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTokAccess().getNumberTokAction_0()); }
(

)
{ after(grammarAccess.getNumberTokAccess().getNumberTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumberTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumberTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTokAccess().getValAssignment_1()); }
(rule__NumberTok__ValAssignment_1)
{ after(grammarAccess.getNumberTokAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UrlTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UrlTok__Group__0__Impl
	rule__UrlTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUrlTokAccess().getUrlTokAction_0()); }
(

)
{ after(grammarAccess.getUrlTokAccess().getUrlTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UrlTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UrlTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUrlTokAccess().getUrlAssignment_1()); }
(rule__UrlTok__UrlAssignment_1)
{ after(grammarAccess.getUrlTokAccess().getUrlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ColorTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorTok__Group__0__Impl
	rule__ColorTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorTokAccess().getColorTokAction_0()); }
(

)
{ after(grammarAccess.getColorTokAccess().getColorTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ColorTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ColorTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorTokAccess().getValueAssignment_1()); }
(rule__ColorTok__ValueAssignment_1)
{ after(grammarAccess.getColorTokAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IdentifierOrFuncTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrFuncTok__Group__0__Impl
	rule__IdentifierOrFuncTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getIdentifierTokAction_0()); }
(

)
{ after(grammarAccess.getIdentifierOrFuncTokAccess().getIdentifierTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrFuncTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrFuncTok__Group__1__Impl
	rule__IdentifierOrFuncTok__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getNameAssignment_1()); }
(rule__IdentifierOrFuncTok__NameAssignment_1)
{ after(grammarAccess.getIdentifierOrFuncTokAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrFuncTok__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrFuncTok__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getGroup_2()); }
(rule__IdentifierOrFuncTok__Group_2__0)?
{ after(grammarAccess.getIdentifierOrFuncTokAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__IdentifierOrFuncTok__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrFuncTok__Group_2__0__Impl
	rule__IdentifierOrFuncTok__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getFuncTokNameAction_2_0()); }
(

)
{ after(grammarAccess.getIdentifierOrFuncTokAccess().getFuncTokNameAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrFuncTok__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrFuncTok__Group_2__1__Impl
	rule__IdentifierOrFuncTok__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getLeftParenthesisKeyword_2_1()); }

	'(' 

{ after(grammarAccess.getIdentifierOrFuncTokAccess().getLeftParenthesisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrFuncTok__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrFuncTok__Group_2__2__Impl
	rule__IdentifierOrFuncTok__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
(rule__IdentifierOrFuncTok__ParamsAssignment_2_2)
{ after(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
)
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
(rule__IdentifierOrFuncTok__ParamsAssignment_2_2)*
{ after(grammarAccess.getIdentifierOrFuncTokAccess().getParamsAssignment_2_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IdentifierOrFuncTok__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IdentifierOrFuncTok__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getIdentifierOrFuncTokAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IntegerTok__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTok__Group__0__Impl
	rule__IntegerTok__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTok__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTokAccess().getIntegerTokAction_0()); }
(

)
{ after(grammarAccess.getIntegerTokAccess().getIntegerTokAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntegerTok__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntegerTok__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTok__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTokAccess().getValAssignment_1()); }
(rule__IntegerTok__ValAssignment_1)
{ after(grammarAccess.getIntegerTokAccess().getValAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__URLType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__0__Impl
	rule__URLType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }

	'url(' 

{ after(grammarAccess.getURLTypeAccess().getUrlKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__1__Impl
	rule__URLType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlAssignment_1()); }
(rule__URLType__UrlAssignment_1)
{ after(grammarAccess.getURLTypeAccess().getUrlAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__URLType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__URLType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getURLTypeAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValidURLSymbol__Group_18__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidURLSymbol__Group_18__0__Impl
	rule__ValidURLSymbol__Group_18__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURLSymbol__Group_18__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLSymbolAccess().getEqualsSignKeyword_18_0()); }

	'=' 

{ after(grammarAccess.getValidURLSymbolAccess().getEqualsSignKeyword_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidURLSymbol__Group_18__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidURLSymbol__Group_18__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURLSymbol__Group_18__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLSymbolAccess().getKeywordHackParserRuleCall_18_1()); }
	ruleKeywordHack
{ after(grammarAccess.getValidURLSymbolAccess().getKeywordHackParserRuleCall_18_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValidURL__Group_1_10__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidURL__Group_1_10__0__Impl
	rule__ValidURL__Group_1_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLAccess().getPERCENTTerminalRuleCall_1_10_0()); }
	RULE_PERCENT
{ after(grammarAccess.getValidURLAccess().getPERCENTTerminalRuleCall_1_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidURL__Group_1_10__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidURL__Group_1_10__1__Impl
	rule__ValidURL__Group_1_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLAccess().getAlternatives_1_10_1()); }
(rule__ValidURL__Alternatives_1_10_1)
{ after(grammarAccess.getValidURLAccess().getAlternatives_1_10_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValidURL__Group_1_10__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValidURL__Group_1_10__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValidURL__Group_1_10__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValidURLAccess().getAlternatives_1_10_2()); }
(rule__ValidURL__Alternatives_1_10_2)
{ after(grammarAccess.getValidURLAccess().getAlternatives_1_10_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Identifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__0__Impl
	rule__Identifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_0()); }
(	RULE_DASH)?
{ after(grammarAccess.getIdentifierAccess().getDASHTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__1__Impl
	rule__Identifier__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
(rule__Identifier__Alternatives_1)
{ after(grammarAccess.getIdentifierAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getGroup_2()); }
(rule__Identifier__Group_2__0)*
{ after(grammarAccess.getIdentifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Identifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identifier__Group_2__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierAccess().getAlternatives_2_0()); }
(rule__Identifier__Alternatives_2_0)
{ after(grammarAccess.getIdentifierAccess().getAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Num__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group__0__Impl
	rule__Num__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getAlternatives_0()); }
(rule__Num__Alternatives_0)?
{ after(grammarAccess.getNumAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getAlternatives_1()); }
(rule__Num__Alternatives_1)
{ after(grammarAccess.getNumAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Num__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group_1_0__0__Impl
	rule__Num__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getFullStopKeyword_1_0_0()); }

	'.' 

{ after(grammarAccess.getNumAccess().getFullStopKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
(	RULE_ONE_INT)
{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
)
(
{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
(	RULE_ONE_INT)*
{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_0_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Num__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group_1_1__0__Impl
	rule__Num__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
(	RULE_ONE_INT)
{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
)
(
{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
(	RULE_ONE_INT)*
{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getGroup_1_1_1()); }
(rule__Num__Group_1_1_1__0)?
{ after(grammarAccess.getNumAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Num__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group_1_1_1__0__Impl
	rule__Num__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumAccess().getFullStopKeyword_1_1_1_0()); }
(
	'.' 
)
{ after(grammarAccess.getNumAccess().getFullStopKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Num__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Num__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Num__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
(	RULE_ONE_INT)
{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
)
(
{ before(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
(	RULE_ONE_INT)*
{ after(grammarAccess.getNumAccess().getONE_INTTerminalRuleCall_1_1_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NumInt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumInt__Group__0__Impl
	rule__NumInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumInt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumIntAccess().getAlternatives_0()); }
(rule__NumInt__Alternatives_0)?
{ after(grammarAccess.getNumIntAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NumInt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NumInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumInt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNumIntAccess().getONE_INTTerminalRuleCall_1()); }
(	RULE_ONE_INT)
{ after(grammarAccess.getNumIntAccess().getONE_INTTerminalRuleCall_1()); }
)
(
{ before(grammarAccess.getNumIntAccess().getONE_INTTerminalRuleCall_1()); }
(	RULE_ONE_INT)*
{ after(grammarAccess.getNumIntAccess().getONE_INTTerminalRuleCall_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Hex__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hex__Group__0__Impl
	rule__Hex__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexAccess().getHASHMARKTerminalRuleCall_0()); }
	RULE_HASHMARK
{ after(grammarAccess.getHexAccess().getHASHMARKTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Hex__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hex__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getHexAccess().getGroup_1()); }
(rule__Hex__Group_1__0)
{ after(grammarAccess.getHexAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getHexAccess().getGroup_1()); }
(rule__Hex__Group_1__0)*
{ after(grammarAccess.getHexAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Hex__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Hex__Group_1__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Hex__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHexAccess().getAlternatives_1_0()); }
(rule__Hex__Alternatives_1_0)
{ after(grammarAccess.getHexAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Stylesheet__CharsetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getCharsetCharsetParserRuleCall_0_0()); }
	rulecharset{ after(grammarAccess.getStylesheetAccess().getCharsetCharsetParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__ImportsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getImportsImportExpressionParserRuleCall_1_0()); }
	ruleimportExpression{ after(grammarAccess.getStylesheetAccess().getImportsImportExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__RulesetAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0()); }
	ruleruleset{ after(grammarAccess.getStylesheetAccess().getRulesetRulesetParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__MediaAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getMediaMediaParserRuleCall_2_1_0()); }
	rulemedia{ after(grammarAccess.getStylesheetAccess().getMediaMediaParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__PageAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getPagePageParserRuleCall_2_2_0()); }
	rulepage{ after(grammarAccess.getStylesheetAccess().getPagePageParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__Font_faceAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getFont_faceFont_faceParserRuleCall_2_3_0()); }
	rulefont_face{ after(grammarAccess.getStylesheetAccess().getFont_faceFont_faceParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Stylesheet__KeyframesAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStylesheetAccess().getKeyframesKeyframesParserRuleCall_2_4_0()); }
	rulekeyframes{ after(grammarAccess.getStylesheetAccess().getKeyframesKeyframesParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Charset__CharsetAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCharsetAccess().getCharsetCSSSTRINGTerminalRuleCall_1_0()); }
	RULE_CSSSTRING{ after(grammarAccess.getCharsetAccess().getCharsetCSSSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__ValueAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getValueCSSSTRINGTerminalRuleCall_1_0_0()); }
	RULE_CSSSTRING{ after(grammarAccess.getImportExpressionAccess().getValueCSSSTRINGTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportExpression__MediaListAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportExpressionAccess().getMediaListMedia_listParserRuleCall_1_1_1_0()); }
	rulemedia_list{ after(grammarAccess.getImportExpressionAccess().getMediaListMedia_listParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__PseudoPageAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getPseudoPagePseudo_pageParserRuleCall_2_0()); }
	rulepseudo_page{ after(grammarAccess.getPageAccess().getPseudoPagePseudo_pageParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__DeclarationsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_4_0()); }
	rulecss_declaration{ after(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Page__DeclarationsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_5_1_0()); }
	rulecss_declaration{ after(grammarAccess.getPageAccess().getDeclarationsCss_declarationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__MedialistAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getMedialistMedia_listParserRuleCall_1_0()); }
	rulemedia_list{ after(grammarAccess.getMediaAccess().getMedialistMedia_listParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Media__RulesetsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMediaAccess().getRulesetsRulesetParserRuleCall_3_0()); }
	ruleruleset{ after(grammarAccess.getMediaAccess().getRulesetsRulesetParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__DeclarationsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getDeclarationsCss_declarationParserRuleCall_3_0()); }
	rulecss_declaration{ after(grammarAccess.getFont_faceAccess().getDeclarationsCss_declarationParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Font_face__DeclarationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFont_faceAccess().getDeclarationsCss_declarationParserRuleCall_4_1_0()); }
	rulecss_declaration{ after(grammarAccess.getFont_faceAccess().getDeclarationsCss_declarationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getNameIdentifierParserRuleCall_2_0()); }
	ruleIdentifier{ after(grammarAccess.getKeyframesAccess().getNameIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__KeyframeselectorsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getKeyframeselectorsKeyframe_selectorParserRuleCall_4_0()); }
	rulekeyframe_selector{ after(grammarAccess.getKeyframesAccess().getKeyframeselectorsKeyframe_selectorParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframes__KeyframeselectorsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframesAccess().getKeyframeselectorsKeyframe_selectorParserRuleCall_5_1_0()); }
	rulekeyframe_selector{ after(grammarAccess.getKeyframesAccess().getKeyframeselectorsKeyframe_selectorParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getTypeIdentifierParserRuleCall_0_0_0()); }
	ruleIdentifier{ after(grammarAccess.getKeyframe_selectorAccess().getTypeIdentifierParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__PercentageAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getPercentageNumParserRuleCall_0_1_0_0()); }
	ruleNum{ after(grammarAccess.getKeyframe_selectorAccess().getPercentageNumParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__DeclarationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getDeclarationsCss_declarationParserRuleCall_2_0()); }
	rulecss_declaration{ after(grammarAccess.getKeyframe_selectorAccess().getDeclarationsCss_declarationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Keyframe_selector__DeclarationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyframe_selectorAccess().getDeclarationsCss_declarationParserRuleCall_3_1_0()); }
	rulecss_declaration{ after(grammarAccess.getKeyframe_selectorAccess().getDeclarationsCss_declarationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
	ruleselector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__SelectorsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0()); }
	ruleselector{ after(grammarAccess.getRulesetAccess().getSelectorsSelectorParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__DeclarationsAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_4_0_0()); }
	rulecss_declaration{ after(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Ruleset__DeclarationsAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_4_1_1_0()); }
	rulecss_declaration{ after(grammarAccess.getRulesetAccess().getDeclarationsCss_declarationParserRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SimpleselectorsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSimpleselectorsSimple_selectorParserRuleCall_0_0()); }
	rulesimple_selector{ after(grammarAccess.getSelectorAccess().getSimpleselectorsSimple_selectorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
	rulecombinator{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_2_0()); }
	ruleselector{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__CombinatorAssignment_1_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
	rulecombinator{ after(grammarAccess.getSelectorAccess().getCombinatorCombinatorParserRuleCall_1_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__SelectorAssignment_1_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_2_0()); }
	ruleselector{ after(grammarAccess.getSelectorAccess().getSelectorSelectorParserRuleCall_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__ElementAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
	ruleElementSelector{ after(grammarAccess.getSimpleSelectorForNegationAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__UniversalAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
	ruleUniversalSelector{ after(grammarAccess.getSimpleSelectorForNegationAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__SubSelectorsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_0_1_0()); }
	ruleSubSelectorForNegation{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleSelectorForNegation__SubSelectorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_1_0()); }
	ruleSubSelectorForNegation{ after(grammarAccess.getSimpleSelectorForNegationAccess().getSubSelectorsSubSelectorForNegationParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__ElementAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
	ruleElementSelector{ after(grammarAccess.getSimple_selectorAccess().getElementElementSelectorParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__UniversalAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
	ruleUniversalSelector{ after(grammarAccess.getSimple_selectorAccess().getUniversalUniversalSelectorParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__SubSelectorsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsSubSelectorParserRuleCall_0_1_0()); }
	ruleSubSelector{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsSubSelectorParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_selector__SubSelectorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple_selectorAccess().getSubSelectorsSubSelectorParserRuleCall_1_0()); }
	ruleSubSelector{ after(grammarAccess.getSimple_selectorAccess().getSubSelectorsSubSelectorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
	ruleIdentifier{ after(grammarAccess.getAttributeSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__OpAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getOpAlternatives_3_0_0()); }
(rule__AttributeSelector__OpAlternatives_3_0_0)
{ after(grammarAccess.getAttributeSelectorAccess().getOpAlternatives_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeSelector__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeSelectorAccess().getValueAlternatives_3_1_0()); }
(rule__AttributeSelector__ValueAlternatives_3_1_0)
{ after(grammarAccess.getAttributeSelectorAccess().getValueAlternatives_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassSelector__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
	ruleIdentifier{ after(grammarAccess.getClassSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElementSelector__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElementSelectorAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getElementSelectorAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UniversalSelector__NamespaceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUniversalSelectorAccess().getNamespaceCss_namespace_prefixParserRuleCall_1_0()); }
	rulecss_namespace_prefix{ after(grammarAccess.getUniversalSelectorAccess().getNamespaceCss_namespace_prefixParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdSelector__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
	ruleIdentifier{ after(grammarAccess.getIdSelectorAccess().getNameIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__PropertyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getPropertyCss_propertyParserRuleCall_1_0()); }
	rulecss_property{ after(grammarAccess.getCss_declarationAccess().getPropertyCss_propertyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__ValueTokensAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getValueTokensCssTokParserRuleCall_4_0()); }
	ruleCssTok{ after(grammarAccess.getCss_declarationAccess().getValueTokensCssTokParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_declaration__ImportantAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_declarationAccess().getImportantIMPORTANT_SYMTerminalRuleCall_5_0()); }
	RULE_IMPORTANT_SYM{ after(grammarAccess.getCss_declarationAccess().getImportantIMPORTANT_SYMTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Css_property__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCss_propertyAccess().getNameValidPropertyIdentParserRuleCall_1_0()); }
	ruleValidPropertyIdent{ after(grammarAccess.getCss_propertyAccess().getNameValidPropertyIdentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassName__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassNameAccess().getNameIdentifierParserRuleCall_0()); }
	ruleIdentifier{ after(grammarAccess.getPseudoClassNameAccess().getNameIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__NotAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getNotNotFunctionCallParserRuleCall_0_0_0()); }
	ruleNotFunctionCall{ after(grammarAccess.getPseudoClassFunctionAccess().getNotNotFunctionCallParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__ParamSelectorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorSimpleSelectorForNegationParserRuleCall_0_1_0()); }
	ruleSimpleSelectorForNegation{ after(grammarAccess.getPseudoClassFunctionAccess().getParamSelectorSimpleSelectorForNegationParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getNameIdentifierParserRuleCall_1_1_0()); }
	ruleIdentifier{ after(grammarAccess.getPseudoClassFunctionAccess().getNameIdentifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PseudoClassFunction__ParamsAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPseudoClassFunctionAccess().getParamsCssTokParserRuleCall_1_3_0()); }
	ruleCssTok{ after(grammarAccess.getPseudoClassFunctionAccess().getParamsCssTokParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolTok__SymbolAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSymbolTokAccess().getSymbolAlternatives_1_0()); }
(rule__SymbolTok__SymbolAlternatives_1_0)
{ after(grammarAccess.getSymbolTokAccess().getSymbolAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringTok__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringTokAccess().getValueCSSSTRINGTerminalRuleCall_1_0()); }
	RULE_CSSSTRING{ after(grammarAccess.getStringTokAccess().getValueCSSSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberTok__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberTokAccess().getValNumParserRuleCall_1_0()); }
	ruleNum{ after(grammarAccess.getNumberTokAccess().getValNumParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UrlTok__UrlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0()); }
	ruleURLType{ after(grammarAccess.getUrlTokAccess().getUrlURLTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ColorTok__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getColorTokAccess().getValueHexParserRuleCall_1_0()); }
	ruleHex{ after(grammarAccess.getColorTokAccess().getValueHexParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getNameIdentifierParserRuleCall_1_0()); }
	ruleIdentifier{ after(grammarAccess.getIdentifierOrFuncTokAccess().getNameIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IdentifierOrFuncTok__ParamsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentifierOrFuncTokAccess().getParamsCssTokParserRuleCall_2_2_0()); }
	ruleCssTok{ after(grammarAccess.getIdentifierOrFuncTokAccess().getParamsCssTokParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerTok__ValAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerTokAccess().getValNumIntParserRuleCall_1_0()); }
	ruleNumInt{ after(grammarAccess.getIntegerTokAccess().getValNumIntParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__URLType__UrlAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getURLTypeAccess().getUrlValidURLParserRuleCall_1_0()); }
	ruleValidURL{ after(grammarAccess.getURLTypeAccess().getUrlValidURLParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_IMPORTANT_SYM : '!important';

RULE_ONE_INT : '0'..'9';

RULE_ONE_HEX_LETTER : ('a'..'f'|'A'..'F');

RULE_ONE_NON_HEX_LETTER : ('g'..'z'|'G'..'Z');

RULE_UNDERSCORE : '_';

RULE_DASH : '-';

RULE_PLUS : '+';

RULE_HASHMARK : '#';

RULE_COMMA : ',';

RULE_PERCENT : '%';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_CSSSTRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'0'..'9'|'a'..'f'|'A'..'F'|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'0'..'9'|'a'..'f'|'A'..'F'|'\\')|~(('\\'|'\'')))* '\'');

RULE_INCLUDES : '~=';

RULE_DASHMATCH : '|=';

RULE_COLON : ':';


