<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.papyrus.uml.tools" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.papyrus.uml.tools" id="profileApplicationDelegates" name="Profile Application Delegates"/>
      </appinfo>
      <documentation>
         Pluggable providers of Papyrus markers for EMF resources.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
         <documentation>
            Registry of profile-application delegates.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="delegate"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="delegate">
      <annotation>
         <documentation>
            The optional enablement expression is evaluated on a profile application to determine whether the delegate applies to it.

The expression context defines two variables: &lt;tt&gt;selection&lt;/tt&gt; (the default variable) provides the profile application and &lt;tt&gt;resource&lt;/tt&gt; provides the EMF resource that contains it.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class implementing the profile-application delegate protocol.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.papyrus.uml.tools.helper.IProfileApplicationDelegate"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         Papyrus 1.1.0.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter documentation]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         The &lt;tt&gt;org.eclipse.papyrus.uml.decoratormodel.internal.providers.ExternalizedProfileApplicationDelegate&lt;/tt&gt; class implements the delegate for externally applied profile applications.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         /*****************************************************************************
         * Copyright (c) 2014 Christian W. Damus and others.
         *
         *    
         * All rights reserved. This program and the accompanying materials
         * are made available under the terms of the Eclipse Public License 2.0
         * which accompanies this distribution, and is available at
         * https://www.eclipse.org/legal/epl-2.0/
         *
         * SPDX-License-Identifier: EPL-2.0
         *
         * Contributors:
         * Christian W. Damus - Initial API and implementation
         *
         *****************************************************************************/
      </documentation>
   </annotation>

</schema>
