<workflow>
	<component class="com.zeligsoft.base.workflow.SetupResourceSet" resourceSetSlot="rset" />
	 <!-- Load the source model. -->
    <component id="readSource" class="com.zeligsoft.base.workflow.RSMReader" resourceSetSlot="rset">
        <uri value="${sourceModel}" />
        <modelSlot value="ZDLModel" />
    </component>
     <!-- Resolve all proxies to ensure consistent generation of library dependencies. -->
    <component id="resolveAll" class="com.zeligsoft.base.workflow.ResolveAll"
           resourceSetSlot="rset">
        <modelSlot value="${sourceModel}" />
    </component>

	<component class='org.openarchitectureware.util.stdlib.ExtIssueReporter' /> 
  	<component id="parser" class="org.openarchitectureware.xsd.XMLReader">
		<modelSlot value='theModel' />
		<uri value='${modelFile}' />
		<metaModel id="mm"
			class="com.zeligsoft.domain.sca.zmdlimport.XMLSchemaMetamodel">
			<schemaFile value="schema/systemvue_model.xsd" />
		</metaModel>
	</component>  	
    <!-- <component class='oaw.workflow.common.DirectoryCleaner' directories='${targetDir}'/> -->        
   	<component id="generator" class="oaw.xtend.XtendComponent">	
		<metaModel idRef="mm" />
   		<metaModel id="SCAMM" class="com.zeligsoft.base.zdl.oaw.ZDLMetamodel">
        	<zdl value="pathmap://SCA_DOMAIN/SCA.uml"/>
     	</metaModel>
		<invoke value="template::systemvueimport::mainTransform(theModel, ZDLModel)"/> 
		<outputSlot value="resultModel" />
	</component> 
	
	<component class="com.zeligsoft.base.workflow.RSMAppender" resourceSetSlot="rset">
		<uri value="${sourceModel}" /> 
		<modelSlot value="resultModel" />	
    </component> 
</workflow>